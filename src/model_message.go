/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// Message struct for Message
type Message struct {
	ReceivedDateTime *time.Time `json:"receivedDateTime,omitempty"`
	isExplicitNullReceivedDateTime bool `json:"-"`
	SentDateTime *time.Time `json:"sentDateTime,omitempty"`
	isExplicitNullSentDateTime bool `json:"-"`
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	isExplicitNullHasAttachments bool `json:"-"`
	InternetMessageId *string `json:"internetMessageId,omitempty"`
	isExplicitNullInternetMessageId bool `json:"-"`
	InternetMessageHeaders *[]AnyOfmicrosoftGraphInternetMessageHeader `json:"internetMessageHeaders,omitempty"`

	Subject *string `json:"subject,omitempty"`
	isExplicitNullSubject bool `json:"-"`
	Body *AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	isExplicitNullBody bool `json:"-"`
	BodyPreview *string `json:"bodyPreview,omitempty"`
	isExplicitNullBodyPreview bool `json:"-"`
	Importance *AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	isExplicitNullImportance bool `json:"-"`
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	isExplicitNullParentFolderId bool `json:"-"`
	Sender *AnyOfmicrosoftGraphRecipient `json:"sender,omitempty"`
	isExplicitNullSender bool `json:"-"`
	From *AnyOfmicrosoftGraphRecipient `json:"from,omitempty"`
	isExplicitNullFrom bool `json:"-"`
	ToRecipients *[]AnyOfmicrosoftGraphRecipient `json:"toRecipients,omitempty"`

	CcRecipients *[]AnyOfmicrosoftGraphRecipient `json:"ccRecipients,omitempty"`

	BccRecipients *[]AnyOfmicrosoftGraphRecipient `json:"bccRecipients,omitempty"`

	ReplyTo *[]AnyOfmicrosoftGraphRecipient `json:"replyTo,omitempty"`

	ConversationId *string `json:"conversationId,omitempty"`
	isExplicitNullConversationId bool `json:"-"`
	UniqueBody *AnyOfmicrosoftGraphItemBody `json:"uniqueBody,omitempty"`
	isExplicitNullUniqueBody bool `json:"-"`
	IsDeliveryReceiptRequested *bool `json:"isDeliveryReceiptRequested,omitempty"`
	isExplicitNullIsDeliveryReceiptRequested bool `json:"-"`
	IsReadReceiptRequested *bool `json:"isReadReceiptRequested,omitempty"`
	isExplicitNullIsReadReceiptRequested bool `json:"-"`
	IsRead *bool `json:"isRead,omitempty"`
	isExplicitNullIsRead bool `json:"-"`
	IsDraft *bool `json:"isDraft,omitempty"`
	isExplicitNullIsDraft bool `json:"-"`
	WebLink *string `json:"webLink,omitempty"`
	isExplicitNullWebLink bool `json:"-"`
	InferenceClassification *AnyOfmicrosoftGraphInferenceClassificationType `json:"inferenceClassification,omitempty"`
	isExplicitNullInferenceClassification bool `json:"-"`
	Flag *AnyOfmicrosoftGraphFollowupFlag `json:"flag,omitempty"`
	isExplicitNullFlag bool `json:"-"`
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`

	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`

	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

}

// GetReceivedDateTime returns the ReceivedDateTime field if non-nil, zero value otherwise.
func (o *Message) GetReceivedDateTime() time.Time {
	if o == nil || o.ReceivedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ReceivedDateTime
}

// GetReceivedDateTimeOk returns a tuple with the ReceivedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetReceivedDateTimeOk() (time.Time, bool) {
	if o == nil || o.ReceivedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ReceivedDateTime, true
}

// HasReceivedDateTime returns a boolean if a field has been set.
func (o *Message) HasReceivedDateTime() bool {
	if o != nil && o.ReceivedDateTime != nil {
		return true
	}

	return false
}

// SetReceivedDateTime gets a reference to the given time.Time and assigns it to the ReceivedDateTime field.
func (o *Message) SetReceivedDateTime(v time.Time) {
	o.ReceivedDateTime = &v
}

// SetReceivedDateTimeExplicitNull (un)sets ReceivedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ReceivedDateTime value is set to nil even if false is passed
func (o *Message) SetReceivedDateTimeExplicitNull(b bool) {
	o.ReceivedDateTime = nil
	o.isExplicitNullReceivedDateTime = b
}
// GetSentDateTime returns the SentDateTime field if non-nil, zero value otherwise.
func (o *Message) GetSentDateTime() time.Time {
	if o == nil || o.SentDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.SentDateTime
}

// GetSentDateTimeOk returns a tuple with the SentDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSentDateTimeOk() (time.Time, bool) {
	if o == nil || o.SentDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.SentDateTime, true
}

// HasSentDateTime returns a boolean if a field has been set.
func (o *Message) HasSentDateTime() bool {
	if o != nil && o.SentDateTime != nil {
		return true
	}

	return false
}

// SetSentDateTime gets a reference to the given time.Time and assigns it to the SentDateTime field.
func (o *Message) SetSentDateTime(v time.Time) {
	o.SentDateTime = &v
}

// SetSentDateTimeExplicitNull (un)sets SentDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SentDateTime value is set to nil even if false is passed
func (o *Message) SetSentDateTimeExplicitNull(b bool) {
	o.SentDateTime = nil
	o.isExplicitNullSentDateTime = b
}
// GetHasAttachments returns the HasAttachments field if non-nil, zero value otherwise.
func (o *Message) GetHasAttachments() bool {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetHasAttachmentsOk() (bool, bool) {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret, false
	}
	return *o.HasAttachments, true
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *Message) HasHasAttachments() bool {
	if o != nil && o.HasAttachments != nil {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given bool and assigns it to the HasAttachments field.
func (o *Message) SetHasAttachments(v bool) {
	o.HasAttachments = &v
}

// SetHasAttachmentsExplicitNull (un)sets HasAttachments to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasAttachments value is set to nil even if false is passed
func (o *Message) SetHasAttachmentsExplicitNull(b bool) {
	o.HasAttachments = nil
	o.isExplicitNullHasAttachments = b
}
// GetInternetMessageId returns the InternetMessageId field if non-nil, zero value otherwise.
func (o *Message) GetInternetMessageId() string {
	if o == nil || o.InternetMessageId == nil {
		var ret string
		return ret
	}
	return *o.InternetMessageId
}

// GetInternetMessageIdOk returns a tuple with the InternetMessageId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetInternetMessageIdOk() (string, bool) {
	if o == nil || o.InternetMessageId == nil {
		var ret string
		return ret, false
	}
	return *o.InternetMessageId, true
}

// HasInternetMessageId returns a boolean if a field has been set.
func (o *Message) HasInternetMessageId() bool {
	if o != nil && o.InternetMessageId != nil {
		return true
	}

	return false
}

// SetInternetMessageId gets a reference to the given string and assigns it to the InternetMessageId field.
func (o *Message) SetInternetMessageId(v string) {
	o.InternetMessageId = &v
}

// SetInternetMessageIdExplicitNull (un)sets InternetMessageId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InternetMessageId value is set to nil even if false is passed
func (o *Message) SetInternetMessageIdExplicitNull(b bool) {
	o.InternetMessageId = nil
	o.isExplicitNullInternetMessageId = b
}
// GetInternetMessageHeaders returns the InternetMessageHeaders field if non-nil, zero value otherwise.
func (o *Message) GetInternetMessageHeaders() []AnyOfmicrosoftGraphInternetMessageHeader {
	if o == nil || o.InternetMessageHeaders == nil {
		var ret []AnyOfmicrosoftGraphInternetMessageHeader
		return ret
	}
	return *o.InternetMessageHeaders
}

// GetInternetMessageHeadersOk returns a tuple with the InternetMessageHeaders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetInternetMessageHeadersOk() ([]AnyOfmicrosoftGraphInternetMessageHeader, bool) {
	if o == nil || o.InternetMessageHeaders == nil {
		var ret []AnyOfmicrosoftGraphInternetMessageHeader
		return ret, false
	}
	return *o.InternetMessageHeaders, true
}

// HasInternetMessageHeaders returns a boolean if a field has been set.
func (o *Message) HasInternetMessageHeaders() bool {
	if o != nil && o.InternetMessageHeaders != nil {
		return true
	}

	return false
}

// SetInternetMessageHeaders gets a reference to the given []AnyOfmicrosoftGraphInternetMessageHeader and assigns it to the InternetMessageHeaders field.
func (o *Message) SetInternetMessageHeaders(v []AnyOfmicrosoftGraphInternetMessageHeader) {
	o.InternetMessageHeaders = &v
}

// GetSubject returns the Subject field if non-nil, zero value otherwise.
func (o *Message) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSubjectOk() (string, bool) {
	if o == nil || o.Subject == nil {
		var ret string
		return ret, false
	}
	return *o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *Message) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *Message) SetSubject(v string) {
	o.Subject = &v
}

// SetSubjectExplicitNull (un)sets Subject to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Subject value is set to nil even if false is passed
func (o *Message) SetSubjectExplicitNull(b bool) {
	o.Subject = nil
	o.isExplicitNullSubject = b
}
// GetBody returns the Body field if non-nil, zero value otherwise.
func (o *Message) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetBodyOk() (AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret, false
	}
	return *o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *Message) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *Message) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = &v
}

// SetBodyExplicitNull (un)sets Body to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Body value is set to nil even if false is passed
func (o *Message) SetBodyExplicitNull(b bool) {
	o.Body = nil
	o.isExplicitNullBody = b
}
// GetBodyPreview returns the BodyPreview field if non-nil, zero value otherwise.
func (o *Message) GetBodyPreview() string {
	if o == nil || o.BodyPreview == nil {
		var ret string
		return ret
	}
	return *o.BodyPreview
}

// GetBodyPreviewOk returns a tuple with the BodyPreview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetBodyPreviewOk() (string, bool) {
	if o == nil || o.BodyPreview == nil {
		var ret string
		return ret, false
	}
	return *o.BodyPreview, true
}

// HasBodyPreview returns a boolean if a field has been set.
func (o *Message) HasBodyPreview() bool {
	if o != nil && o.BodyPreview != nil {
		return true
	}

	return false
}

// SetBodyPreview gets a reference to the given string and assigns it to the BodyPreview field.
func (o *Message) SetBodyPreview(v string) {
	o.BodyPreview = &v
}

// SetBodyPreviewExplicitNull (un)sets BodyPreview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BodyPreview value is set to nil even if false is passed
func (o *Message) SetBodyPreviewExplicitNull(b bool) {
	o.BodyPreview = nil
	o.isExplicitNullBodyPreview = b
}
// GetImportance returns the Importance field if non-nil, zero value otherwise.
func (o *Message) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetImportanceOk() (AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret, false
	}
	return *o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *Message) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *Message) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = &v
}

// SetImportanceExplicitNull (un)sets Importance to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Importance value is set to nil even if false is passed
func (o *Message) SetImportanceExplicitNull(b bool) {
	o.Importance = nil
	o.isExplicitNullImportance = b
}
// GetParentFolderId returns the ParentFolderId field if non-nil, zero value otherwise.
func (o *Message) GetParentFolderId() string {
	if o == nil || o.ParentFolderId == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetParentFolderIdOk() (string, bool) {
	if o == nil || o.ParentFolderId == nil {
		var ret string
		return ret, false
	}
	return *o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *Message) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId != nil {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *Message) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

// SetParentFolderIdExplicitNull (un)sets ParentFolderId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ParentFolderId value is set to nil even if false is passed
func (o *Message) SetParentFolderIdExplicitNull(b bool) {
	o.ParentFolderId = nil
	o.isExplicitNullParentFolderId = b
}
// GetSender returns the Sender field if non-nil, zero value otherwise.
func (o *Message) GetSender() AnyOfmicrosoftGraphRecipient {
	if o == nil || o.Sender == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSenderOk() (AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Sender == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *Message) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Sender field.
func (o *Message) SetSender(v AnyOfmicrosoftGraphRecipient) {
	o.Sender = &v
}

// SetSenderExplicitNull (un)sets Sender to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sender value is set to nil even if false is passed
func (o *Message) SetSenderExplicitNull(b bool) {
	o.Sender = nil
	o.isExplicitNullSender = b
}
// GetFrom returns the From field if non-nil, zero value otherwise.
func (o *Message) GetFrom() AnyOfmicrosoftGraphRecipient {
	if o == nil || o.From == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetFromOk() (AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.From == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *Message) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the From field.
func (o *Message) SetFrom(v AnyOfmicrosoftGraphRecipient) {
	o.From = &v
}

// SetFromExplicitNull (un)sets From to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The From value is set to nil even if false is passed
func (o *Message) SetFromExplicitNull(b bool) {
	o.From = nil
	o.isExplicitNullFrom = b
}
// GetToRecipients returns the ToRecipients field if non-nil, zero value otherwise.
func (o *Message) GetToRecipients() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ToRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ToRecipients
}

// GetToRecipientsOk returns a tuple with the ToRecipients field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetToRecipientsOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ToRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.ToRecipients, true
}

// HasToRecipients returns a boolean if a field has been set.
func (o *Message) HasToRecipients() bool {
	if o != nil && o.ToRecipients != nil {
		return true
	}

	return false
}

// SetToRecipients gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the ToRecipients field.
func (o *Message) SetToRecipients(v []AnyOfmicrosoftGraphRecipient) {
	o.ToRecipients = &v
}

// GetCcRecipients returns the CcRecipients field if non-nil, zero value otherwise.
func (o *Message) GetCcRecipients() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.CcRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.CcRecipients
}

// GetCcRecipientsOk returns a tuple with the CcRecipients field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetCcRecipientsOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.CcRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.CcRecipients, true
}

// HasCcRecipients returns a boolean if a field has been set.
func (o *Message) HasCcRecipients() bool {
	if o != nil && o.CcRecipients != nil {
		return true
	}

	return false
}

// SetCcRecipients gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the CcRecipients field.
func (o *Message) SetCcRecipients(v []AnyOfmicrosoftGraphRecipient) {
	o.CcRecipients = &v
}

// GetBccRecipients returns the BccRecipients field if non-nil, zero value otherwise.
func (o *Message) GetBccRecipients() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.BccRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.BccRecipients
}

// GetBccRecipientsOk returns a tuple with the BccRecipients field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetBccRecipientsOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.BccRecipients == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.BccRecipients, true
}

// HasBccRecipients returns a boolean if a field has been set.
func (o *Message) HasBccRecipients() bool {
	if o != nil && o.BccRecipients != nil {
		return true
	}

	return false
}

// SetBccRecipients gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the BccRecipients field.
func (o *Message) SetBccRecipients(v []AnyOfmicrosoftGraphRecipient) {
	o.BccRecipients = &v
}

// GetReplyTo returns the ReplyTo field if non-nil, zero value otherwise.
func (o *Message) GetReplyTo() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.ReplyTo == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetReplyToOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.ReplyTo == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *Message) HasReplyTo() bool {
	if o != nil && o.ReplyTo != nil {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the ReplyTo field.
func (o *Message) SetReplyTo(v []AnyOfmicrosoftGraphRecipient) {
	o.ReplyTo = &v
}

// GetConversationId returns the ConversationId field if non-nil, zero value otherwise.
func (o *Message) GetConversationId() string {
	if o == nil || o.ConversationId == nil {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetConversationIdOk() (string, bool) {
	if o == nil || o.ConversationId == nil {
		var ret string
		return ret, false
	}
	return *o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *Message) HasConversationId() bool {
	if o != nil && o.ConversationId != nil {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *Message) SetConversationId(v string) {
	o.ConversationId = &v
}

// SetConversationIdExplicitNull (un)sets ConversationId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConversationId value is set to nil even if false is passed
func (o *Message) SetConversationIdExplicitNull(b bool) {
	o.ConversationId = nil
	o.isExplicitNullConversationId = b
}
// GetUniqueBody returns the UniqueBody field if non-nil, zero value otherwise.
func (o *Message) GetUniqueBody() AnyOfmicrosoftGraphItemBody {
	if o == nil || o.UniqueBody == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return *o.UniqueBody
}

// GetUniqueBodyOk returns a tuple with the UniqueBody field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetUniqueBodyOk() (AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.UniqueBody == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret, false
	}
	return *o.UniqueBody, true
}

// HasUniqueBody returns a boolean if a field has been set.
func (o *Message) HasUniqueBody() bool {
	if o != nil && o.UniqueBody != nil {
		return true
	}

	return false
}

// SetUniqueBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the UniqueBody field.
func (o *Message) SetUniqueBody(v AnyOfmicrosoftGraphItemBody) {
	o.UniqueBody = &v
}

// SetUniqueBodyExplicitNull (un)sets UniqueBody to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UniqueBody value is set to nil even if false is passed
func (o *Message) SetUniqueBodyExplicitNull(b bool) {
	o.UniqueBody = nil
	o.isExplicitNullUniqueBody = b
}
// GetIsDeliveryReceiptRequested returns the IsDeliveryReceiptRequested field if non-nil, zero value otherwise.
func (o *Message) GetIsDeliveryReceiptRequested() bool {
	if o == nil || o.IsDeliveryReceiptRequested == nil {
		var ret bool
		return ret
	}
	return *o.IsDeliveryReceiptRequested
}

// GetIsDeliveryReceiptRequestedOk returns a tuple with the IsDeliveryReceiptRequested field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetIsDeliveryReceiptRequestedOk() (bool, bool) {
	if o == nil || o.IsDeliveryReceiptRequested == nil {
		var ret bool
		return ret, false
	}
	return *o.IsDeliveryReceiptRequested, true
}

// HasIsDeliveryReceiptRequested returns a boolean if a field has been set.
func (o *Message) HasIsDeliveryReceiptRequested() bool {
	if o != nil && o.IsDeliveryReceiptRequested != nil {
		return true
	}

	return false
}

// SetIsDeliveryReceiptRequested gets a reference to the given bool and assigns it to the IsDeliveryReceiptRequested field.
func (o *Message) SetIsDeliveryReceiptRequested(v bool) {
	o.IsDeliveryReceiptRequested = &v
}

// SetIsDeliveryReceiptRequestedExplicitNull (un)sets IsDeliveryReceiptRequested to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsDeliveryReceiptRequested value is set to nil even if false is passed
func (o *Message) SetIsDeliveryReceiptRequestedExplicitNull(b bool) {
	o.IsDeliveryReceiptRequested = nil
	o.isExplicitNullIsDeliveryReceiptRequested = b
}
// GetIsReadReceiptRequested returns the IsReadReceiptRequested field if non-nil, zero value otherwise.
func (o *Message) GetIsReadReceiptRequested() bool {
	if o == nil || o.IsReadReceiptRequested == nil {
		var ret bool
		return ret
	}
	return *o.IsReadReceiptRequested
}

// GetIsReadReceiptRequestedOk returns a tuple with the IsReadReceiptRequested field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetIsReadReceiptRequestedOk() (bool, bool) {
	if o == nil || o.IsReadReceiptRequested == nil {
		var ret bool
		return ret, false
	}
	return *o.IsReadReceiptRequested, true
}

// HasIsReadReceiptRequested returns a boolean if a field has been set.
func (o *Message) HasIsReadReceiptRequested() bool {
	if o != nil && o.IsReadReceiptRequested != nil {
		return true
	}

	return false
}

// SetIsReadReceiptRequested gets a reference to the given bool and assigns it to the IsReadReceiptRequested field.
func (o *Message) SetIsReadReceiptRequested(v bool) {
	o.IsReadReceiptRequested = &v
}

// SetIsReadReceiptRequestedExplicitNull (un)sets IsReadReceiptRequested to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsReadReceiptRequested value is set to nil even if false is passed
func (o *Message) SetIsReadReceiptRequestedExplicitNull(b bool) {
	o.IsReadReceiptRequested = nil
	o.isExplicitNullIsReadReceiptRequested = b
}
// GetIsRead returns the IsRead field if non-nil, zero value otherwise.
func (o *Message) GetIsRead() bool {
	if o == nil || o.IsRead == nil {
		var ret bool
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetIsReadOk() (bool, bool) {
	if o == nil || o.IsRead == nil {
		var ret bool
		return ret, false
	}
	return *o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *Message) HasIsRead() bool {
	if o != nil && o.IsRead != nil {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given bool and assigns it to the IsRead field.
func (o *Message) SetIsRead(v bool) {
	o.IsRead = &v
}

// SetIsReadExplicitNull (un)sets IsRead to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsRead value is set to nil even if false is passed
func (o *Message) SetIsReadExplicitNull(b bool) {
	o.IsRead = nil
	o.isExplicitNullIsRead = b
}
// GetIsDraft returns the IsDraft field if non-nil, zero value otherwise.
func (o *Message) GetIsDraft() bool {
	if o == nil || o.IsDraft == nil {
		var ret bool
		return ret
	}
	return *o.IsDraft
}

// GetIsDraftOk returns a tuple with the IsDraft field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetIsDraftOk() (bool, bool) {
	if o == nil || o.IsDraft == nil {
		var ret bool
		return ret, false
	}
	return *o.IsDraft, true
}

// HasIsDraft returns a boolean if a field has been set.
func (o *Message) HasIsDraft() bool {
	if o != nil && o.IsDraft != nil {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given bool and assigns it to the IsDraft field.
func (o *Message) SetIsDraft(v bool) {
	o.IsDraft = &v
}

// SetIsDraftExplicitNull (un)sets IsDraft to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsDraft value is set to nil even if false is passed
func (o *Message) SetIsDraftExplicitNull(b bool) {
	o.IsDraft = nil
	o.isExplicitNullIsDraft = b
}
// GetWebLink returns the WebLink field if non-nil, zero value otherwise.
func (o *Message) GetWebLink() string {
	if o == nil || o.WebLink == nil {
		var ret string
		return ret
	}
	return *o.WebLink
}

// GetWebLinkOk returns a tuple with the WebLink field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetWebLinkOk() (string, bool) {
	if o == nil || o.WebLink == nil {
		var ret string
		return ret, false
	}
	return *o.WebLink, true
}

// HasWebLink returns a boolean if a field has been set.
func (o *Message) HasWebLink() bool {
	if o != nil && o.WebLink != nil {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given string and assigns it to the WebLink field.
func (o *Message) SetWebLink(v string) {
	o.WebLink = &v
}

// SetWebLinkExplicitNull (un)sets WebLink to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WebLink value is set to nil even if false is passed
func (o *Message) SetWebLinkExplicitNull(b bool) {
	o.WebLink = nil
	o.isExplicitNullWebLink = b
}
// GetInferenceClassification returns the InferenceClassification field if non-nil, zero value otherwise.
func (o *Message) GetInferenceClassification() AnyOfmicrosoftGraphInferenceClassificationType {
	if o == nil || o.InferenceClassification == nil {
		var ret AnyOfmicrosoftGraphInferenceClassificationType
		return ret
	}
	return *o.InferenceClassification
}

// GetInferenceClassificationOk returns a tuple with the InferenceClassification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetInferenceClassificationOk() (AnyOfmicrosoftGraphInferenceClassificationType, bool) {
	if o == nil || o.InferenceClassification == nil {
		var ret AnyOfmicrosoftGraphInferenceClassificationType
		return ret, false
	}
	return *o.InferenceClassification, true
}

// HasInferenceClassification returns a boolean if a field has been set.
func (o *Message) HasInferenceClassification() bool {
	if o != nil && o.InferenceClassification != nil {
		return true
	}

	return false
}

// SetInferenceClassification gets a reference to the given AnyOfmicrosoftGraphInferenceClassificationType and assigns it to the InferenceClassification field.
func (o *Message) SetInferenceClassification(v AnyOfmicrosoftGraphInferenceClassificationType) {
	o.InferenceClassification = &v
}

// SetInferenceClassificationExplicitNull (un)sets InferenceClassification to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InferenceClassification value is set to nil even if false is passed
func (o *Message) SetInferenceClassificationExplicitNull(b bool) {
	o.InferenceClassification = nil
	o.isExplicitNullInferenceClassification = b
}
// GetFlag returns the Flag field if non-nil, zero value otherwise.
func (o *Message) GetFlag() AnyOfmicrosoftGraphFollowupFlag {
	if o == nil || o.Flag == nil {
		var ret AnyOfmicrosoftGraphFollowupFlag
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetFlagOk() (AnyOfmicrosoftGraphFollowupFlag, bool) {
	if o == nil || o.Flag == nil {
		var ret AnyOfmicrosoftGraphFollowupFlag
		return ret, false
	}
	return *o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *Message) HasFlag() bool {
	if o != nil && o.Flag != nil {
		return true
	}

	return false
}

// SetFlag gets a reference to the given AnyOfmicrosoftGraphFollowupFlag and assigns it to the Flag field.
func (o *Message) SetFlag(v AnyOfmicrosoftGraphFollowupFlag) {
	o.Flag = &v
}

// SetFlagExplicitNull (un)sets Flag to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Flag value is set to nil even if false is passed
func (o *Message) SetFlagExplicitNull(b bool) {
	o.Flag = nil
	o.isExplicitNullFlag = b
}
// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field if non-nil, zero value otherwise.
func (o *Message) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSingleValueExtendedPropertiesOk() ([]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret, false
	}
	return *o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *Message) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *Message) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field if non-nil, zero value otherwise.
func (o *Message) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetMultiValueExtendedPropertiesOk() ([]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret, false
	}
	return *o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *Message) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *Message) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetAttachments returns the Attachments field if non-nil, zero value otherwise.
func (o *Message) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetAttachmentsOk() ([]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret, false
	}
	return *o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *Message) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *Message) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *Message) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Message) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *Message) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Message) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReceivedDateTime == nil {
		if o.isExplicitNullReceivedDateTime {
			toSerialize["receivedDateTime"] = o.ReceivedDateTime
		}
	} else {
		toSerialize["receivedDateTime"] = o.ReceivedDateTime
	}
	if o.SentDateTime == nil {
		if o.isExplicitNullSentDateTime {
			toSerialize["sentDateTime"] = o.SentDateTime
		}
	} else {
		toSerialize["sentDateTime"] = o.SentDateTime
	}
	if o.HasAttachments == nil {
		if o.isExplicitNullHasAttachments {
			toSerialize["hasAttachments"] = o.HasAttachments
		}
	} else {
		toSerialize["hasAttachments"] = o.HasAttachments
	}
	if o.InternetMessageId == nil {
		if o.isExplicitNullInternetMessageId {
			toSerialize["internetMessageId"] = o.InternetMessageId
		}
	} else {
		toSerialize["internetMessageId"] = o.InternetMessageId
	}
	if o.InternetMessageHeaders != nil {
		toSerialize["internetMessageHeaders"] = o.InternetMessageHeaders
	}
	if o.Subject == nil {
		if o.isExplicitNullSubject {
			toSerialize["subject"] = o.Subject
		}
	} else {
		toSerialize["subject"] = o.Subject
	}
	if o.Body == nil {
		if o.isExplicitNullBody {
			toSerialize["body"] = o.Body
		}
	} else {
		toSerialize["body"] = o.Body
	}
	if o.BodyPreview == nil {
		if o.isExplicitNullBodyPreview {
			toSerialize["bodyPreview"] = o.BodyPreview
		}
	} else {
		toSerialize["bodyPreview"] = o.BodyPreview
	}
	if o.Importance == nil {
		if o.isExplicitNullImportance {
			toSerialize["importance"] = o.Importance
		}
	} else {
		toSerialize["importance"] = o.Importance
	}
	if o.ParentFolderId == nil {
		if o.isExplicitNullParentFolderId {
			toSerialize["parentFolderId"] = o.ParentFolderId
		}
	} else {
		toSerialize["parentFolderId"] = o.ParentFolderId
	}
	if o.Sender == nil {
		if o.isExplicitNullSender {
			toSerialize["sender"] = o.Sender
		}
	} else {
		toSerialize["sender"] = o.Sender
	}
	if o.From == nil {
		if o.isExplicitNullFrom {
			toSerialize["from"] = o.From
		}
	} else {
		toSerialize["from"] = o.From
	}
	if o.ToRecipients != nil {
		toSerialize["toRecipients"] = o.ToRecipients
	}
	if o.CcRecipients != nil {
		toSerialize["ccRecipients"] = o.CcRecipients
	}
	if o.BccRecipients != nil {
		toSerialize["bccRecipients"] = o.BccRecipients
	}
	if o.ReplyTo != nil {
		toSerialize["replyTo"] = o.ReplyTo
	}
	if o.ConversationId == nil {
		if o.isExplicitNullConversationId {
			toSerialize["conversationId"] = o.ConversationId
		}
	} else {
		toSerialize["conversationId"] = o.ConversationId
	}
	if o.UniqueBody == nil {
		if o.isExplicitNullUniqueBody {
			toSerialize["uniqueBody"] = o.UniqueBody
		}
	} else {
		toSerialize["uniqueBody"] = o.UniqueBody
	}
	if o.IsDeliveryReceiptRequested == nil {
		if o.isExplicitNullIsDeliveryReceiptRequested {
			toSerialize["isDeliveryReceiptRequested"] = o.IsDeliveryReceiptRequested
		}
	} else {
		toSerialize["isDeliveryReceiptRequested"] = o.IsDeliveryReceiptRequested
	}
	if o.IsReadReceiptRequested == nil {
		if o.isExplicitNullIsReadReceiptRequested {
			toSerialize["isReadReceiptRequested"] = o.IsReadReceiptRequested
		}
	} else {
		toSerialize["isReadReceiptRequested"] = o.IsReadReceiptRequested
	}
	if o.IsRead == nil {
		if o.isExplicitNullIsRead {
			toSerialize["isRead"] = o.IsRead
		}
	} else {
		toSerialize["isRead"] = o.IsRead
	}
	if o.IsDraft == nil {
		if o.isExplicitNullIsDraft {
			toSerialize["isDraft"] = o.IsDraft
		}
	} else {
		toSerialize["isDraft"] = o.IsDraft
	}
	if o.WebLink == nil {
		if o.isExplicitNullWebLink {
			toSerialize["webLink"] = o.WebLink
		}
	} else {
		toSerialize["webLink"] = o.WebLink
	}
	if o.InferenceClassification == nil {
		if o.isExplicitNullInferenceClassification {
			toSerialize["inferenceClassification"] = o.InferenceClassification
		}
	} else {
		toSerialize["inferenceClassification"] = o.InferenceClassification
	}
	if o.Flag == nil {
		if o.isExplicitNullFlag {
			toSerialize["flag"] = o.Flag
		}
	} else {
		toSerialize["flag"] = o.Flag
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	return json.Marshal(toSerialize)
}


