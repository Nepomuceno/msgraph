/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphContract struct for MicrosoftGraphContract
type MicrosoftGraphContract struct {
	Id *string `json:"id,omitempty"`

	DeletedDateTime *time.Time `json:"deletedDateTime,omitempty"`
	isExplicitNullDeletedDateTime bool `json:"-"`
	ContractType *string `json:"contractType,omitempty"`
	isExplicitNullContractType bool `json:"-"`
	CustomerId *string `json:"customerId,omitempty"`
	isExplicitNullCustomerId bool `json:"-"`
	DefaultDomainName *string `json:"defaultDomainName,omitempty"`
	isExplicitNullDefaultDomainName bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphContract) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetDeletedDateTimeOk() (time.Time, bool) {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DeletedDateTime, true
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime != nil {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given time.Time and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphContract) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime = &v
}

// SetDeletedDateTimeExplicitNull (un)sets DeletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeletedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphContract) SetDeletedDateTimeExplicitNull(b bool) {
	o.DeletedDateTime = nil
	o.isExplicitNullDeletedDateTime = b
}
// GetContractType returns the ContractType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetContractType() string {
	if o == nil || o.ContractType == nil {
		var ret string
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetContractTypeOk() (string, bool) {
	if o == nil || o.ContractType == nil {
		var ret string
		return ret, false
	}
	return *o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasContractType() bool {
	if o != nil && o.ContractType != nil {
		return true
	}

	return false
}

// SetContractType gets a reference to the given string and assigns it to the ContractType field.
func (o *MicrosoftGraphContract) SetContractType(v string) {
	o.ContractType = &v
}

// SetContractTypeExplicitNull (un)sets ContractType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ContractType value is set to nil even if false is passed
func (o *MicrosoftGraphContract) SetContractTypeExplicitNull(b bool) {
	o.ContractType = nil
	o.isExplicitNullContractType = b
}
// GetCustomerId returns the CustomerId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetCustomerIdOk() (string, bool) {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret, false
	}
	return *o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *MicrosoftGraphContract) SetCustomerId(v string) {
	o.CustomerId = &v
}

// SetCustomerIdExplicitNull (un)sets CustomerId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CustomerId value is set to nil even if false is passed
func (o *MicrosoftGraphContract) SetCustomerIdExplicitNull(b bool) {
	o.CustomerId = nil
	o.isExplicitNullCustomerId = b
}
// GetDefaultDomainName returns the DefaultDomainName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetDefaultDomainName() string {
	if o == nil || o.DefaultDomainName == nil {
		var ret string
		return ret
	}
	return *o.DefaultDomainName
}

// GetDefaultDomainNameOk returns a tuple with the DefaultDomainName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetDefaultDomainNameOk() (string, bool) {
	if o == nil || o.DefaultDomainName == nil {
		var ret string
		return ret, false
	}
	return *o.DefaultDomainName, true
}

// HasDefaultDomainName returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDefaultDomainName() bool {
	if o != nil && o.DefaultDomainName != nil {
		return true
	}

	return false
}

// SetDefaultDomainName gets a reference to the given string and assigns it to the DefaultDomainName field.
func (o *MicrosoftGraphContract) SetDefaultDomainName(v string) {
	o.DefaultDomainName = &v
}

// SetDefaultDomainNameExplicitNull (un)sets DefaultDomainName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DefaultDomainName value is set to nil even if false is passed
func (o *MicrosoftGraphContract) SetDefaultDomainNameExplicitNull(b bool) {
	o.DefaultDomainName = nil
	o.isExplicitNullDefaultDomainName = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContract) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContract) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphContract) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphContract) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphContract) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphContract) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime == nil {
		if o.isExplicitNullDeletedDateTime {
			toSerialize["deletedDateTime"] = o.DeletedDateTime
		}
	} else {
		toSerialize["deletedDateTime"] = o.DeletedDateTime
	}
	if o.ContractType == nil {
		if o.isExplicitNullContractType {
			toSerialize["contractType"] = o.ContractType
		}
	} else {
		toSerialize["contractType"] = o.ContractType
	}
	if o.CustomerId == nil {
		if o.isExplicitNullCustomerId {
			toSerialize["customerId"] = o.CustomerId
		}
	} else {
		toSerialize["customerId"] = o.CustomerId
	}
	if o.DefaultDomainName == nil {
		if o.isExplicitNullDefaultDomainName {
			toSerialize["defaultDomainName"] = o.DefaultDomainName
		}
	} else {
		toSerialize["defaultDomainName"] = o.DefaultDomainName
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}


