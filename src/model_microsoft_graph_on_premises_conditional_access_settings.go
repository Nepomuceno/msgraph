/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphOnPremisesConditionalAccessSettings struct for MicrosoftGraphOnPremisesConditionalAccessSettings
type MicrosoftGraphOnPremisesConditionalAccessSettings struct {
	Id *string `json:"id,omitempty"`

	// Indicates if on premises conditional access is enabled for this organization
	Enabled *bool `json:"enabled,omitempty"`

	// User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access.
	IncludedGroups *[]string `json:"includedGroups,omitempty"`

	// User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy.
	ExcludedGroups *[]string `json:"excludedGroups,omitempty"`

	// Override the default access rule when allowing a device to ensure access is granted.
	OverrideDefaultRule *bool `json:"overrideDefaultRule,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) SetId(v string) {
	o.Id = &v
}

// GetEnabled returns the Enabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetEnabledOk() (bool, bool) {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret, false
	}
	return *o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIncludedGroups returns the IncludedGroups field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetIncludedGroups() []string {
	if o == nil || o.IncludedGroups == nil {
		var ret []string
		return ret
	}
	return *o.IncludedGroups
}

// GetIncludedGroupsOk returns a tuple with the IncludedGroups field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetIncludedGroupsOk() ([]string, bool) {
	if o == nil || o.IncludedGroups == nil {
		var ret []string
		return ret, false
	}
	return *o.IncludedGroups, true
}

// HasIncludedGroups returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) HasIncludedGroups() bool {
	if o != nil && o.IncludedGroups != nil {
		return true
	}

	return false
}

// SetIncludedGroups gets a reference to the given []string and assigns it to the IncludedGroups field.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) SetIncludedGroups(v []string) {
	o.IncludedGroups = &v
}

// GetExcludedGroups returns the ExcludedGroups field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetExcludedGroups() []string {
	if o == nil || o.ExcludedGroups == nil {
		var ret []string
		return ret
	}
	return *o.ExcludedGroups
}

// GetExcludedGroupsOk returns a tuple with the ExcludedGroups field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetExcludedGroupsOk() ([]string, bool) {
	if o == nil || o.ExcludedGroups == nil {
		var ret []string
		return ret, false
	}
	return *o.ExcludedGroups, true
}

// HasExcludedGroups returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) HasExcludedGroups() bool {
	if o != nil && o.ExcludedGroups != nil {
		return true
	}

	return false
}

// SetExcludedGroups gets a reference to the given []string and assigns it to the ExcludedGroups field.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) SetExcludedGroups(v []string) {
	o.ExcludedGroups = &v
}

// GetOverrideDefaultRule returns the OverrideDefaultRule field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetOverrideDefaultRule() bool {
	if o == nil || o.OverrideDefaultRule == nil {
		var ret bool
		return ret
	}
	return *o.OverrideDefaultRule
}

// GetOverrideDefaultRuleOk returns a tuple with the OverrideDefaultRule field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) GetOverrideDefaultRuleOk() (bool, bool) {
	if o == nil || o.OverrideDefaultRule == nil {
		var ret bool
		return ret, false
	}
	return *o.OverrideDefaultRule, true
}

// HasOverrideDefaultRule returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) HasOverrideDefaultRule() bool {
	if o != nil && o.OverrideDefaultRule != nil {
		return true
	}

	return false
}

// SetOverrideDefaultRule gets a reference to the given bool and assigns it to the OverrideDefaultRule field.
func (o *MicrosoftGraphOnPremisesConditionalAccessSettings) SetOverrideDefaultRule(v bool) {
	o.OverrideDefaultRule = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphOnPremisesConditionalAccessSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.IncludedGroups != nil {
		toSerialize["includedGroups"] = o.IncludedGroups
	}
	if o.ExcludedGroups != nil {
		toSerialize["excludedGroups"] = o.ExcludedGroups
	}
	if o.OverrideDefaultRule != nil {
		toSerialize["overrideDefaultRule"] = o.OverrideDefaultRule
	}
	return json.Marshal(toSerialize)
}


