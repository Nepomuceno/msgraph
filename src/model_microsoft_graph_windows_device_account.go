/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWindowsDeviceAccount struct for MicrosoftGraphWindowsDeviceAccount
type MicrosoftGraphWindowsDeviceAccount struct {
	Password *string `json:"password,omitempty"`
	isExplicitNullPassword bool `json:"-"`
}

// GetPassword returns the Password field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsDeviceAccount) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsDeviceAccount) GetPasswordOk() (string, bool) {
	if o == nil || o.Password == nil {
		var ret string
		return ret, false
	}
	return *o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsDeviceAccount) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MicrosoftGraphWindowsDeviceAccount) SetPassword(v string) {
	o.Password = &v
}

// SetPasswordExplicitNull (un)sets Password to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Password value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsDeviceAccount) SetPasswordExplicitNull(b bool) {
	o.Password = nil
	o.isExplicitNullPassword = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWindowsDeviceAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password == nil {
		if o.isExplicitNullPassword {
			toSerialize["password"] = o.Password
		}
	} else {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}


