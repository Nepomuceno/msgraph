/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// OnenoteOperation struct for OnenoteOperation
type OnenoteOperation struct {
	ResourceLocation *string `json:"resourceLocation,omitempty"`
	isExplicitNullResourceLocation bool `json:"-"`
	ResourceId *string `json:"resourceId,omitempty"`
	isExplicitNullResourceId bool `json:"-"`
	Error *AnyOfmicrosoftGraphOnenoteOperationError `json:"error,omitempty"`
	isExplicitNullError bool `json:"-"`
	PercentComplete *string `json:"percentComplete,omitempty"`
	isExplicitNullPercentComplete bool `json:"-"`
}

// GetResourceLocation returns the ResourceLocation field if non-nil, zero value otherwise.
func (o *OnenoteOperation) GetResourceLocation() string {
	if o == nil || o.ResourceLocation == nil {
		var ret string
		return ret
	}
	return *o.ResourceLocation
}

// GetResourceLocationOk returns a tuple with the ResourceLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OnenoteOperation) GetResourceLocationOk() (string, bool) {
	if o == nil || o.ResourceLocation == nil {
		var ret string
		return ret, false
	}
	return *o.ResourceLocation, true
}

// HasResourceLocation returns a boolean if a field has been set.
func (o *OnenoteOperation) HasResourceLocation() bool {
	if o != nil && o.ResourceLocation != nil {
		return true
	}

	return false
}

// SetResourceLocation gets a reference to the given string and assigns it to the ResourceLocation field.
func (o *OnenoteOperation) SetResourceLocation(v string) {
	o.ResourceLocation = &v
}

// SetResourceLocationExplicitNull (un)sets ResourceLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceLocation value is set to nil even if false is passed
func (o *OnenoteOperation) SetResourceLocationExplicitNull(b bool) {
	o.ResourceLocation = nil
	o.isExplicitNullResourceLocation = b
}
// GetResourceId returns the ResourceId field if non-nil, zero value otherwise.
func (o *OnenoteOperation) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OnenoteOperation) GetResourceIdOk() (string, bool) {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret, false
	}
	return *o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *OnenoteOperation) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *OnenoteOperation) SetResourceId(v string) {
	o.ResourceId = &v
}

// SetResourceIdExplicitNull (un)sets ResourceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceId value is set to nil even if false is passed
func (o *OnenoteOperation) SetResourceIdExplicitNull(b bool) {
	o.ResourceId = nil
	o.isExplicitNullResourceId = b
}
// GetError returns the Error field if non-nil, zero value otherwise.
func (o *OnenoteOperation) GetError() AnyOfmicrosoftGraphOnenoteOperationError {
	if o == nil || o.Error == nil {
		var ret AnyOfmicrosoftGraphOnenoteOperationError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OnenoteOperation) GetErrorOk() (AnyOfmicrosoftGraphOnenoteOperationError, bool) {
	if o == nil || o.Error == nil {
		var ret AnyOfmicrosoftGraphOnenoteOperationError
		return ret, false
	}
	return *o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OnenoteOperation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphOnenoteOperationError and assigns it to the Error field.
func (o *OnenoteOperation) SetError(v AnyOfmicrosoftGraphOnenoteOperationError) {
	o.Error = &v
}

// SetErrorExplicitNull (un)sets Error to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Error value is set to nil even if false is passed
func (o *OnenoteOperation) SetErrorExplicitNull(b bool) {
	o.Error = nil
	o.isExplicitNullError = b
}
// GetPercentComplete returns the PercentComplete field if non-nil, zero value otherwise.
func (o *OnenoteOperation) GetPercentComplete() string {
	if o == nil || o.PercentComplete == nil {
		var ret string
		return ret
	}
	return *o.PercentComplete
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OnenoteOperation) GetPercentCompleteOk() (string, bool) {
	if o == nil || o.PercentComplete == nil {
		var ret string
		return ret, false
	}
	return *o.PercentComplete, true
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *OnenoteOperation) HasPercentComplete() bool {
	if o != nil && o.PercentComplete != nil {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given string and assigns it to the PercentComplete field.
func (o *OnenoteOperation) SetPercentComplete(v string) {
	o.PercentComplete = &v
}

// SetPercentCompleteExplicitNull (un)sets PercentComplete to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PercentComplete value is set to nil even if false is passed
func (o *OnenoteOperation) SetPercentCompleteExplicitNull(b bool) {
	o.PercentComplete = nil
	o.isExplicitNullPercentComplete = b
}

// MarshalJSON returns the JSON representation of the model.
func (o OnenoteOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceLocation == nil {
		if o.isExplicitNullResourceLocation {
			toSerialize["resourceLocation"] = o.ResourceLocation
		}
	} else {
		toSerialize["resourceLocation"] = o.ResourceLocation
	}
	if o.ResourceId == nil {
		if o.isExplicitNullResourceId {
			toSerialize["resourceId"] = o.ResourceId
		}
	} else {
		toSerialize["resourceId"] = o.ResourceId
	}
	if o.Error == nil {
		if o.isExplicitNullError {
			toSerialize["error"] = o.Error
		}
	} else {
		toSerialize["error"] = o.Error
	}
	if o.PercentComplete == nil {
		if o.isExplicitNullPercentComplete {
			toSerialize["percentComplete"] = o.PercentComplete
		}
	} else {
		toSerialize["percentComplete"] = o.PercentComplete
	}
	return json.Marshal(toSerialize)
}


