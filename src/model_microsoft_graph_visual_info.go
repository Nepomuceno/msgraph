/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphVisualInfo struct for MicrosoftGraphVisualInfo
type MicrosoftGraphVisualInfo struct {
	Attribution *AnyOfmicrosoftGraphImageInfo `json:"attribution,omitempty"`
	isExplicitNullAttribution bool `json:"-"`
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	isExplicitNullBackgroundColor bool `json:"-"`
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	DisplayText *string `json:"displayText,omitempty"`

	Content *AnyOfobject `json:"content,omitempty"`
	isExplicitNullContent bool `json:"-"`
}

// GetAttribution returns the Attribution field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVisualInfo) GetAttribution() AnyOfmicrosoftGraphImageInfo {
	if o == nil || o.Attribution == nil {
		var ret AnyOfmicrosoftGraphImageInfo
		return ret
	}
	return *o.Attribution
}

// GetAttributionOk returns a tuple with the Attribution field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVisualInfo) GetAttributionOk() (AnyOfmicrosoftGraphImageInfo, bool) {
	if o == nil || o.Attribution == nil {
		var ret AnyOfmicrosoftGraphImageInfo
		return ret, false
	}
	return *o.Attribution, true
}

// HasAttribution returns a boolean if a field has been set.
func (o *MicrosoftGraphVisualInfo) HasAttribution() bool {
	if o != nil && o.Attribution != nil {
		return true
	}

	return false
}

// SetAttribution gets a reference to the given AnyOfmicrosoftGraphImageInfo and assigns it to the Attribution field.
func (o *MicrosoftGraphVisualInfo) SetAttribution(v AnyOfmicrosoftGraphImageInfo) {
	o.Attribution = &v
}

// SetAttributionExplicitNull (un)sets Attribution to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Attribution value is set to nil even if false is passed
func (o *MicrosoftGraphVisualInfo) SetAttributionExplicitNull(b bool) {
	o.Attribution = nil
	o.isExplicitNullAttribution = b
}
// GetBackgroundColor returns the BackgroundColor field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVisualInfo) GetBackgroundColor() string {
	if o == nil || o.BackgroundColor == nil {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVisualInfo) GetBackgroundColorOk() (string, bool) {
	if o == nil || o.BackgroundColor == nil {
		var ret string
		return ret, false
	}
	return *o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *MicrosoftGraphVisualInfo) HasBackgroundColor() bool {
	if o != nil && o.BackgroundColor != nil {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *MicrosoftGraphVisualInfo) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// SetBackgroundColorExplicitNull (un)sets BackgroundColor to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BackgroundColor value is set to nil even if false is passed
func (o *MicrosoftGraphVisualInfo) SetBackgroundColorExplicitNull(b bool) {
	o.BackgroundColor = nil
	o.isExplicitNullBackgroundColor = b
}
// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVisualInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVisualInfo) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphVisualInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphVisualInfo) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphVisualInfo) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetDisplayText returns the DisplayText field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVisualInfo) GetDisplayText() string {
	if o == nil || o.DisplayText == nil {
		var ret string
		return ret
	}
	return *o.DisplayText
}

// GetDisplayTextOk returns a tuple with the DisplayText field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVisualInfo) GetDisplayTextOk() (string, bool) {
	if o == nil || o.DisplayText == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayText, true
}

// HasDisplayText returns a boolean if a field has been set.
func (o *MicrosoftGraphVisualInfo) HasDisplayText() bool {
	if o != nil && o.DisplayText != nil {
		return true
	}

	return false
}

// SetDisplayText gets a reference to the given string and assigns it to the DisplayText field.
func (o *MicrosoftGraphVisualInfo) SetDisplayText(v string) {
	o.DisplayText = &v
}

// GetContent returns the Content field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVisualInfo) GetContent() AnyOfobject {
	if o == nil || o.Content == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVisualInfo) GetContentOk() (AnyOfobject, bool) {
	if o == nil || o.Content == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *MicrosoftGraphVisualInfo) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given AnyOfobject and assigns it to the Content field.
func (o *MicrosoftGraphVisualInfo) SetContent(v AnyOfobject) {
	o.Content = &v
}

// SetContentExplicitNull (un)sets Content to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Content value is set to nil even if false is passed
func (o *MicrosoftGraphVisualInfo) SetContentExplicitNull(b bool) {
	o.Content = nil
	o.isExplicitNullContent = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphVisualInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attribution == nil {
		if o.isExplicitNullAttribution {
			toSerialize["attribution"] = o.Attribution
		}
	} else {
		toSerialize["attribution"] = o.Attribution
	}
	if o.BackgroundColor == nil {
		if o.isExplicitNullBackgroundColor {
			toSerialize["backgroundColor"] = o.BackgroundColor
		}
	} else {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.DisplayText != nil {
		toSerialize["displayText"] = o.DisplayText
	}
	if o.Content == nil {
		if o.isExplicitNullContent {
			toSerialize["content"] = o.Content
		}
	} else {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}


