/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// PlannerProgressTaskBoardTaskFormat struct for PlannerProgressTaskBoardTaskFormat
type PlannerProgressTaskBoardTaskFormat struct {
	OrderHint *string `json:"orderHint,omitempty"`
	isExplicitNullOrderHint bool `json:"-"`
}

// GetOrderHint returns the OrderHint field if non-nil, zero value otherwise.
func (o *PlannerProgressTaskBoardTaskFormat) GetOrderHint() string {
	if o == nil || o.OrderHint == nil {
		var ret string
		return ret
	}
	return *o.OrderHint
}

// GetOrderHintOk returns a tuple with the OrderHint field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerProgressTaskBoardTaskFormat) GetOrderHintOk() (string, bool) {
	if o == nil || o.OrderHint == nil {
		var ret string
		return ret, false
	}
	return *o.OrderHint, true
}

// HasOrderHint returns a boolean if a field has been set.
func (o *PlannerProgressTaskBoardTaskFormat) HasOrderHint() bool {
	if o != nil && o.OrderHint != nil {
		return true
	}

	return false
}

// SetOrderHint gets a reference to the given string and assigns it to the OrderHint field.
func (o *PlannerProgressTaskBoardTaskFormat) SetOrderHint(v string) {
	o.OrderHint = &v
}

// SetOrderHintExplicitNull (un)sets OrderHint to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OrderHint value is set to nil even if false is passed
func (o *PlannerProgressTaskBoardTaskFormat) SetOrderHintExplicitNull(b bool) {
	o.OrderHint = nil
	o.isExplicitNullOrderHint = b
}

// MarshalJSON returns the JSON representation of the model.
func (o PlannerProgressTaskBoardTaskFormat) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderHint == nil {
		if o.isExplicitNullOrderHint {
			toSerialize["orderHint"] = o.OrderHint
		}
	} else {
		toSerialize["orderHint"] = o.OrderHint
	}
	return json.Marshal(toSerialize)
}


