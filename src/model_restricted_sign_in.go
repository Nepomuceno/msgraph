/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// RestrictedSignIn struct for RestrictedSignIn
type RestrictedSignIn struct {
	TargetTenantId *string `json:"targetTenantId,omitempty"`
	isExplicitNullTargetTenantId bool `json:"-"`
}

// GetTargetTenantId returns the TargetTenantId field if non-nil, zero value otherwise.
func (o *RestrictedSignIn) GetTargetTenantId() string {
	if o == nil || o.TargetTenantId == nil {
		var ret string
		return ret
	}
	return *o.TargetTenantId
}

// GetTargetTenantIdOk returns a tuple with the TargetTenantId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RestrictedSignIn) GetTargetTenantIdOk() (string, bool) {
	if o == nil || o.TargetTenantId == nil {
		var ret string
		return ret, false
	}
	return *o.TargetTenantId, true
}

// HasTargetTenantId returns a boolean if a field has been set.
func (o *RestrictedSignIn) HasTargetTenantId() bool {
	if o != nil && o.TargetTenantId != nil {
		return true
	}

	return false
}

// SetTargetTenantId gets a reference to the given string and assigns it to the TargetTenantId field.
func (o *RestrictedSignIn) SetTargetTenantId(v string) {
	o.TargetTenantId = &v
}

// SetTargetTenantIdExplicitNull (un)sets TargetTenantId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TargetTenantId value is set to nil even if false is passed
func (o *RestrictedSignIn) SetTargetTenantIdExplicitNull(b bool) {
	o.TargetTenantId = nil
	o.isExplicitNullTargetTenantId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o RestrictedSignIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TargetTenantId == nil {
		if o.isExplicitNullTargetTenantId {
			toSerialize["targetTenantId"] = o.TargetTenantId
		}
	} else {
		toSerialize["targetTenantId"] = o.TargetTenantId
	}
	return json.Marshal(toSerialize)
}


