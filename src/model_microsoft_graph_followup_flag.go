/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphFollowupFlag struct for MicrosoftGraphFollowupFlag
type MicrosoftGraphFollowupFlag struct {
	CompletedDateTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"completedDateTime,omitempty"`
	isExplicitNullCompletedDateTime bool `json:"-"`
	DueDateTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"dueDateTime,omitempty"`
	isExplicitNullDueDateTime bool `json:"-"`
	StartDateTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"startDateTime,omitempty"`
	isExplicitNullStartDateTime bool `json:"-"`
	FlagStatus *AnyOfmicrosoftGraphFollowupFlagStatus `json:"flagStatus,omitempty"`
	isExplicitNullFlagStatus bool `json:"-"`
}

// GetCompletedDateTime returns the CompletedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFollowupFlag) GetCompletedDateTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.CompletedDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.CompletedDateTime
}

// GetCompletedDateTimeOk returns a tuple with the CompletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFollowupFlag) GetCompletedDateTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.CompletedDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.CompletedDateTime, true
}

// HasCompletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphFollowupFlag) HasCompletedDateTime() bool {
	if o != nil && o.CompletedDateTime != nil {
		return true
	}

	return false
}

// SetCompletedDateTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the CompletedDateTime field.
func (o *MicrosoftGraphFollowupFlag) SetCompletedDateTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.CompletedDateTime = &v
}

// SetCompletedDateTimeExplicitNull (un)sets CompletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CompletedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphFollowupFlag) SetCompletedDateTimeExplicitNull(b bool) {
	o.CompletedDateTime = nil
	o.isExplicitNullCompletedDateTime = b
}
// GetDueDateTime returns the DueDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFollowupFlag) GetDueDateTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.DueDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.DueDateTime
}

// GetDueDateTimeOk returns a tuple with the DueDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFollowupFlag) GetDueDateTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.DueDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.DueDateTime, true
}

// HasDueDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphFollowupFlag) HasDueDateTime() bool {
	if o != nil && o.DueDateTime != nil {
		return true
	}

	return false
}

// SetDueDateTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the DueDateTime field.
func (o *MicrosoftGraphFollowupFlag) SetDueDateTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.DueDateTime = &v
}

// SetDueDateTimeExplicitNull (un)sets DueDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DueDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphFollowupFlag) SetDueDateTimeExplicitNull(b bool) {
	o.DueDateTime = nil
	o.isExplicitNullDueDateTime = b
}
// GetStartDateTime returns the StartDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFollowupFlag) GetStartDateTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.StartDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFollowupFlag) GetStartDateTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.StartDateTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphFollowupFlag) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the StartDateTime field.
func (o *MicrosoftGraphFollowupFlag) SetStartDateTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.StartDateTime = &v
}

// SetStartDateTimeExplicitNull (un)sets StartDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphFollowupFlag) SetStartDateTimeExplicitNull(b bool) {
	o.StartDateTime = nil
	o.isExplicitNullStartDateTime = b
}
// GetFlagStatus returns the FlagStatus field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFollowupFlag) GetFlagStatus() AnyOfmicrosoftGraphFollowupFlagStatus {
	if o == nil || o.FlagStatus == nil {
		var ret AnyOfmicrosoftGraphFollowupFlagStatus
		return ret
	}
	return *o.FlagStatus
}

// GetFlagStatusOk returns a tuple with the FlagStatus field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFollowupFlag) GetFlagStatusOk() (AnyOfmicrosoftGraphFollowupFlagStatus, bool) {
	if o == nil || o.FlagStatus == nil {
		var ret AnyOfmicrosoftGraphFollowupFlagStatus
		return ret, false
	}
	return *o.FlagStatus, true
}

// HasFlagStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphFollowupFlag) HasFlagStatus() bool {
	if o != nil && o.FlagStatus != nil {
		return true
	}

	return false
}

// SetFlagStatus gets a reference to the given AnyOfmicrosoftGraphFollowupFlagStatus and assigns it to the FlagStatus field.
func (o *MicrosoftGraphFollowupFlag) SetFlagStatus(v AnyOfmicrosoftGraphFollowupFlagStatus) {
	o.FlagStatus = &v
}

// SetFlagStatusExplicitNull (un)sets FlagStatus to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FlagStatus value is set to nil even if false is passed
func (o *MicrosoftGraphFollowupFlag) SetFlagStatusExplicitNull(b bool) {
	o.FlagStatus = nil
	o.isExplicitNullFlagStatus = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphFollowupFlag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompletedDateTime == nil {
		if o.isExplicitNullCompletedDateTime {
			toSerialize["completedDateTime"] = o.CompletedDateTime
		}
	} else {
		toSerialize["completedDateTime"] = o.CompletedDateTime
	}
	if o.DueDateTime == nil {
		if o.isExplicitNullDueDateTime {
			toSerialize["dueDateTime"] = o.DueDateTime
		}
	} else {
		toSerialize["dueDateTime"] = o.DueDateTime
	}
	if o.StartDateTime == nil {
		if o.isExplicitNullStartDateTime {
			toSerialize["startDateTime"] = o.StartDateTime
		}
	} else {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.FlagStatus == nil {
		if o.isExplicitNullFlagStatus {
			toSerialize["flagStatus"] = o.FlagStatus
		}
	} else {
		toSerialize["flagStatus"] = o.FlagStatus
	}
	return json.Marshal(toSerialize)
}


