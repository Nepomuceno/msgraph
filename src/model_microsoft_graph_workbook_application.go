/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWorkbookApplication struct for MicrosoftGraphWorkbookApplication
type MicrosoftGraphWorkbookApplication struct {
	Id *string `json:"id,omitempty"`

	CalculationMode *string `json:"calculationMode,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookApplication) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookApplication) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookApplication) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookApplication) SetId(v string) {
	o.Id = &v
}

// GetCalculationMode returns the CalculationMode field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookApplication) GetCalculationMode() string {
	if o == nil || o.CalculationMode == nil {
		var ret string
		return ret
	}
	return *o.CalculationMode
}

// GetCalculationModeOk returns a tuple with the CalculationMode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookApplication) GetCalculationModeOk() (string, bool) {
	if o == nil || o.CalculationMode == nil {
		var ret string
		return ret, false
	}
	return *o.CalculationMode, true
}

// HasCalculationMode returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookApplication) HasCalculationMode() bool {
	if o != nil && o.CalculationMode != nil {
		return true
	}

	return false
}

// SetCalculationMode gets a reference to the given string and assigns it to the CalculationMode field.
func (o *MicrosoftGraphWorkbookApplication) SetCalculationMode(v string) {
	o.CalculationMode = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWorkbookApplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CalculationMode != nil {
		toSerialize["calculationMode"] = o.CalculationMode
	}
	return json.Marshal(toSerialize)
}


