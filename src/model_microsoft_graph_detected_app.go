/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphDetectedApp struct for MicrosoftGraphDetectedApp
type MicrosoftGraphDetectedApp struct {
	Id *string `json:"id,omitempty"`

	// Name of the discovered application. Read-only
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	// Version of the discovered application. Read-only
	Version *string `json:"version,omitempty"`
	isExplicitNullVersion bool `json:"-"`
	// Discovered application size in bytes. Read-only
	SizeInByte *int64 `json:"sizeInByte,omitempty"`

	// The number of devices that have installed this application
	DeviceCount *int32 `json:"deviceCount,omitempty"`

	ManagedDevices *[]MicrosoftGraphManagedDevice `json:"managedDevices,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDetectedApp) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphDetectedApp) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphDetectedApp) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *MicrosoftGraphDetectedApp) SetVersion(v string) {
	o.Version = &v
}

// SetVersionExplicitNull (un)sets Version to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Version value is set to nil even if false is passed
func (o *MicrosoftGraphDetectedApp) SetVersionExplicitNull(b bool) {
	o.Version = nil
	o.isExplicitNullVersion = b
}
// GetSizeInByte returns the SizeInByte field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetSizeInByte() int64 {
	if o == nil || o.SizeInByte == nil {
		var ret int64
		return ret
	}
	return *o.SizeInByte
}

// GetSizeInByteOk returns a tuple with the SizeInByte field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetSizeInByteOk() (int64, bool) {
	if o == nil || o.SizeInByte == nil {
		var ret int64
		return ret, false
	}
	return *o.SizeInByte, true
}

// HasSizeInByte returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasSizeInByte() bool {
	if o != nil && o.SizeInByte != nil {
		return true
	}

	return false
}

// SetSizeInByte gets a reference to the given int64 and assigns it to the SizeInByte field.
func (o *MicrosoftGraphDetectedApp) SetSizeInByte(v int64) {
	o.SizeInByte = &v
}

// GetDeviceCount returns the DeviceCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetDeviceCount() int32 {
	if o == nil || o.DeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.DeviceCount
}

// GetDeviceCountOk returns a tuple with the DeviceCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetDeviceCountOk() (int32, bool) {
	if o == nil || o.DeviceCount == nil {
		var ret int32
		return ret, false
	}
	return *o.DeviceCount, true
}

// HasDeviceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasDeviceCount() bool {
	if o != nil && o.DeviceCount != nil {
		return true
	}

	return false
}

// SetDeviceCount gets a reference to the given int32 and assigns it to the DeviceCount field.
func (o *MicrosoftGraphDetectedApp) SetDeviceCount(v int32) {
	o.DeviceCount = &v
}

// GetManagedDevices returns the ManagedDevices field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDetectedApp) GetManagedDevices() []MicrosoftGraphManagedDevice {
	if o == nil || o.ManagedDevices == nil {
		var ret []MicrosoftGraphManagedDevice
		return ret
	}
	return *o.ManagedDevices
}

// GetManagedDevicesOk returns a tuple with the ManagedDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDetectedApp) GetManagedDevicesOk() ([]MicrosoftGraphManagedDevice, bool) {
	if o == nil || o.ManagedDevices == nil {
		var ret []MicrosoftGraphManagedDevice
		return ret, false
	}
	return *o.ManagedDevices, true
}

// HasManagedDevices returns a boolean if a field has been set.
func (o *MicrosoftGraphDetectedApp) HasManagedDevices() bool {
	if o != nil && o.ManagedDevices != nil {
		return true
	}

	return false
}

// SetManagedDevices gets a reference to the given []MicrosoftGraphManagedDevice and assigns it to the ManagedDevices field.
func (o *MicrosoftGraphDetectedApp) SetManagedDevices(v []MicrosoftGraphManagedDevice) {
	o.ManagedDevices = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDetectedApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Version == nil {
		if o.isExplicitNullVersion {
			toSerialize["version"] = o.Version
		}
	} else {
		toSerialize["version"] = o.Version
	}
	if o.SizeInByte != nil {
		toSerialize["sizeInByte"] = o.SizeInByte
	}
	if o.DeviceCount != nil {
		toSerialize["deviceCount"] = o.DeviceCount
	}
	if o.ManagedDevices != nil {
		toSerialize["managedDevices"] = o.ManagedDevices
	}
	return json.Marshal(toSerialize)
}


