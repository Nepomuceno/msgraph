/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphAndroidWorkProfileCompliancePolicy struct for MicrosoftGraphAndroidWorkProfileCompliancePolicy
type MicrosoftGraphAndroidWorkProfileCompliancePolicy struct {
	Id *string `json:"id,omitempty"`

	// DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`

	// Version of the device configuration.
	Version *int32 `json:"version,omitempty"`

	ScheduledActionsForRule *[]MicrosoftGraphDeviceComplianceScheduledActionForRule `json:"scheduledActionsForRule,omitempty"`

	DeviceStatuses *[]MicrosoftGraphDeviceComplianceDeviceStatus `json:"deviceStatuses,omitempty"`

	UserStatuses *[]MicrosoftGraphDeviceComplianceUserStatus `json:"userStatuses,omitempty"`

	DeviceStatusOverview *AnyOfmicrosoftGraphDeviceComplianceDeviceOverview `json:"deviceStatusOverview,omitempty"`
	isExplicitNullDeviceStatusOverview bool `json:"-"`
	UserStatusOverview *AnyOfmicrosoftGraphDeviceComplianceUserOverview `json:"userStatusOverview,omitempty"`
	isExplicitNullUserStatusOverview bool `json:"-"`
	DeviceSettingStateSummaries *[]MicrosoftGraphSettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`

	Assignments *[]MicrosoftGraphDeviceCompliancePolicyAssignment `json:"assignments,omitempty"`

	// Require a password to unlock device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`

	// Minimum password length. Valid values 4 to 16
	PasswordMinimumLength *int32 `json:"passwordMinimumLength,omitempty"`
	isExplicitNullPasswordMinimumLength bool `json:"-"`
	// Type of characters in password
	PasswordRequiredType *AnyOfmicrosoftGraphAndroidRequiredPasswordType `json:"passwordRequiredType,omitempty"`

	// Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int32 `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	isExplicitNullPasswordMinutesOfInactivityBeforeLock bool `json:"-"`
	// Number of days before the password expires. Valid values 1 to 365
	PasswordExpirationDays *int32 `json:"passwordExpirationDays,omitempty"`
	isExplicitNullPasswordExpirationDays bool `json:"-"`
	// Number of previous passwords to block. Valid values 1 to 24
	PasswordPreviousPasswordBlockCount *int32 `json:"passwordPreviousPasswordBlockCount,omitempty"`
	isExplicitNullPasswordPreviousPasswordBlockCount bool `json:"-"`
	// Require that devices disallow installation of apps from unknown sources.
	SecurityPreventInstallAppsFromUnknownSources *bool `json:"securityPreventInstallAppsFromUnknownSources,omitempty"`

	// Disable USB debugging on Android devices.
	SecurityDisableUsbDebugging *bool `json:"securityDisableUsbDebugging,omitempty"`

	// Require the Android Verify apps feature is turned on.
	SecurityRequireVerifyApps *bool `json:"securityRequireVerifyApps,omitempty"`

	// Require that devices have enabled device threat protection.
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`

	// Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *AnyOfmicrosoftGraphDeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`

	// Devices must not be jailbroken or rooted.
	SecurityBlockJailbrokenDevices *bool `json:"securityBlockJailbrokenDevices,omitempty"`

	// Minimum Android version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	isExplicitNullOsMinimumVersion bool `json:"-"`
	// Maximum Android version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	isExplicitNullOsMaximumVersion bool `json:"-"`
	// Minimum Android security patch level.
	MinAndroidSecurityPatchLevel *string `json:"minAndroidSecurityPatchLevel,omitempty"`
	isExplicitNullMinAndroidSecurityPatchLevel bool `json:"-"`
	// Require encryption on Android devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`

	// Require the device to pass the SafetyNet basic integrity check.
	SecurityRequireSafetyNetAttestationBasicIntegrity *bool `json:"securityRequireSafetyNetAttestationBasicIntegrity,omitempty"`

	// Require the device to pass the SafetyNet certified device check.
	SecurityRequireSafetyNetAttestationCertifiedDevice *bool `json:"securityRequireSafetyNetAttestationCertifiedDevice,omitempty"`

	// Require Google Play Services to be installed and enabled on the device.
	SecurityRequireGooglePlayServices *bool `json:"securityRequireGooglePlayServices,omitempty"`

	// Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.
	SecurityRequireUpToDateSecurityProviders *bool `json:"securityRequireUpToDateSecurityProviders,omitempty"`

	// Require the device to pass the Company Portal client app runtime integrity check.
	SecurityRequireCompanyPortalAppIntegrity *bool `json:"securityRequireCompanyPortalAppIntegrity,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetVersionOk() (int32, bool) {
	if o == nil || o.Version == nil {
		var ret int32
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetVersion(v int32) {
	o.Version = &v
}

// GetScheduledActionsForRule returns the ScheduledActionsForRule field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetScheduledActionsForRule() []MicrosoftGraphDeviceComplianceScheduledActionForRule {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret
	}
	return *o.ScheduledActionsForRule
}

// GetScheduledActionsForRuleOk returns a tuple with the ScheduledActionsForRule field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetScheduledActionsForRuleOk() ([]MicrosoftGraphDeviceComplianceScheduledActionForRule, bool) {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret, false
	}
	return *o.ScheduledActionsForRule, true
}

// HasScheduledActionsForRule returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasScheduledActionsForRule() bool {
	if o != nil && o.ScheduledActionsForRule != nil {
		return true
	}

	return false
}

// SetScheduledActionsForRule gets a reference to the given []MicrosoftGraphDeviceComplianceScheduledActionForRule and assigns it to the ScheduledActionsForRule field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetScheduledActionsForRule(v []MicrosoftGraphDeviceComplianceScheduledActionForRule) {
	o.ScheduledActionsForRule = &v
}

// GetDeviceStatuses returns the DeviceStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceStatuses() []MicrosoftGraphDeviceComplianceDeviceStatus {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret
	}
	return *o.DeviceStatuses
}

// GetDeviceStatusesOk returns a tuple with the DeviceStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceStatusesOk() ([]MicrosoftGraphDeviceComplianceDeviceStatus, bool) {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret, false
	}
	return *o.DeviceStatuses, true
}

// HasDeviceStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDeviceStatuses() bool {
	if o != nil && o.DeviceStatuses != nil {
		return true
	}

	return false
}

// SetDeviceStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceDeviceStatus and assigns it to the DeviceStatuses field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceStatuses(v []MicrosoftGraphDeviceComplianceDeviceStatus) {
	o.DeviceStatuses = &v
}

// GetUserStatuses returns the UserStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetUserStatuses() []MicrosoftGraphDeviceComplianceUserStatus {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret
	}
	return *o.UserStatuses
}

// GetUserStatusesOk returns a tuple with the UserStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetUserStatusesOk() ([]MicrosoftGraphDeviceComplianceUserStatus, bool) {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret, false
	}
	return *o.UserStatuses, true
}

// HasUserStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasUserStatuses() bool {
	if o != nil && o.UserStatuses != nil {
		return true
	}

	return false
}

// SetUserStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceUserStatus and assigns it to the UserStatuses field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetUserStatuses(v []MicrosoftGraphDeviceComplianceUserStatus) {
	o.UserStatuses = &v
}

// GetDeviceStatusOverview returns the DeviceStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceStatusOverview() AnyOfmicrosoftGraphDeviceComplianceDeviceOverview {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret
	}
	return *o.DeviceStatusOverview
}

// GetDeviceStatusOverviewOk returns a tuple with the DeviceStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceDeviceOverview, bool) {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret, false
	}
	return *o.DeviceStatusOverview, true
}

// HasDeviceStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDeviceStatusOverview() bool {
	if o != nil && o.DeviceStatusOverview != nil {
		return true
	}

	return false
}

// SetDeviceStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceDeviceOverview and assigns it to the DeviceStatusOverview field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceDeviceOverview) {
	o.DeviceStatusOverview = &v
}

// SetDeviceStatusOverviewExplicitNull (un)sets DeviceStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceStatusOverviewExplicitNull(b bool) {
	o.DeviceStatusOverview = nil
	o.isExplicitNullDeviceStatusOverview = b
}
// GetUserStatusOverview returns the UserStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetUserStatusOverview() AnyOfmicrosoftGraphDeviceComplianceUserOverview {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret
	}
	return *o.UserStatusOverview
}

// GetUserStatusOverviewOk returns a tuple with the UserStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetUserStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceUserOverview, bool) {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret, false
	}
	return *o.UserStatusOverview, true
}

// HasUserStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasUserStatusOverview() bool {
	if o != nil && o.UserStatusOverview != nil {
		return true
	}

	return false
}

// SetUserStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceUserOverview and assigns it to the UserStatusOverview field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetUserStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceUserOverview) {
	o.UserStatusOverview = &v
}

// SetUserStatusOverviewExplicitNull (un)sets UserStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetUserStatusOverviewExplicitNull(b bool) {
	o.UserStatusOverview = nil
	o.isExplicitNullUserStatusOverview = b
}
// GetDeviceSettingStateSummaries returns the DeviceSettingStateSummaries field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceSettingStateSummaries() []MicrosoftGraphSettingStateDeviceSummary {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret
	}
	return *o.DeviceSettingStateSummaries
}

// GetDeviceSettingStateSummariesOk returns a tuple with the DeviceSettingStateSummaries field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceSettingStateSummariesOk() ([]MicrosoftGraphSettingStateDeviceSummary, bool) {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret, false
	}
	return *o.DeviceSettingStateSummaries, true
}

// HasDeviceSettingStateSummaries returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDeviceSettingStateSummaries() bool {
	if o != nil && o.DeviceSettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceSettingStateSummaries gets a reference to the given []MicrosoftGraphSettingStateDeviceSummary and assigns it to the DeviceSettingStateSummaries field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceSettingStateSummaries(v []MicrosoftGraphSettingStateDeviceSummary) {
	o.DeviceSettingStateSummaries = &v
}

// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetAssignments() []MicrosoftGraphDeviceCompliancePolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetAssignmentsOk() ([]MicrosoftGraphDeviceCompliancePolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetAssignments(v []MicrosoftGraphDeviceCompliancePolicyAssignment) {
	o.Assignments = &v
}

// GetPasswordRequired returns the PasswordRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordRequired() bool {
	if o == nil || o.PasswordRequired == nil {
		var ret bool
		return ret
	}
	return *o.PasswordRequired
}

// GetPasswordRequiredOk returns a tuple with the PasswordRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordRequiredOk() (bool, bool) {
	if o == nil || o.PasswordRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.PasswordRequired, true
}

// HasPasswordRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordRequired() bool {
	if o != nil && o.PasswordRequired != nil {
		return true
	}

	return false
}

// SetPasswordRequired gets a reference to the given bool and assigns it to the PasswordRequired field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordRequired(v bool) {
	o.PasswordRequired = &v
}

// GetPasswordMinimumLength returns the PasswordMinimumLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordMinimumLength() int32 {
	if o == nil || o.PasswordMinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.PasswordMinimumLength
}

// GetPasswordMinimumLengthOk returns a tuple with the PasswordMinimumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordMinimumLengthOk() (int32, bool) {
	if o == nil || o.PasswordMinimumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordMinimumLength, true
}

// HasPasswordMinimumLength returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordMinimumLength() bool {
	if o != nil && o.PasswordMinimumLength != nil {
		return true
	}

	return false
}

// SetPasswordMinimumLength gets a reference to the given int32 and assigns it to the PasswordMinimumLength field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordMinimumLength(v int32) {
	o.PasswordMinimumLength = &v
}

// SetPasswordMinimumLengthExplicitNull (un)sets PasswordMinimumLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordMinimumLength value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordMinimumLengthExplicitNull(b bool) {
	o.PasswordMinimumLength = nil
	o.isExplicitNullPasswordMinimumLength = b
}
// GetPasswordRequiredType returns the PasswordRequiredType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordRequiredType() AnyOfmicrosoftGraphAndroidRequiredPasswordType {
	if o == nil || o.PasswordRequiredType == nil {
		var ret AnyOfmicrosoftGraphAndroidRequiredPasswordType
		return ret
	}
	return *o.PasswordRequiredType
}

// GetPasswordRequiredTypeOk returns a tuple with the PasswordRequiredType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordRequiredTypeOk() (AnyOfmicrosoftGraphAndroidRequiredPasswordType, bool) {
	if o == nil || o.PasswordRequiredType == nil {
		var ret AnyOfmicrosoftGraphAndroidRequiredPasswordType
		return ret, false
	}
	return *o.PasswordRequiredType, true
}

// HasPasswordRequiredType returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordRequiredType() bool {
	if o != nil && o.PasswordRequiredType != nil {
		return true
	}

	return false
}

// SetPasswordRequiredType gets a reference to the given AnyOfmicrosoftGraphAndroidRequiredPasswordType and assigns it to the PasswordRequiredType field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordRequiredType(v AnyOfmicrosoftGraphAndroidRequiredPasswordType) {
	o.PasswordRequiredType = &v
}

// GetPasswordMinutesOfInactivityBeforeLock returns the PasswordMinutesOfInactivityBeforeLock field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordMinutesOfInactivityBeforeLock() int32 {
	if o == nil || o.PasswordMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret
	}
	return *o.PasswordMinutesOfInactivityBeforeLock
}

// GetPasswordMinutesOfInactivityBeforeLockOk returns a tuple with the PasswordMinutesOfInactivityBeforeLock field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordMinutesOfInactivityBeforeLockOk() (int32, bool) {
	if o == nil || o.PasswordMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordMinutesOfInactivityBeforeLock, true
}

// HasPasswordMinutesOfInactivityBeforeLock returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordMinutesOfInactivityBeforeLock() bool {
	if o != nil && o.PasswordMinutesOfInactivityBeforeLock != nil {
		return true
	}

	return false
}

// SetPasswordMinutesOfInactivityBeforeLock gets a reference to the given int32 and assigns it to the PasswordMinutesOfInactivityBeforeLock field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordMinutesOfInactivityBeforeLock(v int32) {
	o.PasswordMinutesOfInactivityBeforeLock = &v
}

// SetPasswordMinutesOfInactivityBeforeLockExplicitNull (un)sets PasswordMinutesOfInactivityBeforeLock to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordMinutesOfInactivityBeforeLock value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordMinutesOfInactivityBeforeLockExplicitNull(b bool) {
	o.PasswordMinutesOfInactivityBeforeLock = nil
	o.isExplicitNullPasswordMinutesOfInactivityBeforeLock = b
}
// GetPasswordExpirationDays returns the PasswordExpirationDays field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordExpirationDays() int32 {
	if o == nil || o.PasswordExpirationDays == nil {
		var ret int32
		return ret
	}
	return *o.PasswordExpirationDays
}

// GetPasswordExpirationDaysOk returns a tuple with the PasswordExpirationDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordExpirationDaysOk() (int32, bool) {
	if o == nil || o.PasswordExpirationDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordExpirationDays, true
}

// HasPasswordExpirationDays returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordExpirationDays() bool {
	if o != nil && o.PasswordExpirationDays != nil {
		return true
	}

	return false
}

// SetPasswordExpirationDays gets a reference to the given int32 and assigns it to the PasswordExpirationDays field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordExpirationDays(v int32) {
	o.PasswordExpirationDays = &v
}

// SetPasswordExpirationDaysExplicitNull (un)sets PasswordExpirationDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordExpirationDays value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordExpirationDaysExplicitNull(b bool) {
	o.PasswordExpirationDays = nil
	o.isExplicitNullPasswordExpirationDays = b
}
// GetPasswordPreviousPasswordBlockCount returns the PasswordPreviousPasswordBlockCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordPreviousPasswordBlockCount() int32 {
	if o == nil || o.PasswordPreviousPasswordBlockCount == nil {
		var ret int32
		return ret
	}
	return *o.PasswordPreviousPasswordBlockCount
}

// GetPasswordPreviousPasswordBlockCountOk returns a tuple with the PasswordPreviousPasswordBlockCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetPasswordPreviousPasswordBlockCountOk() (int32, bool) {
	if o == nil || o.PasswordPreviousPasswordBlockCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordPreviousPasswordBlockCount, true
}

// HasPasswordPreviousPasswordBlockCount returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasPasswordPreviousPasswordBlockCount() bool {
	if o != nil && o.PasswordPreviousPasswordBlockCount != nil {
		return true
	}

	return false
}

// SetPasswordPreviousPasswordBlockCount gets a reference to the given int32 and assigns it to the PasswordPreviousPasswordBlockCount field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordPreviousPasswordBlockCount(v int32) {
	o.PasswordPreviousPasswordBlockCount = &v
}

// SetPasswordPreviousPasswordBlockCountExplicitNull (un)sets PasswordPreviousPasswordBlockCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordPreviousPasswordBlockCount value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetPasswordPreviousPasswordBlockCountExplicitNull(b bool) {
	o.PasswordPreviousPasswordBlockCount = nil
	o.isExplicitNullPasswordPreviousPasswordBlockCount = b
}
// GetSecurityPreventInstallAppsFromUnknownSources returns the SecurityPreventInstallAppsFromUnknownSources field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityPreventInstallAppsFromUnknownSources() bool {
	if o == nil || o.SecurityPreventInstallAppsFromUnknownSources == nil {
		var ret bool
		return ret
	}
	return *o.SecurityPreventInstallAppsFromUnknownSources
}

// GetSecurityPreventInstallAppsFromUnknownSourcesOk returns a tuple with the SecurityPreventInstallAppsFromUnknownSources field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityPreventInstallAppsFromUnknownSourcesOk() (bool, bool) {
	if o == nil || o.SecurityPreventInstallAppsFromUnknownSources == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityPreventInstallAppsFromUnknownSources, true
}

// HasSecurityPreventInstallAppsFromUnknownSources returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityPreventInstallAppsFromUnknownSources() bool {
	if o != nil && o.SecurityPreventInstallAppsFromUnknownSources != nil {
		return true
	}

	return false
}

// SetSecurityPreventInstallAppsFromUnknownSources gets a reference to the given bool and assigns it to the SecurityPreventInstallAppsFromUnknownSources field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityPreventInstallAppsFromUnknownSources(v bool) {
	o.SecurityPreventInstallAppsFromUnknownSources = &v
}

// GetSecurityDisableUsbDebugging returns the SecurityDisableUsbDebugging field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityDisableUsbDebugging() bool {
	if o == nil || o.SecurityDisableUsbDebugging == nil {
		var ret bool
		return ret
	}
	return *o.SecurityDisableUsbDebugging
}

// GetSecurityDisableUsbDebuggingOk returns a tuple with the SecurityDisableUsbDebugging field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityDisableUsbDebuggingOk() (bool, bool) {
	if o == nil || o.SecurityDisableUsbDebugging == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityDisableUsbDebugging, true
}

// HasSecurityDisableUsbDebugging returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityDisableUsbDebugging() bool {
	if o != nil && o.SecurityDisableUsbDebugging != nil {
		return true
	}

	return false
}

// SetSecurityDisableUsbDebugging gets a reference to the given bool and assigns it to the SecurityDisableUsbDebugging field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityDisableUsbDebugging(v bool) {
	o.SecurityDisableUsbDebugging = &v
}

// GetSecurityRequireVerifyApps returns the SecurityRequireVerifyApps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireVerifyApps() bool {
	if o == nil || o.SecurityRequireVerifyApps == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireVerifyApps
}

// GetSecurityRequireVerifyAppsOk returns a tuple with the SecurityRequireVerifyApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireVerifyAppsOk() (bool, bool) {
	if o == nil || o.SecurityRequireVerifyApps == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireVerifyApps, true
}

// HasSecurityRequireVerifyApps returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireVerifyApps() bool {
	if o != nil && o.SecurityRequireVerifyApps != nil {
		return true
	}

	return false
}

// SetSecurityRequireVerifyApps gets a reference to the given bool and assigns it to the SecurityRequireVerifyApps field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireVerifyApps(v bool) {
	o.SecurityRequireVerifyApps = &v
}

// GetDeviceThreatProtectionEnabled returns the DeviceThreatProtectionEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceThreatProtectionEnabled() bool {
	if o == nil || o.DeviceThreatProtectionEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DeviceThreatProtectionEnabled
}

// GetDeviceThreatProtectionEnabledOk returns a tuple with the DeviceThreatProtectionEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceThreatProtectionEnabledOk() (bool, bool) {
	if o == nil || o.DeviceThreatProtectionEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceThreatProtectionEnabled, true
}

// HasDeviceThreatProtectionEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDeviceThreatProtectionEnabled() bool {
	if o != nil && o.DeviceThreatProtectionEnabled != nil {
		return true
	}

	return false
}

// SetDeviceThreatProtectionEnabled gets a reference to the given bool and assigns it to the DeviceThreatProtectionEnabled field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceThreatProtectionEnabled(v bool) {
	o.DeviceThreatProtectionEnabled = &v
}

// GetDeviceThreatProtectionRequiredSecurityLevel returns the DeviceThreatProtectionRequiredSecurityLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceThreatProtectionRequiredSecurityLevel() AnyOfmicrosoftGraphDeviceThreatProtectionLevel {
	if o == nil || o.DeviceThreatProtectionRequiredSecurityLevel == nil {
		var ret AnyOfmicrosoftGraphDeviceThreatProtectionLevel
		return ret
	}
	return *o.DeviceThreatProtectionRequiredSecurityLevel
}

// GetDeviceThreatProtectionRequiredSecurityLevelOk returns a tuple with the DeviceThreatProtectionRequiredSecurityLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetDeviceThreatProtectionRequiredSecurityLevelOk() (AnyOfmicrosoftGraphDeviceThreatProtectionLevel, bool) {
	if o == nil || o.DeviceThreatProtectionRequiredSecurityLevel == nil {
		var ret AnyOfmicrosoftGraphDeviceThreatProtectionLevel
		return ret, false
	}
	return *o.DeviceThreatProtectionRequiredSecurityLevel, true
}

// HasDeviceThreatProtectionRequiredSecurityLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasDeviceThreatProtectionRequiredSecurityLevel() bool {
	if o != nil && o.DeviceThreatProtectionRequiredSecurityLevel != nil {
		return true
	}

	return false
}

// SetDeviceThreatProtectionRequiredSecurityLevel gets a reference to the given AnyOfmicrosoftGraphDeviceThreatProtectionLevel and assigns it to the DeviceThreatProtectionRequiredSecurityLevel field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetDeviceThreatProtectionRequiredSecurityLevel(v AnyOfmicrosoftGraphDeviceThreatProtectionLevel) {
	o.DeviceThreatProtectionRequiredSecurityLevel = &v
}

// GetSecurityBlockJailbrokenDevices returns the SecurityBlockJailbrokenDevices field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityBlockJailbrokenDevices() bool {
	if o == nil || o.SecurityBlockJailbrokenDevices == nil {
		var ret bool
		return ret
	}
	return *o.SecurityBlockJailbrokenDevices
}

// GetSecurityBlockJailbrokenDevicesOk returns a tuple with the SecurityBlockJailbrokenDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityBlockJailbrokenDevicesOk() (bool, bool) {
	if o == nil || o.SecurityBlockJailbrokenDevices == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityBlockJailbrokenDevices, true
}

// HasSecurityBlockJailbrokenDevices returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityBlockJailbrokenDevices() bool {
	if o != nil && o.SecurityBlockJailbrokenDevices != nil {
		return true
	}

	return false
}

// SetSecurityBlockJailbrokenDevices gets a reference to the given bool and assigns it to the SecurityBlockJailbrokenDevices field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityBlockJailbrokenDevices(v bool) {
	o.SecurityBlockJailbrokenDevices = &v
}

// GetOsMinimumVersion returns the OsMinimumVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetOsMinimumVersion() string {
	if o == nil || o.OsMinimumVersion == nil {
		var ret string
		return ret
	}
	return *o.OsMinimumVersion
}

// GetOsMinimumVersionOk returns a tuple with the OsMinimumVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetOsMinimumVersionOk() (string, bool) {
	if o == nil || o.OsMinimumVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OsMinimumVersion, true
}

// HasOsMinimumVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasOsMinimumVersion() bool {
	if o != nil && o.OsMinimumVersion != nil {
		return true
	}

	return false
}

// SetOsMinimumVersion gets a reference to the given string and assigns it to the OsMinimumVersion field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetOsMinimumVersion(v string) {
	o.OsMinimumVersion = &v
}

// SetOsMinimumVersionExplicitNull (un)sets OsMinimumVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OsMinimumVersion value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetOsMinimumVersionExplicitNull(b bool) {
	o.OsMinimumVersion = nil
	o.isExplicitNullOsMinimumVersion = b
}
// GetOsMaximumVersion returns the OsMaximumVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetOsMaximumVersion() string {
	if o == nil || o.OsMaximumVersion == nil {
		var ret string
		return ret
	}
	return *o.OsMaximumVersion
}

// GetOsMaximumVersionOk returns a tuple with the OsMaximumVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetOsMaximumVersionOk() (string, bool) {
	if o == nil || o.OsMaximumVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OsMaximumVersion, true
}

// HasOsMaximumVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasOsMaximumVersion() bool {
	if o != nil && o.OsMaximumVersion != nil {
		return true
	}

	return false
}

// SetOsMaximumVersion gets a reference to the given string and assigns it to the OsMaximumVersion field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetOsMaximumVersion(v string) {
	o.OsMaximumVersion = &v
}

// SetOsMaximumVersionExplicitNull (un)sets OsMaximumVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OsMaximumVersion value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetOsMaximumVersionExplicitNull(b bool) {
	o.OsMaximumVersion = nil
	o.isExplicitNullOsMaximumVersion = b
}
// GetMinAndroidSecurityPatchLevel returns the MinAndroidSecurityPatchLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetMinAndroidSecurityPatchLevel() string {
	if o == nil || o.MinAndroidSecurityPatchLevel == nil {
		var ret string
		return ret
	}
	return *o.MinAndroidSecurityPatchLevel
}

// GetMinAndroidSecurityPatchLevelOk returns a tuple with the MinAndroidSecurityPatchLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetMinAndroidSecurityPatchLevelOk() (string, bool) {
	if o == nil || o.MinAndroidSecurityPatchLevel == nil {
		var ret string
		return ret, false
	}
	return *o.MinAndroidSecurityPatchLevel, true
}

// HasMinAndroidSecurityPatchLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasMinAndroidSecurityPatchLevel() bool {
	if o != nil && o.MinAndroidSecurityPatchLevel != nil {
		return true
	}

	return false
}

// SetMinAndroidSecurityPatchLevel gets a reference to the given string and assigns it to the MinAndroidSecurityPatchLevel field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetMinAndroidSecurityPatchLevel(v string) {
	o.MinAndroidSecurityPatchLevel = &v
}

// SetMinAndroidSecurityPatchLevelExplicitNull (un)sets MinAndroidSecurityPatchLevel to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinAndroidSecurityPatchLevel value is set to nil even if false is passed
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetMinAndroidSecurityPatchLevelExplicitNull(b bool) {
	o.MinAndroidSecurityPatchLevel = nil
	o.isExplicitNullMinAndroidSecurityPatchLevel = b
}
// GetStorageRequireEncryption returns the StorageRequireEncryption field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetStorageRequireEncryption() bool {
	if o == nil || o.StorageRequireEncryption == nil {
		var ret bool
		return ret
	}
	return *o.StorageRequireEncryption
}

// GetStorageRequireEncryptionOk returns a tuple with the StorageRequireEncryption field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetStorageRequireEncryptionOk() (bool, bool) {
	if o == nil || o.StorageRequireEncryption == nil {
		var ret bool
		return ret, false
	}
	return *o.StorageRequireEncryption, true
}

// HasStorageRequireEncryption returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasStorageRequireEncryption() bool {
	if o != nil && o.StorageRequireEncryption != nil {
		return true
	}

	return false
}

// SetStorageRequireEncryption gets a reference to the given bool and assigns it to the StorageRequireEncryption field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetStorageRequireEncryption(v bool) {
	o.StorageRequireEncryption = &v
}

// GetSecurityRequireSafetyNetAttestationBasicIntegrity returns the SecurityRequireSafetyNetAttestationBasicIntegrity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireSafetyNetAttestationBasicIntegrity() bool {
	if o == nil || o.SecurityRequireSafetyNetAttestationBasicIntegrity == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireSafetyNetAttestationBasicIntegrity
}

// GetSecurityRequireSafetyNetAttestationBasicIntegrityOk returns a tuple with the SecurityRequireSafetyNetAttestationBasicIntegrity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireSafetyNetAttestationBasicIntegrityOk() (bool, bool) {
	if o == nil || o.SecurityRequireSafetyNetAttestationBasicIntegrity == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireSafetyNetAttestationBasicIntegrity, true
}

// HasSecurityRequireSafetyNetAttestationBasicIntegrity returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireSafetyNetAttestationBasicIntegrity() bool {
	if o != nil && o.SecurityRequireSafetyNetAttestationBasicIntegrity != nil {
		return true
	}

	return false
}

// SetSecurityRequireSafetyNetAttestationBasicIntegrity gets a reference to the given bool and assigns it to the SecurityRequireSafetyNetAttestationBasicIntegrity field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireSafetyNetAttestationBasicIntegrity(v bool) {
	o.SecurityRequireSafetyNetAttestationBasicIntegrity = &v
}

// GetSecurityRequireSafetyNetAttestationCertifiedDevice returns the SecurityRequireSafetyNetAttestationCertifiedDevice field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireSafetyNetAttestationCertifiedDevice() bool {
	if o == nil || o.SecurityRequireSafetyNetAttestationCertifiedDevice == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireSafetyNetAttestationCertifiedDevice
}

// GetSecurityRequireSafetyNetAttestationCertifiedDeviceOk returns a tuple with the SecurityRequireSafetyNetAttestationCertifiedDevice field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireSafetyNetAttestationCertifiedDeviceOk() (bool, bool) {
	if o == nil || o.SecurityRequireSafetyNetAttestationCertifiedDevice == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireSafetyNetAttestationCertifiedDevice, true
}

// HasSecurityRequireSafetyNetAttestationCertifiedDevice returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireSafetyNetAttestationCertifiedDevice() bool {
	if o != nil && o.SecurityRequireSafetyNetAttestationCertifiedDevice != nil {
		return true
	}

	return false
}

// SetSecurityRequireSafetyNetAttestationCertifiedDevice gets a reference to the given bool and assigns it to the SecurityRequireSafetyNetAttestationCertifiedDevice field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireSafetyNetAttestationCertifiedDevice(v bool) {
	o.SecurityRequireSafetyNetAttestationCertifiedDevice = &v
}

// GetSecurityRequireGooglePlayServices returns the SecurityRequireGooglePlayServices field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireGooglePlayServices() bool {
	if o == nil || o.SecurityRequireGooglePlayServices == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireGooglePlayServices
}

// GetSecurityRequireGooglePlayServicesOk returns a tuple with the SecurityRequireGooglePlayServices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireGooglePlayServicesOk() (bool, bool) {
	if o == nil || o.SecurityRequireGooglePlayServices == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireGooglePlayServices, true
}

// HasSecurityRequireGooglePlayServices returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireGooglePlayServices() bool {
	if o != nil && o.SecurityRequireGooglePlayServices != nil {
		return true
	}

	return false
}

// SetSecurityRequireGooglePlayServices gets a reference to the given bool and assigns it to the SecurityRequireGooglePlayServices field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireGooglePlayServices(v bool) {
	o.SecurityRequireGooglePlayServices = &v
}

// GetSecurityRequireUpToDateSecurityProviders returns the SecurityRequireUpToDateSecurityProviders field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireUpToDateSecurityProviders() bool {
	if o == nil || o.SecurityRequireUpToDateSecurityProviders == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireUpToDateSecurityProviders
}

// GetSecurityRequireUpToDateSecurityProvidersOk returns a tuple with the SecurityRequireUpToDateSecurityProviders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireUpToDateSecurityProvidersOk() (bool, bool) {
	if o == nil || o.SecurityRequireUpToDateSecurityProviders == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireUpToDateSecurityProviders, true
}

// HasSecurityRequireUpToDateSecurityProviders returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireUpToDateSecurityProviders() bool {
	if o != nil && o.SecurityRequireUpToDateSecurityProviders != nil {
		return true
	}

	return false
}

// SetSecurityRequireUpToDateSecurityProviders gets a reference to the given bool and assigns it to the SecurityRequireUpToDateSecurityProviders field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireUpToDateSecurityProviders(v bool) {
	o.SecurityRequireUpToDateSecurityProviders = &v
}

// GetSecurityRequireCompanyPortalAppIntegrity returns the SecurityRequireCompanyPortalAppIntegrity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireCompanyPortalAppIntegrity() bool {
	if o == nil || o.SecurityRequireCompanyPortalAppIntegrity == nil {
		var ret bool
		return ret
	}
	return *o.SecurityRequireCompanyPortalAppIntegrity
}

// GetSecurityRequireCompanyPortalAppIntegrityOk returns a tuple with the SecurityRequireCompanyPortalAppIntegrity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) GetSecurityRequireCompanyPortalAppIntegrityOk() (bool, bool) {
	if o == nil || o.SecurityRequireCompanyPortalAppIntegrity == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityRequireCompanyPortalAppIntegrity, true
}

// HasSecurityRequireCompanyPortalAppIntegrity returns a boolean if a field has been set.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) HasSecurityRequireCompanyPortalAppIntegrity() bool {
	if o != nil && o.SecurityRequireCompanyPortalAppIntegrity != nil {
		return true
	}

	return false
}

// SetSecurityRequireCompanyPortalAppIntegrity gets a reference to the given bool and assigns it to the SecurityRequireCompanyPortalAppIntegrity field.
func (o *MicrosoftGraphAndroidWorkProfileCompliancePolicy) SetSecurityRequireCompanyPortalAppIntegrity(v bool) {
	o.SecurityRequireCompanyPortalAppIntegrity = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAndroidWorkProfileCompliancePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.ScheduledActionsForRule != nil {
		toSerialize["scheduledActionsForRule"] = o.ScheduledActionsForRule
	}
	if o.DeviceStatuses != nil {
		toSerialize["deviceStatuses"] = o.DeviceStatuses
	}
	if o.UserStatuses != nil {
		toSerialize["userStatuses"] = o.UserStatuses
	}
	if o.DeviceStatusOverview == nil {
		if o.isExplicitNullDeviceStatusOverview {
			toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
		}
	} else {
		toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
	}
	if o.UserStatusOverview == nil {
		if o.isExplicitNullUserStatusOverview {
			toSerialize["userStatusOverview"] = o.UserStatusOverview
		}
	} else {
		toSerialize["userStatusOverview"] = o.UserStatusOverview
	}
	if o.DeviceSettingStateSummaries != nil {
		toSerialize["deviceSettingStateSummaries"] = o.DeviceSettingStateSummaries
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.PasswordRequired != nil {
		toSerialize["passwordRequired"] = o.PasswordRequired
	}
	if o.PasswordMinimumLength == nil {
		if o.isExplicitNullPasswordMinimumLength {
			toSerialize["passwordMinimumLength"] = o.PasswordMinimumLength
		}
	} else {
		toSerialize["passwordMinimumLength"] = o.PasswordMinimumLength
	}
	if o.PasswordRequiredType != nil {
		toSerialize["passwordRequiredType"] = o.PasswordRequiredType
	}
	if o.PasswordMinutesOfInactivityBeforeLock == nil {
		if o.isExplicitNullPasswordMinutesOfInactivityBeforeLock {
			toSerialize["passwordMinutesOfInactivityBeforeLock"] = o.PasswordMinutesOfInactivityBeforeLock
		}
	} else {
		toSerialize["passwordMinutesOfInactivityBeforeLock"] = o.PasswordMinutesOfInactivityBeforeLock
	}
	if o.PasswordExpirationDays == nil {
		if o.isExplicitNullPasswordExpirationDays {
			toSerialize["passwordExpirationDays"] = o.PasswordExpirationDays
		}
	} else {
		toSerialize["passwordExpirationDays"] = o.PasswordExpirationDays
	}
	if o.PasswordPreviousPasswordBlockCount == nil {
		if o.isExplicitNullPasswordPreviousPasswordBlockCount {
			toSerialize["passwordPreviousPasswordBlockCount"] = o.PasswordPreviousPasswordBlockCount
		}
	} else {
		toSerialize["passwordPreviousPasswordBlockCount"] = o.PasswordPreviousPasswordBlockCount
	}
	if o.SecurityPreventInstallAppsFromUnknownSources != nil {
		toSerialize["securityPreventInstallAppsFromUnknownSources"] = o.SecurityPreventInstallAppsFromUnknownSources
	}
	if o.SecurityDisableUsbDebugging != nil {
		toSerialize["securityDisableUsbDebugging"] = o.SecurityDisableUsbDebugging
	}
	if o.SecurityRequireVerifyApps != nil {
		toSerialize["securityRequireVerifyApps"] = o.SecurityRequireVerifyApps
	}
	if o.DeviceThreatProtectionEnabled != nil {
		toSerialize["deviceThreatProtectionEnabled"] = o.DeviceThreatProtectionEnabled
	}
	if o.DeviceThreatProtectionRequiredSecurityLevel != nil {
		toSerialize["deviceThreatProtectionRequiredSecurityLevel"] = o.DeviceThreatProtectionRequiredSecurityLevel
	}
	if o.SecurityBlockJailbrokenDevices != nil {
		toSerialize["securityBlockJailbrokenDevices"] = o.SecurityBlockJailbrokenDevices
	}
	if o.OsMinimumVersion == nil {
		if o.isExplicitNullOsMinimumVersion {
			toSerialize["osMinimumVersion"] = o.OsMinimumVersion
		}
	} else {
		toSerialize["osMinimumVersion"] = o.OsMinimumVersion
	}
	if o.OsMaximumVersion == nil {
		if o.isExplicitNullOsMaximumVersion {
			toSerialize["osMaximumVersion"] = o.OsMaximumVersion
		}
	} else {
		toSerialize["osMaximumVersion"] = o.OsMaximumVersion
	}
	if o.MinAndroidSecurityPatchLevel == nil {
		if o.isExplicitNullMinAndroidSecurityPatchLevel {
			toSerialize["minAndroidSecurityPatchLevel"] = o.MinAndroidSecurityPatchLevel
		}
	} else {
		toSerialize["minAndroidSecurityPatchLevel"] = o.MinAndroidSecurityPatchLevel
	}
	if o.StorageRequireEncryption != nil {
		toSerialize["storageRequireEncryption"] = o.StorageRequireEncryption
	}
	if o.SecurityRequireSafetyNetAttestationBasicIntegrity != nil {
		toSerialize["securityRequireSafetyNetAttestationBasicIntegrity"] = o.SecurityRequireSafetyNetAttestationBasicIntegrity
	}
	if o.SecurityRequireSafetyNetAttestationCertifiedDevice != nil {
		toSerialize["securityRequireSafetyNetAttestationCertifiedDevice"] = o.SecurityRequireSafetyNetAttestationCertifiedDevice
	}
	if o.SecurityRequireGooglePlayServices != nil {
		toSerialize["securityRequireGooglePlayServices"] = o.SecurityRequireGooglePlayServices
	}
	if o.SecurityRequireUpToDateSecurityProviders != nil {
		toSerialize["securityRequireUpToDateSecurityProviders"] = o.SecurityRequireUpToDateSecurityProviders
	}
	if o.SecurityRequireCompanyPortalAppIntegrity != nil {
		toSerialize["securityRequireCompanyPortalAppIntegrity"] = o.SecurityRequireCompanyPortalAppIntegrity
	}
	return json.Marshal(toSerialize)
}


