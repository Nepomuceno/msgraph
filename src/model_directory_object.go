/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// DirectoryObject Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.
type DirectoryObject struct {
	DeletedDateTime *time.Time `json:"deletedDateTime,omitempty"`
	isExplicitNullDeletedDateTime bool `json:"-"`
}

// GetDeletedDateTime returns the DeletedDateTime field if non-nil, zero value otherwise.
func (o *DirectoryObject) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryObject) GetDeletedDateTimeOk() (time.Time, bool) {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DeletedDateTime, true
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *DirectoryObject) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime != nil {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given time.Time and assigns it to the DeletedDateTime field.
func (o *DirectoryObject) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime = &v
}

// SetDeletedDateTimeExplicitNull (un)sets DeletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeletedDateTime value is set to nil even if false is passed
func (o *DirectoryObject) SetDeletedDateTimeExplicitNull(b bool) {
	o.DeletedDateTime = nil
	o.isExplicitNullDeletedDateTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o DirectoryObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeletedDateTime == nil {
		if o.isExplicitNullDeletedDateTime {
			toSerialize["deletedDateTime"] = o.DeletedDateTime
		}
	} else {
		toSerialize["deletedDateTime"] = o.DeletedDateTime
	}
	return json.Marshal(toSerialize)
}


