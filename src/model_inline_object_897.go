/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject897 struct for InlineObject897
type InlineObject897 struct {
	LookupValue *AnyOfobject `json:"lookupValue,omitempty"`
	isExplicitNullLookupValue bool `json:"-"`
	TableArray *AnyOfobject `json:"tableArray,omitempty"`
	isExplicitNullTableArray bool `json:"-"`
	RowIndexNum *AnyOfobject `json:"rowIndexNum,omitempty"`
	isExplicitNullRowIndexNum bool `json:"-"`
	RangeLookup *AnyOfobject `json:"rangeLookup,omitempty"`
	isExplicitNullRangeLookup bool `json:"-"`
}

// GetLookupValue returns the LookupValue field if non-nil, zero value otherwise.
func (o *InlineObject897) GetLookupValue() AnyOfobject {
	if o == nil || o.LookupValue == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.LookupValue
}

// GetLookupValueOk returns a tuple with the LookupValue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject897) GetLookupValueOk() (AnyOfobject, bool) {
	if o == nil || o.LookupValue == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.LookupValue, true
}

// HasLookupValue returns a boolean if a field has been set.
func (o *InlineObject897) HasLookupValue() bool {
	if o != nil && o.LookupValue != nil {
		return true
	}

	return false
}

// SetLookupValue gets a reference to the given AnyOfobject and assigns it to the LookupValue field.
func (o *InlineObject897) SetLookupValue(v AnyOfobject) {
	o.LookupValue = &v
}

// SetLookupValueExplicitNull (un)sets LookupValue to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LookupValue value is set to nil even if false is passed
func (o *InlineObject897) SetLookupValueExplicitNull(b bool) {
	o.LookupValue = nil
	o.isExplicitNullLookupValue = b
}
// GetTableArray returns the TableArray field if non-nil, zero value otherwise.
func (o *InlineObject897) GetTableArray() AnyOfobject {
	if o == nil || o.TableArray == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.TableArray
}

// GetTableArrayOk returns a tuple with the TableArray field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject897) GetTableArrayOk() (AnyOfobject, bool) {
	if o == nil || o.TableArray == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.TableArray, true
}

// HasTableArray returns a boolean if a field has been set.
func (o *InlineObject897) HasTableArray() bool {
	if o != nil && o.TableArray != nil {
		return true
	}

	return false
}

// SetTableArray gets a reference to the given AnyOfobject and assigns it to the TableArray field.
func (o *InlineObject897) SetTableArray(v AnyOfobject) {
	o.TableArray = &v
}

// SetTableArrayExplicitNull (un)sets TableArray to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TableArray value is set to nil even if false is passed
func (o *InlineObject897) SetTableArrayExplicitNull(b bool) {
	o.TableArray = nil
	o.isExplicitNullTableArray = b
}
// GetRowIndexNum returns the RowIndexNum field if non-nil, zero value otherwise.
func (o *InlineObject897) GetRowIndexNum() AnyOfobject {
	if o == nil || o.RowIndexNum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.RowIndexNum
}

// GetRowIndexNumOk returns a tuple with the RowIndexNum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject897) GetRowIndexNumOk() (AnyOfobject, bool) {
	if o == nil || o.RowIndexNum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.RowIndexNum, true
}

// HasRowIndexNum returns a boolean if a field has been set.
func (o *InlineObject897) HasRowIndexNum() bool {
	if o != nil && o.RowIndexNum != nil {
		return true
	}

	return false
}

// SetRowIndexNum gets a reference to the given AnyOfobject and assigns it to the RowIndexNum field.
func (o *InlineObject897) SetRowIndexNum(v AnyOfobject) {
	o.RowIndexNum = &v
}

// SetRowIndexNumExplicitNull (un)sets RowIndexNum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RowIndexNum value is set to nil even if false is passed
func (o *InlineObject897) SetRowIndexNumExplicitNull(b bool) {
	o.RowIndexNum = nil
	o.isExplicitNullRowIndexNum = b
}
// GetRangeLookup returns the RangeLookup field if non-nil, zero value otherwise.
func (o *InlineObject897) GetRangeLookup() AnyOfobject {
	if o == nil || o.RangeLookup == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.RangeLookup
}

// GetRangeLookupOk returns a tuple with the RangeLookup field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject897) GetRangeLookupOk() (AnyOfobject, bool) {
	if o == nil || o.RangeLookup == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.RangeLookup, true
}

// HasRangeLookup returns a boolean if a field has been set.
func (o *InlineObject897) HasRangeLookup() bool {
	if o != nil && o.RangeLookup != nil {
		return true
	}

	return false
}

// SetRangeLookup gets a reference to the given AnyOfobject and assigns it to the RangeLookup field.
func (o *InlineObject897) SetRangeLookup(v AnyOfobject) {
	o.RangeLookup = &v
}

// SetRangeLookupExplicitNull (un)sets RangeLookup to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RangeLookup value is set to nil even if false is passed
func (o *InlineObject897) SetRangeLookupExplicitNull(b bool) {
	o.RangeLookup = nil
	o.isExplicitNullRangeLookup = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject897) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LookupValue == nil {
		if o.isExplicitNullLookupValue {
			toSerialize["lookupValue"] = o.LookupValue
		}
	} else {
		toSerialize["lookupValue"] = o.LookupValue
	}
	if o.TableArray == nil {
		if o.isExplicitNullTableArray {
			toSerialize["tableArray"] = o.TableArray
		}
	} else {
		toSerialize["tableArray"] = o.TableArray
	}
	if o.RowIndexNum == nil {
		if o.isExplicitNullRowIndexNum {
			toSerialize["rowIndexNum"] = o.RowIndexNum
		}
	} else {
		toSerialize["rowIndexNum"] = o.RowIndexNum
	}
	if o.RangeLookup == nil {
		if o.isExplicitNullRangeLookup {
			toSerialize["rangeLookup"] = o.RangeLookup
		}
	} else {
		toSerialize["rangeLookup"] = o.RangeLookup
	}
	return json.Marshal(toSerialize)
}


