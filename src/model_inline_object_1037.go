/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1037 struct for InlineObject1037
type InlineObject1037 struct {
	X *AnyOfobject `json:"x,omitempty"`
	isExplicitNullX bool `json:"-"`
	N *AnyOfobject `json:"n,omitempty"`
	isExplicitNullN bool `json:"-"`
	M *AnyOfobject `json:"m,omitempty"`
	isExplicitNullM bool `json:"-"`
	Coefficients *AnyOfobject `json:"coefficients,omitempty"`
	isExplicitNullCoefficients bool `json:"-"`
}

// GetX returns the X field if non-nil, zero value otherwise.
func (o *InlineObject1037) GetX() AnyOfobject {
	if o == nil || o.X == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1037) GetXOk() (AnyOfobject, bool) {
	if o == nil || o.X == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InlineObject1037) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given AnyOfobject and assigns it to the X field.
func (o *InlineObject1037) SetX(v AnyOfobject) {
	o.X = &v
}

// SetXExplicitNull (un)sets X to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The X value is set to nil even if false is passed
func (o *InlineObject1037) SetXExplicitNull(b bool) {
	o.X = nil
	o.isExplicitNullX = b
}
// GetN returns the N field if non-nil, zero value otherwise.
func (o *InlineObject1037) GetN() AnyOfobject {
	if o == nil || o.N == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.N
}

// GetNOk returns a tuple with the N field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1037) GetNOk() (AnyOfobject, bool) {
	if o == nil || o.N == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.N, true
}

// HasN returns a boolean if a field has been set.
func (o *InlineObject1037) HasN() bool {
	if o != nil && o.N != nil {
		return true
	}

	return false
}

// SetN gets a reference to the given AnyOfobject and assigns it to the N field.
func (o *InlineObject1037) SetN(v AnyOfobject) {
	o.N = &v
}

// SetNExplicitNull (un)sets N to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The N value is set to nil even if false is passed
func (o *InlineObject1037) SetNExplicitNull(b bool) {
	o.N = nil
	o.isExplicitNullN = b
}
// GetM returns the M field if non-nil, zero value otherwise.
func (o *InlineObject1037) GetM() AnyOfobject {
	if o == nil || o.M == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.M
}

// GetMOk returns a tuple with the M field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1037) GetMOk() (AnyOfobject, bool) {
	if o == nil || o.M == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.M, true
}

// HasM returns a boolean if a field has been set.
func (o *InlineObject1037) HasM() bool {
	if o != nil && o.M != nil {
		return true
	}

	return false
}

// SetM gets a reference to the given AnyOfobject and assigns it to the M field.
func (o *InlineObject1037) SetM(v AnyOfobject) {
	o.M = &v
}

// SetMExplicitNull (un)sets M to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The M value is set to nil even if false is passed
func (o *InlineObject1037) SetMExplicitNull(b bool) {
	o.M = nil
	o.isExplicitNullM = b
}
// GetCoefficients returns the Coefficients field if non-nil, zero value otherwise.
func (o *InlineObject1037) GetCoefficients() AnyOfobject {
	if o == nil || o.Coefficients == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Coefficients
}

// GetCoefficientsOk returns a tuple with the Coefficients field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1037) GetCoefficientsOk() (AnyOfobject, bool) {
	if o == nil || o.Coefficients == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Coefficients, true
}

// HasCoefficients returns a boolean if a field has been set.
func (o *InlineObject1037) HasCoefficients() bool {
	if o != nil && o.Coefficients != nil {
		return true
	}

	return false
}

// SetCoefficients gets a reference to the given AnyOfobject and assigns it to the Coefficients field.
func (o *InlineObject1037) SetCoefficients(v AnyOfobject) {
	o.Coefficients = &v
}

// SetCoefficientsExplicitNull (un)sets Coefficients to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Coefficients value is set to nil even if false is passed
func (o *InlineObject1037) SetCoefficientsExplicitNull(b bool) {
	o.Coefficients = nil
	o.isExplicitNullCoefficients = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1037) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X == nil {
		if o.isExplicitNullX {
			toSerialize["x"] = o.X
		}
	} else {
		toSerialize["x"] = o.X
	}
	if o.N == nil {
		if o.isExplicitNullN {
			toSerialize["n"] = o.N
		}
	} else {
		toSerialize["n"] = o.N
	}
	if o.M == nil {
		if o.isExplicitNullM {
			toSerialize["m"] = o.M
		}
	} else {
		toSerialize["m"] = o.M
	}
	if o.Coefficients == nil {
		if o.isExplicitNullCoefficients {
			toSerialize["coefficients"] = o.Coefficients
		}
	} else {
		toSerialize["coefficients"] = o.Coefficients
	}
	return json.Marshal(toSerialize)
}


