/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// TeamsTab struct for TeamsTab
type TeamsTab struct {
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	WebUrl *string `json:"webUrl,omitempty"`
	isExplicitNullWebUrl bool `json:"-"`
	Configuration *AnyOfmicrosoftGraphTeamsTabConfiguration `json:"configuration,omitempty"`
	isExplicitNullConfiguration bool `json:"-"`
	TeamsApp *AnyOfmicrosoftGraphTeamsApp `json:"teamsApp,omitempty"`
	isExplicitNullTeamsApp bool `json:"-"`
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *TeamsTab) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TeamsTab) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TeamsTab) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *TeamsTab) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *TeamsTab) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetWebUrl returns the WebUrl field if non-nil, zero value otherwise.
func (o *TeamsTab) GetWebUrl() string {
	if o == nil || o.WebUrl == nil {
		var ret string
		return ret
	}
	return *o.WebUrl
}

// GetWebUrlOk returns a tuple with the WebUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TeamsTab) GetWebUrlOk() (string, bool) {
	if o == nil || o.WebUrl == nil {
		var ret string
		return ret, false
	}
	return *o.WebUrl, true
}

// HasWebUrl returns a boolean if a field has been set.
func (o *TeamsTab) HasWebUrl() bool {
	if o != nil && o.WebUrl != nil {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given string and assigns it to the WebUrl field.
func (o *TeamsTab) SetWebUrl(v string) {
	o.WebUrl = &v
}

// SetWebUrlExplicitNull (un)sets WebUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WebUrl value is set to nil even if false is passed
func (o *TeamsTab) SetWebUrlExplicitNull(b bool) {
	o.WebUrl = nil
	o.isExplicitNullWebUrl = b
}
// GetConfiguration returns the Configuration field if non-nil, zero value otherwise.
func (o *TeamsTab) GetConfiguration() AnyOfmicrosoftGraphTeamsTabConfiguration {
	if o == nil || o.Configuration == nil {
		var ret AnyOfmicrosoftGraphTeamsTabConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TeamsTab) GetConfigurationOk() (AnyOfmicrosoftGraphTeamsTabConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		var ret AnyOfmicrosoftGraphTeamsTabConfiguration
		return ret, false
	}
	return *o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *TeamsTab) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given AnyOfmicrosoftGraphTeamsTabConfiguration and assigns it to the Configuration field.
func (o *TeamsTab) SetConfiguration(v AnyOfmicrosoftGraphTeamsTabConfiguration) {
	o.Configuration = &v
}

// SetConfigurationExplicitNull (un)sets Configuration to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Configuration value is set to nil even if false is passed
func (o *TeamsTab) SetConfigurationExplicitNull(b bool) {
	o.Configuration = nil
	o.isExplicitNullConfiguration = b
}
// GetTeamsApp returns the TeamsApp field if non-nil, zero value otherwise.
func (o *TeamsTab) GetTeamsApp() AnyOfmicrosoftGraphTeamsApp {
	if o == nil || o.TeamsApp == nil {
		var ret AnyOfmicrosoftGraphTeamsApp
		return ret
	}
	return *o.TeamsApp
}

// GetTeamsAppOk returns a tuple with the TeamsApp field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TeamsTab) GetTeamsAppOk() (AnyOfmicrosoftGraphTeamsApp, bool) {
	if o == nil || o.TeamsApp == nil {
		var ret AnyOfmicrosoftGraphTeamsApp
		return ret, false
	}
	return *o.TeamsApp, true
}

// HasTeamsApp returns a boolean if a field has been set.
func (o *TeamsTab) HasTeamsApp() bool {
	if o != nil && o.TeamsApp != nil {
		return true
	}

	return false
}

// SetTeamsApp gets a reference to the given AnyOfmicrosoftGraphTeamsApp and assigns it to the TeamsApp field.
func (o *TeamsTab) SetTeamsApp(v AnyOfmicrosoftGraphTeamsApp) {
	o.TeamsApp = &v
}

// SetTeamsAppExplicitNull (un)sets TeamsApp to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TeamsApp value is set to nil even if false is passed
func (o *TeamsTab) SetTeamsAppExplicitNull(b bool) {
	o.TeamsApp = nil
	o.isExplicitNullTeamsApp = b
}

// MarshalJSON returns the JSON representation of the model.
func (o TeamsTab) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.WebUrl == nil {
		if o.isExplicitNullWebUrl {
			toSerialize["webUrl"] = o.WebUrl
		}
	} else {
		toSerialize["webUrl"] = o.WebUrl
	}
	if o.Configuration == nil {
		if o.isExplicitNullConfiguration {
			toSerialize["configuration"] = o.Configuration
		}
	} else {
		toSerialize["configuration"] = o.Configuration
	}
	if o.TeamsApp == nil {
		if o.isExplicitNullTeamsApp {
			toSerialize["teamsApp"] = o.TeamsApp
		}
	} else {
		toSerialize["teamsApp"] = o.TeamsApp
	}
	return json.Marshal(toSerialize)
}


