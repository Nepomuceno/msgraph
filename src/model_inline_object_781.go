/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject781 struct for InlineObject781
type InlineObject781 struct {
	Trials *AnyOfobject `json:"trials,omitempty"`
	isExplicitNullTrials bool `json:"-"`
	ProbabilityS *AnyOfobject `json:"probabilityS,omitempty"`
	isExplicitNullProbabilityS bool `json:"-"`
	Alpha *AnyOfobject `json:"alpha,omitempty"`
	isExplicitNullAlpha bool `json:"-"`
}

// GetTrials returns the Trials field if non-nil, zero value otherwise.
func (o *InlineObject781) GetTrials() AnyOfobject {
	if o == nil || o.Trials == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Trials
}

// GetTrialsOk returns a tuple with the Trials field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject781) GetTrialsOk() (AnyOfobject, bool) {
	if o == nil || o.Trials == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Trials, true
}

// HasTrials returns a boolean if a field has been set.
func (o *InlineObject781) HasTrials() bool {
	if o != nil && o.Trials != nil {
		return true
	}

	return false
}

// SetTrials gets a reference to the given AnyOfobject and assigns it to the Trials field.
func (o *InlineObject781) SetTrials(v AnyOfobject) {
	o.Trials = &v
}

// SetTrialsExplicitNull (un)sets Trials to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Trials value is set to nil even if false is passed
func (o *InlineObject781) SetTrialsExplicitNull(b bool) {
	o.Trials = nil
	o.isExplicitNullTrials = b
}
// GetProbabilityS returns the ProbabilityS field if non-nil, zero value otherwise.
func (o *InlineObject781) GetProbabilityS() AnyOfobject {
	if o == nil || o.ProbabilityS == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.ProbabilityS
}

// GetProbabilitySOk returns a tuple with the ProbabilityS field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject781) GetProbabilitySOk() (AnyOfobject, bool) {
	if o == nil || o.ProbabilityS == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.ProbabilityS, true
}

// HasProbabilityS returns a boolean if a field has been set.
func (o *InlineObject781) HasProbabilityS() bool {
	if o != nil && o.ProbabilityS != nil {
		return true
	}

	return false
}

// SetProbabilityS gets a reference to the given AnyOfobject and assigns it to the ProbabilityS field.
func (o *InlineObject781) SetProbabilityS(v AnyOfobject) {
	o.ProbabilityS = &v
}

// SetProbabilitySExplicitNull (un)sets ProbabilityS to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ProbabilityS value is set to nil even if false is passed
func (o *InlineObject781) SetProbabilitySExplicitNull(b bool) {
	o.ProbabilityS = nil
	o.isExplicitNullProbabilityS = b
}
// GetAlpha returns the Alpha field if non-nil, zero value otherwise.
func (o *InlineObject781) GetAlpha() AnyOfobject {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject781) GetAlphaOk() (AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject781) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject781) SetAlpha(v AnyOfobject) {
	o.Alpha = &v
}

// SetAlphaExplicitNull (un)sets Alpha to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Alpha value is set to nil even if false is passed
func (o *InlineObject781) SetAlphaExplicitNull(b bool) {
	o.Alpha = nil
	o.isExplicitNullAlpha = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject781) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Trials == nil {
		if o.isExplicitNullTrials {
			toSerialize["trials"] = o.Trials
		}
	} else {
		toSerialize["trials"] = o.Trials
	}
	if o.ProbabilityS == nil {
		if o.isExplicitNullProbabilityS {
			toSerialize["probabilityS"] = o.ProbabilityS
		}
	} else {
		toSerialize["probabilityS"] = o.ProbabilityS
	}
	if o.Alpha == nil {
		if o.isExplicitNullAlpha {
			toSerialize["alpha"] = o.Alpha
		}
	} else {
		toSerialize["alpha"] = o.Alpha
	}
	return json.Marshal(toSerialize)
}


