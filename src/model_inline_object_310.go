/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject310 struct for InlineObject310
type InlineObject310 struct {
	AddLicenses *[]MicrosoftGraphAssignedLicense `json:"addLicenses,omitempty"`

	RemoveLicenses *[]string `json:"removeLicenses,omitempty"`

}

// GetAddLicenses returns the AddLicenses field if non-nil, zero value otherwise.
func (o *InlineObject310) GetAddLicenses() []MicrosoftGraphAssignedLicense {
	if o == nil || o.AddLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret
	}
	return *o.AddLicenses
}

// GetAddLicensesOk returns a tuple with the AddLicenses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject310) GetAddLicensesOk() ([]MicrosoftGraphAssignedLicense, bool) {
	if o == nil || o.AddLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret, false
	}
	return *o.AddLicenses, true
}

// HasAddLicenses returns a boolean if a field has been set.
func (o *InlineObject310) HasAddLicenses() bool {
	if o != nil && o.AddLicenses != nil {
		return true
	}

	return false
}

// SetAddLicenses gets a reference to the given []MicrosoftGraphAssignedLicense and assigns it to the AddLicenses field.
func (o *InlineObject310) SetAddLicenses(v []MicrosoftGraphAssignedLicense) {
	o.AddLicenses = &v
}

// GetRemoveLicenses returns the RemoveLicenses field if non-nil, zero value otherwise.
func (o *InlineObject310) GetRemoveLicenses() []string {
	if o == nil || o.RemoveLicenses == nil {
		var ret []string
		return ret
	}
	return *o.RemoveLicenses
}

// GetRemoveLicensesOk returns a tuple with the RemoveLicenses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject310) GetRemoveLicensesOk() ([]string, bool) {
	if o == nil || o.RemoveLicenses == nil {
		var ret []string
		return ret, false
	}
	return *o.RemoveLicenses, true
}

// HasRemoveLicenses returns a boolean if a field has been set.
func (o *InlineObject310) HasRemoveLicenses() bool {
	if o != nil && o.RemoveLicenses != nil {
		return true
	}

	return false
}

// SetRemoveLicenses gets a reference to the given []string and assigns it to the RemoveLicenses field.
func (o *InlineObject310) SetRemoveLicenses(v []string) {
	o.RemoveLicenses = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o InlineObject310) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddLicenses != nil {
		toSerialize["addLicenses"] = o.AddLicenses
	}
	if o.RemoveLicenses != nil {
		toSerialize["removeLicenses"] = o.RemoveLicenses
	}
	return json.Marshal(toSerialize)
}


