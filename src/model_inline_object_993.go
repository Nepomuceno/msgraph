/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject993 struct for InlineObject993
type InlineObject993 struct {
	Settlement *AnyOfobject `json:"settlement,omitempty"`
	isExplicitNullSettlement bool `json:"-"`
	Maturity *AnyOfobject `json:"maturity,omitempty"`
	isExplicitNullMaturity bool `json:"-"`
	LastInterest *AnyOfobject `json:"lastInterest,omitempty"`
	isExplicitNullLastInterest bool `json:"-"`
	Rate *AnyOfobject `json:"rate,omitempty"`
	isExplicitNullRate bool `json:"-"`
	Yld *AnyOfobject `json:"yld,omitempty"`
	isExplicitNullYld bool `json:"-"`
	Redemption *AnyOfobject `json:"redemption,omitempty"`
	isExplicitNullRedemption bool `json:"-"`
	Frequency *AnyOfobject `json:"frequency,omitempty"`
	isExplicitNullFrequency bool `json:"-"`
	Basis *AnyOfobject `json:"basis,omitempty"`
	isExplicitNullBasis bool `json:"-"`
}

// GetSettlement returns the Settlement field if non-nil, zero value otherwise.
func (o *InlineObject993) GetSettlement() AnyOfobject {
	if o == nil || o.Settlement == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Settlement
}

// GetSettlementOk returns a tuple with the Settlement field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetSettlementOk() (AnyOfobject, bool) {
	if o == nil || o.Settlement == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Settlement, true
}

// HasSettlement returns a boolean if a field has been set.
func (o *InlineObject993) HasSettlement() bool {
	if o != nil && o.Settlement != nil {
		return true
	}

	return false
}

// SetSettlement gets a reference to the given AnyOfobject and assigns it to the Settlement field.
func (o *InlineObject993) SetSettlement(v AnyOfobject) {
	o.Settlement = &v
}

// SetSettlementExplicitNull (un)sets Settlement to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Settlement value is set to nil even if false is passed
func (o *InlineObject993) SetSettlementExplicitNull(b bool) {
	o.Settlement = nil
	o.isExplicitNullSettlement = b
}
// GetMaturity returns the Maturity field if non-nil, zero value otherwise.
func (o *InlineObject993) GetMaturity() AnyOfobject {
	if o == nil || o.Maturity == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Maturity
}

// GetMaturityOk returns a tuple with the Maturity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetMaturityOk() (AnyOfobject, bool) {
	if o == nil || o.Maturity == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Maturity, true
}

// HasMaturity returns a boolean if a field has been set.
func (o *InlineObject993) HasMaturity() bool {
	if o != nil && o.Maturity != nil {
		return true
	}

	return false
}

// SetMaturity gets a reference to the given AnyOfobject and assigns it to the Maturity field.
func (o *InlineObject993) SetMaturity(v AnyOfobject) {
	o.Maturity = &v
}

// SetMaturityExplicitNull (un)sets Maturity to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Maturity value is set to nil even if false is passed
func (o *InlineObject993) SetMaturityExplicitNull(b bool) {
	o.Maturity = nil
	o.isExplicitNullMaturity = b
}
// GetLastInterest returns the LastInterest field if non-nil, zero value otherwise.
func (o *InlineObject993) GetLastInterest() AnyOfobject {
	if o == nil || o.LastInterest == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.LastInterest
}

// GetLastInterestOk returns a tuple with the LastInterest field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetLastInterestOk() (AnyOfobject, bool) {
	if o == nil || o.LastInterest == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.LastInterest, true
}

// HasLastInterest returns a boolean if a field has been set.
func (o *InlineObject993) HasLastInterest() bool {
	if o != nil && o.LastInterest != nil {
		return true
	}

	return false
}

// SetLastInterest gets a reference to the given AnyOfobject and assigns it to the LastInterest field.
func (o *InlineObject993) SetLastInterest(v AnyOfobject) {
	o.LastInterest = &v
}

// SetLastInterestExplicitNull (un)sets LastInterest to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastInterest value is set to nil even if false is passed
func (o *InlineObject993) SetLastInterestExplicitNull(b bool) {
	o.LastInterest = nil
	o.isExplicitNullLastInterest = b
}
// GetRate returns the Rate field if non-nil, zero value otherwise.
func (o *InlineObject993) GetRate() AnyOfobject {
	if o == nil || o.Rate == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetRateOk() (AnyOfobject, bool) {
	if o == nil || o.Rate == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *InlineObject993) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given AnyOfobject and assigns it to the Rate field.
func (o *InlineObject993) SetRate(v AnyOfobject) {
	o.Rate = &v
}

// SetRateExplicitNull (un)sets Rate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Rate value is set to nil even if false is passed
func (o *InlineObject993) SetRateExplicitNull(b bool) {
	o.Rate = nil
	o.isExplicitNullRate = b
}
// GetYld returns the Yld field if non-nil, zero value otherwise.
func (o *InlineObject993) GetYld() AnyOfobject {
	if o == nil || o.Yld == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Yld
}

// GetYldOk returns a tuple with the Yld field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetYldOk() (AnyOfobject, bool) {
	if o == nil || o.Yld == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Yld, true
}

// HasYld returns a boolean if a field has been set.
func (o *InlineObject993) HasYld() bool {
	if o != nil && o.Yld != nil {
		return true
	}

	return false
}

// SetYld gets a reference to the given AnyOfobject and assigns it to the Yld field.
func (o *InlineObject993) SetYld(v AnyOfobject) {
	o.Yld = &v
}

// SetYldExplicitNull (un)sets Yld to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Yld value is set to nil even if false is passed
func (o *InlineObject993) SetYldExplicitNull(b bool) {
	o.Yld = nil
	o.isExplicitNullYld = b
}
// GetRedemption returns the Redemption field if non-nil, zero value otherwise.
func (o *InlineObject993) GetRedemption() AnyOfobject {
	if o == nil || o.Redemption == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Redemption
}

// GetRedemptionOk returns a tuple with the Redemption field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetRedemptionOk() (AnyOfobject, bool) {
	if o == nil || o.Redemption == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Redemption, true
}

// HasRedemption returns a boolean if a field has been set.
func (o *InlineObject993) HasRedemption() bool {
	if o != nil && o.Redemption != nil {
		return true
	}

	return false
}

// SetRedemption gets a reference to the given AnyOfobject and assigns it to the Redemption field.
func (o *InlineObject993) SetRedemption(v AnyOfobject) {
	o.Redemption = &v
}

// SetRedemptionExplicitNull (un)sets Redemption to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Redemption value is set to nil even if false is passed
func (o *InlineObject993) SetRedemptionExplicitNull(b bool) {
	o.Redemption = nil
	o.isExplicitNullRedemption = b
}
// GetFrequency returns the Frequency field if non-nil, zero value otherwise.
func (o *InlineObject993) GetFrequency() AnyOfobject {
	if o == nil || o.Frequency == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetFrequencyOk() (AnyOfobject, bool) {
	if o == nil || o.Frequency == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *InlineObject993) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given AnyOfobject and assigns it to the Frequency field.
func (o *InlineObject993) SetFrequency(v AnyOfobject) {
	o.Frequency = &v
}

// SetFrequencyExplicitNull (un)sets Frequency to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Frequency value is set to nil even if false is passed
func (o *InlineObject993) SetFrequencyExplicitNull(b bool) {
	o.Frequency = nil
	o.isExplicitNullFrequency = b
}
// GetBasis returns the Basis field if non-nil, zero value otherwise.
func (o *InlineObject993) GetBasis() AnyOfobject {
	if o == nil || o.Basis == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Basis
}

// GetBasisOk returns a tuple with the Basis field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject993) GetBasisOk() (AnyOfobject, bool) {
	if o == nil || o.Basis == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Basis, true
}

// HasBasis returns a boolean if a field has been set.
func (o *InlineObject993) HasBasis() bool {
	if o != nil && o.Basis != nil {
		return true
	}

	return false
}

// SetBasis gets a reference to the given AnyOfobject and assigns it to the Basis field.
func (o *InlineObject993) SetBasis(v AnyOfobject) {
	o.Basis = &v
}

// SetBasisExplicitNull (un)sets Basis to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Basis value is set to nil even if false is passed
func (o *InlineObject993) SetBasisExplicitNull(b bool) {
	o.Basis = nil
	o.isExplicitNullBasis = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject993) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Settlement == nil {
		if o.isExplicitNullSettlement {
			toSerialize["settlement"] = o.Settlement
		}
	} else {
		toSerialize["settlement"] = o.Settlement
	}
	if o.Maturity == nil {
		if o.isExplicitNullMaturity {
			toSerialize["maturity"] = o.Maturity
		}
	} else {
		toSerialize["maturity"] = o.Maturity
	}
	if o.LastInterest == nil {
		if o.isExplicitNullLastInterest {
			toSerialize["lastInterest"] = o.LastInterest
		}
	} else {
		toSerialize["lastInterest"] = o.LastInterest
	}
	if o.Rate == nil {
		if o.isExplicitNullRate {
			toSerialize["rate"] = o.Rate
		}
	} else {
		toSerialize["rate"] = o.Rate
	}
	if o.Yld == nil {
		if o.isExplicitNullYld {
			toSerialize["yld"] = o.Yld
		}
	} else {
		toSerialize["yld"] = o.Yld
	}
	if o.Redemption == nil {
		if o.isExplicitNullRedemption {
			toSerialize["redemption"] = o.Redemption
		}
	} else {
		toSerialize["redemption"] = o.Redemption
	}
	if o.Frequency == nil {
		if o.isExplicitNullFrequency {
			toSerialize["frequency"] = o.Frequency
		}
	} else {
		toSerialize["frequency"] = o.Frequency
	}
	if o.Basis == nil {
		if o.isExplicitNullBasis {
			toSerialize["basis"] = o.Basis
		}
	} else {
		toSerialize["basis"] = o.Basis
	}
	return json.Marshal(toSerialize)
}


