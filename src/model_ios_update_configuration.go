/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// IosUpdateConfiguration IOS Update Configuration, allows you to configure time window within week to install iOS updates
type IosUpdateConfiguration struct {
	// Active Hours Start (active hours mean the time window when updates install should not happen)
	ActiveHoursStart *string `json:"activeHoursStart,omitempty"`

	// Active Hours End (active hours mean the time window when updates install should not happen)
	ActiveHoursEnd *string `json:"activeHoursEnd,omitempty"`

	// Days in week for which active hours are configured. This collection can contain a maximum of 7 elements.
	ScheduledInstallDays *[]AnyOfmicrosoftGraphDayOfWeek `json:"scheduledInstallDays,omitempty"`

	// UTC Time Offset indicated in minutes
	UtcTimeOffsetInMinutes *int32 `json:"utcTimeOffsetInMinutes,omitempty"`

}

// GetActiveHoursStart returns the ActiveHoursStart field if non-nil, zero value otherwise.
func (o *IosUpdateConfiguration) GetActiveHoursStart() string {
	if o == nil || o.ActiveHoursStart == nil {
		var ret string
		return ret
	}
	return *o.ActiveHoursStart
}

// GetActiveHoursStartOk returns a tuple with the ActiveHoursStart field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateConfiguration) GetActiveHoursStartOk() (string, bool) {
	if o == nil || o.ActiveHoursStart == nil {
		var ret string
		return ret, false
	}
	return *o.ActiveHoursStart, true
}

// HasActiveHoursStart returns a boolean if a field has been set.
func (o *IosUpdateConfiguration) HasActiveHoursStart() bool {
	if o != nil && o.ActiveHoursStart != nil {
		return true
	}

	return false
}

// SetActiveHoursStart gets a reference to the given string and assigns it to the ActiveHoursStart field.
func (o *IosUpdateConfiguration) SetActiveHoursStart(v string) {
	o.ActiveHoursStart = &v
}

// GetActiveHoursEnd returns the ActiveHoursEnd field if non-nil, zero value otherwise.
func (o *IosUpdateConfiguration) GetActiveHoursEnd() string {
	if o == nil || o.ActiveHoursEnd == nil {
		var ret string
		return ret
	}
	return *o.ActiveHoursEnd
}

// GetActiveHoursEndOk returns a tuple with the ActiveHoursEnd field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateConfiguration) GetActiveHoursEndOk() (string, bool) {
	if o == nil || o.ActiveHoursEnd == nil {
		var ret string
		return ret, false
	}
	return *o.ActiveHoursEnd, true
}

// HasActiveHoursEnd returns a boolean if a field has been set.
func (o *IosUpdateConfiguration) HasActiveHoursEnd() bool {
	if o != nil && o.ActiveHoursEnd != nil {
		return true
	}

	return false
}

// SetActiveHoursEnd gets a reference to the given string and assigns it to the ActiveHoursEnd field.
func (o *IosUpdateConfiguration) SetActiveHoursEnd(v string) {
	o.ActiveHoursEnd = &v
}

// GetScheduledInstallDays returns the ScheduledInstallDays field if non-nil, zero value otherwise.
func (o *IosUpdateConfiguration) GetScheduledInstallDays() []AnyOfmicrosoftGraphDayOfWeek {
	if o == nil || o.ScheduledInstallDays == nil {
		var ret []AnyOfmicrosoftGraphDayOfWeek
		return ret
	}
	return *o.ScheduledInstallDays
}

// GetScheduledInstallDaysOk returns a tuple with the ScheduledInstallDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateConfiguration) GetScheduledInstallDaysOk() ([]AnyOfmicrosoftGraphDayOfWeek, bool) {
	if o == nil || o.ScheduledInstallDays == nil {
		var ret []AnyOfmicrosoftGraphDayOfWeek
		return ret, false
	}
	return *o.ScheduledInstallDays, true
}

// HasScheduledInstallDays returns a boolean if a field has been set.
func (o *IosUpdateConfiguration) HasScheduledInstallDays() bool {
	if o != nil && o.ScheduledInstallDays != nil {
		return true
	}

	return false
}

// SetScheduledInstallDays gets a reference to the given []AnyOfmicrosoftGraphDayOfWeek and assigns it to the ScheduledInstallDays field.
func (o *IosUpdateConfiguration) SetScheduledInstallDays(v []AnyOfmicrosoftGraphDayOfWeek) {
	o.ScheduledInstallDays = &v
}

// GetUtcTimeOffsetInMinutes returns the UtcTimeOffsetInMinutes field if non-nil, zero value otherwise.
func (o *IosUpdateConfiguration) GetUtcTimeOffsetInMinutes() int32 {
	if o == nil || o.UtcTimeOffsetInMinutes == nil {
		var ret int32
		return ret
	}
	return *o.UtcTimeOffsetInMinutes
}

// GetUtcTimeOffsetInMinutesOk returns a tuple with the UtcTimeOffsetInMinutes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosUpdateConfiguration) GetUtcTimeOffsetInMinutesOk() (int32, bool) {
	if o == nil || o.UtcTimeOffsetInMinutes == nil {
		var ret int32
		return ret, false
	}
	return *o.UtcTimeOffsetInMinutes, true
}

// HasUtcTimeOffsetInMinutes returns a boolean if a field has been set.
func (o *IosUpdateConfiguration) HasUtcTimeOffsetInMinutes() bool {
	if o != nil && o.UtcTimeOffsetInMinutes != nil {
		return true
	}

	return false
}

// SetUtcTimeOffsetInMinutes gets a reference to the given int32 and assigns it to the UtcTimeOffsetInMinutes field.
func (o *IosUpdateConfiguration) SetUtcTimeOffsetInMinutes(v int32) {
	o.UtcTimeOffsetInMinutes = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o IosUpdateConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveHoursStart != nil {
		toSerialize["activeHoursStart"] = o.ActiveHoursStart
	}
	if o.ActiveHoursEnd != nil {
		toSerialize["activeHoursEnd"] = o.ActiveHoursEnd
	}
	if o.ScheduledInstallDays != nil {
		toSerialize["scheduledInstallDays"] = o.ScheduledInstallDays
	}
	if o.UtcTimeOffsetInMinutes != nil {
		toSerialize["utcTimeOffsetInMinutes"] = o.UtcTimeOffsetInMinutes
	}
	return json.Marshal(toSerialize)
}


