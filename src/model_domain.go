/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Domain struct for Domain
type Domain struct {
	AuthenticationType *string `json:"authenticationType,omitempty"`

	AvailabilityStatus *string `json:"availabilityStatus,omitempty"`
	isExplicitNullAvailabilityStatus bool `json:"-"`
	IsAdminManaged *bool `json:"isAdminManaged,omitempty"`

	IsDefault *bool `json:"isDefault,omitempty"`

	IsInitial *bool `json:"isInitial,omitempty"`

	IsRoot *bool `json:"isRoot,omitempty"`

	IsVerified *bool `json:"isVerified,omitempty"`

	PasswordNotificationWindowInDays *int32 `json:"passwordNotificationWindowInDays,omitempty"`
	isExplicitNullPasswordNotificationWindowInDays bool `json:"-"`
	PasswordValidityPeriodInDays *int32 `json:"passwordValidityPeriodInDays,omitempty"`
	isExplicitNullPasswordValidityPeriodInDays bool `json:"-"`
	SupportedServices *[]string `json:"supportedServices,omitempty"`

	State *AnyOfmicrosoftGraphDomainState `json:"state,omitempty"`
	isExplicitNullState bool `json:"-"`
	ServiceConfigurationRecords *[]MicrosoftGraphDomainDnsRecord `json:"serviceConfigurationRecords,omitempty"`

	VerificationDnsRecords *[]MicrosoftGraphDomainDnsRecord `json:"verificationDnsRecords,omitempty"`

	DomainNameReferences *[]MicrosoftGraphDirectoryObject `json:"domainNameReferences,omitempty"`

}

// GetAuthenticationType returns the AuthenticationType field if non-nil, zero value otherwise.
func (o *Domain) GetAuthenticationType() string {
	if o == nil || o.AuthenticationType == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetAuthenticationTypeOk() (string, bool) {
	if o == nil || o.AuthenticationType == nil {
		var ret string
		return ret, false
	}
	return *o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *Domain) HasAuthenticationType() bool {
	if o != nil && o.AuthenticationType != nil {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given string and assigns it to the AuthenticationType field.
func (o *Domain) SetAuthenticationType(v string) {
	o.AuthenticationType = &v
}

// GetAvailabilityStatus returns the AvailabilityStatus field if non-nil, zero value otherwise.
func (o *Domain) GetAvailabilityStatus() string {
	if o == nil || o.AvailabilityStatus == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatus
}

// GetAvailabilityStatusOk returns a tuple with the AvailabilityStatus field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetAvailabilityStatusOk() (string, bool) {
	if o == nil || o.AvailabilityStatus == nil {
		var ret string
		return ret, false
	}
	return *o.AvailabilityStatus, true
}

// HasAvailabilityStatus returns a boolean if a field has been set.
func (o *Domain) HasAvailabilityStatus() bool {
	if o != nil && o.AvailabilityStatus != nil {
		return true
	}

	return false
}

// SetAvailabilityStatus gets a reference to the given string and assigns it to the AvailabilityStatus field.
func (o *Domain) SetAvailabilityStatus(v string) {
	o.AvailabilityStatus = &v
}

// SetAvailabilityStatusExplicitNull (un)sets AvailabilityStatus to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AvailabilityStatus value is set to nil even if false is passed
func (o *Domain) SetAvailabilityStatusExplicitNull(b bool) {
	o.AvailabilityStatus = nil
	o.isExplicitNullAvailabilityStatus = b
}
// GetIsAdminManaged returns the IsAdminManaged field if non-nil, zero value otherwise.
func (o *Domain) GetIsAdminManaged() bool {
	if o == nil || o.IsAdminManaged == nil {
		var ret bool
		return ret
	}
	return *o.IsAdminManaged
}

// GetIsAdminManagedOk returns a tuple with the IsAdminManaged field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetIsAdminManagedOk() (bool, bool) {
	if o == nil || o.IsAdminManaged == nil {
		var ret bool
		return ret, false
	}
	return *o.IsAdminManaged, true
}

// HasIsAdminManaged returns a boolean if a field has been set.
func (o *Domain) HasIsAdminManaged() bool {
	if o != nil && o.IsAdminManaged != nil {
		return true
	}

	return false
}

// SetIsAdminManaged gets a reference to the given bool and assigns it to the IsAdminManaged field.
func (o *Domain) SetIsAdminManaged(v bool) {
	o.IsAdminManaged = &v
}

// GetIsDefault returns the IsDefault field if non-nil, zero value otherwise.
func (o *Domain) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetIsDefaultOk() (bool, bool) {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret, false
	}
	return *o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Domain) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *Domain) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsInitial returns the IsInitial field if non-nil, zero value otherwise.
func (o *Domain) GetIsInitial() bool {
	if o == nil || o.IsInitial == nil {
		var ret bool
		return ret
	}
	return *o.IsInitial
}

// GetIsInitialOk returns a tuple with the IsInitial field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetIsInitialOk() (bool, bool) {
	if o == nil || o.IsInitial == nil {
		var ret bool
		return ret, false
	}
	return *o.IsInitial, true
}

// HasIsInitial returns a boolean if a field has been set.
func (o *Domain) HasIsInitial() bool {
	if o != nil && o.IsInitial != nil {
		return true
	}

	return false
}

// SetIsInitial gets a reference to the given bool and assigns it to the IsInitial field.
func (o *Domain) SetIsInitial(v bool) {
	o.IsInitial = &v
}

// GetIsRoot returns the IsRoot field if non-nil, zero value otherwise.
func (o *Domain) GetIsRoot() bool {
	if o == nil || o.IsRoot == nil {
		var ret bool
		return ret
	}
	return *o.IsRoot
}

// GetIsRootOk returns a tuple with the IsRoot field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetIsRootOk() (bool, bool) {
	if o == nil || o.IsRoot == nil {
		var ret bool
		return ret, false
	}
	return *o.IsRoot, true
}

// HasIsRoot returns a boolean if a field has been set.
func (o *Domain) HasIsRoot() bool {
	if o != nil && o.IsRoot != nil {
		return true
	}

	return false
}

// SetIsRoot gets a reference to the given bool and assigns it to the IsRoot field.
func (o *Domain) SetIsRoot(v bool) {
	o.IsRoot = &v
}

// GetIsVerified returns the IsVerified field if non-nil, zero value otherwise.
func (o *Domain) GetIsVerified() bool {
	if o == nil || o.IsVerified == nil {
		var ret bool
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetIsVerifiedOk() (bool, bool) {
	if o == nil || o.IsVerified == nil {
		var ret bool
		return ret, false
	}
	return *o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *Domain) HasIsVerified() bool {
	if o != nil && o.IsVerified != nil {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given bool and assigns it to the IsVerified field.
func (o *Domain) SetIsVerified(v bool) {
	o.IsVerified = &v
}

// GetPasswordNotificationWindowInDays returns the PasswordNotificationWindowInDays field if non-nil, zero value otherwise.
func (o *Domain) GetPasswordNotificationWindowInDays() int32 {
	if o == nil || o.PasswordNotificationWindowInDays == nil {
		var ret int32
		return ret
	}
	return *o.PasswordNotificationWindowInDays
}

// GetPasswordNotificationWindowInDaysOk returns a tuple with the PasswordNotificationWindowInDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetPasswordNotificationWindowInDaysOk() (int32, bool) {
	if o == nil || o.PasswordNotificationWindowInDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordNotificationWindowInDays, true
}

// HasPasswordNotificationWindowInDays returns a boolean if a field has been set.
func (o *Domain) HasPasswordNotificationWindowInDays() bool {
	if o != nil && o.PasswordNotificationWindowInDays != nil {
		return true
	}

	return false
}

// SetPasswordNotificationWindowInDays gets a reference to the given int32 and assigns it to the PasswordNotificationWindowInDays field.
func (o *Domain) SetPasswordNotificationWindowInDays(v int32) {
	o.PasswordNotificationWindowInDays = &v
}

// SetPasswordNotificationWindowInDaysExplicitNull (un)sets PasswordNotificationWindowInDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordNotificationWindowInDays value is set to nil even if false is passed
func (o *Domain) SetPasswordNotificationWindowInDaysExplicitNull(b bool) {
	o.PasswordNotificationWindowInDays = nil
	o.isExplicitNullPasswordNotificationWindowInDays = b
}
// GetPasswordValidityPeriodInDays returns the PasswordValidityPeriodInDays field if non-nil, zero value otherwise.
func (o *Domain) GetPasswordValidityPeriodInDays() int32 {
	if o == nil || o.PasswordValidityPeriodInDays == nil {
		var ret int32
		return ret
	}
	return *o.PasswordValidityPeriodInDays
}

// GetPasswordValidityPeriodInDaysOk returns a tuple with the PasswordValidityPeriodInDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetPasswordValidityPeriodInDaysOk() (int32, bool) {
	if o == nil || o.PasswordValidityPeriodInDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordValidityPeriodInDays, true
}

// HasPasswordValidityPeriodInDays returns a boolean if a field has been set.
func (o *Domain) HasPasswordValidityPeriodInDays() bool {
	if o != nil && o.PasswordValidityPeriodInDays != nil {
		return true
	}

	return false
}

// SetPasswordValidityPeriodInDays gets a reference to the given int32 and assigns it to the PasswordValidityPeriodInDays field.
func (o *Domain) SetPasswordValidityPeriodInDays(v int32) {
	o.PasswordValidityPeriodInDays = &v
}

// SetPasswordValidityPeriodInDaysExplicitNull (un)sets PasswordValidityPeriodInDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordValidityPeriodInDays value is set to nil even if false is passed
func (o *Domain) SetPasswordValidityPeriodInDaysExplicitNull(b bool) {
	o.PasswordValidityPeriodInDays = nil
	o.isExplicitNullPasswordValidityPeriodInDays = b
}
// GetSupportedServices returns the SupportedServices field if non-nil, zero value otherwise.
func (o *Domain) GetSupportedServices() []string {
	if o == nil || o.SupportedServices == nil {
		var ret []string
		return ret
	}
	return *o.SupportedServices
}

// GetSupportedServicesOk returns a tuple with the SupportedServices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetSupportedServicesOk() ([]string, bool) {
	if o == nil || o.SupportedServices == nil {
		var ret []string
		return ret, false
	}
	return *o.SupportedServices, true
}

// HasSupportedServices returns a boolean if a field has been set.
func (o *Domain) HasSupportedServices() bool {
	if o != nil && o.SupportedServices != nil {
		return true
	}

	return false
}

// SetSupportedServices gets a reference to the given []string and assigns it to the SupportedServices field.
func (o *Domain) SetSupportedServices(v []string) {
	o.SupportedServices = &v
}

// GetState returns the State field if non-nil, zero value otherwise.
func (o *Domain) GetState() AnyOfmicrosoftGraphDomainState {
	if o == nil || o.State == nil {
		var ret AnyOfmicrosoftGraphDomainState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetStateOk() (AnyOfmicrosoftGraphDomainState, bool) {
	if o == nil || o.State == nil {
		var ret AnyOfmicrosoftGraphDomainState
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Domain) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphDomainState and assigns it to the State field.
func (o *Domain) SetState(v AnyOfmicrosoftGraphDomainState) {
	o.State = &v
}

// SetStateExplicitNull (un)sets State to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The State value is set to nil even if false is passed
func (o *Domain) SetStateExplicitNull(b bool) {
	o.State = nil
	o.isExplicitNullState = b
}
// GetServiceConfigurationRecords returns the ServiceConfigurationRecords field if non-nil, zero value otherwise.
func (o *Domain) GetServiceConfigurationRecords() []MicrosoftGraphDomainDnsRecord {
	if o == nil || o.ServiceConfigurationRecords == nil {
		var ret []MicrosoftGraphDomainDnsRecord
		return ret
	}
	return *o.ServiceConfigurationRecords
}

// GetServiceConfigurationRecordsOk returns a tuple with the ServiceConfigurationRecords field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetServiceConfigurationRecordsOk() ([]MicrosoftGraphDomainDnsRecord, bool) {
	if o == nil || o.ServiceConfigurationRecords == nil {
		var ret []MicrosoftGraphDomainDnsRecord
		return ret, false
	}
	return *o.ServiceConfigurationRecords, true
}

// HasServiceConfigurationRecords returns a boolean if a field has been set.
func (o *Domain) HasServiceConfigurationRecords() bool {
	if o != nil && o.ServiceConfigurationRecords != nil {
		return true
	}

	return false
}

// SetServiceConfigurationRecords gets a reference to the given []MicrosoftGraphDomainDnsRecord and assigns it to the ServiceConfigurationRecords field.
func (o *Domain) SetServiceConfigurationRecords(v []MicrosoftGraphDomainDnsRecord) {
	o.ServiceConfigurationRecords = &v
}

// GetVerificationDnsRecords returns the VerificationDnsRecords field if non-nil, zero value otherwise.
func (o *Domain) GetVerificationDnsRecords() []MicrosoftGraphDomainDnsRecord {
	if o == nil || o.VerificationDnsRecords == nil {
		var ret []MicrosoftGraphDomainDnsRecord
		return ret
	}
	return *o.VerificationDnsRecords
}

// GetVerificationDnsRecordsOk returns a tuple with the VerificationDnsRecords field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetVerificationDnsRecordsOk() ([]MicrosoftGraphDomainDnsRecord, bool) {
	if o == nil || o.VerificationDnsRecords == nil {
		var ret []MicrosoftGraphDomainDnsRecord
		return ret, false
	}
	return *o.VerificationDnsRecords, true
}

// HasVerificationDnsRecords returns a boolean if a field has been set.
func (o *Domain) HasVerificationDnsRecords() bool {
	if o != nil && o.VerificationDnsRecords != nil {
		return true
	}

	return false
}

// SetVerificationDnsRecords gets a reference to the given []MicrosoftGraphDomainDnsRecord and assigns it to the VerificationDnsRecords field.
func (o *Domain) SetVerificationDnsRecords(v []MicrosoftGraphDomainDnsRecord) {
	o.VerificationDnsRecords = &v
}

// GetDomainNameReferences returns the DomainNameReferences field if non-nil, zero value otherwise.
func (o *Domain) GetDomainNameReferences() []MicrosoftGraphDirectoryObject {
	if o == nil || o.DomainNameReferences == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.DomainNameReferences
}

// GetDomainNameReferencesOk returns a tuple with the DomainNameReferences field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Domain) GetDomainNameReferencesOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.DomainNameReferences == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.DomainNameReferences, true
}

// HasDomainNameReferences returns a boolean if a field has been set.
func (o *Domain) HasDomainNameReferences() bool {
	if o != nil && o.DomainNameReferences != nil {
		return true
	}

	return false
}

// SetDomainNameReferences gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the DomainNameReferences field.
func (o *Domain) SetDomainNameReferences(v []MicrosoftGraphDirectoryObject) {
	o.DomainNameReferences = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Domain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationType != nil {
		toSerialize["authenticationType"] = o.AuthenticationType
	}
	if o.AvailabilityStatus == nil {
		if o.isExplicitNullAvailabilityStatus {
			toSerialize["availabilityStatus"] = o.AvailabilityStatus
		}
	} else {
		toSerialize["availabilityStatus"] = o.AvailabilityStatus
	}
	if o.IsAdminManaged != nil {
		toSerialize["isAdminManaged"] = o.IsAdminManaged
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.IsInitial != nil {
		toSerialize["isInitial"] = o.IsInitial
	}
	if o.IsRoot != nil {
		toSerialize["isRoot"] = o.IsRoot
	}
	if o.IsVerified != nil {
		toSerialize["isVerified"] = o.IsVerified
	}
	if o.PasswordNotificationWindowInDays == nil {
		if o.isExplicitNullPasswordNotificationWindowInDays {
			toSerialize["passwordNotificationWindowInDays"] = o.PasswordNotificationWindowInDays
		}
	} else {
		toSerialize["passwordNotificationWindowInDays"] = o.PasswordNotificationWindowInDays
	}
	if o.PasswordValidityPeriodInDays == nil {
		if o.isExplicitNullPasswordValidityPeriodInDays {
			toSerialize["passwordValidityPeriodInDays"] = o.PasswordValidityPeriodInDays
		}
	} else {
		toSerialize["passwordValidityPeriodInDays"] = o.PasswordValidityPeriodInDays
	}
	if o.SupportedServices != nil {
		toSerialize["supportedServices"] = o.SupportedServices
	}
	if o.State == nil {
		if o.isExplicitNullState {
			toSerialize["state"] = o.State
		}
	} else {
		toSerialize["state"] = o.State
	}
	if o.ServiceConfigurationRecords != nil {
		toSerialize["serviceConfigurationRecords"] = o.ServiceConfigurationRecords
	}
	if o.VerificationDnsRecords != nil {
		toSerialize["verificationDnsRecords"] = o.VerificationDnsRecords
	}
	if o.DomainNameReferences != nil {
		toSerialize["domainNameReferences"] = o.DomainNameReferences
	}
	return json.Marshal(toSerialize)
}


