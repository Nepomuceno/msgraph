/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// ManagedAndroidStoreApp Contains properties and inherited properties for Android store apps that you can manage with an Intune app protection policy.
type ManagedAndroidStoreApp struct {
	// The app's package ID.
	PackageId *string `json:"packageId,omitempty"`
	isExplicitNullPackageId bool `json:"-"`
	// The Android AppStoreUrl.
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`

	MinimumSupportedOperatingSystem *MicrosoftGraphAndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`

}

// GetPackageId returns the PackageId field if non-nil, zero value otherwise.
func (o *ManagedAndroidStoreApp) GetPackageId() string {
	if o == nil || o.PackageId == nil {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidStoreApp) GetPackageIdOk() (string, bool) {
	if o == nil || o.PackageId == nil {
		var ret string
		return ret, false
	}
	return *o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *ManagedAndroidStoreApp) HasPackageId() bool {
	if o != nil && o.PackageId != nil {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *ManagedAndroidStoreApp) SetPackageId(v string) {
	o.PackageId = &v
}

// SetPackageIdExplicitNull (un)sets PackageId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PackageId value is set to nil even if false is passed
func (o *ManagedAndroidStoreApp) SetPackageIdExplicitNull(b bool) {
	o.PackageId = nil
	o.isExplicitNullPackageId = b
}
// GetAppStoreUrl returns the AppStoreUrl field if non-nil, zero value otherwise.
func (o *ManagedAndroidStoreApp) GetAppStoreUrl() string {
	if o == nil || o.AppStoreUrl == nil {
		var ret string
		return ret
	}
	return *o.AppStoreUrl
}

// GetAppStoreUrlOk returns a tuple with the AppStoreUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidStoreApp) GetAppStoreUrlOk() (string, bool) {
	if o == nil || o.AppStoreUrl == nil {
		var ret string
		return ret, false
	}
	return *o.AppStoreUrl, true
}

// HasAppStoreUrl returns a boolean if a field has been set.
func (o *ManagedAndroidStoreApp) HasAppStoreUrl() bool {
	if o != nil && o.AppStoreUrl != nil {
		return true
	}

	return false
}

// SetAppStoreUrl gets a reference to the given string and assigns it to the AppStoreUrl field.
func (o *ManagedAndroidStoreApp) SetAppStoreUrl(v string) {
	o.AppStoreUrl = &v
}

// GetMinimumSupportedOperatingSystem returns the MinimumSupportedOperatingSystem field if non-nil, zero value otherwise.
func (o *ManagedAndroidStoreApp) GetMinimumSupportedOperatingSystem() MicrosoftGraphAndroidMinimumOperatingSystem {
	if o == nil || o.MinimumSupportedOperatingSystem == nil {
		var ret MicrosoftGraphAndroidMinimumOperatingSystem
		return ret
	}
	return *o.MinimumSupportedOperatingSystem
}

// GetMinimumSupportedOperatingSystemOk returns a tuple with the MinimumSupportedOperatingSystem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidStoreApp) GetMinimumSupportedOperatingSystemOk() (MicrosoftGraphAndroidMinimumOperatingSystem, bool) {
	if o == nil || o.MinimumSupportedOperatingSystem == nil {
		var ret MicrosoftGraphAndroidMinimumOperatingSystem
		return ret, false
	}
	return *o.MinimumSupportedOperatingSystem, true
}

// HasMinimumSupportedOperatingSystem returns a boolean if a field has been set.
func (o *ManagedAndroidStoreApp) HasMinimumSupportedOperatingSystem() bool {
	if o != nil && o.MinimumSupportedOperatingSystem != nil {
		return true
	}

	return false
}

// SetMinimumSupportedOperatingSystem gets a reference to the given MicrosoftGraphAndroidMinimumOperatingSystem and assigns it to the MinimumSupportedOperatingSystem field.
func (o *ManagedAndroidStoreApp) SetMinimumSupportedOperatingSystem(v MicrosoftGraphAndroidMinimumOperatingSystem) {
	o.MinimumSupportedOperatingSystem = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o ManagedAndroidStoreApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PackageId == nil {
		if o.isExplicitNullPackageId {
			toSerialize["packageId"] = o.PackageId
		}
	} else {
		toSerialize["packageId"] = o.PackageId
	}
	if o.AppStoreUrl != nil {
		toSerialize["appStoreUrl"] = o.AppStoreUrl
	}
	if o.MinimumSupportedOperatingSystem != nil {
		toSerialize["minimumSupportedOperatingSystem"] = o.MinimumSupportedOperatingSystem
	}
	return json.Marshal(toSerialize)
}


