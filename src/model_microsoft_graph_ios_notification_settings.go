/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphIosNotificationSettings struct for MicrosoftGraphIosNotificationSettings
type MicrosoftGraphIosNotificationSettings struct {
	// Bundle id of app to which to apply these notification settings.
	BundleID *string `json:"bundleID,omitempty"`

	// Application name to be associated with the bundleID.
	AppName *string `json:"appName,omitempty"`
	isExplicitNullAppName bool `json:"-"`
	// Publisher to be associated with the bundleID.
	Publisher *string `json:"publisher,omitempty"`
	isExplicitNullPublisher bool `json:"-"`
	// Indicates whether notifications are allowed for this app.
	Enabled *bool `json:"enabled,omitempty"`
	isExplicitNullEnabled bool `json:"-"`
	// Indicates whether notifications can be shown in notification center.
	ShowInNotificationCenter *bool `json:"showInNotificationCenter,omitempty"`
	isExplicitNullShowInNotificationCenter bool `json:"-"`
	// Indicates whether notifications can be shown on the lock screen.
	ShowOnLockScreen *bool `json:"showOnLockScreen,omitempty"`
	isExplicitNullShowOnLockScreen bool `json:"-"`
	// Indicates the type of alert for notifications for this app.
	AlertType *AnyOfmicrosoftGraphIosNotificationAlertType `json:"alertType,omitempty"`

	// Indicates whether badges are allowed for this app.
	BadgesEnabled *bool `json:"badgesEnabled,omitempty"`
	isExplicitNullBadgesEnabled bool `json:"-"`
	// Indicates whether sounds are allowed for this app.
	SoundsEnabled *bool `json:"soundsEnabled,omitempty"`
	isExplicitNullSoundsEnabled bool `json:"-"`
}

// GetBundleID returns the BundleID field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetBundleID() string {
	if o == nil || o.BundleID == nil {
		var ret string
		return ret
	}
	return *o.BundleID
}

// GetBundleIDOk returns a tuple with the BundleID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetBundleIDOk() (string, bool) {
	if o == nil || o.BundleID == nil {
		var ret string
		return ret, false
	}
	return *o.BundleID, true
}

// HasBundleID returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasBundleID() bool {
	if o != nil && o.BundleID != nil {
		return true
	}

	return false
}

// SetBundleID gets a reference to the given string and assigns it to the BundleID field.
func (o *MicrosoftGraphIosNotificationSettings) SetBundleID(v string) {
	o.BundleID = &v
}

// GetAppName returns the AppName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetAppName() string {
	if o == nil || o.AppName == nil {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetAppNameOk() (string, bool) {
	if o == nil || o.AppName == nil {
		var ret string
		return ret, false
	}
	return *o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasAppName() bool {
	if o != nil && o.AppName != nil {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *MicrosoftGraphIosNotificationSettings) SetAppName(v string) {
	o.AppName = &v
}

// SetAppNameExplicitNull (un)sets AppName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppName value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetAppNameExplicitNull(b bool) {
	o.AppName = nil
	o.isExplicitNullAppName = b
}
// GetPublisher returns the Publisher field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetPublisher() string {
	if o == nil || o.Publisher == nil {
		var ret string
		return ret
	}
	return *o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetPublisherOk() (string, bool) {
	if o == nil || o.Publisher == nil {
		var ret string
		return ret, false
	}
	return *o.Publisher, true
}

// HasPublisher returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasPublisher() bool {
	if o != nil && o.Publisher != nil {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given string and assigns it to the Publisher field.
func (o *MicrosoftGraphIosNotificationSettings) SetPublisher(v string) {
	o.Publisher = &v
}

// SetPublisherExplicitNull (un)sets Publisher to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Publisher value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetPublisherExplicitNull(b bool) {
	o.Publisher = nil
	o.isExplicitNullPublisher = b
}
// GetEnabled returns the Enabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetEnabledOk() (bool, bool) {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret, false
	}
	return *o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MicrosoftGraphIosNotificationSettings) SetEnabled(v bool) {
	o.Enabled = &v
}

// SetEnabledExplicitNull (un)sets Enabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Enabled value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetEnabledExplicitNull(b bool) {
	o.Enabled = nil
	o.isExplicitNullEnabled = b
}
// GetShowInNotificationCenter returns the ShowInNotificationCenter field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetShowInNotificationCenter() bool {
	if o == nil || o.ShowInNotificationCenter == nil {
		var ret bool
		return ret
	}
	return *o.ShowInNotificationCenter
}

// GetShowInNotificationCenterOk returns a tuple with the ShowInNotificationCenter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetShowInNotificationCenterOk() (bool, bool) {
	if o == nil || o.ShowInNotificationCenter == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowInNotificationCenter, true
}

// HasShowInNotificationCenter returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasShowInNotificationCenter() bool {
	if o != nil && o.ShowInNotificationCenter != nil {
		return true
	}

	return false
}

// SetShowInNotificationCenter gets a reference to the given bool and assigns it to the ShowInNotificationCenter field.
func (o *MicrosoftGraphIosNotificationSettings) SetShowInNotificationCenter(v bool) {
	o.ShowInNotificationCenter = &v
}

// SetShowInNotificationCenterExplicitNull (un)sets ShowInNotificationCenter to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowInNotificationCenter value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetShowInNotificationCenterExplicitNull(b bool) {
	o.ShowInNotificationCenter = nil
	o.isExplicitNullShowInNotificationCenter = b
}
// GetShowOnLockScreen returns the ShowOnLockScreen field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetShowOnLockScreen() bool {
	if o == nil || o.ShowOnLockScreen == nil {
		var ret bool
		return ret
	}
	return *o.ShowOnLockScreen
}

// GetShowOnLockScreenOk returns a tuple with the ShowOnLockScreen field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetShowOnLockScreenOk() (bool, bool) {
	if o == nil || o.ShowOnLockScreen == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowOnLockScreen, true
}

// HasShowOnLockScreen returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasShowOnLockScreen() bool {
	if o != nil && o.ShowOnLockScreen != nil {
		return true
	}

	return false
}

// SetShowOnLockScreen gets a reference to the given bool and assigns it to the ShowOnLockScreen field.
func (o *MicrosoftGraphIosNotificationSettings) SetShowOnLockScreen(v bool) {
	o.ShowOnLockScreen = &v
}

// SetShowOnLockScreenExplicitNull (un)sets ShowOnLockScreen to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowOnLockScreen value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetShowOnLockScreenExplicitNull(b bool) {
	o.ShowOnLockScreen = nil
	o.isExplicitNullShowOnLockScreen = b
}
// GetAlertType returns the AlertType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetAlertType() AnyOfmicrosoftGraphIosNotificationAlertType {
	if o == nil || o.AlertType == nil {
		var ret AnyOfmicrosoftGraphIosNotificationAlertType
		return ret
	}
	return *o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetAlertTypeOk() (AnyOfmicrosoftGraphIosNotificationAlertType, bool) {
	if o == nil || o.AlertType == nil {
		var ret AnyOfmicrosoftGraphIosNotificationAlertType
		return ret, false
	}
	return *o.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasAlertType() bool {
	if o != nil && o.AlertType != nil {
		return true
	}

	return false
}

// SetAlertType gets a reference to the given AnyOfmicrosoftGraphIosNotificationAlertType and assigns it to the AlertType field.
func (o *MicrosoftGraphIosNotificationSettings) SetAlertType(v AnyOfmicrosoftGraphIosNotificationAlertType) {
	o.AlertType = &v
}

// GetBadgesEnabled returns the BadgesEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetBadgesEnabled() bool {
	if o == nil || o.BadgesEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BadgesEnabled
}

// GetBadgesEnabledOk returns a tuple with the BadgesEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetBadgesEnabledOk() (bool, bool) {
	if o == nil || o.BadgesEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.BadgesEnabled, true
}

// HasBadgesEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasBadgesEnabled() bool {
	if o != nil && o.BadgesEnabled != nil {
		return true
	}

	return false
}

// SetBadgesEnabled gets a reference to the given bool and assigns it to the BadgesEnabled field.
func (o *MicrosoftGraphIosNotificationSettings) SetBadgesEnabled(v bool) {
	o.BadgesEnabled = &v
}

// SetBadgesEnabledExplicitNull (un)sets BadgesEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BadgesEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetBadgesEnabledExplicitNull(b bool) {
	o.BadgesEnabled = nil
	o.isExplicitNullBadgesEnabled = b
}
// GetSoundsEnabled returns the SoundsEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosNotificationSettings) GetSoundsEnabled() bool {
	if o == nil || o.SoundsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SoundsEnabled
}

// GetSoundsEnabledOk returns a tuple with the SoundsEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosNotificationSettings) GetSoundsEnabledOk() (bool, bool) {
	if o == nil || o.SoundsEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.SoundsEnabled, true
}

// HasSoundsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphIosNotificationSettings) HasSoundsEnabled() bool {
	if o != nil && o.SoundsEnabled != nil {
		return true
	}

	return false
}

// SetSoundsEnabled gets a reference to the given bool and assigns it to the SoundsEnabled field.
func (o *MicrosoftGraphIosNotificationSettings) SetSoundsEnabled(v bool) {
	o.SoundsEnabled = &v
}

// SetSoundsEnabledExplicitNull (un)sets SoundsEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SoundsEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphIosNotificationSettings) SetSoundsEnabledExplicitNull(b bool) {
	o.SoundsEnabled = nil
	o.isExplicitNullSoundsEnabled = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphIosNotificationSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BundleID != nil {
		toSerialize["bundleID"] = o.BundleID
	}
	if o.AppName == nil {
		if o.isExplicitNullAppName {
			toSerialize["appName"] = o.AppName
		}
	} else {
		toSerialize["appName"] = o.AppName
	}
	if o.Publisher == nil {
		if o.isExplicitNullPublisher {
			toSerialize["publisher"] = o.Publisher
		}
	} else {
		toSerialize["publisher"] = o.Publisher
	}
	if o.Enabled == nil {
		if o.isExplicitNullEnabled {
			toSerialize["enabled"] = o.Enabled
		}
	} else {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ShowInNotificationCenter == nil {
		if o.isExplicitNullShowInNotificationCenter {
			toSerialize["showInNotificationCenter"] = o.ShowInNotificationCenter
		}
	} else {
		toSerialize["showInNotificationCenter"] = o.ShowInNotificationCenter
	}
	if o.ShowOnLockScreen == nil {
		if o.isExplicitNullShowOnLockScreen {
			toSerialize["showOnLockScreen"] = o.ShowOnLockScreen
		}
	} else {
		toSerialize["showOnLockScreen"] = o.ShowOnLockScreen
	}
	if o.AlertType != nil {
		toSerialize["alertType"] = o.AlertType
	}
	if o.BadgesEnabled == nil {
		if o.isExplicitNullBadgesEnabled {
			toSerialize["badgesEnabled"] = o.BadgesEnabled
		}
	} else {
		toSerialize["badgesEnabled"] = o.BadgesEnabled
	}
	if o.SoundsEnabled == nil {
		if o.isExplicitNullSoundsEnabled {
			toSerialize["soundsEnabled"] = o.SoundsEnabled
		}
	} else {
		toSerialize["soundsEnabled"] = o.SoundsEnabled
	}
	return json.Marshal(toSerialize)
}


