/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphCalculatedColumn struct for MicrosoftGraphCalculatedColumn
type MicrosoftGraphCalculatedColumn struct {
	Format *string `json:"format,omitempty"`
	isExplicitNullFormat bool `json:"-"`
	Formula *string `json:"formula,omitempty"`
	isExplicitNullFormula bool `json:"-"`
	OutputType *string `json:"outputType,omitempty"`
	isExplicitNullOutputType bool `json:"-"`
}

// GetFormat returns the Format field if non-nil, zero value otherwise.
func (o *MicrosoftGraphCalculatedColumn) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCalculatedColumn) GetFormatOk() (string, bool) {
	if o == nil || o.Format == nil {
		var ret string
		return ret, false
	}
	return *o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphCalculatedColumn) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *MicrosoftGraphCalculatedColumn) SetFormat(v string) {
	o.Format = &v
}

// SetFormatExplicitNull (un)sets Format to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Format value is set to nil even if false is passed
func (o *MicrosoftGraphCalculatedColumn) SetFormatExplicitNull(b bool) {
	o.Format = nil
	o.isExplicitNullFormat = b
}
// GetFormula returns the Formula field if non-nil, zero value otherwise.
func (o *MicrosoftGraphCalculatedColumn) GetFormula() string {
	if o == nil || o.Formula == nil {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCalculatedColumn) GetFormulaOk() (string, bool) {
	if o == nil || o.Formula == nil {
		var ret string
		return ret, false
	}
	return *o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *MicrosoftGraphCalculatedColumn) HasFormula() bool {
	if o != nil && o.Formula != nil {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *MicrosoftGraphCalculatedColumn) SetFormula(v string) {
	o.Formula = &v
}

// SetFormulaExplicitNull (un)sets Formula to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Formula value is set to nil even if false is passed
func (o *MicrosoftGraphCalculatedColumn) SetFormulaExplicitNull(b bool) {
	o.Formula = nil
	o.isExplicitNullFormula = b
}
// GetOutputType returns the OutputType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphCalculatedColumn) GetOutputType() string {
	if o == nil || o.OutputType == nil {
		var ret string
		return ret
	}
	return *o.OutputType
}

// GetOutputTypeOk returns a tuple with the OutputType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphCalculatedColumn) GetOutputTypeOk() (string, bool) {
	if o == nil || o.OutputType == nil {
		var ret string
		return ret, false
	}
	return *o.OutputType, true
}

// HasOutputType returns a boolean if a field has been set.
func (o *MicrosoftGraphCalculatedColumn) HasOutputType() bool {
	if o != nil && o.OutputType != nil {
		return true
	}

	return false
}

// SetOutputType gets a reference to the given string and assigns it to the OutputType field.
func (o *MicrosoftGraphCalculatedColumn) SetOutputType(v string) {
	o.OutputType = &v
}

// SetOutputTypeExplicitNull (un)sets OutputType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OutputType value is set to nil even if false is passed
func (o *MicrosoftGraphCalculatedColumn) SetOutputTypeExplicitNull(b bool) {
	o.OutputType = nil
	o.isExplicitNullOutputType = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphCalculatedColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Format == nil {
		if o.isExplicitNullFormat {
			toSerialize["format"] = o.Format
		}
	} else {
		toSerialize["format"] = o.Format
	}
	if o.Formula == nil {
		if o.isExplicitNullFormula {
			toSerialize["formula"] = o.Formula
		}
	} else {
		toSerialize["formula"] = o.Formula
	}
	if o.OutputType == nil {
		if o.isExplicitNullOutputType {
			toSerialize["outputType"] = o.OutputType
		}
	} else {
		toSerialize["outputType"] = o.OutputType
	}
	return json.Marshal(toSerialize)
}


