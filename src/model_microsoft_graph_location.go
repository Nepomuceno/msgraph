/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphLocation struct for MicrosoftGraphLocation
type MicrosoftGraphLocation struct {
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	LocationEmailAddress *string `json:"locationEmailAddress,omitempty"`
	isExplicitNullLocationEmailAddress bool `json:"-"`
	Address *AnyOfmicrosoftGraphPhysicalAddress `json:"address,omitempty"`
	isExplicitNullAddress bool `json:"-"`
	LocationUri *string `json:"locationUri,omitempty"`
	isExplicitNullLocationUri bool `json:"-"`
	Coordinates *AnyOfmicrosoftGraphOutlookGeoCoordinates `json:"coordinates,omitempty"`
	isExplicitNullCoordinates bool `json:"-"`
	LocationType *AnyOfmicrosoftGraphLocationType `json:"locationType,omitempty"`
	isExplicitNullLocationType bool `json:"-"`
	UniqueId *string `json:"uniqueId,omitempty"`
	isExplicitNullUniqueId bool `json:"-"`
	UniqueIdType *AnyOfmicrosoftGraphLocationUniqueIdType `json:"uniqueIdType,omitempty"`
	isExplicitNullUniqueIdType bool `json:"-"`
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphLocation) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetLocationEmailAddress returns the LocationEmailAddress field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetLocationEmailAddress() string {
	if o == nil || o.LocationEmailAddress == nil {
		var ret string
		return ret
	}
	return *o.LocationEmailAddress
}

// GetLocationEmailAddressOk returns a tuple with the LocationEmailAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetLocationEmailAddressOk() (string, bool) {
	if o == nil || o.LocationEmailAddress == nil {
		var ret string
		return ret, false
	}
	return *o.LocationEmailAddress, true
}

// HasLocationEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasLocationEmailAddress() bool {
	if o != nil && o.LocationEmailAddress != nil {
		return true
	}

	return false
}

// SetLocationEmailAddress gets a reference to the given string and assigns it to the LocationEmailAddress field.
func (o *MicrosoftGraphLocation) SetLocationEmailAddress(v string) {
	o.LocationEmailAddress = &v
}

// SetLocationEmailAddressExplicitNull (un)sets LocationEmailAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LocationEmailAddress value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetLocationEmailAddressExplicitNull(b bool) {
	o.LocationEmailAddress = nil
	o.isExplicitNullLocationEmailAddress = b
}
// GetAddress returns the Address field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.Address == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.Address == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the Address field.
func (o *MicrosoftGraphLocation) SetAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.Address = &v
}

// SetAddressExplicitNull (un)sets Address to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Address value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetAddressExplicitNull(b bool) {
	o.Address = nil
	o.isExplicitNullAddress = b
}
// GetLocationUri returns the LocationUri field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetLocationUri() string {
	if o == nil || o.LocationUri == nil {
		var ret string
		return ret
	}
	return *o.LocationUri
}

// GetLocationUriOk returns a tuple with the LocationUri field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetLocationUriOk() (string, bool) {
	if o == nil || o.LocationUri == nil {
		var ret string
		return ret, false
	}
	return *o.LocationUri, true
}

// HasLocationUri returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasLocationUri() bool {
	if o != nil && o.LocationUri != nil {
		return true
	}

	return false
}

// SetLocationUri gets a reference to the given string and assigns it to the LocationUri field.
func (o *MicrosoftGraphLocation) SetLocationUri(v string) {
	o.LocationUri = &v
}

// SetLocationUriExplicitNull (un)sets LocationUri to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LocationUri value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetLocationUriExplicitNull(b bool) {
	o.LocationUri = nil
	o.isExplicitNullLocationUri = b
}
// GetCoordinates returns the Coordinates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetCoordinates() AnyOfmicrosoftGraphOutlookGeoCoordinates {
	if o == nil || o.Coordinates == nil {
		var ret AnyOfmicrosoftGraphOutlookGeoCoordinates
		return ret
	}
	return *o.Coordinates
}

// GetCoordinatesOk returns a tuple with the Coordinates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetCoordinatesOk() (AnyOfmicrosoftGraphOutlookGeoCoordinates, bool) {
	if o == nil || o.Coordinates == nil {
		var ret AnyOfmicrosoftGraphOutlookGeoCoordinates
		return ret, false
	}
	return *o.Coordinates, true
}

// HasCoordinates returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasCoordinates() bool {
	if o != nil && o.Coordinates != nil {
		return true
	}

	return false
}

// SetCoordinates gets a reference to the given AnyOfmicrosoftGraphOutlookGeoCoordinates and assigns it to the Coordinates field.
func (o *MicrosoftGraphLocation) SetCoordinates(v AnyOfmicrosoftGraphOutlookGeoCoordinates) {
	o.Coordinates = &v
}

// SetCoordinatesExplicitNull (un)sets Coordinates to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Coordinates value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetCoordinatesExplicitNull(b bool) {
	o.Coordinates = nil
	o.isExplicitNullCoordinates = b
}
// GetLocationType returns the LocationType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetLocationType() AnyOfmicrosoftGraphLocationType {
	if o == nil || o.LocationType == nil {
		var ret AnyOfmicrosoftGraphLocationType
		return ret
	}
	return *o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetLocationTypeOk() (AnyOfmicrosoftGraphLocationType, bool) {
	if o == nil || o.LocationType == nil {
		var ret AnyOfmicrosoftGraphLocationType
		return ret, false
	}
	return *o.LocationType, true
}

// HasLocationType returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasLocationType() bool {
	if o != nil && o.LocationType != nil {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given AnyOfmicrosoftGraphLocationType and assigns it to the LocationType field.
func (o *MicrosoftGraphLocation) SetLocationType(v AnyOfmicrosoftGraphLocationType) {
	o.LocationType = &v
}

// SetLocationTypeExplicitNull (un)sets LocationType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LocationType value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetLocationTypeExplicitNull(b bool) {
	o.LocationType = nil
	o.isExplicitNullLocationType = b
}
// GetUniqueId returns the UniqueId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetUniqueId() string {
	if o == nil || o.UniqueId == nil {
		var ret string
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetUniqueIdOk() (string, bool) {
	if o == nil || o.UniqueId == nil {
		var ret string
		return ret, false
	}
	return *o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasUniqueId() bool {
	if o != nil && o.UniqueId != nil {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given string and assigns it to the UniqueId field.
func (o *MicrosoftGraphLocation) SetUniqueId(v string) {
	o.UniqueId = &v
}

// SetUniqueIdExplicitNull (un)sets UniqueId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UniqueId value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetUniqueIdExplicitNull(b bool) {
	o.UniqueId = nil
	o.isExplicitNullUniqueId = b
}
// GetUniqueIdType returns the UniqueIdType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLocation) GetUniqueIdType() AnyOfmicrosoftGraphLocationUniqueIdType {
	if o == nil || o.UniqueIdType == nil {
		var ret AnyOfmicrosoftGraphLocationUniqueIdType
		return ret
	}
	return *o.UniqueIdType
}

// GetUniqueIdTypeOk returns a tuple with the UniqueIdType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLocation) GetUniqueIdTypeOk() (AnyOfmicrosoftGraphLocationUniqueIdType, bool) {
	if o == nil || o.UniqueIdType == nil {
		var ret AnyOfmicrosoftGraphLocationUniqueIdType
		return ret, false
	}
	return *o.UniqueIdType, true
}

// HasUniqueIdType returns a boolean if a field has been set.
func (o *MicrosoftGraphLocation) HasUniqueIdType() bool {
	if o != nil && o.UniqueIdType != nil {
		return true
	}

	return false
}

// SetUniqueIdType gets a reference to the given AnyOfmicrosoftGraphLocationUniqueIdType and assigns it to the UniqueIdType field.
func (o *MicrosoftGraphLocation) SetUniqueIdType(v AnyOfmicrosoftGraphLocationUniqueIdType) {
	o.UniqueIdType = &v
}

// SetUniqueIdTypeExplicitNull (un)sets UniqueIdType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UniqueIdType value is set to nil even if false is passed
func (o *MicrosoftGraphLocation) SetUniqueIdTypeExplicitNull(b bool) {
	o.UniqueIdType = nil
	o.isExplicitNullUniqueIdType = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.LocationEmailAddress == nil {
		if o.isExplicitNullLocationEmailAddress {
			toSerialize["locationEmailAddress"] = o.LocationEmailAddress
		}
	} else {
		toSerialize["locationEmailAddress"] = o.LocationEmailAddress
	}
	if o.Address == nil {
		if o.isExplicitNullAddress {
			toSerialize["address"] = o.Address
		}
	} else {
		toSerialize["address"] = o.Address
	}
	if o.LocationUri == nil {
		if o.isExplicitNullLocationUri {
			toSerialize["locationUri"] = o.LocationUri
		}
	} else {
		toSerialize["locationUri"] = o.LocationUri
	}
	if o.Coordinates == nil {
		if o.isExplicitNullCoordinates {
			toSerialize["coordinates"] = o.Coordinates
		}
	} else {
		toSerialize["coordinates"] = o.Coordinates
	}
	if o.LocationType == nil {
		if o.isExplicitNullLocationType {
			toSerialize["locationType"] = o.LocationType
		}
	} else {
		toSerialize["locationType"] = o.LocationType
	}
	if o.UniqueId == nil {
		if o.isExplicitNullUniqueId {
			toSerialize["uniqueId"] = o.UniqueId
		}
	} else {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if o.UniqueIdType == nil {
		if o.isExplicitNullUniqueIdType {
			toSerialize["uniqueIdType"] = o.UniqueIdType
		}
	} else {
		toSerialize["uniqueIdType"] = o.UniqueIdType
	}
	return json.Marshal(toSerialize)
}


