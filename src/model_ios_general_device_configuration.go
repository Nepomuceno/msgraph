/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// IosGeneralDeviceConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the iosGeneralDeviceConfiguration resource.
type IosGeneralDeviceConfiguration struct {
	// Indicates whether or not to allow account modification when the device is in supervised mode.
	AccountBlockModification *bool `json:"accountBlockModification,omitempty"`

	// Indicates whether or not to allow activation lock when the device is in the supervised mode.
	ActivationLockAllowWhenSupervised *bool `json:"activationLockAllowWhenSupervised,omitempty"`

	// Indicates whether or not to allow AirDrop when the device is in supervised mode.
	AirDropBlocked *bool `json:"airDropBlocked,omitempty"`

	// Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later).
	AirDropForceUnmanagedDropTarget *bool `json:"airDropForceUnmanagedDropTarget,omitempty"`

	// Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password.
	AirPlayForcePairingPasswordForOutgoingRequests *bool `json:"airPlayForcePairingPasswordForOutgoingRequests,omitempty"`

	// Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).
	AppleWatchBlockPairing *bool `json:"appleWatchBlockPairing,omitempty"`

	// Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later).
	AppleWatchForceWristDetection *bool `json:"appleWatchForceWristDetection,omitempty"`

	// Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later).
	AppleNewsBlocked *bool `json:"appleNewsBlocked,omitempty"`

	// Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements.
	AppsSingleAppModeList *[]AnyOfmicrosoftGraphAppListItem `json:"appsSingleAppModeList,omitempty"`

	// List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements.
	AppsVisibilityList *[]AnyOfmicrosoftGraphAppListItem `json:"appsVisibilityList,omitempty"`

	// Type of list that is in the AppsVisibilityList.
	AppsVisibilityListType *AnyOfmicrosoftGraphAppListType `json:"appsVisibilityListType,omitempty"`

	// Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later).
	AppStoreBlockAutomaticDownloads *bool `json:"appStoreBlockAutomaticDownloads,omitempty"`

	// Indicates whether or not to block the user from using the App Store.
	AppStoreBlocked *bool `json:"appStoreBlocked,omitempty"`

	// Indicates whether or not to block the user from making in app purchases.
	AppStoreBlockInAppPurchases *bool `json:"appStoreBlockInAppPurchases,omitempty"`

	// Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later).
	AppStoreBlockUIAppInstallation *bool `json:"appStoreBlockUIAppInstallation,omitempty"`

	// Indicates whether or not to require a password when using the app store.
	AppStoreRequirePassword *bool `json:"appStoreRequirePassword,omitempty"`

	// Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later).
	BluetoothBlockModification *bool `json:"bluetoothBlockModification,omitempty"`

	// Indicates whether or not to block the user from accessing the camera of the device.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`

	// Indicates whether or not to block data roaming.
	CellularBlockDataRoaming *bool `json:"cellularBlockDataRoaming,omitempty"`

	// Indicates whether or not to block global background fetch while roaming.
	CellularBlockGlobalBackgroundFetchWhileRoaming *bool `json:"cellularBlockGlobalBackgroundFetchWhileRoaming,omitempty"`

	// Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode.
	CellularBlockPerAppDataModification *bool `json:"cellularBlockPerAppDataModification,omitempty"`

	// Indicates whether or not to block Personal Hotspot.
	CellularBlockPersonalHotspot *bool `json:"cellularBlockPersonalHotspot,omitempty"`

	// Indicates whether or not to block voice roaming.
	CellularBlockVoiceRoaming *bool `json:"cellularBlockVoiceRoaming,omitempty"`

	// Indicates whether or not to block untrusted TLS certificates.
	CertificatesBlockUntrustedTlsCertificates *bool `json:"certificatesBlockUntrustedTlsCertificates,omitempty"`

	// Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later).
	ClassroomAppBlockRemoteScreenObservation *bool `json:"classroomAppBlockRemoteScreenObservation,omitempty"`

	// Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode.
	ClassroomAppForceUnpromptedScreenObservation *bool `json:"classroomAppForceUnpromptedScreenObservation,omitempty"`

	// List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList *[]AnyOfmicrosoftGraphAppListItem `json:"compliantAppsList,omitempty"`

	// List that is in the AppComplianceList.
	CompliantAppListType *AnyOfmicrosoftGraphAppListType `json:"compliantAppListType,omitempty"`

	// Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.
	ConfigurationProfileBlockChanges *bool `json:"configurationProfileBlockChanges,omitempty"`

	// Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).
	DefinitionLookupBlocked *bool `json:"definitionLookupBlocked,omitempty"`

	// Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode.
	DeviceBlockEnableRestrictions *bool `json:"deviceBlockEnableRestrictions,omitempty"`

	// Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode.
	DeviceBlockEraseContentAndSettings *bool `json:"deviceBlockEraseContentAndSettings,omitempty"`

	// Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).
	DeviceBlockNameModification *bool `json:"deviceBlockNameModification,omitempty"`

	// Indicates whether or not to block diagnostic data submission.
	DiagnosticDataBlockSubmission *bool `json:"diagnosticDataBlockSubmission,omitempty"`

	// Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later).
	DiagnosticDataBlockSubmissionModification *bool `json:"diagnosticDataBlockSubmissionModification,omitempty"`

	// Indicates whether or not to block the user from viewing managed documents in unmanaged apps.
	DocumentsBlockManagedDocumentsInUnmanagedApps *bool `json:"documentsBlockManagedDocumentsInUnmanagedApps,omitempty"`

	// Indicates whether or not to block the user from viewing unmanaged documents in managed apps.
	DocumentsBlockUnmanagedDocumentsInManagedApps *bool `json:"documentsBlockUnmanagedDocumentsInManagedApps,omitempty"`

	// An email address lacking a suffix that matches any of these strings will be considered out-of-domain.
	EmailInDomainSuffixes *[]string `json:"emailInDomainSuffixes,omitempty"`

	// Indicates whether or not to block the user from trusting an enterprise app.
	EnterpriseAppBlockTrust *bool `json:"enterpriseAppBlockTrust,omitempty"`

	// Indicates whether or not to block the user from modifying the enterprise app trust settings.
	EnterpriseAppBlockTrustModification *bool `json:"enterpriseAppBlockTrustModification,omitempty"`

	// Indicates whether or not to block the user from using FaceTime.
	FaceTimeBlocked *bool `json:"faceTimeBlocked,omitempty"`

	// Indicates whether or not to block Find My Friends when the device is in supervised mode.
	FindMyFriendsBlocked *bool `json:"findMyFriendsBlocked,omitempty"`

	// Indicates whether or not to block the user from having friends in Game Center.
	GamingBlockGameCenterFriends *bool `json:"gamingBlockGameCenterFriends,omitempty"`

	// Indicates whether or not to block the user from using multiplayer gaming.
	GamingBlockMultiplayer *bool `json:"gamingBlockMultiplayer,omitempty"`

	// Indicates whether or not to block the user from using Game Center when the device is in supervised mode.
	GameCenterBlocked *bool `json:"gameCenterBlocked,omitempty"`

	// indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode.
	HostPairingBlocked *bool `json:"hostPairingBlocked,omitempty"`

	// Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.
	IBooksStoreBlocked *bool `json:"iBooksStoreBlocked,omitempty"`

	// Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica.
	IBooksStoreBlockErotica *bool `json:"iBooksStoreBlockErotica,omitempty"`

	// Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device.
	ICloudBlockActivityContinuation *bool `json:"iCloudBlockActivityContinuation,omitempty"`

	// Indicates whether or not to block iCloud backup.
	ICloudBlockBackup *bool `json:"iCloudBlockBackup,omitempty"`

	// Indicates whether or not to block iCloud document sync.
	ICloudBlockDocumentSync *bool `json:"iCloudBlockDocumentSync,omitempty"`

	// Indicates whether or not to block Managed Apps Cloud Sync.
	ICloudBlockManagedAppsSync *bool `json:"iCloudBlockManagedAppsSync,omitempty"`

	// Indicates whether or not to block iCloud Photo Library.
	ICloudBlockPhotoLibrary *bool `json:"iCloudBlockPhotoLibrary,omitempty"`

	// Indicates whether or not to block iCloud Photo Stream Sync.
	ICloudBlockPhotoStreamSync *bool `json:"iCloudBlockPhotoStreamSync,omitempty"`

	// Indicates whether or not to block Shared Photo Stream.
	ICloudBlockSharedPhotoStream *bool `json:"iCloudBlockSharedPhotoStream,omitempty"`

	// Indicates whether or not to require backups to iCloud be encrypted.
	ICloudRequireEncryptedBackup *bool `json:"iCloudRequireEncryptedBackup,omitempty"`

	// Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store.
	ITunesBlockExplicitContent *bool `json:"iTunesBlockExplicitContent,omitempty"`

	// Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later).
	ITunesBlockMusicService *bool `json:"iTunesBlockMusicService,omitempty"`

	// Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).
	ITunesBlockRadio *bool `json:"iTunesBlockRadio,omitempty"`

	// Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockAutoCorrect *bool `json:"keyboardBlockAutoCorrect,omitempty"`

	// Indicates whether or not to block the user from using dictation input when the device is in supervised mode.
	KeyboardBlockDictation *bool `json:"keyboardBlockDictation,omitempty"`

	// Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockPredictive *bool `json:"keyboardBlockPredictive,omitempty"`

	// Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).
	KeyboardBlockShortcuts *bool `json:"keyboardBlockShortcuts,omitempty"`

	// Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockSpellCheck *bool `json:"keyboardBlockSpellCheck,omitempty"`

	// Indicates whether or not to allow assistive speak while in kiosk mode.
	KioskModeAllowAssistiveSpeak *bool `json:"kioskModeAllowAssistiveSpeak,omitempty"`

	// Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode.
	KioskModeAllowAssistiveTouchSettings *bool `json:"kioskModeAllowAssistiveTouchSettings,omitempty"`

	// Indicates whether or not to allow device auto lock while in kiosk mode.
	KioskModeAllowAutoLock *bool `json:"kioskModeAllowAutoLock,omitempty"`

	// Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode.
	KioskModeAllowColorInversionSettings *bool `json:"kioskModeAllowColorInversionSettings,omitempty"`

	// Indicates whether or not to allow use of the ringer switch while in kiosk mode.
	KioskModeAllowRingerSwitch *bool `json:"kioskModeAllowRingerSwitch,omitempty"`

	// Indicates whether or not to allow screen rotation while in kiosk mode.
	KioskModeAllowScreenRotation *bool `json:"kioskModeAllowScreenRotation,omitempty"`

	// Indicates whether or not to allow use of the sleep button while in kiosk mode.
	KioskModeAllowSleepButton *bool `json:"kioskModeAllowSleepButton,omitempty"`

	// Indicates whether or not to allow use of the touchscreen while in kiosk mode.
	KioskModeAllowTouchscreen *bool `json:"kioskModeAllowTouchscreen,omitempty"`

	// Indicates whether or not to allow access to the voice over settings while in kiosk mode.
	KioskModeAllowVoiceOverSettings *bool `json:"kioskModeAllowVoiceOverSettings,omitempty"`

	// Indicates whether or not to allow use of the volume buttons while in kiosk mode.
	KioskModeAllowVolumeButtons *bool `json:"kioskModeAllowVolumeButtons,omitempty"`

	// Indicates whether or not to allow access to the zoom settings while in kiosk mode.
	KioskModeAllowZoomSettings *bool `json:"kioskModeAllowZoomSettings,omitempty"`

	// URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.
	KioskModeAppStoreUrl *string `json:"kioskModeAppStoreUrl,omitempty"`
	isExplicitNullKioskModeAppStoreUrl bool `json:"-"`
	// ID for built-in apps to use for kiosk mode. Used when KioskModeManagedAppId and KioskModeAppStoreUrl are not set.
	KioskModeBuiltInAppId *string `json:"kioskModeBuiltInAppId,omitempty"`
	isExplicitNullKioskModeBuiltInAppId bool `json:"-"`
	// Indicates whether or not to require assistive touch while in kiosk mode.
	KioskModeRequireAssistiveTouch *bool `json:"kioskModeRequireAssistiveTouch,omitempty"`

	// Indicates whether or not to require color inversion while in kiosk mode.
	KioskModeRequireColorInversion *bool `json:"kioskModeRequireColorInversion,omitempty"`

	// Indicates whether or not to require mono audio while in kiosk mode.
	KioskModeRequireMonoAudio *bool `json:"kioskModeRequireMonoAudio,omitempty"`

	// Indicates whether or not to require voice over while in kiosk mode.
	KioskModeRequireVoiceOver *bool `json:"kioskModeRequireVoiceOver,omitempty"`

	// Indicates whether or not to require zoom while in kiosk mode.
	KioskModeRequireZoom *bool `json:"kioskModeRequireZoom,omitempty"`

	// Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.
	KioskModeManagedAppId *string `json:"kioskModeManagedAppId,omitempty"`
	isExplicitNullKioskModeManagedAppId bool `json:"-"`
	// Indicates whether or not to block the user from using control center on the lock screen.
	LockScreenBlockControlCenter *bool `json:"lockScreenBlockControlCenter,omitempty"`

	// Indicates whether or not to block the user from using the notification view on the lock screen.
	LockScreenBlockNotificationView *bool `json:"lockScreenBlockNotificationView,omitempty"`

	// Indicates whether or not to block the user from using passbook when the device is locked.
	LockScreenBlockPassbook *bool `json:"lockScreenBlockPassbook,omitempty"`

	// Indicates whether or not to block the user from using the Today View on the lock screen.
	LockScreenBlockTodayView *bool `json:"lockScreenBlockTodayView,omitempty"`

	// Media content rating settings for Australia
	MediaContentRatingAustralia *AnyOfmicrosoftGraphMediaContentRatingAustralia `json:"mediaContentRatingAustralia,omitempty"`
	isExplicitNullMediaContentRatingAustralia bool `json:"-"`
	// Media content rating settings for Canada
	MediaContentRatingCanada *AnyOfmicrosoftGraphMediaContentRatingCanada `json:"mediaContentRatingCanada,omitempty"`
	isExplicitNullMediaContentRatingCanada bool `json:"-"`
	// Media content rating settings for France
	MediaContentRatingFrance *AnyOfmicrosoftGraphMediaContentRatingFrance `json:"mediaContentRatingFrance,omitempty"`
	isExplicitNullMediaContentRatingFrance bool `json:"-"`
	// Media content rating settings for Germany
	MediaContentRatingGermany *AnyOfmicrosoftGraphMediaContentRatingGermany `json:"mediaContentRatingGermany,omitempty"`
	isExplicitNullMediaContentRatingGermany bool `json:"-"`
	// Media content rating settings for Ireland
	MediaContentRatingIreland *AnyOfmicrosoftGraphMediaContentRatingIreland `json:"mediaContentRatingIreland,omitempty"`
	isExplicitNullMediaContentRatingIreland bool `json:"-"`
	// Media content rating settings for Japan
	MediaContentRatingJapan *AnyOfmicrosoftGraphMediaContentRatingJapan `json:"mediaContentRatingJapan,omitempty"`
	isExplicitNullMediaContentRatingJapan bool `json:"-"`
	// Media content rating settings for New Zealand
	MediaContentRatingNewZealand *AnyOfmicrosoftGraphMediaContentRatingNewZealand `json:"mediaContentRatingNewZealand,omitempty"`
	isExplicitNullMediaContentRatingNewZealand bool `json:"-"`
	// Media content rating settings for United Kingdom
	MediaContentRatingUnitedKingdom *AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom `json:"mediaContentRatingUnitedKingdom,omitempty"`
	isExplicitNullMediaContentRatingUnitedKingdom bool `json:"-"`
	// Media content rating settings for United States
	MediaContentRatingUnitedStates *AnyOfmicrosoftGraphMediaContentRatingUnitedStates `json:"mediaContentRatingUnitedStates,omitempty"`
	isExplicitNullMediaContentRatingUnitedStates bool `json:"-"`
	// List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements.
	NetworkUsageRules *[]AnyOfmicrosoftGraphIosNetworkUsageRule `json:"networkUsageRules,omitempty"`

	// Media content rating settings for Apps
	MediaContentRatingApps *AnyOfmicrosoftGraphRatingAppsType `json:"mediaContentRatingApps,omitempty"`

	// Indicates whether or not to block the user from using the Messages app on the supervised device.
	MessagesBlocked *bool `json:"messagesBlocked,omitempty"`

	// Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).
	NotificationsBlockSettingsModification *bool `json:"notificationsBlockSettingsModification,omitempty"`

	// Indicates whether or not to block fingerprint unlock.
	PasscodeBlockFingerprintUnlock *bool `json:"passcodeBlockFingerprintUnlock,omitempty"`

	// Block modification of registered Touch ID fingerprints when in supervised mode.
	PasscodeBlockFingerprintModification *bool `json:"passcodeBlockFingerprintModification,omitempty"`

	// Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later).
	PasscodeBlockModification *bool `json:"passcodeBlockModification,omitempty"`

	// Indicates whether or not to block simple passcodes.
	PasscodeBlockSimple *bool `json:"passcodeBlockSimple,omitempty"`

	// Number of days before the passcode expires. Valid values 1 to 65535
	PasscodeExpirationDays *int32 `json:"passcodeExpirationDays,omitempty"`
	isExplicitNullPasscodeExpirationDays bool `json:"-"`
	// Minimum length of passcode. Valid values 4 to 14
	PasscodeMinimumLength *int32 `json:"passcodeMinimumLength,omitempty"`
	isExplicitNullPasscodeMinimumLength bool `json:"-"`
	// Minutes of inactivity before a passcode is required.
	PasscodeMinutesOfInactivityBeforeLock *int32 `json:"passcodeMinutesOfInactivityBeforeLock,omitempty"`
	isExplicitNullPasscodeMinutesOfInactivityBeforeLock bool `json:"-"`
	// Minutes of inactivity before the screen times out.
	PasscodeMinutesOfInactivityBeforeScreenTimeout *int32 `json:"passcodeMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	isExplicitNullPasscodeMinutesOfInactivityBeforeScreenTimeout bool `json:"-"`
	// Number of character sets a passcode must contain. Valid values 0 to 4
	PasscodeMinimumCharacterSetCount *int32 `json:"passcodeMinimumCharacterSetCount,omitempty"`
	isExplicitNullPasscodeMinimumCharacterSetCount bool `json:"-"`
	// Number of previous passcodes to block. Valid values 1 to 24
	PasscodePreviousPasscodeBlockCount *int32 `json:"passcodePreviousPasscodeBlockCount,omitempty"`
	isExplicitNullPasscodePreviousPasscodeBlockCount bool `json:"-"`
	// Number of sign in failures allowed before wiping the device. Valid values 4 to 11
	PasscodeSignInFailureCountBeforeWipe *int32 `json:"passcodeSignInFailureCountBeforeWipe,omitempty"`
	isExplicitNullPasscodeSignInFailureCountBeforeWipe bool `json:"-"`
	// Type of passcode that is required.
	PasscodeRequiredType *AnyOfmicrosoftGraphRequiredPasswordType `json:"passcodeRequiredType,omitempty"`

	// Indicates whether or not to require a passcode.
	PasscodeRequired *bool `json:"passcodeRequired,omitempty"`

	// Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later).
	PodcastsBlocked *bool `json:"podcastsBlocked,omitempty"`

	// Indicates whether or not to block the user from using Auto fill in Safari.
	SafariBlockAutofill *bool `json:"safariBlockAutofill,omitempty"`

	// Indicates whether or not to block JavaScript in Safari.
	SafariBlockJavaScript *bool `json:"safariBlockJavaScript,omitempty"`

	// Indicates whether or not to block popups in Safari.
	SafariBlockPopups *bool `json:"safariBlockPopups,omitempty"`

	// Indicates whether or not to block the user from using Safari.
	SafariBlocked *bool `json:"safariBlocked,omitempty"`

	// Cookie settings for Safari.
	SafariCookieSettings *AnyOfmicrosoftGraphWebBrowserCookieSettings `json:"safariCookieSettings,omitempty"`

	// URLs matching the patterns listed here will be considered managed.
	SafariManagedDomains *[]string `json:"safariManagedDomains,omitempty"`

	// Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later).
	SafariPasswordAutoFillDomains *[]string `json:"safariPasswordAutoFillDomains,omitempty"`

	// Indicates whether or not to require fraud warning in Safari.
	SafariRequireFraudWarning *bool `json:"safariRequireFraudWarning,omitempty"`

	// Indicates whether or not to block the user from taking Screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`

	// Indicates whether or not to block the user from using Siri.
	SiriBlocked *bool `json:"siriBlocked,omitempty"`

	// Indicates whether or not to block the user from using Siri when locked.
	SiriBlockedWhenLocked *bool `json:"siriBlockedWhenLocked,omitempty"`

	// Indicates whether or not to block Siri from querying user-generated content when used on a supervised device.
	SiriBlockUserGeneratedContent *bool `json:"siriBlockUserGeneratedContent,omitempty"`

	// Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device.
	SiriRequireProfanityFilter *bool `json:"siriRequireProfanityFilter,omitempty"`

	// Indicates whether or not to block Spotlight search from returning internet results on supervised device.
	SpotlightBlockInternetResults *bool `json:"spotlightBlockInternetResults,omitempty"`

	// Indicates whether or not to block voice dialing.
	VoiceDialingBlocked *bool `json:"voiceDialingBlocked,omitempty"`

	// Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) .
	WallpaperBlockModification *bool `json:"wallpaperBlockModification,omitempty"`

	// Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode.
	WiFiConnectOnlyToConfiguredNetworks *bool `json:"wiFiConnectOnlyToConfiguredNetworks,omitempty"`

}

// GetAccountBlockModification returns the AccountBlockModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAccountBlockModification() bool {
	if o == nil || o.AccountBlockModification == nil {
		var ret bool
		return ret
	}
	return *o.AccountBlockModification
}

// GetAccountBlockModificationOk returns a tuple with the AccountBlockModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAccountBlockModificationOk() (bool, bool) {
	if o == nil || o.AccountBlockModification == nil {
		var ret bool
		return ret, false
	}
	return *o.AccountBlockModification, true
}

// HasAccountBlockModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAccountBlockModification() bool {
	if o != nil && o.AccountBlockModification != nil {
		return true
	}

	return false
}

// SetAccountBlockModification gets a reference to the given bool and assigns it to the AccountBlockModification field.
func (o *IosGeneralDeviceConfiguration) SetAccountBlockModification(v bool) {
	o.AccountBlockModification = &v
}

// GetActivationLockAllowWhenSupervised returns the ActivationLockAllowWhenSupervised field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetActivationLockAllowWhenSupervised() bool {
	if o == nil || o.ActivationLockAllowWhenSupervised == nil {
		var ret bool
		return ret
	}
	return *o.ActivationLockAllowWhenSupervised
}

// GetActivationLockAllowWhenSupervisedOk returns a tuple with the ActivationLockAllowWhenSupervised field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetActivationLockAllowWhenSupervisedOk() (bool, bool) {
	if o == nil || o.ActivationLockAllowWhenSupervised == nil {
		var ret bool
		return ret, false
	}
	return *o.ActivationLockAllowWhenSupervised, true
}

// HasActivationLockAllowWhenSupervised returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasActivationLockAllowWhenSupervised() bool {
	if o != nil && o.ActivationLockAllowWhenSupervised != nil {
		return true
	}

	return false
}

// SetActivationLockAllowWhenSupervised gets a reference to the given bool and assigns it to the ActivationLockAllowWhenSupervised field.
func (o *IosGeneralDeviceConfiguration) SetActivationLockAllowWhenSupervised(v bool) {
	o.ActivationLockAllowWhenSupervised = &v
}

// GetAirDropBlocked returns the AirDropBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAirDropBlocked() bool {
	if o == nil || o.AirDropBlocked == nil {
		var ret bool
		return ret
	}
	return *o.AirDropBlocked
}

// GetAirDropBlockedOk returns a tuple with the AirDropBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAirDropBlockedOk() (bool, bool) {
	if o == nil || o.AirDropBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.AirDropBlocked, true
}

// HasAirDropBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAirDropBlocked() bool {
	if o != nil && o.AirDropBlocked != nil {
		return true
	}

	return false
}

// SetAirDropBlocked gets a reference to the given bool and assigns it to the AirDropBlocked field.
func (o *IosGeneralDeviceConfiguration) SetAirDropBlocked(v bool) {
	o.AirDropBlocked = &v
}

// GetAirDropForceUnmanagedDropTarget returns the AirDropForceUnmanagedDropTarget field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAirDropForceUnmanagedDropTarget() bool {
	if o == nil || o.AirDropForceUnmanagedDropTarget == nil {
		var ret bool
		return ret
	}
	return *o.AirDropForceUnmanagedDropTarget
}

// GetAirDropForceUnmanagedDropTargetOk returns a tuple with the AirDropForceUnmanagedDropTarget field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAirDropForceUnmanagedDropTargetOk() (bool, bool) {
	if o == nil || o.AirDropForceUnmanagedDropTarget == nil {
		var ret bool
		return ret, false
	}
	return *o.AirDropForceUnmanagedDropTarget, true
}

// HasAirDropForceUnmanagedDropTarget returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAirDropForceUnmanagedDropTarget() bool {
	if o != nil && o.AirDropForceUnmanagedDropTarget != nil {
		return true
	}

	return false
}

// SetAirDropForceUnmanagedDropTarget gets a reference to the given bool and assigns it to the AirDropForceUnmanagedDropTarget field.
func (o *IosGeneralDeviceConfiguration) SetAirDropForceUnmanagedDropTarget(v bool) {
	o.AirDropForceUnmanagedDropTarget = &v
}

// GetAirPlayForcePairingPasswordForOutgoingRequests returns the AirPlayForcePairingPasswordForOutgoingRequests field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAirPlayForcePairingPasswordForOutgoingRequests() bool {
	if o == nil || o.AirPlayForcePairingPasswordForOutgoingRequests == nil {
		var ret bool
		return ret
	}
	return *o.AirPlayForcePairingPasswordForOutgoingRequests
}

// GetAirPlayForcePairingPasswordForOutgoingRequestsOk returns a tuple with the AirPlayForcePairingPasswordForOutgoingRequests field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAirPlayForcePairingPasswordForOutgoingRequestsOk() (bool, bool) {
	if o == nil || o.AirPlayForcePairingPasswordForOutgoingRequests == nil {
		var ret bool
		return ret, false
	}
	return *o.AirPlayForcePairingPasswordForOutgoingRequests, true
}

// HasAirPlayForcePairingPasswordForOutgoingRequests returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAirPlayForcePairingPasswordForOutgoingRequests() bool {
	if o != nil && o.AirPlayForcePairingPasswordForOutgoingRequests != nil {
		return true
	}

	return false
}

// SetAirPlayForcePairingPasswordForOutgoingRequests gets a reference to the given bool and assigns it to the AirPlayForcePairingPasswordForOutgoingRequests field.
func (o *IosGeneralDeviceConfiguration) SetAirPlayForcePairingPasswordForOutgoingRequests(v bool) {
	o.AirPlayForcePairingPasswordForOutgoingRequests = &v
}

// GetAppleWatchBlockPairing returns the AppleWatchBlockPairing field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppleWatchBlockPairing() bool {
	if o == nil || o.AppleWatchBlockPairing == nil {
		var ret bool
		return ret
	}
	return *o.AppleWatchBlockPairing
}

// GetAppleWatchBlockPairingOk returns a tuple with the AppleWatchBlockPairing field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppleWatchBlockPairingOk() (bool, bool) {
	if o == nil || o.AppleWatchBlockPairing == nil {
		var ret bool
		return ret, false
	}
	return *o.AppleWatchBlockPairing, true
}

// HasAppleWatchBlockPairing returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppleWatchBlockPairing() bool {
	if o != nil && o.AppleWatchBlockPairing != nil {
		return true
	}

	return false
}

// SetAppleWatchBlockPairing gets a reference to the given bool and assigns it to the AppleWatchBlockPairing field.
func (o *IosGeneralDeviceConfiguration) SetAppleWatchBlockPairing(v bool) {
	o.AppleWatchBlockPairing = &v
}

// GetAppleWatchForceWristDetection returns the AppleWatchForceWristDetection field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppleWatchForceWristDetection() bool {
	if o == nil || o.AppleWatchForceWristDetection == nil {
		var ret bool
		return ret
	}
	return *o.AppleWatchForceWristDetection
}

// GetAppleWatchForceWristDetectionOk returns a tuple with the AppleWatchForceWristDetection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppleWatchForceWristDetectionOk() (bool, bool) {
	if o == nil || o.AppleWatchForceWristDetection == nil {
		var ret bool
		return ret, false
	}
	return *o.AppleWatchForceWristDetection, true
}

// HasAppleWatchForceWristDetection returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppleWatchForceWristDetection() bool {
	if o != nil && o.AppleWatchForceWristDetection != nil {
		return true
	}

	return false
}

// SetAppleWatchForceWristDetection gets a reference to the given bool and assigns it to the AppleWatchForceWristDetection field.
func (o *IosGeneralDeviceConfiguration) SetAppleWatchForceWristDetection(v bool) {
	o.AppleWatchForceWristDetection = &v
}

// GetAppleNewsBlocked returns the AppleNewsBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppleNewsBlocked() bool {
	if o == nil || o.AppleNewsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.AppleNewsBlocked
}

// GetAppleNewsBlockedOk returns a tuple with the AppleNewsBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppleNewsBlockedOk() (bool, bool) {
	if o == nil || o.AppleNewsBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.AppleNewsBlocked, true
}

// HasAppleNewsBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppleNewsBlocked() bool {
	if o != nil && o.AppleNewsBlocked != nil {
		return true
	}

	return false
}

// SetAppleNewsBlocked gets a reference to the given bool and assigns it to the AppleNewsBlocked field.
func (o *IosGeneralDeviceConfiguration) SetAppleNewsBlocked(v bool) {
	o.AppleNewsBlocked = &v
}

// GetAppsSingleAppModeList returns the AppsSingleAppModeList field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppsSingleAppModeList() []AnyOfmicrosoftGraphAppListItem {
	if o == nil || o.AppsSingleAppModeList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret
	}
	return *o.AppsSingleAppModeList
}

// GetAppsSingleAppModeListOk returns a tuple with the AppsSingleAppModeList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppsSingleAppModeListOk() ([]AnyOfmicrosoftGraphAppListItem, bool) {
	if o == nil || o.AppsSingleAppModeList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret, false
	}
	return *o.AppsSingleAppModeList, true
}

// HasAppsSingleAppModeList returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppsSingleAppModeList() bool {
	if o != nil && o.AppsSingleAppModeList != nil {
		return true
	}

	return false
}

// SetAppsSingleAppModeList gets a reference to the given []AnyOfmicrosoftGraphAppListItem and assigns it to the AppsSingleAppModeList field.
func (o *IosGeneralDeviceConfiguration) SetAppsSingleAppModeList(v []AnyOfmicrosoftGraphAppListItem) {
	o.AppsSingleAppModeList = &v
}

// GetAppsVisibilityList returns the AppsVisibilityList field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppsVisibilityList() []AnyOfmicrosoftGraphAppListItem {
	if o == nil || o.AppsVisibilityList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret
	}
	return *o.AppsVisibilityList
}

// GetAppsVisibilityListOk returns a tuple with the AppsVisibilityList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppsVisibilityListOk() ([]AnyOfmicrosoftGraphAppListItem, bool) {
	if o == nil || o.AppsVisibilityList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret, false
	}
	return *o.AppsVisibilityList, true
}

// HasAppsVisibilityList returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppsVisibilityList() bool {
	if o != nil && o.AppsVisibilityList != nil {
		return true
	}

	return false
}

// SetAppsVisibilityList gets a reference to the given []AnyOfmicrosoftGraphAppListItem and assigns it to the AppsVisibilityList field.
func (o *IosGeneralDeviceConfiguration) SetAppsVisibilityList(v []AnyOfmicrosoftGraphAppListItem) {
	o.AppsVisibilityList = &v
}

// GetAppsVisibilityListType returns the AppsVisibilityListType field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppsVisibilityListType() AnyOfmicrosoftGraphAppListType {
	if o == nil || o.AppsVisibilityListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret
	}
	return *o.AppsVisibilityListType
}

// GetAppsVisibilityListTypeOk returns a tuple with the AppsVisibilityListType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppsVisibilityListTypeOk() (AnyOfmicrosoftGraphAppListType, bool) {
	if o == nil || o.AppsVisibilityListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret, false
	}
	return *o.AppsVisibilityListType, true
}

// HasAppsVisibilityListType returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppsVisibilityListType() bool {
	if o != nil && o.AppsVisibilityListType != nil {
		return true
	}

	return false
}

// SetAppsVisibilityListType gets a reference to the given AnyOfmicrosoftGraphAppListType and assigns it to the AppsVisibilityListType field.
func (o *IosGeneralDeviceConfiguration) SetAppsVisibilityListType(v AnyOfmicrosoftGraphAppListType) {
	o.AppsVisibilityListType = &v
}

// GetAppStoreBlockAutomaticDownloads returns the AppStoreBlockAutomaticDownloads field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockAutomaticDownloads() bool {
	if o == nil || o.AppStoreBlockAutomaticDownloads == nil {
		var ret bool
		return ret
	}
	return *o.AppStoreBlockAutomaticDownloads
}

// GetAppStoreBlockAutomaticDownloadsOk returns a tuple with the AppStoreBlockAutomaticDownloads field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockAutomaticDownloadsOk() (bool, bool) {
	if o == nil || o.AppStoreBlockAutomaticDownloads == nil {
		var ret bool
		return ret, false
	}
	return *o.AppStoreBlockAutomaticDownloads, true
}

// HasAppStoreBlockAutomaticDownloads returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppStoreBlockAutomaticDownloads() bool {
	if o != nil && o.AppStoreBlockAutomaticDownloads != nil {
		return true
	}

	return false
}

// SetAppStoreBlockAutomaticDownloads gets a reference to the given bool and assigns it to the AppStoreBlockAutomaticDownloads field.
func (o *IosGeneralDeviceConfiguration) SetAppStoreBlockAutomaticDownloads(v bool) {
	o.AppStoreBlockAutomaticDownloads = &v
}

// GetAppStoreBlocked returns the AppStoreBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlocked() bool {
	if o == nil || o.AppStoreBlocked == nil {
		var ret bool
		return ret
	}
	return *o.AppStoreBlocked
}

// GetAppStoreBlockedOk returns a tuple with the AppStoreBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockedOk() (bool, bool) {
	if o == nil || o.AppStoreBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.AppStoreBlocked, true
}

// HasAppStoreBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppStoreBlocked() bool {
	if o != nil && o.AppStoreBlocked != nil {
		return true
	}

	return false
}

// SetAppStoreBlocked gets a reference to the given bool and assigns it to the AppStoreBlocked field.
func (o *IosGeneralDeviceConfiguration) SetAppStoreBlocked(v bool) {
	o.AppStoreBlocked = &v
}

// GetAppStoreBlockInAppPurchases returns the AppStoreBlockInAppPurchases field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockInAppPurchases() bool {
	if o == nil || o.AppStoreBlockInAppPurchases == nil {
		var ret bool
		return ret
	}
	return *o.AppStoreBlockInAppPurchases
}

// GetAppStoreBlockInAppPurchasesOk returns a tuple with the AppStoreBlockInAppPurchases field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockInAppPurchasesOk() (bool, bool) {
	if o == nil || o.AppStoreBlockInAppPurchases == nil {
		var ret bool
		return ret, false
	}
	return *o.AppStoreBlockInAppPurchases, true
}

// HasAppStoreBlockInAppPurchases returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppStoreBlockInAppPurchases() bool {
	if o != nil && o.AppStoreBlockInAppPurchases != nil {
		return true
	}

	return false
}

// SetAppStoreBlockInAppPurchases gets a reference to the given bool and assigns it to the AppStoreBlockInAppPurchases field.
func (o *IosGeneralDeviceConfiguration) SetAppStoreBlockInAppPurchases(v bool) {
	o.AppStoreBlockInAppPurchases = &v
}

// GetAppStoreBlockUIAppInstallation returns the AppStoreBlockUIAppInstallation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockUIAppInstallation() bool {
	if o == nil || o.AppStoreBlockUIAppInstallation == nil {
		var ret bool
		return ret
	}
	return *o.AppStoreBlockUIAppInstallation
}

// GetAppStoreBlockUIAppInstallationOk returns a tuple with the AppStoreBlockUIAppInstallation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppStoreBlockUIAppInstallationOk() (bool, bool) {
	if o == nil || o.AppStoreBlockUIAppInstallation == nil {
		var ret bool
		return ret, false
	}
	return *o.AppStoreBlockUIAppInstallation, true
}

// HasAppStoreBlockUIAppInstallation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppStoreBlockUIAppInstallation() bool {
	if o != nil && o.AppStoreBlockUIAppInstallation != nil {
		return true
	}

	return false
}

// SetAppStoreBlockUIAppInstallation gets a reference to the given bool and assigns it to the AppStoreBlockUIAppInstallation field.
func (o *IosGeneralDeviceConfiguration) SetAppStoreBlockUIAppInstallation(v bool) {
	o.AppStoreBlockUIAppInstallation = &v
}

// GetAppStoreRequirePassword returns the AppStoreRequirePassword field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetAppStoreRequirePassword() bool {
	if o == nil || o.AppStoreRequirePassword == nil {
		var ret bool
		return ret
	}
	return *o.AppStoreRequirePassword
}

// GetAppStoreRequirePasswordOk returns a tuple with the AppStoreRequirePassword field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetAppStoreRequirePasswordOk() (bool, bool) {
	if o == nil || o.AppStoreRequirePassword == nil {
		var ret bool
		return ret, false
	}
	return *o.AppStoreRequirePassword, true
}

// HasAppStoreRequirePassword returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasAppStoreRequirePassword() bool {
	if o != nil && o.AppStoreRequirePassword != nil {
		return true
	}

	return false
}

// SetAppStoreRequirePassword gets a reference to the given bool and assigns it to the AppStoreRequirePassword field.
func (o *IosGeneralDeviceConfiguration) SetAppStoreRequirePassword(v bool) {
	o.AppStoreRequirePassword = &v
}

// GetBluetoothBlockModification returns the BluetoothBlockModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetBluetoothBlockModification() bool {
	if o == nil || o.BluetoothBlockModification == nil {
		var ret bool
		return ret
	}
	return *o.BluetoothBlockModification
}

// GetBluetoothBlockModificationOk returns a tuple with the BluetoothBlockModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetBluetoothBlockModificationOk() (bool, bool) {
	if o == nil || o.BluetoothBlockModification == nil {
		var ret bool
		return ret, false
	}
	return *o.BluetoothBlockModification, true
}

// HasBluetoothBlockModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasBluetoothBlockModification() bool {
	if o != nil && o.BluetoothBlockModification != nil {
		return true
	}

	return false
}

// SetBluetoothBlockModification gets a reference to the given bool and assigns it to the BluetoothBlockModification field.
func (o *IosGeneralDeviceConfiguration) SetBluetoothBlockModification(v bool) {
	o.BluetoothBlockModification = &v
}

// GetCameraBlocked returns the CameraBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCameraBlocked() bool {
	if o == nil || o.CameraBlocked == nil {
		var ret bool
		return ret
	}
	return *o.CameraBlocked
}

// GetCameraBlockedOk returns a tuple with the CameraBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCameraBlockedOk() (bool, bool) {
	if o == nil || o.CameraBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.CameraBlocked, true
}

// HasCameraBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCameraBlocked() bool {
	if o != nil && o.CameraBlocked != nil {
		return true
	}

	return false
}

// SetCameraBlocked gets a reference to the given bool and assigns it to the CameraBlocked field.
func (o *IosGeneralDeviceConfiguration) SetCameraBlocked(v bool) {
	o.CameraBlocked = &v
}

// GetCellularBlockDataRoaming returns the CellularBlockDataRoaming field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockDataRoaming() bool {
	if o == nil || o.CellularBlockDataRoaming == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockDataRoaming
}

// GetCellularBlockDataRoamingOk returns a tuple with the CellularBlockDataRoaming field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockDataRoamingOk() (bool, bool) {
	if o == nil || o.CellularBlockDataRoaming == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockDataRoaming, true
}

// HasCellularBlockDataRoaming returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCellularBlockDataRoaming() bool {
	if o != nil && o.CellularBlockDataRoaming != nil {
		return true
	}

	return false
}

// SetCellularBlockDataRoaming gets a reference to the given bool and assigns it to the CellularBlockDataRoaming field.
func (o *IosGeneralDeviceConfiguration) SetCellularBlockDataRoaming(v bool) {
	o.CellularBlockDataRoaming = &v
}

// GetCellularBlockGlobalBackgroundFetchWhileRoaming returns the CellularBlockGlobalBackgroundFetchWhileRoaming field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockGlobalBackgroundFetchWhileRoaming() bool {
	if o == nil || o.CellularBlockGlobalBackgroundFetchWhileRoaming == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockGlobalBackgroundFetchWhileRoaming
}

// GetCellularBlockGlobalBackgroundFetchWhileRoamingOk returns a tuple with the CellularBlockGlobalBackgroundFetchWhileRoaming field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockGlobalBackgroundFetchWhileRoamingOk() (bool, bool) {
	if o == nil || o.CellularBlockGlobalBackgroundFetchWhileRoaming == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockGlobalBackgroundFetchWhileRoaming, true
}

// HasCellularBlockGlobalBackgroundFetchWhileRoaming returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCellularBlockGlobalBackgroundFetchWhileRoaming() bool {
	if o != nil && o.CellularBlockGlobalBackgroundFetchWhileRoaming != nil {
		return true
	}

	return false
}

// SetCellularBlockGlobalBackgroundFetchWhileRoaming gets a reference to the given bool and assigns it to the CellularBlockGlobalBackgroundFetchWhileRoaming field.
func (o *IosGeneralDeviceConfiguration) SetCellularBlockGlobalBackgroundFetchWhileRoaming(v bool) {
	o.CellularBlockGlobalBackgroundFetchWhileRoaming = &v
}

// GetCellularBlockPerAppDataModification returns the CellularBlockPerAppDataModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockPerAppDataModification() bool {
	if o == nil || o.CellularBlockPerAppDataModification == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockPerAppDataModification
}

// GetCellularBlockPerAppDataModificationOk returns a tuple with the CellularBlockPerAppDataModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockPerAppDataModificationOk() (bool, bool) {
	if o == nil || o.CellularBlockPerAppDataModification == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockPerAppDataModification, true
}

// HasCellularBlockPerAppDataModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCellularBlockPerAppDataModification() bool {
	if o != nil && o.CellularBlockPerAppDataModification != nil {
		return true
	}

	return false
}

// SetCellularBlockPerAppDataModification gets a reference to the given bool and assigns it to the CellularBlockPerAppDataModification field.
func (o *IosGeneralDeviceConfiguration) SetCellularBlockPerAppDataModification(v bool) {
	o.CellularBlockPerAppDataModification = &v
}

// GetCellularBlockPersonalHotspot returns the CellularBlockPersonalHotspot field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockPersonalHotspot() bool {
	if o == nil || o.CellularBlockPersonalHotspot == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockPersonalHotspot
}

// GetCellularBlockPersonalHotspotOk returns a tuple with the CellularBlockPersonalHotspot field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockPersonalHotspotOk() (bool, bool) {
	if o == nil || o.CellularBlockPersonalHotspot == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockPersonalHotspot, true
}

// HasCellularBlockPersonalHotspot returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCellularBlockPersonalHotspot() bool {
	if o != nil && o.CellularBlockPersonalHotspot != nil {
		return true
	}

	return false
}

// SetCellularBlockPersonalHotspot gets a reference to the given bool and assigns it to the CellularBlockPersonalHotspot field.
func (o *IosGeneralDeviceConfiguration) SetCellularBlockPersonalHotspot(v bool) {
	o.CellularBlockPersonalHotspot = &v
}

// GetCellularBlockVoiceRoaming returns the CellularBlockVoiceRoaming field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockVoiceRoaming() bool {
	if o == nil || o.CellularBlockVoiceRoaming == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockVoiceRoaming
}

// GetCellularBlockVoiceRoamingOk returns a tuple with the CellularBlockVoiceRoaming field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCellularBlockVoiceRoamingOk() (bool, bool) {
	if o == nil || o.CellularBlockVoiceRoaming == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockVoiceRoaming, true
}

// HasCellularBlockVoiceRoaming returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCellularBlockVoiceRoaming() bool {
	if o != nil && o.CellularBlockVoiceRoaming != nil {
		return true
	}

	return false
}

// SetCellularBlockVoiceRoaming gets a reference to the given bool and assigns it to the CellularBlockVoiceRoaming field.
func (o *IosGeneralDeviceConfiguration) SetCellularBlockVoiceRoaming(v bool) {
	o.CellularBlockVoiceRoaming = &v
}

// GetCertificatesBlockUntrustedTlsCertificates returns the CertificatesBlockUntrustedTlsCertificates field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCertificatesBlockUntrustedTlsCertificates() bool {
	if o == nil || o.CertificatesBlockUntrustedTlsCertificates == nil {
		var ret bool
		return ret
	}
	return *o.CertificatesBlockUntrustedTlsCertificates
}

// GetCertificatesBlockUntrustedTlsCertificatesOk returns a tuple with the CertificatesBlockUntrustedTlsCertificates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCertificatesBlockUntrustedTlsCertificatesOk() (bool, bool) {
	if o == nil || o.CertificatesBlockUntrustedTlsCertificates == nil {
		var ret bool
		return ret, false
	}
	return *o.CertificatesBlockUntrustedTlsCertificates, true
}

// HasCertificatesBlockUntrustedTlsCertificates returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCertificatesBlockUntrustedTlsCertificates() bool {
	if o != nil && o.CertificatesBlockUntrustedTlsCertificates != nil {
		return true
	}

	return false
}

// SetCertificatesBlockUntrustedTlsCertificates gets a reference to the given bool and assigns it to the CertificatesBlockUntrustedTlsCertificates field.
func (o *IosGeneralDeviceConfiguration) SetCertificatesBlockUntrustedTlsCertificates(v bool) {
	o.CertificatesBlockUntrustedTlsCertificates = &v
}

// GetClassroomAppBlockRemoteScreenObservation returns the ClassroomAppBlockRemoteScreenObservation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetClassroomAppBlockRemoteScreenObservation() bool {
	if o == nil || o.ClassroomAppBlockRemoteScreenObservation == nil {
		var ret bool
		return ret
	}
	return *o.ClassroomAppBlockRemoteScreenObservation
}

// GetClassroomAppBlockRemoteScreenObservationOk returns a tuple with the ClassroomAppBlockRemoteScreenObservation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetClassroomAppBlockRemoteScreenObservationOk() (bool, bool) {
	if o == nil || o.ClassroomAppBlockRemoteScreenObservation == nil {
		var ret bool
		return ret, false
	}
	return *o.ClassroomAppBlockRemoteScreenObservation, true
}

// HasClassroomAppBlockRemoteScreenObservation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasClassroomAppBlockRemoteScreenObservation() bool {
	if o != nil && o.ClassroomAppBlockRemoteScreenObservation != nil {
		return true
	}

	return false
}

// SetClassroomAppBlockRemoteScreenObservation gets a reference to the given bool and assigns it to the ClassroomAppBlockRemoteScreenObservation field.
func (o *IosGeneralDeviceConfiguration) SetClassroomAppBlockRemoteScreenObservation(v bool) {
	o.ClassroomAppBlockRemoteScreenObservation = &v
}

// GetClassroomAppForceUnpromptedScreenObservation returns the ClassroomAppForceUnpromptedScreenObservation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetClassroomAppForceUnpromptedScreenObservation() bool {
	if o == nil || o.ClassroomAppForceUnpromptedScreenObservation == nil {
		var ret bool
		return ret
	}
	return *o.ClassroomAppForceUnpromptedScreenObservation
}

// GetClassroomAppForceUnpromptedScreenObservationOk returns a tuple with the ClassroomAppForceUnpromptedScreenObservation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetClassroomAppForceUnpromptedScreenObservationOk() (bool, bool) {
	if o == nil || o.ClassroomAppForceUnpromptedScreenObservation == nil {
		var ret bool
		return ret, false
	}
	return *o.ClassroomAppForceUnpromptedScreenObservation, true
}

// HasClassroomAppForceUnpromptedScreenObservation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasClassroomAppForceUnpromptedScreenObservation() bool {
	if o != nil && o.ClassroomAppForceUnpromptedScreenObservation != nil {
		return true
	}

	return false
}

// SetClassroomAppForceUnpromptedScreenObservation gets a reference to the given bool and assigns it to the ClassroomAppForceUnpromptedScreenObservation field.
func (o *IosGeneralDeviceConfiguration) SetClassroomAppForceUnpromptedScreenObservation(v bool) {
	o.ClassroomAppForceUnpromptedScreenObservation = &v
}

// GetCompliantAppsList returns the CompliantAppsList field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCompliantAppsList() []AnyOfmicrosoftGraphAppListItem {
	if o == nil || o.CompliantAppsList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret
	}
	return *o.CompliantAppsList
}

// GetCompliantAppsListOk returns a tuple with the CompliantAppsList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCompliantAppsListOk() ([]AnyOfmicrosoftGraphAppListItem, bool) {
	if o == nil || o.CompliantAppsList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret, false
	}
	return *o.CompliantAppsList, true
}

// HasCompliantAppsList returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCompliantAppsList() bool {
	if o != nil && o.CompliantAppsList != nil {
		return true
	}

	return false
}

// SetCompliantAppsList gets a reference to the given []AnyOfmicrosoftGraphAppListItem and assigns it to the CompliantAppsList field.
func (o *IosGeneralDeviceConfiguration) SetCompliantAppsList(v []AnyOfmicrosoftGraphAppListItem) {
	o.CompliantAppsList = &v
}

// GetCompliantAppListType returns the CompliantAppListType field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetCompliantAppListType() AnyOfmicrosoftGraphAppListType {
	if o == nil || o.CompliantAppListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret
	}
	return *o.CompliantAppListType
}

// GetCompliantAppListTypeOk returns a tuple with the CompliantAppListType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetCompliantAppListTypeOk() (AnyOfmicrosoftGraphAppListType, bool) {
	if o == nil || o.CompliantAppListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret, false
	}
	return *o.CompliantAppListType, true
}

// HasCompliantAppListType returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasCompliantAppListType() bool {
	if o != nil && o.CompliantAppListType != nil {
		return true
	}

	return false
}

// SetCompliantAppListType gets a reference to the given AnyOfmicrosoftGraphAppListType and assigns it to the CompliantAppListType field.
func (o *IosGeneralDeviceConfiguration) SetCompliantAppListType(v AnyOfmicrosoftGraphAppListType) {
	o.CompliantAppListType = &v
}

// GetConfigurationProfileBlockChanges returns the ConfigurationProfileBlockChanges field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetConfigurationProfileBlockChanges() bool {
	if o == nil || o.ConfigurationProfileBlockChanges == nil {
		var ret bool
		return ret
	}
	return *o.ConfigurationProfileBlockChanges
}

// GetConfigurationProfileBlockChangesOk returns a tuple with the ConfigurationProfileBlockChanges field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetConfigurationProfileBlockChangesOk() (bool, bool) {
	if o == nil || o.ConfigurationProfileBlockChanges == nil {
		var ret bool
		return ret, false
	}
	return *o.ConfigurationProfileBlockChanges, true
}

// HasConfigurationProfileBlockChanges returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasConfigurationProfileBlockChanges() bool {
	if o != nil && o.ConfigurationProfileBlockChanges != nil {
		return true
	}

	return false
}

// SetConfigurationProfileBlockChanges gets a reference to the given bool and assigns it to the ConfigurationProfileBlockChanges field.
func (o *IosGeneralDeviceConfiguration) SetConfigurationProfileBlockChanges(v bool) {
	o.ConfigurationProfileBlockChanges = &v
}

// GetDefinitionLookupBlocked returns the DefinitionLookupBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDefinitionLookupBlocked() bool {
	if o == nil || o.DefinitionLookupBlocked == nil {
		var ret bool
		return ret
	}
	return *o.DefinitionLookupBlocked
}

// GetDefinitionLookupBlockedOk returns a tuple with the DefinitionLookupBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDefinitionLookupBlockedOk() (bool, bool) {
	if o == nil || o.DefinitionLookupBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.DefinitionLookupBlocked, true
}

// HasDefinitionLookupBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDefinitionLookupBlocked() bool {
	if o != nil && o.DefinitionLookupBlocked != nil {
		return true
	}

	return false
}

// SetDefinitionLookupBlocked gets a reference to the given bool and assigns it to the DefinitionLookupBlocked field.
func (o *IosGeneralDeviceConfiguration) SetDefinitionLookupBlocked(v bool) {
	o.DefinitionLookupBlocked = &v
}

// GetDeviceBlockEnableRestrictions returns the DeviceBlockEnableRestrictions field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockEnableRestrictions() bool {
	if o == nil || o.DeviceBlockEnableRestrictions == nil {
		var ret bool
		return ret
	}
	return *o.DeviceBlockEnableRestrictions
}

// GetDeviceBlockEnableRestrictionsOk returns a tuple with the DeviceBlockEnableRestrictions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockEnableRestrictionsOk() (bool, bool) {
	if o == nil || o.DeviceBlockEnableRestrictions == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceBlockEnableRestrictions, true
}

// HasDeviceBlockEnableRestrictions returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDeviceBlockEnableRestrictions() bool {
	if o != nil && o.DeviceBlockEnableRestrictions != nil {
		return true
	}

	return false
}

// SetDeviceBlockEnableRestrictions gets a reference to the given bool and assigns it to the DeviceBlockEnableRestrictions field.
func (o *IosGeneralDeviceConfiguration) SetDeviceBlockEnableRestrictions(v bool) {
	o.DeviceBlockEnableRestrictions = &v
}

// GetDeviceBlockEraseContentAndSettings returns the DeviceBlockEraseContentAndSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockEraseContentAndSettings() bool {
	if o == nil || o.DeviceBlockEraseContentAndSettings == nil {
		var ret bool
		return ret
	}
	return *o.DeviceBlockEraseContentAndSettings
}

// GetDeviceBlockEraseContentAndSettingsOk returns a tuple with the DeviceBlockEraseContentAndSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockEraseContentAndSettingsOk() (bool, bool) {
	if o == nil || o.DeviceBlockEraseContentAndSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceBlockEraseContentAndSettings, true
}

// HasDeviceBlockEraseContentAndSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDeviceBlockEraseContentAndSettings() bool {
	if o != nil && o.DeviceBlockEraseContentAndSettings != nil {
		return true
	}

	return false
}

// SetDeviceBlockEraseContentAndSettings gets a reference to the given bool and assigns it to the DeviceBlockEraseContentAndSettings field.
func (o *IosGeneralDeviceConfiguration) SetDeviceBlockEraseContentAndSettings(v bool) {
	o.DeviceBlockEraseContentAndSettings = &v
}

// GetDeviceBlockNameModification returns the DeviceBlockNameModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockNameModification() bool {
	if o == nil || o.DeviceBlockNameModification == nil {
		var ret bool
		return ret
	}
	return *o.DeviceBlockNameModification
}

// GetDeviceBlockNameModificationOk returns a tuple with the DeviceBlockNameModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDeviceBlockNameModificationOk() (bool, bool) {
	if o == nil || o.DeviceBlockNameModification == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceBlockNameModification, true
}

// HasDeviceBlockNameModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDeviceBlockNameModification() bool {
	if o != nil && o.DeviceBlockNameModification != nil {
		return true
	}

	return false
}

// SetDeviceBlockNameModification gets a reference to the given bool and assigns it to the DeviceBlockNameModification field.
func (o *IosGeneralDeviceConfiguration) SetDeviceBlockNameModification(v bool) {
	o.DeviceBlockNameModification = &v
}

// GetDiagnosticDataBlockSubmission returns the DiagnosticDataBlockSubmission field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDiagnosticDataBlockSubmission() bool {
	if o == nil || o.DiagnosticDataBlockSubmission == nil {
		var ret bool
		return ret
	}
	return *o.DiagnosticDataBlockSubmission
}

// GetDiagnosticDataBlockSubmissionOk returns a tuple with the DiagnosticDataBlockSubmission field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDiagnosticDataBlockSubmissionOk() (bool, bool) {
	if o == nil || o.DiagnosticDataBlockSubmission == nil {
		var ret bool
		return ret, false
	}
	return *o.DiagnosticDataBlockSubmission, true
}

// HasDiagnosticDataBlockSubmission returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDiagnosticDataBlockSubmission() bool {
	if o != nil && o.DiagnosticDataBlockSubmission != nil {
		return true
	}

	return false
}

// SetDiagnosticDataBlockSubmission gets a reference to the given bool and assigns it to the DiagnosticDataBlockSubmission field.
func (o *IosGeneralDeviceConfiguration) SetDiagnosticDataBlockSubmission(v bool) {
	o.DiagnosticDataBlockSubmission = &v
}

// GetDiagnosticDataBlockSubmissionModification returns the DiagnosticDataBlockSubmissionModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDiagnosticDataBlockSubmissionModification() bool {
	if o == nil || o.DiagnosticDataBlockSubmissionModification == nil {
		var ret bool
		return ret
	}
	return *o.DiagnosticDataBlockSubmissionModification
}

// GetDiagnosticDataBlockSubmissionModificationOk returns a tuple with the DiagnosticDataBlockSubmissionModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDiagnosticDataBlockSubmissionModificationOk() (bool, bool) {
	if o == nil || o.DiagnosticDataBlockSubmissionModification == nil {
		var ret bool
		return ret, false
	}
	return *o.DiagnosticDataBlockSubmissionModification, true
}

// HasDiagnosticDataBlockSubmissionModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDiagnosticDataBlockSubmissionModification() bool {
	if o != nil && o.DiagnosticDataBlockSubmissionModification != nil {
		return true
	}

	return false
}

// SetDiagnosticDataBlockSubmissionModification gets a reference to the given bool and assigns it to the DiagnosticDataBlockSubmissionModification field.
func (o *IosGeneralDeviceConfiguration) SetDiagnosticDataBlockSubmissionModification(v bool) {
	o.DiagnosticDataBlockSubmissionModification = &v
}

// GetDocumentsBlockManagedDocumentsInUnmanagedApps returns the DocumentsBlockManagedDocumentsInUnmanagedApps field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDocumentsBlockManagedDocumentsInUnmanagedApps() bool {
	if o == nil || o.DocumentsBlockManagedDocumentsInUnmanagedApps == nil {
		var ret bool
		return ret
	}
	return *o.DocumentsBlockManagedDocumentsInUnmanagedApps
}

// GetDocumentsBlockManagedDocumentsInUnmanagedAppsOk returns a tuple with the DocumentsBlockManagedDocumentsInUnmanagedApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDocumentsBlockManagedDocumentsInUnmanagedAppsOk() (bool, bool) {
	if o == nil || o.DocumentsBlockManagedDocumentsInUnmanagedApps == nil {
		var ret bool
		return ret, false
	}
	return *o.DocumentsBlockManagedDocumentsInUnmanagedApps, true
}

// HasDocumentsBlockManagedDocumentsInUnmanagedApps returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDocumentsBlockManagedDocumentsInUnmanagedApps() bool {
	if o != nil && o.DocumentsBlockManagedDocumentsInUnmanagedApps != nil {
		return true
	}

	return false
}

// SetDocumentsBlockManagedDocumentsInUnmanagedApps gets a reference to the given bool and assigns it to the DocumentsBlockManagedDocumentsInUnmanagedApps field.
func (o *IosGeneralDeviceConfiguration) SetDocumentsBlockManagedDocumentsInUnmanagedApps(v bool) {
	o.DocumentsBlockManagedDocumentsInUnmanagedApps = &v
}

// GetDocumentsBlockUnmanagedDocumentsInManagedApps returns the DocumentsBlockUnmanagedDocumentsInManagedApps field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetDocumentsBlockUnmanagedDocumentsInManagedApps() bool {
	if o == nil || o.DocumentsBlockUnmanagedDocumentsInManagedApps == nil {
		var ret bool
		return ret
	}
	return *o.DocumentsBlockUnmanagedDocumentsInManagedApps
}

// GetDocumentsBlockUnmanagedDocumentsInManagedAppsOk returns a tuple with the DocumentsBlockUnmanagedDocumentsInManagedApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetDocumentsBlockUnmanagedDocumentsInManagedAppsOk() (bool, bool) {
	if o == nil || o.DocumentsBlockUnmanagedDocumentsInManagedApps == nil {
		var ret bool
		return ret, false
	}
	return *o.DocumentsBlockUnmanagedDocumentsInManagedApps, true
}

// HasDocumentsBlockUnmanagedDocumentsInManagedApps returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasDocumentsBlockUnmanagedDocumentsInManagedApps() bool {
	if o != nil && o.DocumentsBlockUnmanagedDocumentsInManagedApps != nil {
		return true
	}

	return false
}

// SetDocumentsBlockUnmanagedDocumentsInManagedApps gets a reference to the given bool and assigns it to the DocumentsBlockUnmanagedDocumentsInManagedApps field.
func (o *IosGeneralDeviceConfiguration) SetDocumentsBlockUnmanagedDocumentsInManagedApps(v bool) {
	o.DocumentsBlockUnmanagedDocumentsInManagedApps = &v
}

// GetEmailInDomainSuffixes returns the EmailInDomainSuffixes field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetEmailInDomainSuffixes() []string {
	if o == nil || o.EmailInDomainSuffixes == nil {
		var ret []string
		return ret
	}
	return *o.EmailInDomainSuffixes
}

// GetEmailInDomainSuffixesOk returns a tuple with the EmailInDomainSuffixes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetEmailInDomainSuffixesOk() ([]string, bool) {
	if o == nil || o.EmailInDomainSuffixes == nil {
		var ret []string
		return ret, false
	}
	return *o.EmailInDomainSuffixes, true
}

// HasEmailInDomainSuffixes returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasEmailInDomainSuffixes() bool {
	if o != nil && o.EmailInDomainSuffixes != nil {
		return true
	}

	return false
}

// SetEmailInDomainSuffixes gets a reference to the given []string and assigns it to the EmailInDomainSuffixes field.
func (o *IosGeneralDeviceConfiguration) SetEmailInDomainSuffixes(v []string) {
	o.EmailInDomainSuffixes = &v
}

// GetEnterpriseAppBlockTrust returns the EnterpriseAppBlockTrust field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetEnterpriseAppBlockTrust() bool {
	if o == nil || o.EnterpriseAppBlockTrust == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseAppBlockTrust
}

// GetEnterpriseAppBlockTrustOk returns a tuple with the EnterpriseAppBlockTrust field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetEnterpriseAppBlockTrustOk() (bool, bool) {
	if o == nil || o.EnterpriseAppBlockTrust == nil {
		var ret bool
		return ret, false
	}
	return *o.EnterpriseAppBlockTrust, true
}

// HasEnterpriseAppBlockTrust returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasEnterpriseAppBlockTrust() bool {
	if o != nil && o.EnterpriseAppBlockTrust != nil {
		return true
	}

	return false
}

// SetEnterpriseAppBlockTrust gets a reference to the given bool and assigns it to the EnterpriseAppBlockTrust field.
func (o *IosGeneralDeviceConfiguration) SetEnterpriseAppBlockTrust(v bool) {
	o.EnterpriseAppBlockTrust = &v
}

// GetEnterpriseAppBlockTrustModification returns the EnterpriseAppBlockTrustModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetEnterpriseAppBlockTrustModification() bool {
	if o == nil || o.EnterpriseAppBlockTrustModification == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseAppBlockTrustModification
}

// GetEnterpriseAppBlockTrustModificationOk returns a tuple with the EnterpriseAppBlockTrustModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetEnterpriseAppBlockTrustModificationOk() (bool, bool) {
	if o == nil || o.EnterpriseAppBlockTrustModification == nil {
		var ret bool
		return ret, false
	}
	return *o.EnterpriseAppBlockTrustModification, true
}

// HasEnterpriseAppBlockTrustModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasEnterpriseAppBlockTrustModification() bool {
	if o != nil && o.EnterpriseAppBlockTrustModification != nil {
		return true
	}

	return false
}

// SetEnterpriseAppBlockTrustModification gets a reference to the given bool and assigns it to the EnterpriseAppBlockTrustModification field.
func (o *IosGeneralDeviceConfiguration) SetEnterpriseAppBlockTrustModification(v bool) {
	o.EnterpriseAppBlockTrustModification = &v
}

// GetFaceTimeBlocked returns the FaceTimeBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetFaceTimeBlocked() bool {
	if o == nil || o.FaceTimeBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FaceTimeBlocked
}

// GetFaceTimeBlockedOk returns a tuple with the FaceTimeBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetFaceTimeBlockedOk() (bool, bool) {
	if o == nil || o.FaceTimeBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.FaceTimeBlocked, true
}

// HasFaceTimeBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasFaceTimeBlocked() bool {
	if o != nil && o.FaceTimeBlocked != nil {
		return true
	}

	return false
}

// SetFaceTimeBlocked gets a reference to the given bool and assigns it to the FaceTimeBlocked field.
func (o *IosGeneralDeviceConfiguration) SetFaceTimeBlocked(v bool) {
	o.FaceTimeBlocked = &v
}

// GetFindMyFriendsBlocked returns the FindMyFriendsBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetFindMyFriendsBlocked() bool {
	if o == nil || o.FindMyFriendsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FindMyFriendsBlocked
}

// GetFindMyFriendsBlockedOk returns a tuple with the FindMyFriendsBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetFindMyFriendsBlockedOk() (bool, bool) {
	if o == nil || o.FindMyFriendsBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.FindMyFriendsBlocked, true
}

// HasFindMyFriendsBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasFindMyFriendsBlocked() bool {
	if o != nil && o.FindMyFriendsBlocked != nil {
		return true
	}

	return false
}

// SetFindMyFriendsBlocked gets a reference to the given bool and assigns it to the FindMyFriendsBlocked field.
func (o *IosGeneralDeviceConfiguration) SetFindMyFriendsBlocked(v bool) {
	o.FindMyFriendsBlocked = &v
}

// GetGamingBlockGameCenterFriends returns the GamingBlockGameCenterFriends field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetGamingBlockGameCenterFriends() bool {
	if o == nil || o.GamingBlockGameCenterFriends == nil {
		var ret bool
		return ret
	}
	return *o.GamingBlockGameCenterFriends
}

// GetGamingBlockGameCenterFriendsOk returns a tuple with the GamingBlockGameCenterFriends field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetGamingBlockGameCenterFriendsOk() (bool, bool) {
	if o == nil || o.GamingBlockGameCenterFriends == nil {
		var ret bool
		return ret, false
	}
	return *o.GamingBlockGameCenterFriends, true
}

// HasGamingBlockGameCenterFriends returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasGamingBlockGameCenterFriends() bool {
	if o != nil && o.GamingBlockGameCenterFriends != nil {
		return true
	}

	return false
}

// SetGamingBlockGameCenterFriends gets a reference to the given bool and assigns it to the GamingBlockGameCenterFriends field.
func (o *IosGeneralDeviceConfiguration) SetGamingBlockGameCenterFriends(v bool) {
	o.GamingBlockGameCenterFriends = &v
}

// GetGamingBlockMultiplayer returns the GamingBlockMultiplayer field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetGamingBlockMultiplayer() bool {
	if o == nil || o.GamingBlockMultiplayer == nil {
		var ret bool
		return ret
	}
	return *o.GamingBlockMultiplayer
}

// GetGamingBlockMultiplayerOk returns a tuple with the GamingBlockMultiplayer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetGamingBlockMultiplayerOk() (bool, bool) {
	if o == nil || o.GamingBlockMultiplayer == nil {
		var ret bool
		return ret, false
	}
	return *o.GamingBlockMultiplayer, true
}

// HasGamingBlockMultiplayer returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasGamingBlockMultiplayer() bool {
	if o != nil && o.GamingBlockMultiplayer != nil {
		return true
	}

	return false
}

// SetGamingBlockMultiplayer gets a reference to the given bool and assigns it to the GamingBlockMultiplayer field.
func (o *IosGeneralDeviceConfiguration) SetGamingBlockMultiplayer(v bool) {
	o.GamingBlockMultiplayer = &v
}

// GetGameCenterBlocked returns the GameCenterBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetGameCenterBlocked() bool {
	if o == nil || o.GameCenterBlocked == nil {
		var ret bool
		return ret
	}
	return *o.GameCenterBlocked
}

// GetGameCenterBlockedOk returns a tuple with the GameCenterBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetGameCenterBlockedOk() (bool, bool) {
	if o == nil || o.GameCenterBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.GameCenterBlocked, true
}

// HasGameCenterBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasGameCenterBlocked() bool {
	if o != nil && o.GameCenterBlocked != nil {
		return true
	}

	return false
}

// SetGameCenterBlocked gets a reference to the given bool and assigns it to the GameCenterBlocked field.
func (o *IosGeneralDeviceConfiguration) SetGameCenterBlocked(v bool) {
	o.GameCenterBlocked = &v
}

// GetHostPairingBlocked returns the HostPairingBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetHostPairingBlocked() bool {
	if o == nil || o.HostPairingBlocked == nil {
		var ret bool
		return ret
	}
	return *o.HostPairingBlocked
}

// GetHostPairingBlockedOk returns a tuple with the HostPairingBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetHostPairingBlockedOk() (bool, bool) {
	if o == nil || o.HostPairingBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.HostPairingBlocked, true
}

// HasHostPairingBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasHostPairingBlocked() bool {
	if o != nil && o.HostPairingBlocked != nil {
		return true
	}

	return false
}

// SetHostPairingBlocked gets a reference to the given bool and assigns it to the HostPairingBlocked field.
func (o *IosGeneralDeviceConfiguration) SetHostPairingBlocked(v bool) {
	o.HostPairingBlocked = &v
}

// GetIBooksStoreBlocked returns the IBooksStoreBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetIBooksStoreBlocked() bool {
	if o == nil || o.IBooksStoreBlocked == nil {
		var ret bool
		return ret
	}
	return *o.IBooksStoreBlocked
}

// GetIBooksStoreBlockedOk returns a tuple with the IBooksStoreBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetIBooksStoreBlockedOk() (bool, bool) {
	if o == nil || o.IBooksStoreBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.IBooksStoreBlocked, true
}

// HasIBooksStoreBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasIBooksStoreBlocked() bool {
	if o != nil && o.IBooksStoreBlocked != nil {
		return true
	}

	return false
}

// SetIBooksStoreBlocked gets a reference to the given bool and assigns it to the IBooksStoreBlocked field.
func (o *IosGeneralDeviceConfiguration) SetIBooksStoreBlocked(v bool) {
	o.IBooksStoreBlocked = &v
}

// GetIBooksStoreBlockErotica returns the IBooksStoreBlockErotica field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetIBooksStoreBlockErotica() bool {
	if o == nil || o.IBooksStoreBlockErotica == nil {
		var ret bool
		return ret
	}
	return *o.IBooksStoreBlockErotica
}

// GetIBooksStoreBlockEroticaOk returns a tuple with the IBooksStoreBlockErotica field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetIBooksStoreBlockEroticaOk() (bool, bool) {
	if o == nil || o.IBooksStoreBlockErotica == nil {
		var ret bool
		return ret, false
	}
	return *o.IBooksStoreBlockErotica, true
}

// HasIBooksStoreBlockErotica returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasIBooksStoreBlockErotica() bool {
	if o != nil && o.IBooksStoreBlockErotica != nil {
		return true
	}

	return false
}

// SetIBooksStoreBlockErotica gets a reference to the given bool and assigns it to the IBooksStoreBlockErotica field.
func (o *IosGeneralDeviceConfiguration) SetIBooksStoreBlockErotica(v bool) {
	o.IBooksStoreBlockErotica = &v
}

// GetICloudBlockActivityContinuation returns the ICloudBlockActivityContinuation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockActivityContinuation() bool {
	if o == nil || o.ICloudBlockActivityContinuation == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockActivityContinuation
}

// GetICloudBlockActivityContinuationOk returns a tuple with the ICloudBlockActivityContinuation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockActivityContinuationOk() (bool, bool) {
	if o == nil || o.ICloudBlockActivityContinuation == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockActivityContinuation, true
}

// HasICloudBlockActivityContinuation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockActivityContinuation() bool {
	if o != nil && o.ICloudBlockActivityContinuation != nil {
		return true
	}

	return false
}

// SetICloudBlockActivityContinuation gets a reference to the given bool and assigns it to the ICloudBlockActivityContinuation field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockActivityContinuation(v bool) {
	o.ICloudBlockActivityContinuation = &v
}

// GetICloudBlockBackup returns the ICloudBlockBackup field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockBackup() bool {
	if o == nil || o.ICloudBlockBackup == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockBackup
}

// GetICloudBlockBackupOk returns a tuple with the ICloudBlockBackup field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockBackupOk() (bool, bool) {
	if o == nil || o.ICloudBlockBackup == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockBackup, true
}

// HasICloudBlockBackup returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockBackup() bool {
	if o != nil && o.ICloudBlockBackup != nil {
		return true
	}

	return false
}

// SetICloudBlockBackup gets a reference to the given bool and assigns it to the ICloudBlockBackup field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockBackup(v bool) {
	o.ICloudBlockBackup = &v
}

// GetICloudBlockDocumentSync returns the ICloudBlockDocumentSync field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockDocumentSync() bool {
	if o == nil || o.ICloudBlockDocumentSync == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockDocumentSync
}

// GetICloudBlockDocumentSyncOk returns a tuple with the ICloudBlockDocumentSync field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockDocumentSyncOk() (bool, bool) {
	if o == nil || o.ICloudBlockDocumentSync == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockDocumentSync, true
}

// HasICloudBlockDocumentSync returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockDocumentSync() bool {
	if o != nil && o.ICloudBlockDocumentSync != nil {
		return true
	}

	return false
}

// SetICloudBlockDocumentSync gets a reference to the given bool and assigns it to the ICloudBlockDocumentSync field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockDocumentSync(v bool) {
	o.ICloudBlockDocumentSync = &v
}

// GetICloudBlockManagedAppsSync returns the ICloudBlockManagedAppsSync field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockManagedAppsSync() bool {
	if o == nil || o.ICloudBlockManagedAppsSync == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockManagedAppsSync
}

// GetICloudBlockManagedAppsSyncOk returns a tuple with the ICloudBlockManagedAppsSync field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockManagedAppsSyncOk() (bool, bool) {
	if o == nil || o.ICloudBlockManagedAppsSync == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockManagedAppsSync, true
}

// HasICloudBlockManagedAppsSync returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockManagedAppsSync() bool {
	if o != nil && o.ICloudBlockManagedAppsSync != nil {
		return true
	}

	return false
}

// SetICloudBlockManagedAppsSync gets a reference to the given bool and assigns it to the ICloudBlockManagedAppsSync field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockManagedAppsSync(v bool) {
	o.ICloudBlockManagedAppsSync = &v
}

// GetICloudBlockPhotoLibrary returns the ICloudBlockPhotoLibrary field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockPhotoLibrary() bool {
	if o == nil || o.ICloudBlockPhotoLibrary == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockPhotoLibrary
}

// GetICloudBlockPhotoLibraryOk returns a tuple with the ICloudBlockPhotoLibrary field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockPhotoLibraryOk() (bool, bool) {
	if o == nil || o.ICloudBlockPhotoLibrary == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockPhotoLibrary, true
}

// HasICloudBlockPhotoLibrary returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockPhotoLibrary() bool {
	if o != nil && o.ICloudBlockPhotoLibrary != nil {
		return true
	}

	return false
}

// SetICloudBlockPhotoLibrary gets a reference to the given bool and assigns it to the ICloudBlockPhotoLibrary field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockPhotoLibrary(v bool) {
	o.ICloudBlockPhotoLibrary = &v
}

// GetICloudBlockPhotoStreamSync returns the ICloudBlockPhotoStreamSync field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockPhotoStreamSync() bool {
	if o == nil || o.ICloudBlockPhotoStreamSync == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockPhotoStreamSync
}

// GetICloudBlockPhotoStreamSyncOk returns a tuple with the ICloudBlockPhotoStreamSync field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockPhotoStreamSyncOk() (bool, bool) {
	if o == nil || o.ICloudBlockPhotoStreamSync == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockPhotoStreamSync, true
}

// HasICloudBlockPhotoStreamSync returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockPhotoStreamSync() bool {
	if o != nil && o.ICloudBlockPhotoStreamSync != nil {
		return true
	}

	return false
}

// SetICloudBlockPhotoStreamSync gets a reference to the given bool and assigns it to the ICloudBlockPhotoStreamSync field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockPhotoStreamSync(v bool) {
	o.ICloudBlockPhotoStreamSync = &v
}

// GetICloudBlockSharedPhotoStream returns the ICloudBlockSharedPhotoStream field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockSharedPhotoStream() bool {
	if o == nil || o.ICloudBlockSharedPhotoStream == nil {
		var ret bool
		return ret
	}
	return *o.ICloudBlockSharedPhotoStream
}

// GetICloudBlockSharedPhotoStreamOk returns a tuple with the ICloudBlockSharedPhotoStream field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudBlockSharedPhotoStreamOk() (bool, bool) {
	if o == nil || o.ICloudBlockSharedPhotoStream == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudBlockSharedPhotoStream, true
}

// HasICloudBlockSharedPhotoStream returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudBlockSharedPhotoStream() bool {
	if o != nil && o.ICloudBlockSharedPhotoStream != nil {
		return true
	}

	return false
}

// SetICloudBlockSharedPhotoStream gets a reference to the given bool and assigns it to the ICloudBlockSharedPhotoStream field.
func (o *IosGeneralDeviceConfiguration) SetICloudBlockSharedPhotoStream(v bool) {
	o.ICloudBlockSharedPhotoStream = &v
}

// GetICloudRequireEncryptedBackup returns the ICloudRequireEncryptedBackup field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetICloudRequireEncryptedBackup() bool {
	if o == nil || o.ICloudRequireEncryptedBackup == nil {
		var ret bool
		return ret
	}
	return *o.ICloudRequireEncryptedBackup
}

// GetICloudRequireEncryptedBackupOk returns a tuple with the ICloudRequireEncryptedBackup field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetICloudRequireEncryptedBackupOk() (bool, bool) {
	if o == nil || o.ICloudRequireEncryptedBackup == nil {
		var ret bool
		return ret, false
	}
	return *o.ICloudRequireEncryptedBackup, true
}

// HasICloudRequireEncryptedBackup returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasICloudRequireEncryptedBackup() bool {
	if o != nil && o.ICloudRequireEncryptedBackup != nil {
		return true
	}

	return false
}

// SetICloudRequireEncryptedBackup gets a reference to the given bool and assigns it to the ICloudRequireEncryptedBackup field.
func (o *IosGeneralDeviceConfiguration) SetICloudRequireEncryptedBackup(v bool) {
	o.ICloudRequireEncryptedBackup = &v
}

// GetITunesBlockExplicitContent returns the ITunesBlockExplicitContent field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockExplicitContent() bool {
	if o == nil || o.ITunesBlockExplicitContent == nil {
		var ret bool
		return ret
	}
	return *o.ITunesBlockExplicitContent
}

// GetITunesBlockExplicitContentOk returns a tuple with the ITunesBlockExplicitContent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockExplicitContentOk() (bool, bool) {
	if o == nil || o.ITunesBlockExplicitContent == nil {
		var ret bool
		return ret, false
	}
	return *o.ITunesBlockExplicitContent, true
}

// HasITunesBlockExplicitContent returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasITunesBlockExplicitContent() bool {
	if o != nil && o.ITunesBlockExplicitContent != nil {
		return true
	}

	return false
}

// SetITunesBlockExplicitContent gets a reference to the given bool and assigns it to the ITunesBlockExplicitContent field.
func (o *IosGeneralDeviceConfiguration) SetITunesBlockExplicitContent(v bool) {
	o.ITunesBlockExplicitContent = &v
}

// GetITunesBlockMusicService returns the ITunesBlockMusicService field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockMusicService() bool {
	if o == nil || o.ITunesBlockMusicService == nil {
		var ret bool
		return ret
	}
	return *o.ITunesBlockMusicService
}

// GetITunesBlockMusicServiceOk returns a tuple with the ITunesBlockMusicService field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockMusicServiceOk() (bool, bool) {
	if o == nil || o.ITunesBlockMusicService == nil {
		var ret bool
		return ret, false
	}
	return *o.ITunesBlockMusicService, true
}

// HasITunesBlockMusicService returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasITunesBlockMusicService() bool {
	if o != nil && o.ITunesBlockMusicService != nil {
		return true
	}

	return false
}

// SetITunesBlockMusicService gets a reference to the given bool and assigns it to the ITunesBlockMusicService field.
func (o *IosGeneralDeviceConfiguration) SetITunesBlockMusicService(v bool) {
	o.ITunesBlockMusicService = &v
}

// GetITunesBlockRadio returns the ITunesBlockRadio field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockRadio() bool {
	if o == nil || o.ITunesBlockRadio == nil {
		var ret bool
		return ret
	}
	return *o.ITunesBlockRadio
}

// GetITunesBlockRadioOk returns a tuple with the ITunesBlockRadio field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetITunesBlockRadioOk() (bool, bool) {
	if o == nil || o.ITunesBlockRadio == nil {
		var ret bool
		return ret, false
	}
	return *o.ITunesBlockRadio, true
}

// HasITunesBlockRadio returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasITunesBlockRadio() bool {
	if o != nil && o.ITunesBlockRadio != nil {
		return true
	}

	return false
}

// SetITunesBlockRadio gets a reference to the given bool and assigns it to the ITunesBlockRadio field.
func (o *IosGeneralDeviceConfiguration) SetITunesBlockRadio(v bool) {
	o.ITunesBlockRadio = &v
}

// GetKeyboardBlockAutoCorrect returns the KeyboardBlockAutoCorrect field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockAutoCorrect() bool {
	if o == nil || o.KeyboardBlockAutoCorrect == nil {
		var ret bool
		return ret
	}
	return *o.KeyboardBlockAutoCorrect
}

// GetKeyboardBlockAutoCorrectOk returns a tuple with the KeyboardBlockAutoCorrect field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockAutoCorrectOk() (bool, bool) {
	if o == nil || o.KeyboardBlockAutoCorrect == nil {
		var ret bool
		return ret, false
	}
	return *o.KeyboardBlockAutoCorrect, true
}

// HasKeyboardBlockAutoCorrect returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKeyboardBlockAutoCorrect() bool {
	if o != nil && o.KeyboardBlockAutoCorrect != nil {
		return true
	}

	return false
}

// SetKeyboardBlockAutoCorrect gets a reference to the given bool and assigns it to the KeyboardBlockAutoCorrect field.
func (o *IosGeneralDeviceConfiguration) SetKeyboardBlockAutoCorrect(v bool) {
	o.KeyboardBlockAutoCorrect = &v
}

// GetKeyboardBlockDictation returns the KeyboardBlockDictation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockDictation() bool {
	if o == nil || o.KeyboardBlockDictation == nil {
		var ret bool
		return ret
	}
	return *o.KeyboardBlockDictation
}

// GetKeyboardBlockDictationOk returns a tuple with the KeyboardBlockDictation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockDictationOk() (bool, bool) {
	if o == nil || o.KeyboardBlockDictation == nil {
		var ret bool
		return ret, false
	}
	return *o.KeyboardBlockDictation, true
}

// HasKeyboardBlockDictation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKeyboardBlockDictation() bool {
	if o != nil && o.KeyboardBlockDictation != nil {
		return true
	}

	return false
}

// SetKeyboardBlockDictation gets a reference to the given bool and assigns it to the KeyboardBlockDictation field.
func (o *IosGeneralDeviceConfiguration) SetKeyboardBlockDictation(v bool) {
	o.KeyboardBlockDictation = &v
}

// GetKeyboardBlockPredictive returns the KeyboardBlockPredictive field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockPredictive() bool {
	if o == nil || o.KeyboardBlockPredictive == nil {
		var ret bool
		return ret
	}
	return *o.KeyboardBlockPredictive
}

// GetKeyboardBlockPredictiveOk returns a tuple with the KeyboardBlockPredictive field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockPredictiveOk() (bool, bool) {
	if o == nil || o.KeyboardBlockPredictive == nil {
		var ret bool
		return ret, false
	}
	return *o.KeyboardBlockPredictive, true
}

// HasKeyboardBlockPredictive returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKeyboardBlockPredictive() bool {
	if o != nil && o.KeyboardBlockPredictive != nil {
		return true
	}

	return false
}

// SetKeyboardBlockPredictive gets a reference to the given bool and assigns it to the KeyboardBlockPredictive field.
func (o *IosGeneralDeviceConfiguration) SetKeyboardBlockPredictive(v bool) {
	o.KeyboardBlockPredictive = &v
}

// GetKeyboardBlockShortcuts returns the KeyboardBlockShortcuts field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockShortcuts() bool {
	if o == nil || o.KeyboardBlockShortcuts == nil {
		var ret bool
		return ret
	}
	return *o.KeyboardBlockShortcuts
}

// GetKeyboardBlockShortcutsOk returns a tuple with the KeyboardBlockShortcuts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockShortcutsOk() (bool, bool) {
	if o == nil || o.KeyboardBlockShortcuts == nil {
		var ret bool
		return ret, false
	}
	return *o.KeyboardBlockShortcuts, true
}

// HasKeyboardBlockShortcuts returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKeyboardBlockShortcuts() bool {
	if o != nil && o.KeyboardBlockShortcuts != nil {
		return true
	}

	return false
}

// SetKeyboardBlockShortcuts gets a reference to the given bool and assigns it to the KeyboardBlockShortcuts field.
func (o *IosGeneralDeviceConfiguration) SetKeyboardBlockShortcuts(v bool) {
	o.KeyboardBlockShortcuts = &v
}

// GetKeyboardBlockSpellCheck returns the KeyboardBlockSpellCheck field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockSpellCheck() bool {
	if o == nil || o.KeyboardBlockSpellCheck == nil {
		var ret bool
		return ret
	}
	return *o.KeyboardBlockSpellCheck
}

// GetKeyboardBlockSpellCheckOk returns a tuple with the KeyboardBlockSpellCheck field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKeyboardBlockSpellCheckOk() (bool, bool) {
	if o == nil || o.KeyboardBlockSpellCheck == nil {
		var ret bool
		return ret, false
	}
	return *o.KeyboardBlockSpellCheck, true
}

// HasKeyboardBlockSpellCheck returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKeyboardBlockSpellCheck() bool {
	if o != nil && o.KeyboardBlockSpellCheck != nil {
		return true
	}

	return false
}

// SetKeyboardBlockSpellCheck gets a reference to the given bool and assigns it to the KeyboardBlockSpellCheck field.
func (o *IosGeneralDeviceConfiguration) SetKeyboardBlockSpellCheck(v bool) {
	o.KeyboardBlockSpellCheck = &v
}

// GetKioskModeAllowAssistiveSpeak returns the KioskModeAllowAssistiveSpeak field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAssistiveSpeak() bool {
	if o == nil || o.KioskModeAllowAssistiveSpeak == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowAssistiveSpeak
}

// GetKioskModeAllowAssistiveSpeakOk returns a tuple with the KioskModeAllowAssistiveSpeak field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAssistiveSpeakOk() (bool, bool) {
	if o == nil || o.KioskModeAllowAssistiveSpeak == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowAssistiveSpeak, true
}

// HasKioskModeAllowAssistiveSpeak returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowAssistiveSpeak() bool {
	if o != nil && o.KioskModeAllowAssistiveSpeak != nil {
		return true
	}

	return false
}

// SetKioskModeAllowAssistiveSpeak gets a reference to the given bool and assigns it to the KioskModeAllowAssistiveSpeak field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowAssistiveSpeak(v bool) {
	o.KioskModeAllowAssistiveSpeak = &v
}

// GetKioskModeAllowAssistiveTouchSettings returns the KioskModeAllowAssistiveTouchSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAssistiveTouchSettings() bool {
	if o == nil || o.KioskModeAllowAssistiveTouchSettings == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowAssistiveTouchSettings
}

// GetKioskModeAllowAssistiveTouchSettingsOk returns a tuple with the KioskModeAllowAssistiveTouchSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAssistiveTouchSettingsOk() (bool, bool) {
	if o == nil || o.KioskModeAllowAssistiveTouchSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowAssistiveTouchSettings, true
}

// HasKioskModeAllowAssistiveTouchSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowAssistiveTouchSettings() bool {
	if o != nil && o.KioskModeAllowAssistiveTouchSettings != nil {
		return true
	}

	return false
}

// SetKioskModeAllowAssistiveTouchSettings gets a reference to the given bool and assigns it to the KioskModeAllowAssistiveTouchSettings field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowAssistiveTouchSettings(v bool) {
	o.KioskModeAllowAssistiveTouchSettings = &v
}

// GetKioskModeAllowAutoLock returns the KioskModeAllowAutoLock field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAutoLock() bool {
	if o == nil || o.KioskModeAllowAutoLock == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowAutoLock
}

// GetKioskModeAllowAutoLockOk returns a tuple with the KioskModeAllowAutoLock field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowAutoLockOk() (bool, bool) {
	if o == nil || o.KioskModeAllowAutoLock == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowAutoLock, true
}

// HasKioskModeAllowAutoLock returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowAutoLock() bool {
	if o != nil && o.KioskModeAllowAutoLock != nil {
		return true
	}

	return false
}

// SetKioskModeAllowAutoLock gets a reference to the given bool and assigns it to the KioskModeAllowAutoLock field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowAutoLock(v bool) {
	o.KioskModeAllowAutoLock = &v
}

// GetKioskModeAllowColorInversionSettings returns the KioskModeAllowColorInversionSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowColorInversionSettings() bool {
	if o == nil || o.KioskModeAllowColorInversionSettings == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowColorInversionSettings
}

// GetKioskModeAllowColorInversionSettingsOk returns a tuple with the KioskModeAllowColorInversionSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowColorInversionSettingsOk() (bool, bool) {
	if o == nil || o.KioskModeAllowColorInversionSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowColorInversionSettings, true
}

// HasKioskModeAllowColorInversionSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowColorInversionSettings() bool {
	if o != nil && o.KioskModeAllowColorInversionSettings != nil {
		return true
	}

	return false
}

// SetKioskModeAllowColorInversionSettings gets a reference to the given bool and assigns it to the KioskModeAllowColorInversionSettings field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowColorInversionSettings(v bool) {
	o.KioskModeAllowColorInversionSettings = &v
}

// GetKioskModeAllowRingerSwitch returns the KioskModeAllowRingerSwitch field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowRingerSwitch() bool {
	if o == nil || o.KioskModeAllowRingerSwitch == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowRingerSwitch
}

// GetKioskModeAllowRingerSwitchOk returns a tuple with the KioskModeAllowRingerSwitch field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowRingerSwitchOk() (bool, bool) {
	if o == nil || o.KioskModeAllowRingerSwitch == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowRingerSwitch, true
}

// HasKioskModeAllowRingerSwitch returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowRingerSwitch() bool {
	if o != nil && o.KioskModeAllowRingerSwitch != nil {
		return true
	}

	return false
}

// SetKioskModeAllowRingerSwitch gets a reference to the given bool and assigns it to the KioskModeAllowRingerSwitch field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowRingerSwitch(v bool) {
	o.KioskModeAllowRingerSwitch = &v
}

// GetKioskModeAllowScreenRotation returns the KioskModeAllowScreenRotation field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowScreenRotation() bool {
	if o == nil || o.KioskModeAllowScreenRotation == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowScreenRotation
}

// GetKioskModeAllowScreenRotationOk returns a tuple with the KioskModeAllowScreenRotation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowScreenRotationOk() (bool, bool) {
	if o == nil || o.KioskModeAllowScreenRotation == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowScreenRotation, true
}

// HasKioskModeAllowScreenRotation returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowScreenRotation() bool {
	if o != nil && o.KioskModeAllowScreenRotation != nil {
		return true
	}

	return false
}

// SetKioskModeAllowScreenRotation gets a reference to the given bool and assigns it to the KioskModeAllowScreenRotation field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowScreenRotation(v bool) {
	o.KioskModeAllowScreenRotation = &v
}

// GetKioskModeAllowSleepButton returns the KioskModeAllowSleepButton field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowSleepButton() bool {
	if o == nil || o.KioskModeAllowSleepButton == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowSleepButton
}

// GetKioskModeAllowSleepButtonOk returns a tuple with the KioskModeAllowSleepButton field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowSleepButtonOk() (bool, bool) {
	if o == nil || o.KioskModeAllowSleepButton == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowSleepButton, true
}

// HasKioskModeAllowSleepButton returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowSleepButton() bool {
	if o != nil && o.KioskModeAllowSleepButton != nil {
		return true
	}

	return false
}

// SetKioskModeAllowSleepButton gets a reference to the given bool and assigns it to the KioskModeAllowSleepButton field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowSleepButton(v bool) {
	o.KioskModeAllowSleepButton = &v
}

// GetKioskModeAllowTouchscreen returns the KioskModeAllowTouchscreen field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowTouchscreen() bool {
	if o == nil || o.KioskModeAllowTouchscreen == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowTouchscreen
}

// GetKioskModeAllowTouchscreenOk returns a tuple with the KioskModeAllowTouchscreen field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowTouchscreenOk() (bool, bool) {
	if o == nil || o.KioskModeAllowTouchscreen == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowTouchscreen, true
}

// HasKioskModeAllowTouchscreen returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowTouchscreen() bool {
	if o != nil && o.KioskModeAllowTouchscreen != nil {
		return true
	}

	return false
}

// SetKioskModeAllowTouchscreen gets a reference to the given bool and assigns it to the KioskModeAllowTouchscreen field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowTouchscreen(v bool) {
	o.KioskModeAllowTouchscreen = &v
}

// GetKioskModeAllowVoiceOverSettings returns the KioskModeAllowVoiceOverSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowVoiceOverSettings() bool {
	if o == nil || o.KioskModeAllowVoiceOverSettings == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowVoiceOverSettings
}

// GetKioskModeAllowVoiceOverSettingsOk returns a tuple with the KioskModeAllowVoiceOverSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowVoiceOverSettingsOk() (bool, bool) {
	if o == nil || o.KioskModeAllowVoiceOverSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowVoiceOverSettings, true
}

// HasKioskModeAllowVoiceOverSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowVoiceOverSettings() bool {
	if o != nil && o.KioskModeAllowVoiceOverSettings != nil {
		return true
	}

	return false
}

// SetKioskModeAllowVoiceOverSettings gets a reference to the given bool and assigns it to the KioskModeAllowVoiceOverSettings field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowVoiceOverSettings(v bool) {
	o.KioskModeAllowVoiceOverSettings = &v
}

// GetKioskModeAllowVolumeButtons returns the KioskModeAllowVolumeButtons field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowVolumeButtons() bool {
	if o == nil || o.KioskModeAllowVolumeButtons == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowVolumeButtons
}

// GetKioskModeAllowVolumeButtonsOk returns a tuple with the KioskModeAllowVolumeButtons field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowVolumeButtonsOk() (bool, bool) {
	if o == nil || o.KioskModeAllowVolumeButtons == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowVolumeButtons, true
}

// HasKioskModeAllowVolumeButtons returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowVolumeButtons() bool {
	if o != nil && o.KioskModeAllowVolumeButtons != nil {
		return true
	}

	return false
}

// SetKioskModeAllowVolumeButtons gets a reference to the given bool and assigns it to the KioskModeAllowVolumeButtons field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowVolumeButtons(v bool) {
	o.KioskModeAllowVolumeButtons = &v
}

// GetKioskModeAllowZoomSettings returns the KioskModeAllowZoomSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowZoomSettings() bool {
	if o == nil || o.KioskModeAllowZoomSettings == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeAllowZoomSettings
}

// GetKioskModeAllowZoomSettingsOk returns a tuple with the KioskModeAllowZoomSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAllowZoomSettingsOk() (bool, bool) {
	if o == nil || o.KioskModeAllowZoomSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeAllowZoomSettings, true
}

// HasKioskModeAllowZoomSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAllowZoomSettings() bool {
	if o != nil && o.KioskModeAllowZoomSettings != nil {
		return true
	}

	return false
}

// SetKioskModeAllowZoomSettings gets a reference to the given bool and assigns it to the KioskModeAllowZoomSettings field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAllowZoomSettings(v bool) {
	o.KioskModeAllowZoomSettings = &v
}

// GetKioskModeAppStoreUrl returns the KioskModeAppStoreUrl field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAppStoreUrl() string {
	if o == nil || o.KioskModeAppStoreUrl == nil {
		var ret string
		return ret
	}
	return *o.KioskModeAppStoreUrl
}

// GetKioskModeAppStoreUrlOk returns a tuple with the KioskModeAppStoreUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeAppStoreUrlOk() (string, bool) {
	if o == nil || o.KioskModeAppStoreUrl == nil {
		var ret string
		return ret, false
	}
	return *o.KioskModeAppStoreUrl, true
}

// HasKioskModeAppStoreUrl returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeAppStoreUrl() bool {
	if o != nil && o.KioskModeAppStoreUrl != nil {
		return true
	}

	return false
}

// SetKioskModeAppStoreUrl gets a reference to the given string and assigns it to the KioskModeAppStoreUrl field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeAppStoreUrl(v string) {
	o.KioskModeAppStoreUrl = &v
}

// SetKioskModeAppStoreUrlExplicitNull (un)sets KioskModeAppStoreUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The KioskModeAppStoreUrl value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetKioskModeAppStoreUrlExplicitNull(b bool) {
	o.KioskModeAppStoreUrl = nil
	o.isExplicitNullKioskModeAppStoreUrl = b
}
// GetKioskModeBuiltInAppId returns the KioskModeBuiltInAppId field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeBuiltInAppId() string {
	if o == nil || o.KioskModeBuiltInAppId == nil {
		var ret string
		return ret
	}
	return *o.KioskModeBuiltInAppId
}

// GetKioskModeBuiltInAppIdOk returns a tuple with the KioskModeBuiltInAppId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeBuiltInAppIdOk() (string, bool) {
	if o == nil || o.KioskModeBuiltInAppId == nil {
		var ret string
		return ret, false
	}
	return *o.KioskModeBuiltInAppId, true
}

// HasKioskModeBuiltInAppId returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeBuiltInAppId() bool {
	if o != nil && o.KioskModeBuiltInAppId != nil {
		return true
	}

	return false
}

// SetKioskModeBuiltInAppId gets a reference to the given string and assigns it to the KioskModeBuiltInAppId field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeBuiltInAppId(v string) {
	o.KioskModeBuiltInAppId = &v
}

// SetKioskModeBuiltInAppIdExplicitNull (un)sets KioskModeBuiltInAppId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The KioskModeBuiltInAppId value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetKioskModeBuiltInAppIdExplicitNull(b bool) {
	o.KioskModeBuiltInAppId = nil
	o.isExplicitNullKioskModeBuiltInAppId = b
}
// GetKioskModeRequireAssistiveTouch returns the KioskModeRequireAssistiveTouch field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireAssistiveTouch() bool {
	if o == nil || o.KioskModeRequireAssistiveTouch == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeRequireAssistiveTouch
}

// GetKioskModeRequireAssistiveTouchOk returns a tuple with the KioskModeRequireAssistiveTouch field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireAssistiveTouchOk() (bool, bool) {
	if o == nil || o.KioskModeRequireAssistiveTouch == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeRequireAssistiveTouch, true
}

// HasKioskModeRequireAssistiveTouch returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeRequireAssistiveTouch() bool {
	if o != nil && o.KioskModeRequireAssistiveTouch != nil {
		return true
	}

	return false
}

// SetKioskModeRequireAssistiveTouch gets a reference to the given bool and assigns it to the KioskModeRequireAssistiveTouch field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeRequireAssistiveTouch(v bool) {
	o.KioskModeRequireAssistiveTouch = &v
}

// GetKioskModeRequireColorInversion returns the KioskModeRequireColorInversion field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireColorInversion() bool {
	if o == nil || o.KioskModeRequireColorInversion == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeRequireColorInversion
}

// GetKioskModeRequireColorInversionOk returns a tuple with the KioskModeRequireColorInversion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireColorInversionOk() (bool, bool) {
	if o == nil || o.KioskModeRequireColorInversion == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeRequireColorInversion, true
}

// HasKioskModeRequireColorInversion returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeRequireColorInversion() bool {
	if o != nil && o.KioskModeRequireColorInversion != nil {
		return true
	}

	return false
}

// SetKioskModeRequireColorInversion gets a reference to the given bool and assigns it to the KioskModeRequireColorInversion field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeRequireColorInversion(v bool) {
	o.KioskModeRequireColorInversion = &v
}

// GetKioskModeRequireMonoAudio returns the KioskModeRequireMonoAudio field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireMonoAudio() bool {
	if o == nil || o.KioskModeRequireMonoAudio == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeRequireMonoAudio
}

// GetKioskModeRequireMonoAudioOk returns a tuple with the KioskModeRequireMonoAudio field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireMonoAudioOk() (bool, bool) {
	if o == nil || o.KioskModeRequireMonoAudio == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeRequireMonoAudio, true
}

// HasKioskModeRequireMonoAudio returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeRequireMonoAudio() bool {
	if o != nil && o.KioskModeRequireMonoAudio != nil {
		return true
	}

	return false
}

// SetKioskModeRequireMonoAudio gets a reference to the given bool and assigns it to the KioskModeRequireMonoAudio field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeRequireMonoAudio(v bool) {
	o.KioskModeRequireMonoAudio = &v
}

// GetKioskModeRequireVoiceOver returns the KioskModeRequireVoiceOver field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireVoiceOver() bool {
	if o == nil || o.KioskModeRequireVoiceOver == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeRequireVoiceOver
}

// GetKioskModeRequireVoiceOverOk returns a tuple with the KioskModeRequireVoiceOver field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireVoiceOverOk() (bool, bool) {
	if o == nil || o.KioskModeRequireVoiceOver == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeRequireVoiceOver, true
}

// HasKioskModeRequireVoiceOver returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeRequireVoiceOver() bool {
	if o != nil && o.KioskModeRequireVoiceOver != nil {
		return true
	}

	return false
}

// SetKioskModeRequireVoiceOver gets a reference to the given bool and assigns it to the KioskModeRequireVoiceOver field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeRequireVoiceOver(v bool) {
	o.KioskModeRequireVoiceOver = &v
}

// GetKioskModeRequireZoom returns the KioskModeRequireZoom field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireZoom() bool {
	if o == nil || o.KioskModeRequireZoom == nil {
		var ret bool
		return ret
	}
	return *o.KioskModeRequireZoom
}

// GetKioskModeRequireZoomOk returns a tuple with the KioskModeRequireZoom field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeRequireZoomOk() (bool, bool) {
	if o == nil || o.KioskModeRequireZoom == nil {
		var ret bool
		return ret, false
	}
	return *o.KioskModeRequireZoom, true
}

// HasKioskModeRequireZoom returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeRequireZoom() bool {
	if o != nil && o.KioskModeRequireZoom != nil {
		return true
	}

	return false
}

// SetKioskModeRequireZoom gets a reference to the given bool and assigns it to the KioskModeRequireZoom field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeRequireZoom(v bool) {
	o.KioskModeRequireZoom = &v
}

// GetKioskModeManagedAppId returns the KioskModeManagedAppId field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetKioskModeManagedAppId() string {
	if o == nil || o.KioskModeManagedAppId == nil {
		var ret string
		return ret
	}
	return *o.KioskModeManagedAppId
}

// GetKioskModeManagedAppIdOk returns a tuple with the KioskModeManagedAppId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetKioskModeManagedAppIdOk() (string, bool) {
	if o == nil || o.KioskModeManagedAppId == nil {
		var ret string
		return ret, false
	}
	return *o.KioskModeManagedAppId, true
}

// HasKioskModeManagedAppId returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasKioskModeManagedAppId() bool {
	if o != nil && o.KioskModeManagedAppId != nil {
		return true
	}

	return false
}

// SetKioskModeManagedAppId gets a reference to the given string and assigns it to the KioskModeManagedAppId field.
func (o *IosGeneralDeviceConfiguration) SetKioskModeManagedAppId(v string) {
	o.KioskModeManagedAppId = &v
}

// SetKioskModeManagedAppIdExplicitNull (un)sets KioskModeManagedAppId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The KioskModeManagedAppId value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetKioskModeManagedAppIdExplicitNull(b bool) {
	o.KioskModeManagedAppId = nil
	o.isExplicitNullKioskModeManagedAppId = b
}
// GetLockScreenBlockControlCenter returns the LockScreenBlockControlCenter field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockControlCenter() bool {
	if o == nil || o.LockScreenBlockControlCenter == nil {
		var ret bool
		return ret
	}
	return *o.LockScreenBlockControlCenter
}

// GetLockScreenBlockControlCenterOk returns a tuple with the LockScreenBlockControlCenter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockControlCenterOk() (bool, bool) {
	if o == nil || o.LockScreenBlockControlCenter == nil {
		var ret bool
		return ret, false
	}
	return *o.LockScreenBlockControlCenter, true
}

// HasLockScreenBlockControlCenter returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasLockScreenBlockControlCenter() bool {
	if o != nil && o.LockScreenBlockControlCenter != nil {
		return true
	}

	return false
}

// SetLockScreenBlockControlCenter gets a reference to the given bool and assigns it to the LockScreenBlockControlCenter field.
func (o *IosGeneralDeviceConfiguration) SetLockScreenBlockControlCenter(v bool) {
	o.LockScreenBlockControlCenter = &v
}

// GetLockScreenBlockNotificationView returns the LockScreenBlockNotificationView field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockNotificationView() bool {
	if o == nil || o.LockScreenBlockNotificationView == nil {
		var ret bool
		return ret
	}
	return *o.LockScreenBlockNotificationView
}

// GetLockScreenBlockNotificationViewOk returns a tuple with the LockScreenBlockNotificationView field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockNotificationViewOk() (bool, bool) {
	if o == nil || o.LockScreenBlockNotificationView == nil {
		var ret bool
		return ret, false
	}
	return *o.LockScreenBlockNotificationView, true
}

// HasLockScreenBlockNotificationView returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasLockScreenBlockNotificationView() bool {
	if o != nil && o.LockScreenBlockNotificationView != nil {
		return true
	}

	return false
}

// SetLockScreenBlockNotificationView gets a reference to the given bool and assigns it to the LockScreenBlockNotificationView field.
func (o *IosGeneralDeviceConfiguration) SetLockScreenBlockNotificationView(v bool) {
	o.LockScreenBlockNotificationView = &v
}

// GetLockScreenBlockPassbook returns the LockScreenBlockPassbook field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockPassbook() bool {
	if o == nil || o.LockScreenBlockPassbook == nil {
		var ret bool
		return ret
	}
	return *o.LockScreenBlockPassbook
}

// GetLockScreenBlockPassbookOk returns a tuple with the LockScreenBlockPassbook field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockPassbookOk() (bool, bool) {
	if o == nil || o.LockScreenBlockPassbook == nil {
		var ret bool
		return ret, false
	}
	return *o.LockScreenBlockPassbook, true
}

// HasLockScreenBlockPassbook returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasLockScreenBlockPassbook() bool {
	if o != nil && o.LockScreenBlockPassbook != nil {
		return true
	}

	return false
}

// SetLockScreenBlockPassbook gets a reference to the given bool and assigns it to the LockScreenBlockPassbook field.
func (o *IosGeneralDeviceConfiguration) SetLockScreenBlockPassbook(v bool) {
	o.LockScreenBlockPassbook = &v
}

// GetLockScreenBlockTodayView returns the LockScreenBlockTodayView field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockTodayView() bool {
	if o == nil || o.LockScreenBlockTodayView == nil {
		var ret bool
		return ret
	}
	return *o.LockScreenBlockTodayView
}

// GetLockScreenBlockTodayViewOk returns a tuple with the LockScreenBlockTodayView field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetLockScreenBlockTodayViewOk() (bool, bool) {
	if o == nil || o.LockScreenBlockTodayView == nil {
		var ret bool
		return ret, false
	}
	return *o.LockScreenBlockTodayView, true
}

// HasLockScreenBlockTodayView returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasLockScreenBlockTodayView() bool {
	if o != nil && o.LockScreenBlockTodayView != nil {
		return true
	}

	return false
}

// SetLockScreenBlockTodayView gets a reference to the given bool and assigns it to the LockScreenBlockTodayView field.
func (o *IosGeneralDeviceConfiguration) SetLockScreenBlockTodayView(v bool) {
	o.LockScreenBlockTodayView = &v
}

// GetMediaContentRatingAustralia returns the MediaContentRatingAustralia field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingAustralia() AnyOfmicrosoftGraphMediaContentRatingAustralia {
	if o == nil || o.MediaContentRatingAustralia == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingAustralia
		return ret
	}
	return *o.MediaContentRatingAustralia
}

// GetMediaContentRatingAustraliaOk returns a tuple with the MediaContentRatingAustralia field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingAustraliaOk() (AnyOfmicrosoftGraphMediaContentRatingAustralia, bool) {
	if o == nil || o.MediaContentRatingAustralia == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingAustralia
		return ret, false
	}
	return *o.MediaContentRatingAustralia, true
}

// HasMediaContentRatingAustralia returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingAustralia() bool {
	if o != nil && o.MediaContentRatingAustralia != nil {
		return true
	}

	return false
}

// SetMediaContentRatingAustralia gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingAustralia and assigns it to the MediaContentRatingAustralia field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingAustralia(v AnyOfmicrosoftGraphMediaContentRatingAustralia) {
	o.MediaContentRatingAustralia = &v
}

// SetMediaContentRatingAustraliaExplicitNull (un)sets MediaContentRatingAustralia to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingAustralia value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingAustraliaExplicitNull(b bool) {
	o.MediaContentRatingAustralia = nil
	o.isExplicitNullMediaContentRatingAustralia = b
}
// GetMediaContentRatingCanada returns the MediaContentRatingCanada field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingCanada() AnyOfmicrosoftGraphMediaContentRatingCanada {
	if o == nil || o.MediaContentRatingCanada == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingCanada
		return ret
	}
	return *o.MediaContentRatingCanada
}

// GetMediaContentRatingCanadaOk returns a tuple with the MediaContentRatingCanada field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingCanadaOk() (AnyOfmicrosoftGraphMediaContentRatingCanada, bool) {
	if o == nil || o.MediaContentRatingCanada == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingCanada
		return ret, false
	}
	return *o.MediaContentRatingCanada, true
}

// HasMediaContentRatingCanada returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingCanada() bool {
	if o != nil && o.MediaContentRatingCanada != nil {
		return true
	}

	return false
}

// SetMediaContentRatingCanada gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingCanada and assigns it to the MediaContentRatingCanada field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingCanada(v AnyOfmicrosoftGraphMediaContentRatingCanada) {
	o.MediaContentRatingCanada = &v
}

// SetMediaContentRatingCanadaExplicitNull (un)sets MediaContentRatingCanada to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingCanada value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingCanadaExplicitNull(b bool) {
	o.MediaContentRatingCanada = nil
	o.isExplicitNullMediaContentRatingCanada = b
}
// GetMediaContentRatingFrance returns the MediaContentRatingFrance field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingFrance() AnyOfmicrosoftGraphMediaContentRatingFrance {
	if o == nil || o.MediaContentRatingFrance == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingFrance
		return ret
	}
	return *o.MediaContentRatingFrance
}

// GetMediaContentRatingFranceOk returns a tuple with the MediaContentRatingFrance field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingFranceOk() (AnyOfmicrosoftGraphMediaContentRatingFrance, bool) {
	if o == nil || o.MediaContentRatingFrance == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingFrance
		return ret, false
	}
	return *o.MediaContentRatingFrance, true
}

// HasMediaContentRatingFrance returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingFrance() bool {
	if o != nil && o.MediaContentRatingFrance != nil {
		return true
	}

	return false
}

// SetMediaContentRatingFrance gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingFrance and assigns it to the MediaContentRatingFrance field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingFrance(v AnyOfmicrosoftGraphMediaContentRatingFrance) {
	o.MediaContentRatingFrance = &v
}

// SetMediaContentRatingFranceExplicitNull (un)sets MediaContentRatingFrance to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingFrance value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingFranceExplicitNull(b bool) {
	o.MediaContentRatingFrance = nil
	o.isExplicitNullMediaContentRatingFrance = b
}
// GetMediaContentRatingGermany returns the MediaContentRatingGermany field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingGermany() AnyOfmicrosoftGraphMediaContentRatingGermany {
	if o == nil || o.MediaContentRatingGermany == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingGermany
		return ret
	}
	return *o.MediaContentRatingGermany
}

// GetMediaContentRatingGermanyOk returns a tuple with the MediaContentRatingGermany field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingGermanyOk() (AnyOfmicrosoftGraphMediaContentRatingGermany, bool) {
	if o == nil || o.MediaContentRatingGermany == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingGermany
		return ret, false
	}
	return *o.MediaContentRatingGermany, true
}

// HasMediaContentRatingGermany returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingGermany() bool {
	if o != nil && o.MediaContentRatingGermany != nil {
		return true
	}

	return false
}

// SetMediaContentRatingGermany gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingGermany and assigns it to the MediaContentRatingGermany field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingGermany(v AnyOfmicrosoftGraphMediaContentRatingGermany) {
	o.MediaContentRatingGermany = &v
}

// SetMediaContentRatingGermanyExplicitNull (un)sets MediaContentRatingGermany to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingGermany value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingGermanyExplicitNull(b bool) {
	o.MediaContentRatingGermany = nil
	o.isExplicitNullMediaContentRatingGermany = b
}
// GetMediaContentRatingIreland returns the MediaContentRatingIreland field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingIreland() AnyOfmicrosoftGraphMediaContentRatingIreland {
	if o == nil || o.MediaContentRatingIreland == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingIreland
		return ret
	}
	return *o.MediaContentRatingIreland
}

// GetMediaContentRatingIrelandOk returns a tuple with the MediaContentRatingIreland field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingIrelandOk() (AnyOfmicrosoftGraphMediaContentRatingIreland, bool) {
	if o == nil || o.MediaContentRatingIreland == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingIreland
		return ret, false
	}
	return *o.MediaContentRatingIreland, true
}

// HasMediaContentRatingIreland returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingIreland() bool {
	if o != nil && o.MediaContentRatingIreland != nil {
		return true
	}

	return false
}

// SetMediaContentRatingIreland gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingIreland and assigns it to the MediaContentRatingIreland field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingIreland(v AnyOfmicrosoftGraphMediaContentRatingIreland) {
	o.MediaContentRatingIreland = &v
}

// SetMediaContentRatingIrelandExplicitNull (un)sets MediaContentRatingIreland to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingIreland value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingIrelandExplicitNull(b bool) {
	o.MediaContentRatingIreland = nil
	o.isExplicitNullMediaContentRatingIreland = b
}
// GetMediaContentRatingJapan returns the MediaContentRatingJapan field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingJapan() AnyOfmicrosoftGraphMediaContentRatingJapan {
	if o == nil || o.MediaContentRatingJapan == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingJapan
		return ret
	}
	return *o.MediaContentRatingJapan
}

// GetMediaContentRatingJapanOk returns a tuple with the MediaContentRatingJapan field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingJapanOk() (AnyOfmicrosoftGraphMediaContentRatingJapan, bool) {
	if o == nil || o.MediaContentRatingJapan == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingJapan
		return ret, false
	}
	return *o.MediaContentRatingJapan, true
}

// HasMediaContentRatingJapan returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingJapan() bool {
	if o != nil && o.MediaContentRatingJapan != nil {
		return true
	}

	return false
}

// SetMediaContentRatingJapan gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingJapan and assigns it to the MediaContentRatingJapan field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingJapan(v AnyOfmicrosoftGraphMediaContentRatingJapan) {
	o.MediaContentRatingJapan = &v
}

// SetMediaContentRatingJapanExplicitNull (un)sets MediaContentRatingJapan to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingJapan value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingJapanExplicitNull(b bool) {
	o.MediaContentRatingJapan = nil
	o.isExplicitNullMediaContentRatingJapan = b
}
// GetMediaContentRatingNewZealand returns the MediaContentRatingNewZealand field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingNewZealand() AnyOfmicrosoftGraphMediaContentRatingNewZealand {
	if o == nil || o.MediaContentRatingNewZealand == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingNewZealand
		return ret
	}
	return *o.MediaContentRatingNewZealand
}

// GetMediaContentRatingNewZealandOk returns a tuple with the MediaContentRatingNewZealand field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingNewZealandOk() (AnyOfmicrosoftGraphMediaContentRatingNewZealand, bool) {
	if o == nil || o.MediaContentRatingNewZealand == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingNewZealand
		return ret, false
	}
	return *o.MediaContentRatingNewZealand, true
}

// HasMediaContentRatingNewZealand returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingNewZealand() bool {
	if o != nil && o.MediaContentRatingNewZealand != nil {
		return true
	}

	return false
}

// SetMediaContentRatingNewZealand gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingNewZealand and assigns it to the MediaContentRatingNewZealand field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingNewZealand(v AnyOfmicrosoftGraphMediaContentRatingNewZealand) {
	o.MediaContentRatingNewZealand = &v
}

// SetMediaContentRatingNewZealandExplicitNull (un)sets MediaContentRatingNewZealand to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingNewZealand value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingNewZealandExplicitNull(b bool) {
	o.MediaContentRatingNewZealand = nil
	o.isExplicitNullMediaContentRatingNewZealand = b
}
// GetMediaContentRatingUnitedKingdom returns the MediaContentRatingUnitedKingdom field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingUnitedKingdom() AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom {
	if o == nil || o.MediaContentRatingUnitedKingdom == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom
		return ret
	}
	return *o.MediaContentRatingUnitedKingdom
}

// GetMediaContentRatingUnitedKingdomOk returns a tuple with the MediaContentRatingUnitedKingdom field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingUnitedKingdomOk() (AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom, bool) {
	if o == nil || o.MediaContentRatingUnitedKingdom == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom
		return ret, false
	}
	return *o.MediaContentRatingUnitedKingdom, true
}

// HasMediaContentRatingUnitedKingdom returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingUnitedKingdom() bool {
	if o != nil && o.MediaContentRatingUnitedKingdom != nil {
		return true
	}

	return false
}

// SetMediaContentRatingUnitedKingdom gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom and assigns it to the MediaContentRatingUnitedKingdom field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingUnitedKingdom(v AnyOfmicrosoftGraphMediaContentRatingUnitedKingdom) {
	o.MediaContentRatingUnitedKingdom = &v
}

// SetMediaContentRatingUnitedKingdomExplicitNull (un)sets MediaContentRatingUnitedKingdom to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingUnitedKingdom value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingUnitedKingdomExplicitNull(b bool) {
	o.MediaContentRatingUnitedKingdom = nil
	o.isExplicitNullMediaContentRatingUnitedKingdom = b
}
// GetMediaContentRatingUnitedStates returns the MediaContentRatingUnitedStates field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingUnitedStates() AnyOfmicrosoftGraphMediaContentRatingUnitedStates {
	if o == nil || o.MediaContentRatingUnitedStates == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingUnitedStates
		return ret
	}
	return *o.MediaContentRatingUnitedStates
}

// GetMediaContentRatingUnitedStatesOk returns a tuple with the MediaContentRatingUnitedStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingUnitedStatesOk() (AnyOfmicrosoftGraphMediaContentRatingUnitedStates, bool) {
	if o == nil || o.MediaContentRatingUnitedStates == nil {
		var ret AnyOfmicrosoftGraphMediaContentRatingUnitedStates
		return ret, false
	}
	return *o.MediaContentRatingUnitedStates, true
}

// HasMediaContentRatingUnitedStates returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingUnitedStates() bool {
	if o != nil && o.MediaContentRatingUnitedStates != nil {
		return true
	}

	return false
}

// SetMediaContentRatingUnitedStates gets a reference to the given AnyOfmicrosoftGraphMediaContentRatingUnitedStates and assigns it to the MediaContentRatingUnitedStates field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingUnitedStates(v AnyOfmicrosoftGraphMediaContentRatingUnitedStates) {
	o.MediaContentRatingUnitedStates = &v
}

// SetMediaContentRatingUnitedStatesExplicitNull (un)sets MediaContentRatingUnitedStates to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MediaContentRatingUnitedStates value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingUnitedStatesExplicitNull(b bool) {
	o.MediaContentRatingUnitedStates = nil
	o.isExplicitNullMediaContentRatingUnitedStates = b
}
// GetNetworkUsageRules returns the NetworkUsageRules field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetNetworkUsageRules() []AnyOfmicrosoftGraphIosNetworkUsageRule {
	if o == nil || o.NetworkUsageRules == nil {
		var ret []AnyOfmicrosoftGraphIosNetworkUsageRule
		return ret
	}
	return *o.NetworkUsageRules
}

// GetNetworkUsageRulesOk returns a tuple with the NetworkUsageRules field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetNetworkUsageRulesOk() ([]AnyOfmicrosoftGraphIosNetworkUsageRule, bool) {
	if o == nil || o.NetworkUsageRules == nil {
		var ret []AnyOfmicrosoftGraphIosNetworkUsageRule
		return ret, false
	}
	return *o.NetworkUsageRules, true
}

// HasNetworkUsageRules returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasNetworkUsageRules() bool {
	if o != nil && o.NetworkUsageRules != nil {
		return true
	}

	return false
}

// SetNetworkUsageRules gets a reference to the given []AnyOfmicrosoftGraphIosNetworkUsageRule and assigns it to the NetworkUsageRules field.
func (o *IosGeneralDeviceConfiguration) SetNetworkUsageRules(v []AnyOfmicrosoftGraphIosNetworkUsageRule) {
	o.NetworkUsageRules = &v
}

// GetMediaContentRatingApps returns the MediaContentRatingApps field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingApps() AnyOfmicrosoftGraphRatingAppsType {
	if o == nil || o.MediaContentRatingApps == nil {
		var ret AnyOfmicrosoftGraphRatingAppsType
		return ret
	}
	return *o.MediaContentRatingApps
}

// GetMediaContentRatingAppsOk returns a tuple with the MediaContentRatingApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMediaContentRatingAppsOk() (AnyOfmicrosoftGraphRatingAppsType, bool) {
	if o == nil || o.MediaContentRatingApps == nil {
		var ret AnyOfmicrosoftGraphRatingAppsType
		return ret, false
	}
	return *o.MediaContentRatingApps, true
}

// HasMediaContentRatingApps returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMediaContentRatingApps() bool {
	if o != nil && o.MediaContentRatingApps != nil {
		return true
	}

	return false
}

// SetMediaContentRatingApps gets a reference to the given AnyOfmicrosoftGraphRatingAppsType and assigns it to the MediaContentRatingApps field.
func (o *IosGeneralDeviceConfiguration) SetMediaContentRatingApps(v AnyOfmicrosoftGraphRatingAppsType) {
	o.MediaContentRatingApps = &v
}

// GetMessagesBlocked returns the MessagesBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetMessagesBlocked() bool {
	if o == nil || o.MessagesBlocked == nil {
		var ret bool
		return ret
	}
	return *o.MessagesBlocked
}

// GetMessagesBlockedOk returns a tuple with the MessagesBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetMessagesBlockedOk() (bool, bool) {
	if o == nil || o.MessagesBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.MessagesBlocked, true
}

// HasMessagesBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasMessagesBlocked() bool {
	if o != nil && o.MessagesBlocked != nil {
		return true
	}

	return false
}

// SetMessagesBlocked gets a reference to the given bool and assigns it to the MessagesBlocked field.
func (o *IosGeneralDeviceConfiguration) SetMessagesBlocked(v bool) {
	o.MessagesBlocked = &v
}

// GetNotificationsBlockSettingsModification returns the NotificationsBlockSettingsModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetNotificationsBlockSettingsModification() bool {
	if o == nil || o.NotificationsBlockSettingsModification == nil {
		var ret bool
		return ret
	}
	return *o.NotificationsBlockSettingsModification
}

// GetNotificationsBlockSettingsModificationOk returns a tuple with the NotificationsBlockSettingsModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetNotificationsBlockSettingsModificationOk() (bool, bool) {
	if o == nil || o.NotificationsBlockSettingsModification == nil {
		var ret bool
		return ret, false
	}
	return *o.NotificationsBlockSettingsModification, true
}

// HasNotificationsBlockSettingsModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasNotificationsBlockSettingsModification() bool {
	if o != nil && o.NotificationsBlockSettingsModification != nil {
		return true
	}

	return false
}

// SetNotificationsBlockSettingsModification gets a reference to the given bool and assigns it to the NotificationsBlockSettingsModification field.
func (o *IosGeneralDeviceConfiguration) SetNotificationsBlockSettingsModification(v bool) {
	o.NotificationsBlockSettingsModification = &v
}

// GetPasscodeBlockFingerprintUnlock returns the PasscodeBlockFingerprintUnlock field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockFingerprintUnlock() bool {
	if o == nil || o.PasscodeBlockFingerprintUnlock == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeBlockFingerprintUnlock
}

// GetPasscodeBlockFingerprintUnlockOk returns a tuple with the PasscodeBlockFingerprintUnlock field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockFingerprintUnlockOk() (bool, bool) {
	if o == nil || o.PasscodeBlockFingerprintUnlock == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeBlockFingerprintUnlock, true
}

// HasPasscodeBlockFingerprintUnlock returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeBlockFingerprintUnlock() bool {
	if o != nil && o.PasscodeBlockFingerprintUnlock != nil {
		return true
	}

	return false
}

// SetPasscodeBlockFingerprintUnlock gets a reference to the given bool and assigns it to the PasscodeBlockFingerprintUnlock field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeBlockFingerprintUnlock(v bool) {
	o.PasscodeBlockFingerprintUnlock = &v
}

// GetPasscodeBlockFingerprintModification returns the PasscodeBlockFingerprintModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockFingerprintModification() bool {
	if o == nil || o.PasscodeBlockFingerprintModification == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeBlockFingerprintModification
}

// GetPasscodeBlockFingerprintModificationOk returns a tuple with the PasscodeBlockFingerprintModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockFingerprintModificationOk() (bool, bool) {
	if o == nil || o.PasscodeBlockFingerprintModification == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeBlockFingerprintModification, true
}

// HasPasscodeBlockFingerprintModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeBlockFingerprintModification() bool {
	if o != nil && o.PasscodeBlockFingerprintModification != nil {
		return true
	}

	return false
}

// SetPasscodeBlockFingerprintModification gets a reference to the given bool and assigns it to the PasscodeBlockFingerprintModification field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeBlockFingerprintModification(v bool) {
	o.PasscodeBlockFingerprintModification = &v
}

// GetPasscodeBlockModification returns the PasscodeBlockModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockModification() bool {
	if o == nil || o.PasscodeBlockModification == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeBlockModification
}

// GetPasscodeBlockModificationOk returns a tuple with the PasscodeBlockModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockModificationOk() (bool, bool) {
	if o == nil || o.PasscodeBlockModification == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeBlockModification, true
}

// HasPasscodeBlockModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeBlockModification() bool {
	if o != nil && o.PasscodeBlockModification != nil {
		return true
	}

	return false
}

// SetPasscodeBlockModification gets a reference to the given bool and assigns it to the PasscodeBlockModification field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeBlockModification(v bool) {
	o.PasscodeBlockModification = &v
}

// GetPasscodeBlockSimple returns the PasscodeBlockSimple field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockSimple() bool {
	if o == nil || o.PasscodeBlockSimple == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeBlockSimple
}

// GetPasscodeBlockSimpleOk returns a tuple with the PasscodeBlockSimple field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeBlockSimpleOk() (bool, bool) {
	if o == nil || o.PasscodeBlockSimple == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeBlockSimple, true
}

// HasPasscodeBlockSimple returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeBlockSimple() bool {
	if o != nil && o.PasscodeBlockSimple != nil {
		return true
	}

	return false
}

// SetPasscodeBlockSimple gets a reference to the given bool and assigns it to the PasscodeBlockSimple field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeBlockSimple(v bool) {
	o.PasscodeBlockSimple = &v
}

// GetPasscodeExpirationDays returns the PasscodeExpirationDays field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeExpirationDays() int32 {
	if o == nil || o.PasscodeExpirationDays == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeExpirationDays
}

// GetPasscodeExpirationDaysOk returns a tuple with the PasscodeExpirationDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeExpirationDaysOk() (int32, bool) {
	if o == nil || o.PasscodeExpirationDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeExpirationDays, true
}

// HasPasscodeExpirationDays returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeExpirationDays() bool {
	if o != nil && o.PasscodeExpirationDays != nil {
		return true
	}

	return false
}

// SetPasscodeExpirationDays gets a reference to the given int32 and assigns it to the PasscodeExpirationDays field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeExpirationDays(v int32) {
	o.PasscodeExpirationDays = &v
}

// SetPasscodeExpirationDaysExplicitNull (un)sets PasscodeExpirationDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeExpirationDays value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeExpirationDaysExplicitNull(b bool) {
	o.PasscodeExpirationDays = nil
	o.isExplicitNullPasscodeExpirationDays = b
}
// GetPasscodeMinimumLength returns the PasscodeMinimumLength field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinimumLength() int32 {
	if o == nil || o.PasscodeMinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinimumLength
}

// GetPasscodeMinimumLengthOk returns a tuple with the PasscodeMinimumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinimumLengthOk() (int32, bool) {
	if o == nil || o.PasscodeMinimumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinimumLength, true
}

// HasPasscodeMinimumLength returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeMinimumLength() bool {
	if o != nil && o.PasscodeMinimumLength != nil {
		return true
	}

	return false
}

// SetPasscodeMinimumLength gets a reference to the given int32 and assigns it to the PasscodeMinimumLength field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinimumLength(v int32) {
	o.PasscodeMinimumLength = &v
}

// SetPasscodeMinimumLengthExplicitNull (un)sets PasscodeMinimumLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinimumLength value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinimumLengthExplicitNull(b bool) {
	o.PasscodeMinimumLength = nil
	o.isExplicitNullPasscodeMinimumLength = b
}
// GetPasscodeMinutesOfInactivityBeforeLock returns the PasscodeMinutesOfInactivityBeforeLock field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinutesOfInactivityBeforeLock() int32 {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinutesOfInactivityBeforeLock
}

// GetPasscodeMinutesOfInactivityBeforeLockOk returns a tuple with the PasscodeMinutesOfInactivityBeforeLock field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinutesOfInactivityBeforeLockOk() (int32, bool) {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinutesOfInactivityBeforeLock, true
}

// HasPasscodeMinutesOfInactivityBeforeLock returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeMinutesOfInactivityBeforeLock() bool {
	if o != nil && o.PasscodeMinutesOfInactivityBeforeLock != nil {
		return true
	}

	return false
}

// SetPasscodeMinutesOfInactivityBeforeLock gets a reference to the given int32 and assigns it to the PasscodeMinutesOfInactivityBeforeLock field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinutesOfInactivityBeforeLock(v int32) {
	o.PasscodeMinutesOfInactivityBeforeLock = &v
}

// SetPasscodeMinutesOfInactivityBeforeLockExplicitNull (un)sets PasscodeMinutesOfInactivityBeforeLock to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinutesOfInactivityBeforeLock value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinutesOfInactivityBeforeLockExplicitNull(b bool) {
	o.PasscodeMinutesOfInactivityBeforeLock = nil
	o.isExplicitNullPasscodeMinutesOfInactivityBeforeLock = b
}
// GetPasscodeMinutesOfInactivityBeforeScreenTimeout returns the PasscodeMinutesOfInactivityBeforeScreenTimeout field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinutesOfInactivityBeforeScreenTimeout() int32 {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeScreenTimeout == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinutesOfInactivityBeforeScreenTimeout
}

// GetPasscodeMinutesOfInactivityBeforeScreenTimeoutOk returns a tuple with the PasscodeMinutesOfInactivityBeforeScreenTimeout field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinutesOfInactivityBeforeScreenTimeoutOk() (int32, bool) {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeScreenTimeout == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinutesOfInactivityBeforeScreenTimeout, true
}

// HasPasscodeMinutesOfInactivityBeforeScreenTimeout returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeMinutesOfInactivityBeforeScreenTimeout() bool {
	if o != nil && o.PasscodeMinutesOfInactivityBeforeScreenTimeout != nil {
		return true
	}

	return false
}

// SetPasscodeMinutesOfInactivityBeforeScreenTimeout gets a reference to the given int32 and assigns it to the PasscodeMinutesOfInactivityBeforeScreenTimeout field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinutesOfInactivityBeforeScreenTimeout(v int32) {
	o.PasscodeMinutesOfInactivityBeforeScreenTimeout = &v
}

// SetPasscodeMinutesOfInactivityBeforeScreenTimeoutExplicitNull (un)sets PasscodeMinutesOfInactivityBeforeScreenTimeout to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinutesOfInactivityBeforeScreenTimeout value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinutesOfInactivityBeforeScreenTimeoutExplicitNull(b bool) {
	o.PasscodeMinutesOfInactivityBeforeScreenTimeout = nil
	o.isExplicitNullPasscodeMinutesOfInactivityBeforeScreenTimeout = b
}
// GetPasscodeMinimumCharacterSetCount returns the PasscodeMinimumCharacterSetCount field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinimumCharacterSetCount() int32 {
	if o == nil || o.PasscodeMinimumCharacterSetCount == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinimumCharacterSetCount
}

// GetPasscodeMinimumCharacterSetCountOk returns a tuple with the PasscodeMinimumCharacterSetCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeMinimumCharacterSetCountOk() (int32, bool) {
	if o == nil || o.PasscodeMinimumCharacterSetCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinimumCharacterSetCount, true
}

// HasPasscodeMinimumCharacterSetCount returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeMinimumCharacterSetCount() bool {
	if o != nil && o.PasscodeMinimumCharacterSetCount != nil {
		return true
	}

	return false
}

// SetPasscodeMinimumCharacterSetCount gets a reference to the given int32 and assigns it to the PasscodeMinimumCharacterSetCount field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinimumCharacterSetCount(v int32) {
	o.PasscodeMinimumCharacterSetCount = &v
}

// SetPasscodeMinimumCharacterSetCountExplicitNull (un)sets PasscodeMinimumCharacterSetCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinimumCharacterSetCount value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeMinimumCharacterSetCountExplicitNull(b bool) {
	o.PasscodeMinimumCharacterSetCount = nil
	o.isExplicitNullPasscodeMinimumCharacterSetCount = b
}
// GetPasscodePreviousPasscodeBlockCount returns the PasscodePreviousPasscodeBlockCount field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodePreviousPasscodeBlockCount() int32 {
	if o == nil || o.PasscodePreviousPasscodeBlockCount == nil {
		var ret int32
		return ret
	}
	return *o.PasscodePreviousPasscodeBlockCount
}

// GetPasscodePreviousPasscodeBlockCountOk returns a tuple with the PasscodePreviousPasscodeBlockCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodePreviousPasscodeBlockCountOk() (int32, bool) {
	if o == nil || o.PasscodePreviousPasscodeBlockCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodePreviousPasscodeBlockCount, true
}

// HasPasscodePreviousPasscodeBlockCount returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodePreviousPasscodeBlockCount() bool {
	if o != nil && o.PasscodePreviousPasscodeBlockCount != nil {
		return true
	}

	return false
}

// SetPasscodePreviousPasscodeBlockCount gets a reference to the given int32 and assigns it to the PasscodePreviousPasscodeBlockCount field.
func (o *IosGeneralDeviceConfiguration) SetPasscodePreviousPasscodeBlockCount(v int32) {
	o.PasscodePreviousPasscodeBlockCount = &v
}

// SetPasscodePreviousPasscodeBlockCountExplicitNull (un)sets PasscodePreviousPasscodeBlockCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodePreviousPasscodeBlockCount value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodePreviousPasscodeBlockCountExplicitNull(b bool) {
	o.PasscodePreviousPasscodeBlockCount = nil
	o.isExplicitNullPasscodePreviousPasscodeBlockCount = b
}
// GetPasscodeSignInFailureCountBeforeWipe returns the PasscodeSignInFailureCountBeforeWipe field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeSignInFailureCountBeforeWipe() int32 {
	if o == nil || o.PasscodeSignInFailureCountBeforeWipe == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeSignInFailureCountBeforeWipe
}

// GetPasscodeSignInFailureCountBeforeWipeOk returns a tuple with the PasscodeSignInFailureCountBeforeWipe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeSignInFailureCountBeforeWipeOk() (int32, bool) {
	if o == nil || o.PasscodeSignInFailureCountBeforeWipe == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeSignInFailureCountBeforeWipe, true
}

// HasPasscodeSignInFailureCountBeforeWipe returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeSignInFailureCountBeforeWipe() bool {
	if o != nil && o.PasscodeSignInFailureCountBeforeWipe != nil {
		return true
	}

	return false
}

// SetPasscodeSignInFailureCountBeforeWipe gets a reference to the given int32 and assigns it to the PasscodeSignInFailureCountBeforeWipe field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeSignInFailureCountBeforeWipe(v int32) {
	o.PasscodeSignInFailureCountBeforeWipe = &v
}

// SetPasscodeSignInFailureCountBeforeWipeExplicitNull (un)sets PasscodeSignInFailureCountBeforeWipe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeSignInFailureCountBeforeWipe value is set to nil even if false is passed
func (o *IosGeneralDeviceConfiguration) SetPasscodeSignInFailureCountBeforeWipeExplicitNull(b bool) {
	o.PasscodeSignInFailureCountBeforeWipe = nil
	o.isExplicitNullPasscodeSignInFailureCountBeforeWipe = b
}
// GetPasscodeRequiredType returns the PasscodeRequiredType field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeRequiredType() AnyOfmicrosoftGraphRequiredPasswordType {
	if o == nil || o.PasscodeRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret
	}
	return *o.PasscodeRequiredType
}

// GetPasscodeRequiredTypeOk returns a tuple with the PasscodeRequiredType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeRequiredTypeOk() (AnyOfmicrosoftGraphRequiredPasswordType, bool) {
	if o == nil || o.PasscodeRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret, false
	}
	return *o.PasscodeRequiredType, true
}

// HasPasscodeRequiredType returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeRequiredType() bool {
	if o != nil && o.PasscodeRequiredType != nil {
		return true
	}

	return false
}

// SetPasscodeRequiredType gets a reference to the given AnyOfmicrosoftGraphRequiredPasswordType and assigns it to the PasscodeRequiredType field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeRequiredType(v AnyOfmicrosoftGraphRequiredPasswordType) {
	o.PasscodeRequiredType = &v
}

// GetPasscodeRequired returns the PasscodeRequired field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPasscodeRequired() bool {
	if o == nil || o.PasscodeRequired == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeRequired
}

// GetPasscodeRequiredOk returns a tuple with the PasscodeRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPasscodeRequiredOk() (bool, bool) {
	if o == nil || o.PasscodeRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeRequired, true
}

// HasPasscodeRequired returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPasscodeRequired() bool {
	if o != nil && o.PasscodeRequired != nil {
		return true
	}

	return false
}

// SetPasscodeRequired gets a reference to the given bool and assigns it to the PasscodeRequired field.
func (o *IosGeneralDeviceConfiguration) SetPasscodeRequired(v bool) {
	o.PasscodeRequired = &v
}

// GetPodcastsBlocked returns the PodcastsBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetPodcastsBlocked() bool {
	if o == nil || o.PodcastsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.PodcastsBlocked
}

// GetPodcastsBlockedOk returns a tuple with the PodcastsBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetPodcastsBlockedOk() (bool, bool) {
	if o == nil || o.PodcastsBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.PodcastsBlocked, true
}

// HasPodcastsBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasPodcastsBlocked() bool {
	if o != nil && o.PodcastsBlocked != nil {
		return true
	}

	return false
}

// SetPodcastsBlocked gets a reference to the given bool and assigns it to the PodcastsBlocked field.
func (o *IosGeneralDeviceConfiguration) SetPodcastsBlocked(v bool) {
	o.PodcastsBlocked = &v
}

// GetSafariBlockAutofill returns the SafariBlockAutofill field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockAutofill() bool {
	if o == nil || o.SafariBlockAutofill == nil {
		var ret bool
		return ret
	}
	return *o.SafariBlockAutofill
}

// GetSafariBlockAutofillOk returns a tuple with the SafariBlockAutofill field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockAutofillOk() (bool, bool) {
	if o == nil || o.SafariBlockAutofill == nil {
		var ret bool
		return ret, false
	}
	return *o.SafariBlockAutofill, true
}

// HasSafariBlockAutofill returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariBlockAutofill() bool {
	if o != nil && o.SafariBlockAutofill != nil {
		return true
	}

	return false
}

// SetSafariBlockAutofill gets a reference to the given bool and assigns it to the SafariBlockAutofill field.
func (o *IosGeneralDeviceConfiguration) SetSafariBlockAutofill(v bool) {
	o.SafariBlockAutofill = &v
}

// GetSafariBlockJavaScript returns the SafariBlockJavaScript field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockJavaScript() bool {
	if o == nil || o.SafariBlockJavaScript == nil {
		var ret bool
		return ret
	}
	return *o.SafariBlockJavaScript
}

// GetSafariBlockJavaScriptOk returns a tuple with the SafariBlockJavaScript field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockJavaScriptOk() (bool, bool) {
	if o == nil || o.SafariBlockJavaScript == nil {
		var ret bool
		return ret, false
	}
	return *o.SafariBlockJavaScript, true
}

// HasSafariBlockJavaScript returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariBlockJavaScript() bool {
	if o != nil && o.SafariBlockJavaScript != nil {
		return true
	}

	return false
}

// SetSafariBlockJavaScript gets a reference to the given bool and assigns it to the SafariBlockJavaScript field.
func (o *IosGeneralDeviceConfiguration) SetSafariBlockJavaScript(v bool) {
	o.SafariBlockJavaScript = &v
}

// GetSafariBlockPopups returns the SafariBlockPopups field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockPopups() bool {
	if o == nil || o.SafariBlockPopups == nil {
		var ret bool
		return ret
	}
	return *o.SafariBlockPopups
}

// GetSafariBlockPopupsOk returns a tuple with the SafariBlockPopups field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockPopupsOk() (bool, bool) {
	if o == nil || o.SafariBlockPopups == nil {
		var ret bool
		return ret, false
	}
	return *o.SafariBlockPopups, true
}

// HasSafariBlockPopups returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariBlockPopups() bool {
	if o != nil && o.SafariBlockPopups != nil {
		return true
	}

	return false
}

// SetSafariBlockPopups gets a reference to the given bool and assigns it to the SafariBlockPopups field.
func (o *IosGeneralDeviceConfiguration) SetSafariBlockPopups(v bool) {
	o.SafariBlockPopups = &v
}

// GetSafariBlocked returns the SafariBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariBlocked() bool {
	if o == nil || o.SafariBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SafariBlocked
}

// GetSafariBlockedOk returns a tuple with the SafariBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariBlockedOk() (bool, bool) {
	if o == nil || o.SafariBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.SafariBlocked, true
}

// HasSafariBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariBlocked() bool {
	if o != nil && o.SafariBlocked != nil {
		return true
	}

	return false
}

// SetSafariBlocked gets a reference to the given bool and assigns it to the SafariBlocked field.
func (o *IosGeneralDeviceConfiguration) SetSafariBlocked(v bool) {
	o.SafariBlocked = &v
}

// GetSafariCookieSettings returns the SafariCookieSettings field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariCookieSettings() AnyOfmicrosoftGraphWebBrowserCookieSettings {
	if o == nil || o.SafariCookieSettings == nil {
		var ret AnyOfmicrosoftGraphWebBrowserCookieSettings
		return ret
	}
	return *o.SafariCookieSettings
}

// GetSafariCookieSettingsOk returns a tuple with the SafariCookieSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariCookieSettingsOk() (AnyOfmicrosoftGraphWebBrowserCookieSettings, bool) {
	if o == nil || o.SafariCookieSettings == nil {
		var ret AnyOfmicrosoftGraphWebBrowserCookieSettings
		return ret, false
	}
	return *o.SafariCookieSettings, true
}

// HasSafariCookieSettings returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariCookieSettings() bool {
	if o != nil && o.SafariCookieSettings != nil {
		return true
	}

	return false
}

// SetSafariCookieSettings gets a reference to the given AnyOfmicrosoftGraphWebBrowserCookieSettings and assigns it to the SafariCookieSettings field.
func (o *IosGeneralDeviceConfiguration) SetSafariCookieSettings(v AnyOfmicrosoftGraphWebBrowserCookieSettings) {
	o.SafariCookieSettings = &v
}

// GetSafariManagedDomains returns the SafariManagedDomains field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariManagedDomains() []string {
	if o == nil || o.SafariManagedDomains == nil {
		var ret []string
		return ret
	}
	return *o.SafariManagedDomains
}

// GetSafariManagedDomainsOk returns a tuple with the SafariManagedDomains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariManagedDomainsOk() ([]string, bool) {
	if o == nil || o.SafariManagedDomains == nil {
		var ret []string
		return ret, false
	}
	return *o.SafariManagedDomains, true
}

// HasSafariManagedDomains returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariManagedDomains() bool {
	if o != nil && o.SafariManagedDomains != nil {
		return true
	}

	return false
}

// SetSafariManagedDomains gets a reference to the given []string and assigns it to the SafariManagedDomains field.
func (o *IosGeneralDeviceConfiguration) SetSafariManagedDomains(v []string) {
	o.SafariManagedDomains = &v
}

// GetSafariPasswordAutoFillDomains returns the SafariPasswordAutoFillDomains field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariPasswordAutoFillDomains() []string {
	if o == nil || o.SafariPasswordAutoFillDomains == nil {
		var ret []string
		return ret
	}
	return *o.SafariPasswordAutoFillDomains
}

// GetSafariPasswordAutoFillDomainsOk returns a tuple with the SafariPasswordAutoFillDomains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariPasswordAutoFillDomainsOk() ([]string, bool) {
	if o == nil || o.SafariPasswordAutoFillDomains == nil {
		var ret []string
		return ret, false
	}
	return *o.SafariPasswordAutoFillDomains, true
}

// HasSafariPasswordAutoFillDomains returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariPasswordAutoFillDomains() bool {
	if o != nil && o.SafariPasswordAutoFillDomains != nil {
		return true
	}

	return false
}

// SetSafariPasswordAutoFillDomains gets a reference to the given []string and assigns it to the SafariPasswordAutoFillDomains field.
func (o *IosGeneralDeviceConfiguration) SetSafariPasswordAutoFillDomains(v []string) {
	o.SafariPasswordAutoFillDomains = &v
}

// GetSafariRequireFraudWarning returns the SafariRequireFraudWarning field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSafariRequireFraudWarning() bool {
	if o == nil || o.SafariRequireFraudWarning == nil {
		var ret bool
		return ret
	}
	return *o.SafariRequireFraudWarning
}

// GetSafariRequireFraudWarningOk returns a tuple with the SafariRequireFraudWarning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSafariRequireFraudWarningOk() (bool, bool) {
	if o == nil || o.SafariRequireFraudWarning == nil {
		var ret bool
		return ret, false
	}
	return *o.SafariRequireFraudWarning, true
}

// HasSafariRequireFraudWarning returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSafariRequireFraudWarning() bool {
	if o != nil && o.SafariRequireFraudWarning != nil {
		return true
	}

	return false
}

// SetSafariRequireFraudWarning gets a reference to the given bool and assigns it to the SafariRequireFraudWarning field.
func (o *IosGeneralDeviceConfiguration) SetSafariRequireFraudWarning(v bool) {
	o.SafariRequireFraudWarning = &v
}

// GetScreenCaptureBlocked returns the ScreenCaptureBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetScreenCaptureBlocked() bool {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ScreenCaptureBlocked
}

// GetScreenCaptureBlockedOk returns a tuple with the ScreenCaptureBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetScreenCaptureBlockedOk() (bool, bool) {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.ScreenCaptureBlocked, true
}

// HasScreenCaptureBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasScreenCaptureBlocked() bool {
	if o != nil && o.ScreenCaptureBlocked != nil {
		return true
	}

	return false
}

// SetScreenCaptureBlocked gets a reference to the given bool and assigns it to the ScreenCaptureBlocked field.
func (o *IosGeneralDeviceConfiguration) SetScreenCaptureBlocked(v bool) {
	o.ScreenCaptureBlocked = &v
}

// GetSiriBlocked returns the SiriBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSiriBlocked() bool {
	if o == nil || o.SiriBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SiriBlocked
}

// GetSiriBlockedOk returns a tuple with the SiriBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSiriBlockedOk() (bool, bool) {
	if o == nil || o.SiriBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.SiriBlocked, true
}

// HasSiriBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSiriBlocked() bool {
	if o != nil && o.SiriBlocked != nil {
		return true
	}

	return false
}

// SetSiriBlocked gets a reference to the given bool and assigns it to the SiriBlocked field.
func (o *IosGeneralDeviceConfiguration) SetSiriBlocked(v bool) {
	o.SiriBlocked = &v
}

// GetSiriBlockedWhenLocked returns the SiriBlockedWhenLocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSiriBlockedWhenLocked() bool {
	if o == nil || o.SiriBlockedWhenLocked == nil {
		var ret bool
		return ret
	}
	return *o.SiriBlockedWhenLocked
}

// GetSiriBlockedWhenLockedOk returns a tuple with the SiriBlockedWhenLocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSiriBlockedWhenLockedOk() (bool, bool) {
	if o == nil || o.SiriBlockedWhenLocked == nil {
		var ret bool
		return ret, false
	}
	return *o.SiriBlockedWhenLocked, true
}

// HasSiriBlockedWhenLocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSiriBlockedWhenLocked() bool {
	if o != nil && o.SiriBlockedWhenLocked != nil {
		return true
	}

	return false
}

// SetSiriBlockedWhenLocked gets a reference to the given bool and assigns it to the SiriBlockedWhenLocked field.
func (o *IosGeneralDeviceConfiguration) SetSiriBlockedWhenLocked(v bool) {
	o.SiriBlockedWhenLocked = &v
}

// GetSiriBlockUserGeneratedContent returns the SiriBlockUserGeneratedContent field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSiriBlockUserGeneratedContent() bool {
	if o == nil || o.SiriBlockUserGeneratedContent == nil {
		var ret bool
		return ret
	}
	return *o.SiriBlockUserGeneratedContent
}

// GetSiriBlockUserGeneratedContentOk returns a tuple with the SiriBlockUserGeneratedContent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSiriBlockUserGeneratedContentOk() (bool, bool) {
	if o == nil || o.SiriBlockUserGeneratedContent == nil {
		var ret bool
		return ret, false
	}
	return *o.SiriBlockUserGeneratedContent, true
}

// HasSiriBlockUserGeneratedContent returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSiriBlockUserGeneratedContent() bool {
	if o != nil && o.SiriBlockUserGeneratedContent != nil {
		return true
	}

	return false
}

// SetSiriBlockUserGeneratedContent gets a reference to the given bool and assigns it to the SiriBlockUserGeneratedContent field.
func (o *IosGeneralDeviceConfiguration) SetSiriBlockUserGeneratedContent(v bool) {
	o.SiriBlockUserGeneratedContent = &v
}

// GetSiriRequireProfanityFilter returns the SiriRequireProfanityFilter field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSiriRequireProfanityFilter() bool {
	if o == nil || o.SiriRequireProfanityFilter == nil {
		var ret bool
		return ret
	}
	return *o.SiriRequireProfanityFilter
}

// GetSiriRequireProfanityFilterOk returns a tuple with the SiriRequireProfanityFilter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSiriRequireProfanityFilterOk() (bool, bool) {
	if o == nil || o.SiriRequireProfanityFilter == nil {
		var ret bool
		return ret, false
	}
	return *o.SiriRequireProfanityFilter, true
}

// HasSiriRequireProfanityFilter returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSiriRequireProfanityFilter() bool {
	if o != nil && o.SiriRequireProfanityFilter != nil {
		return true
	}

	return false
}

// SetSiriRequireProfanityFilter gets a reference to the given bool and assigns it to the SiriRequireProfanityFilter field.
func (o *IosGeneralDeviceConfiguration) SetSiriRequireProfanityFilter(v bool) {
	o.SiriRequireProfanityFilter = &v
}

// GetSpotlightBlockInternetResults returns the SpotlightBlockInternetResults field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetSpotlightBlockInternetResults() bool {
	if o == nil || o.SpotlightBlockInternetResults == nil {
		var ret bool
		return ret
	}
	return *o.SpotlightBlockInternetResults
}

// GetSpotlightBlockInternetResultsOk returns a tuple with the SpotlightBlockInternetResults field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetSpotlightBlockInternetResultsOk() (bool, bool) {
	if o == nil || o.SpotlightBlockInternetResults == nil {
		var ret bool
		return ret, false
	}
	return *o.SpotlightBlockInternetResults, true
}

// HasSpotlightBlockInternetResults returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasSpotlightBlockInternetResults() bool {
	if o != nil && o.SpotlightBlockInternetResults != nil {
		return true
	}

	return false
}

// SetSpotlightBlockInternetResults gets a reference to the given bool and assigns it to the SpotlightBlockInternetResults field.
func (o *IosGeneralDeviceConfiguration) SetSpotlightBlockInternetResults(v bool) {
	o.SpotlightBlockInternetResults = &v
}

// GetVoiceDialingBlocked returns the VoiceDialingBlocked field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetVoiceDialingBlocked() bool {
	if o == nil || o.VoiceDialingBlocked == nil {
		var ret bool
		return ret
	}
	return *o.VoiceDialingBlocked
}

// GetVoiceDialingBlockedOk returns a tuple with the VoiceDialingBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetVoiceDialingBlockedOk() (bool, bool) {
	if o == nil || o.VoiceDialingBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.VoiceDialingBlocked, true
}

// HasVoiceDialingBlocked returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasVoiceDialingBlocked() bool {
	if o != nil && o.VoiceDialingBlocked != nil {
		return true
	}

	return false
}

// SetVoiceDialingBlocked gets a reference to the given bool and assigns it to the VoiceDialingBlocked field.
func (o *IosGeneralDeviceConfiguration) SetVoiceDialingBlocked(v bool) {
	o.VoiceDialingBlocked = &v
}

// GetWallpaperBlockModification returns the WallpaperBlockModification field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetWallpaperBlockModification() bool {
	if o == nil || o.WallpaperBlockModification == nil {
		var ret bool
		return ret
	}
	return *o.WallpaperBlockModification
}

// GetWallpaperBlockModificationOk returns a tuple with the WallpaperBlockModification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetWallpaperBlockModificationOk() (bool, bool) {
	if o == nil || o.WallpaperBlockModification == nil {
		var ret bool
		return ret, false
	}
	return *o.WallpaperBlockModification, true
}

// HasWallpaperBlockModification returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasWallpaperBlockModification() bool {
	if o != nil && o.WallpaperBlockModification != nil {
		return true
	}

	return false
}

// SetWallpaperBlockModification gets a reference to the given bool and assigns it to the WallpaperBlockModification field.
func (o *IosGeneralDeviceConfiguration) SetWallpaperBlockModification(v bool) {
	o.WallpaperBlockModification = &v
}

// GetWiFiConnectOnlyToConfiguredNetworks returns the WiFiConnectOnlyToConfiguredNetworks field if non-nil, zero value otherwise.
func (o *IosGeneralDeviceConfiguration) GetWiFiConnectOnlyToConfiguredNetworks() bool {
	if o == nil || o.WiFiConnectOnlyToConfiguredNetworks == nil {
		var ret bool
		return ret
	}
	return *o.WiFiConnectOnlyToConfiguredNetworks
}

// GetWiFiConnectOnlyToConfiguredNetworksOk returns a tuple with the WiFiConnectOnlyToConfiguredNetworks field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosGeneralDeviceConfiguration) GetWiFiConnectOnlyToConfiguredNetworksOk() (bool, bool) {
	if o == nil || o.WiFiConnectOnlyToConfiguredNetworks == nil {
		var ret bool
		return ret, false
	}
	return *o.WiFiConnectOnlyToConfiguredNetworks, true
}

// HasWiFiConnectOnlyToConfiguredNetworks returns a boolean if a field has been set.
func (o *IosGeneralDeviceConfiguration) HasWiFiConnectOnlyToConfiguredNetworks() bool {
	if o != nil && o.WiFiConnectOnlyToConfiguredNetworks != nil {
		return true
	}

	return false
}

// SetWiFiConnectOnlyToConfiguredNetworks gets a reference to the given bool and assigns it to the WiFiConnectOnlyToConfiguredNetworks field.
func (o *IosGeneralDeviceConfiguration) SetWiFiConnectOnlyToConfiguredNetworks(v bool) {
	o.WiFiConnectOnlyToConfiguredNetworks = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o IosGeneralDeviceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountBlockModification != nil {
		toSerialize["accountBlockModification"] = o.AccountBlockModification
	}
	if o.ActivationLockAllowWhenSupervised != nil {
		toSerialize["activationLockAllowWhenSupervised"] = o.ActivationLockAllowWhenSupervised
	}
	if o.AirDropBlocked != nil {
		toSerialize["airDropBlocked"] = o.AirDropBlocked
	}
	if o.AirDropForceUnmanagedDropTarget != nil {
		toSerialize["airDropForceUnmanagedDropTarget"] = o.AirDropForceUnmanagedDropTarget
	}
	if o.AirPlayForcePairingPasswordForOutgoingRequests != nil {
		toSerialize["airPlayForcePairingPasswordForOutgoingRequests"] = o.AirPlayForcePairingPasswordForOutgoingRequests
	}
	if o.AppleWatchBlockPairing != nil {
		toSerialize["appleWatchBlockPairing"] = o.AppleWatchBlockPairing
	}
	if o.AppleWatchForceWristDetection != nil {
		toSerialize["appleWatchForceWristDetection"] = o.AppleWatchForceWristDetection
	}
	if o.AppleNewsBlocked != nil {
		toSerialize["appleNewsBlocked"] = o.AppleNewsBlocked
	}
	if o.AppsSingleAppModeList != nil {
		toSerialize["appsSingleAppModeList"] = o.AppsSingleAppModeList
	}
	if o.AppsVisibilityList != nil {
		toSerialize["appsVisibilityList"] = o.AppsVisibilityList
	}
	if o.AppsVisibilityListType != nil {
		toSerialize["appsVisibilityListType"] = o.AppsVisibilityListType
	}
	if o.AppStoreBlockAutomaticDownloads != nil {
		toSerialize["appStoreBlockAutomaticDownloads"] = o.AppStoreBlockAutomaticDownloads
	}
	if o.AppStoreBlocked != nil {
		toSerialize["appStoreBlocked"] = o.AppStoreBlocked
	}
	if o.AppStoreBlockInAppPurchases != nil {
		toSerialize["appStoreBlockInAppPurchases"] = o.AppStoreBlockInAppPurchases
	}
	if o.AppStoreBlockUIAppInstallation != nil {
		toSerialize["appStoreBlockUIAppInstallation"] = o.AppStoreBlockUIAppInstallation
	}
	if o.AppStoreRequirePassword != nil {
		toSerialize["appStoreRequirePassword"] = o.AppStoreRequirePassword
	}
	if o.BluetoothBlockModification != nil {
		toSerialize["bluetoothBlockModification"] = o.BluetoothBlockModification
	}
	if o.CameraBlocked != nil {
		toSerialize["cameraBlocked"] = o.CameraBlocked
	}
	if o.CellularBlockDataRoaming != nil {
		toSerialize["cellularBlockDataRoaming"] = o.CellularBlockDataRoaming
	}
	if o.CellularBlockGlobalBackgroundFetchWhileRoaming != nil {
		toSerialize["cellularBlockGlobalBackgroundFetchWhileRoaming"] = o.CellularBlockGlobalBackgroundFetchWhileRoaming
	}
	if o.CellularBlockPerAppDataModification != nil {
		toSerialize["cellularBlockPerAppDataModification"] = o.CellularBlockPerAppDataModification
	}
	if o.CellularBlockPersonalHotspot != nil {
		toSerialize["cellularBlockPersonalHotspot"] = o.CellularBlockPersonalHotspot
	}
	if o.CellularBlockVoiceRoaming != nil {
		toSerialize["cellularBlockVoiceRoaming"] = o.CellularBlockVoiceRoaming
	}
	if o.CertificatesBlockUntrustedTlsCertificates != nil {
		toSerialize["certificatesBlockUntrustedTlsCertificates"] = o.CertificatesBlockUntrustedTlsCertificates
	}
	if o.ClassroomAppBlockRemoteScreenObservation != nil {
		toSerialize["classroomAppBlockRemoteScreenObservation"] = o.ClassroomAppBlockRemoteScreenObservation
	}
	if o.ClassroomAppForceUnpromptedScreenObservation != nil {
		toSerialize["classroomAppForceUnpromptedScreenObservation"] = o.ClassroomAppForceUnpromptedScreenObservation
	}
	if o.CompliantAppsList != nil {
		toSerialize["compliantAppsList"] = o.CompliantAppsList
	}
	if o.CompliantAppListType != nil {
		toSerialize["compliantAppListType"] = o.CompliantAppListType
	}
	if o.ConfigurationProfileBlockChanges != nil {
		toSerialize["configurationProfileBlockChanges"] = o.ConfigurationProfileBlockChanges
	}
	if o.DefinitionLookupBlocked != nil {
		toSerialize["definitionLookupBlocked"] = o.DefinitionLookupBlocked
	}
	if o.DeviceBlockEnableRestrictions != nil {
		toSerialize["deviceBlockEnableRestrictions"] = o.DeviceBlockEnableRestrictions
	}
	if o.DeviceBlockEraseContentAndSettings != nil {
		toSerialize["deviceBlockEraseContentAndSettings"] = o.DeviceBlockEraseContentAndSettings
	}
	if o.DeviceBlockNameModification != nil {
		toSerialize["deviceBlockNameModification"] = o.DeviceBlockNameModification
	}
	if o.DiagnosticDataBlockSubmission != nil {
		toSerialize["diagnosticDataBlockSubmission"] = o.DiagnosticDataBlockSubmission
	}
	if o.DiagnosticDataBlockSubmissionModification != nil {
		toSerialize["diagnosticDataBlockSubmissionModification"] = o.DiagnosticDataBlockSubmissionModification
	}
	if o.DocumentsBlockManagedDocumentsInUnmanagedApps != nil {
		toSerialize["documentsBlockManagedDocumentsInUnmanagedApps"] = o.DocumentsBlockManagedDocumentsInUnmanagedApps
	}
	if o.DocumentsBlockUnmanagedDocumentsInManagedApps != nil {
		toSerialize["documentsBlockUnmanagedDocumentsInManagedApps"] = o.DocumentsBlockUnmanagedDocumentsInManagedApps
	}
	if o.EmailInDomainSuffixes != nil {
		toSerialize["emailInDomainSuffixes"] = o.EmailInDomainSuffixes
	}
	if o.EnterpriseAppBlockTrust != nil {
		toSerialize["enterpriseAppBlockTrust"] = o.EnterpriseAppBlockTrust
	}
	if o.EnterpriseAppBlockTrustModification != nil {
		toSerialize["enterpriseAppBlockTrustModification"] = o.EnterpriseAppBlockTrustModification
	}
	if o.FaceTimeBlocked != nil {
		toSerialize["faceTimeBlocked"] = o.FaceTimeBlocked
	}
	if o.FindMyFriendsBlocked != nil {
		toSerialize["findMyFriendsBlocked"] = o.FindMyFriendsBlocked
	}
	if o.GamingBlockGameCenterFriends != nil {
		toSerialize["gamingBlockGameCenterFriends"] = o.GamingBlockGameCenterFriends
	}
	if o.GamingBlockMultiplayer != nil {
		toSerialize["gamingBlockMultiplayer"] = o.GamingBlockMultiplayer
	}
	if o.GameCenterBlocked != nil {
		toSerialize["gameCenterBlocked"] = o.GameCenterBlocked
	}
	if o.HostPairingBlocked != nil {
		toSerialize["hostPairingBlocked"] = o.HostPairingBlocked
	}
	if o.IBooksStoreBlocked != nil {
		toSerialize["iBooksStoreBlocked"] = o.IBooksStoreBlocked
	}
	if o.IBooksStoreBlockErotica != nil {
		toSerialize["iBooksStoreBlockErotica"] = o.IBooksStoreBlockErotica
	}
	if o.ICloudBlockActivityContinuation != nil {
		toSerialize["iCloudBlockActivityContinuation"] = o.ICloudBlockActivityContinuation
	}
	if o.ICloudBlockBackup != nil {
		toSerialize["iCloudBlockBackup"] = o.ICloudBlockBackup
	}
	if o.ICloudBlockDocumentSync != nil {
		toSerialize["iCloudBlockDocumentSync"] = o.ICloudBlockDocumentSync
	}
	if o.ICloudBlockManagedAppsSync != nil {
		toSerialize["iCloudBlockManagedAppsSync"] = o.ICloudBlockManagedAppsSync
	}
	if o.ICloudBlockPhotoLibrary != nil {
		toSerialize["iCloudBlockPhotoLibrary"] = o.ICloudBlockPhotoLibrary
	}
	if o.ICloudBlockPhotoStreamSync != nil {
		toSerialize["iCloudBlockPhotoStreamSync"] = o.ICloudBlockPhotoStreamSync
	}
	if o.ICloudBlockSharedPhotoStream != nil {
		toSerialize["iCloudBlockSharedPhotoStream"] = o.ICloudBlockSharedPhotoStream
	}
	if o.ICloudRequireEncryptedBackup != nil {
		toSerialize["iCloudRequireEncryptedBackup"] = o.ICloudRequireEncryptedBackup
	}
	if o.ITunesBlockExplicitContent != nil {
		toSerialize["iTunesBlockExplicitContent"] = o.ITunesBlockExplicitContent
	}
	if o.ITunesBlockMusicService != nil {
		toSerialize["iTunesBlockMusicService"] = o.ITunesBlockMusicService
	}
	if o.ITunesBlockRadio != nil {
		toSerialize["iTunesBlockRadio"] = o.ITunesBlockRadio
	}
	if o.KeyboardBlockAutoCorrect != nil {
		toSerialize["keyboardBlockAutoCorrect"] = o.KeyboardBlockAutoCorrect
	}
	if o.KeyboardBlockDictation != nil {
		toSerialize["keyboardBlockDictation"] = o.KeyboardBlockDictation
	}
	if o.KeyboardBlockPredictive != nil {
		toSerialize["keyboardBlockPredictive"] = o.KeyboardBlockPredictive
	}
	if o.KeyboardBlockShortcuts != nil {
		toSerialize["keyboardBlockShortcuts"] = o.KeyboardBlockShortcuts
	}
	if o.KeyboardBlockSpellCheck != nil {
		toSerialize["keyboardBlockSpellCheck"] = o.KeyboardBlockSpellCheck
	}
	if o.KioskModeAllowAssistiveSpeak != nil {
		toSerialize["kioskModeAllowAssistiveSpeak"] = o.KioskModeAllowAssistiveSpeak
	}
	if o.KioskModeAllowAssistiveTouchSettings != nil {
		toSerialize["kioskModeAllowAssistiveTouchSettings"] = o.KioskModeAllowAssistiveTouchSettings
	}
	if o.KioskModeAllowAutoLock != nil {
		toSerialize["kioskModeAllowAutoLock"] = o.KioskModeAllowAutoLock
	}
	if o.KioskModeAllowColorInversionSettings != nil {
		toSerialize["kioskModeAllowColorInversionSettings"] = o.KioskModeAllowColorInversionSettings
	}
	if o.KioskModeAllowRingerSwitch != nil {
		toSerialize["kioskModeAllowRingerSwitch"] = o.KioskModeAllowRingerSwitch
	}
	if o.KioskModeAllowScreenRotation != nil {
		toSerialize["kioskModeAllowScreenRotation"] = o.KioskModeAllowScreenRotation
	}
	if o.KioskModeAllowSleepButton != nil {
		toSerialize["kioskModeAllowSleepButton"] = o.KioskModeAllowSleepButton
	}
	if o.KioskModeAllowTouchscreen != nil {
		toSerialize["kioskModeAllowTouchscreen"] = o.KioskModeAllowTouchscreen
	}
	if o.KioskModeAllowVoiceOverSettings != nil {
		toSerialize["kioskModeAllowVoiceOverSettings"] = o.KioskModeAllowVoiceOverSettings
	}
	if o.KioskModeAllowVolumeButtons != nil {
		toSerialize["kioskModeAllowVolumeButtons"] = o.KioskModeAllowVolumeButtons
	}
	if o.KioskModeAllowZoomSettings != nil {
		toSerialize["kioskModeAllowZoomSettings"] = o.KioskModeAllowZoomSettings
	}
	if o.KioskModeAppStoreUrl == nil {
		if o.isExplicitNullKioskModeAppStoreUrl {
			toSerialize["kioskModeAppStoreUrl"] = o.KioskModeAppStoreUrl
		}
	} else {
		toSerialize["kioskModeAppStoreUrl"] = o.KioskModeAppStoreUrl
	}
	if o.KioskModeBuiltInAppId == nil {
		if o.isExplicitNullKioskModeBuiltInAppId {
			toSerialize["kioskModeBuiltInAppId"] = o.KioskModeBuiltInAppId
		}
	} else {
		toSerialize["kioskModeBuiltInAppId"] = o.KioskModeBuiltInAppId
	}
	if o.KioskModeRequireAssistiveTouch != nil {
		toSerialize["kioskModeRequireAssistiveTouch"] = o.KioskModeRequireAssistiveTouch
	}
	if o.KioskModeRequireColorInversion != nil {
		toSerialize["kioskModeRequireColorInversion"] = o.KioskModeRequireColorInversion
	}
	if o.KioskModeRequireMonoAudio != nil {
		toSerialize["kioskModeRequireMonoAudio"] = o.KioskModeRequireMonoAudio
	}
	if o.KioskModeRequireVoiceOver != nil {
		toSerialize["kioskModeRequireVoiceOver"] = o.KioskModeRequireVoiceOver
	}
	if o.KioskModeRequireZoom != nil {
		toSerialize["kioskModeRequireZoom"] = o.KioskModeRequireZoom
	}
	if o.KioskModeManagedAppId == nil {
		if o.isExplicitNullKioskModeManagedAppId {
			toSerialize["kioskModeManagedAppId"] = o.KioskModeManagedAppId
		}
	} else {
		toSerialize["kioskModeManagedAppId"] = o.KioskModeManagedAppId
	}
	if o.LockScreenBlockControlCenter != nil {
		toSerialize["lockScreenBlockControlCenter"] = o.LockScreenBlockControlCenter
	}
	if o.LockScreenBlockNotificationView != nil {
		toSerialize["lockScreenBlockNotificationView"] = o.LockScreenBlockNotificationView
	}
	if o.LockScreenBlockPassbook != nil {
		toSerialize["lockScreenBlockPassbook"] = o.LockScreenBlockPassbook
	}
	if o.LockScreenBlockTodayView != nil {
		toSerialize["lockScreenBlockTodayView"] = o.LockScreenBlockTodayView
	}
	if o.MediaContentRatingAustralia == nil {
		if o.isExplicitNullMediaContentRatingAustralia {
			toSerialize["mediaContentRatingAustralia"] = o.MediaContentRatingAustralia
		}
	} else {
		toSerialize["mediaContentRatingAustralia"] = o.MediaContentRatingAustralia
	}
	if o.MediaContentRatingCanada == nil {
		if o.isExplicitNullMediaContentRatingCanada {
			toSerialize["mediaContentRatingCanada"] = o.MediaContentRatingCanada
		}
	} else {
		toSerialize["mediaContentRatingCanada"] = o.MediaContentRatingCanada
	}
	if o.MediaContentRatingFrance == nil {
		if o.isExplicitNullMediaContentRatingFrance {
			toSerialize["mediaContentRatingFrance"] = o.MediaContentRatingFrance
		}
	} else {
		toSerialize["mediaContentRatingFrance"] = o.MediaContentRatingFrance
	}
	if o.MediaContentRatingGermany == nil {
		if o.isExplicitNullMediaContentRatingGermany {
			toSerialize["mediaContentRatingGermany"] = o.MediaContentRatingGermany
		}
	} else {
		toSerialize["mediaContentRatingGermany"] = o.MediaContentRatingGermany
	}
	if o.MediaContentRatingIreland == nil {
		if o.isExplicitNullMediaContentRatingIreland {
			toSerialize["mediaContentRatingIreland"] = o.MediaContentRatingIreland
		}
	} else {
		toSerialize["mediaContentRatingIreland"] = o.MediaContentRatingIreland
	}
	if o.MediaContentRatingJapan == nil {
		if o.isExplicitNullMediaContentRatingJapan {
			toSerialize["mediaContentRatingJapan"] = o.MediaContentRatingJapan
		}
	} else {
		toSerialize["mediaContentRatingJapan"] = o.MediaContentRatingJapan
	}
	if o.MediaContentRatingNewZealand == nil {
		if o.isExplicitNullMediaContentRatingNewZealand {
			toSerialize["mediaContentRatingNewZealand"] = o.MediaContentRatingNewZealand
		}
	} else {
		toSerialize["mediaContentRatingNewZealand"] = o.MediaContentRatingNewZealand
	}
	if o.MediaContentRatingUnitedKingdom == nil {
		if o.isExplicitNullMediaContentRatingUnitedKingdom {
			toSerialize["mediaContentRatingUnitedKingdom"] = o.MediaContentRatingUnitedKingdom
		}
	} else {
		toSerialize["mediaContentRatingUnitedKingdom"] = o.MediaContentRatingUnitedKingdom
	}
	if o.MediaContentRatingUnitedStates == nil {
		if o.isExplicitNullMediaContentRatingUnitedStates {
			toSerialize["mediaContentRatingUnitedStates"] = o.MediaContentRatingUnitedStates
		}
	} else {
		toSerialize["mediaContentRatingUnitedStates"] = o.MediaContentRatingUnitedStates
	}
	if o.NetworkUsageRules != nil {
		toSerialize["networkUsageRules"] = o.NetworkUsageRules
	}
	if o.MediaContentRatingApps != nil {
		toSerialize["mediaContentRatingApps"] = o.MediaContentRatingApps
	}
	if o.MessagesBlocked != nil {
		toSerialize["messagesBlocked"] = o.MessagesBlocked
	}
	if o.NotificationsBlockSettingsModification != nil {
		toSerialize["notificationsBlockSettingsModification"] = o.NotificationsBlockSettingsModification
	}
	if o.PasscodeBlockFingerprintUnlock != nil {
		toSerialize["passcodeBlockFingerprintUnlock"] = o.PasscodeBlockFingerprintUnlock
	}
	if o.PasscodeBlockFingerprintModification != nil {
		toSerialize["passcodeBlockFingerprintModification"] = o.PasscodeBlockFingerprintModification
	}
	if o.PasscodeBlockModification != nil {
		toSerialize["passcodeBlockModification"] = o.PasscodeBlockModification
	}
	if o.PasscodeBlockSimple != nil {
		toSerialize["passcodeBlockSimple"] = o.PasscodeBlockSimple
	}
	if o.PasscodeExpirationDays == nil {
		if o.isExplicitNullPasscodeExpirationDays {
			toSerialize["passcodeExpirationDays"] = o.PasscodeExpirationDays
		}
	} else {
		toSerialize["passcodeExpirationDays"] = o.PasscodeExpirationDays
	}
	if o.PasscodeMinimumLength == nil {
		if o.isExplicitNullPasscodeMinimumLength {
			toSerialize["passcodeMinimumLength"] = o.PasscodeMinimumLength
		}
	} else {
		toSerialize["passcodeMinimumLength"] = o.PasscodeMinimumLength
	}
	if o.PasscodeMinutesOfInactivityBeforeLock == nil {
		if o.isExplicitNullPasscodeMinutesOfInactivityBeforeLock {
			toSerialize["passcodeMinutesOfInactivityBeforeLock"] = o.PasscodeMinutesOfInactivityBeforeLock
		}
	} else {
		toSerialize["passcodeMinutesOfInactivityBeforeLock"] = o.PasscodeMinutesOfInactivityBeforeLock
	}
	if o.PasscodeMinutesOfInactivityBeforeScreenTimeout == nil {
		if o.isExplicitNullPasscodeMinutesOfInactivityBeforeScreenTimeout {
			toSerialize["passcodeMinutesOfInactivityBeforeScreenTimeout"] = o.PasscodeMinutesOfInactivityBeforeScreenTimeout
		}
	} else {
		toSerialize["passcodeMinutesOfInactivityBeforeScreenTimeout"] = o.PasscodeMinutesOfInactivityBeforeScreenTimeout
	}
	if o.PasscodeMinimumCharacterSetCount == nil {
		if o.isExplicitNullPasscodeMinimumCharacterSetCount {
			toSerialize["passcodeMinimumCharacterSetCount"] = o.PasscodeMinimumCharacterSetCount
		}
	} else {
		toSerialize["passcodeMinimumCharacterSetCount"] = o.PasscodeMinimumCharacterSetCount
	}
	if o.PasscodePreviousPasscodeBlockCount == nil {
		if o.isExplicitNullPasscodePreviousPasscodeBlockCount {
			toSerialize["passcodePreviousPasscodeBlockCount"] = o.PasscodePreviousPasscodeBlockCount
		}
	} else {
		toSerialize["passcodePreviousPasscodeBlockCount"] = o.PasscodePreviousPasscodeBlockCount
	}
	if o.PasscodeSignInFailureCountBeforeWipe == nil {
		if o.isExplicitNullPasscodeSignInFailureCountBeforeWipe {
			toSerialize["passcodeSignInFailureCountBeforeWipe"] = o.PasscodeSignInFailureCountBeforeWipe
		}
	} else {
		toSerialize["passcodeSignInFailureCountBeforeWipe"] = o.PasscodeSignInFailureCountBeforeWipe
	}
	if o.PasscodeRequiredType != nil {
		toSerialize["passcodeRequiredType"] = o.PasscodeRequiredType
	}
	if o.PasscodeRequired != nil {
		toSerialize["passcodeRequired"] = o.PasscodeRequired
	}
	if o.PodcastsBlocked != nil {
		toSerialize["podcastsBlocked"] = o.PodcastsBlocked
	}
	if o.SafariBlockAutofill != nil {
		toSerialize["safariBlockAutofill"] = o.SafariBlockAutofill
	}
	if o.SafariBlockJavaScript != nil {
		toSerialize["safariBlockJavaScript"] = o.SafariBlockJavaScript
	}
	if o.SafariBlockPopups != nil {
		toSerialize["safariBlockPopups"] = o.SafariBlockPopups
	}
	if o.SafariBlocked != nil {
		toSerialize["safariBlocked"] = o.SafariBlocked
	}
	if o.SafariCookieSettings != nil {
		toSerialize["safariCookieSettings"] = o.SafariCookieSettings
	}
	if o.SafariManagedDomains != nil {
		toSerialize["safariManagedDomains"] = o.SafariManagedDomains
	}
	if o.SafariPasswordAutoFillDomains != nil {
		toSerialize["safariPasswordAutoFillDomains"] = o.SafariPasswordAutoFillDomains
	}
	if o.SafariRequireFraudWarning != nil {
		toSerialize["safariRequireFraudWarning"] = o.SafariRequireFraudWarning
	}
	if o.ScreenCaptureBlocked != nil {
		toSerialize["screenCaptureBlocked"] = o.ScreenCaptureBlocked
	}
	if o.SiriBlocked != nil {
		toSerialize["siriBlocked"] = o.SiriBlocked
	}
	if o.SiriBlockedWhenLocked != nil {
		toSerialize["siriBlockedWhenLocked"] = o.SiriBlockedWhenLocked
	}
	if o.SiriBlockUserGeneratedContent != nil {
		toSerialize["siriBlockUserGeneratedContent"] = o.SiriBlockUserGeneratedContent
	}
	if o.SiriRequireProfanityFilter != nil {
		toSerialize["siriRequireProfanityFilter"] = o.SiriRequireProfanityFilter
	}
	if o.SpotlightBlockInternetResults != nil {
		toSerialize["spotlightBlockInternetResults"] = o.SpotlightBlockInternetResults
	}
	if o.VoiceDialingBlocked != nil {
		toSerialize["voiceDialingBlocked"] = o.VoiceDialingBlocked
	}
	if o.WallpaperBlockModification != nil {
		toSerialize["wallpaperBlockModification"] = o.WallpaperBlockModification
	}
	if o.WiFiConnectOnlyToConfiguredNetworks != nil {
		toSerialize["wiFiConnectOnlyToConfiguredNetworks"] = o.WiFiConnectOnlyToConfiguredNetworks
	}
	return json.Marshal(toSerialize)
}


