/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject959 struct for InlineObject959
type InlineObject959 struct {
	LookupValue *AnyOfobject `json:"lookupValue,omitempty"`
	isExplicitNullLookupValue bool `json:"-"`
	LookupArray *AnyOfobject `json:"lookupArray,omitempty"`
	isExplicitNullLookupArray bool `json:"-"`
	MatchType *AnyOfobject `json:"matchType,omitempty"`
	isExplicitNullMatchType bool `json:"-"`
}

// GetLookupValue returns the LookupValue field if non-nil, zero value otherwise.
func (o *InlineObject959) GetLookupValue() AnyOfobject {
	if o == nil || o.LookupValue == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.LookupValue
}

// GetLookupValueOk returns a tuple with the LookupValue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject959) GetLookupValueOk() (AnyOfobject, bool) {
	if o == nil || o.LookupValue == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.LookupValue, true
}

// HasLookupValue returns a boolean if a field has been set.
func (o *InlineObject959) HasLookupValue() bool {
	if o != nil && o.LookupValue != nil {
		return true
	}

	return false
}

// SetLookupValue gets a reference to the given AnyOfobject and assigns it to the LookupValue field.
func (o *InlineObject959) SetLookupValue(v AnyOfobject) {
	o.LookupValue = &v
}

// SetLookupValueExplicitNull (un)sets LookupValue to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LookupValue value is set to nil even if false is passed
func (o *InlineObject959) SetLookupValueExplicitNull(b bool) {
	o.LookupValue = nil
	o.isExplicitNullLookupValue = b
}
// GetLookupArray returns the LookupArray field if non-nil, zero value otherwise.
func (o *InlineObject959) GetLookupArray() AnyOfobject {
	if o == nil || o.LookupArray == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.LookupArray
}

// GetLookupArrayOk returns a tuple with the LookupArray field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject959) GetLookupArrayOk() (AnyOfobject, bool) {
	if o == nil || o.LookupArray == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.LookupArray, true
}

// HasLookupArray returns a boolean if a field has been set.
func (o *InlineObject959) HasLookupArray() bool {
	if o != nil && o.LookupArray != nil {
		return true
	}

	return false
}

// SetLookupArray gets a reference to the given AnyOfobject and assigns it to the LookupArray field.
func (o *InlineObject959) SetLookupArray(v AnyOfobject) {
	o.LookupArray = &v
}

// SetLookupArrayExplicitNull (un)sets LookupArray to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LookupArray value is set to nil even if false is passed
func (o *InlineObject959) SetLookupArrayExplicitNull(b bool) {
	o.LookupArray = nil
	o.isExplicitNullLookupArray = b
}
// GetMatchType returns the MatchType field if non-nil, zero value otherwise.
func (o *InlineObject959) GetMatchType() AnyOfobject {
	if o == nil || o.MatchType == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.MatchType
}

// GetMatchTypeOk returns a tuple with the MatchType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject959) GetMatchTypeOk() (AnyOfobject, bool) {
	if o == nil || o.MatchType == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.MatchType, true
}

// HasMatchType returns a boolean if a field has been set.
func (o *InlineObject959) HasMatchType() bool {
	if o != nil && o.MatchType != nil {
		return true
	}

	return false
}

// SetMatchType gets a reference to the given AnyOfobject and assigns it to the MatchType field.
func (o *InlineObject959) SetMatchType(v AnyOfobject) {
	o.MatchType = &v
}

// SetMatchTypeExplicitNull (un)sets MatchType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MatchType value is set to nil even if false is passed
func (o *InlineObject959) SetMatchTypeExplicitNull(b bool) {
	o.MatchType = nil
	o.isExplicitNullMatchType = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject959) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LookupValue == nil {
		if o.isExplicitNullLookupValue {
			toSerialize["lookupValue"] = o.LookupValue
		}
	} else {
		toSerialize["lookupValue"] = o.LookupValue
	}
	if o.LookupArray == nil {
		if o.isExplicitNullLookupArray {
			toSerialize["lookupArray"] = o.LookupArray
		}
	} else {
		toSerialize["lookupArray"] = o.LookupArray
	}
	if o.MatchType == nil {
		if o.isExplicitNullMatchType {
			toSerialize["matchType"] = o.MatchType
		}
	} else {
		toSerialize["matchType"] = o.MatchType
	}
	return json.Marshal(toSerialize)
}


