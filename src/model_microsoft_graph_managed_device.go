/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphManagedDevice struct for MicrosoftGraphManagedDevice
type MicrosoftGraphManagedDevice struct {
	Id *string `json:"id,omitempty"`

	// Unique Identifier for the user associated with the device
	UserId *string `json:"userId,omitempty"`
	isExplicitNullUserId bool `json:"-"`
	// Name of the device
	DeviceName *string `json:"deviceName,omitempty"`
	isExplicitNullDeviceName bool `json:"-"`
	// Ownership of the device. Can be 'company' or 'personal'
	ManagedDeviceOwnerType *AnyOfmicrosoftGraphManagedDeviceOwnerType `json:"managedDeviceOwnerType,omitempty"`

	// List of ComplexType deviceActionResult objects.
	DeviceActionResults *[]AnyOfmicrosoftGraphDeviceActionResult `json:"deviceActionResults,omitempty"`

	// Enrollment time of the device.
	EnrolledDateTime *time.Time `json:"enrolledDateTime,omitempty"`

	// The date and time that the device last completed a successful sync with Intune.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`

	// Operating system of the device. Windows, iOS, etc.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	isExplicitNullOperatingSystem bool `json:"-"`
	// Compliance state of the device.
	ComplianceState *AnyOfmicrosoftGraphComplianceState `json:"complianceState,omitempty"`

	// whether the device is jail broken or rooted.
	JailBroken *string `json:"jailBroken,omitempty"`
	isExplicitNullJailBroken bool `json:"-"`
	// Management channel of the device. Intune, EAS, etc.
	ManagementAgent *AnyOfmicrosoftGraphManagementAgentType `json:"managementAgent,omitempty"`

	// Operating system version of the device.
	OsVersion *string `json:"osVersion,omitempty"`
	isExplicitNullOsVersion bool `json:"-"`
	// Whether the device is Exchange ActiveSync activated.
	EasActivated *bool `json:"easActivated,omitempty"`

	// Exchange ActiveSync Id of the device.
	EasDeviceId *string `json:"easDeviceId,omitempty"`
	isExplicitNullEasDeviceId bool `json:"-"`
	// Exchange ActivationSync activation time of the device.
	EasActivationDateTime *time.Time `json:"easActivationDateTime,omitempty"`

	// Whether the device is Azure Active Directory registered.
	AzureADRegistered *bool `json:"azureADRegistered,omitempty"`
	isExplicitNullAzureADRegistered bool `json:"-"`
	// Enrollment type of the device.
	DeviceEnrollmentType *AnyOfmicrosoftGraphDeviceEnrollmentType `json:"deviceEnrollmentType,omitempty"`

	// Code that allows the Activation Lock on a device to be bypassed.
	ActivationLockBypassCode *string `json:"activationLockBypassCode,omitempty"`
	isExplicitNullActivationLockBypassCode bool `json:"-"`
	// Email(s) for the user associated with the device
	EmailAddress *string `json:"emailAddress,omitempty"`
	isExplicitNullEmailAddress bool `json:"-"`
	// The unique identifier for the Azure Active Directory device. Read only.
	AzureADDeviceId *string `json:"azureADDeviceId,omitempty"`
	isExplicitNullAzureADDeviceId bool `json:"-"`
	// Device registration state.
	DeviceRegistrationState *AnyOfmicrosoftGraphDeviceRegistrationState `json:"deviceRegistrationState,omitempty"`

	// Device category display name
	DeviceCategoryDisplayName *string `json:"deviceCategoryDisplayName,omitempty"`
	isExplicitNullDeviceCategoryDisplayName bool `json:"-"`
	// Device supervised status
	IsSupervised *bool `json:"isSupervised,omitempty"`

	// Last time the device contacted Exchange.
	ExchangeLastSuccessfulSyncDateTime *time.Time `json:"exchangeLastSuccessfulSyncDateTime,omitempty"`

	// The Access State of the device in Exchange.
	ExchangeAccessState *AnyOfmicrosoftGraphDeviceManagementExchangeAccessState `json:"exchangeAccessState,omitempty"`

	// The reason for the device's access state in Exchange.
	ExchangeAccessStateReason *AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason `json:"exchangeAccessStateReason,omitempty"`

	// Url that allows a Remote Assistance session to be established with the device.
	RemoteAssistanceSessionUrl *string `json:"remoteAssistanceSessionUrl,omitempty"`
	isExplicitNullRemoteAssistanceSessionUrl bool `json:"-"`
	// An error string that identifies issues when creating Remote Assistance session objects.
	RemoteAssistanceSessionErrorDetails *string `json:"remoteAssistanceSessionErrorDetails,omitempty"`
	isExplicitNullRemoteAssistanceSessionErrorDetails bool `json:"-"`
	// Device encryption status
	IsEncrypted *bool `json:"isEncrypted,omitempty"`

	// Device user principal name
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	isExplicitNullUserPrincipalName bool `json:"-"`
	// Model of the device
	Model *string `json:"model,omitempty"`
	isExplicitNullModel bool `json:"-"`
	// Manufacturer of the device
	Manufacturer *string `json:"manufacturer,omitempty"`
	isExplicitNullManufacturer bool `json:"-"`
	// IMEI
	Imei *string `json:"imei,omitempty"`
	isExplicitNullImei bool `json:"-"`
	// The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`

	// SerialNumber
	SerialNumber *string `json:"serialNumber,omitempty"`
	isExplicitNullSerialNumber bool `json:"-"`
	// Phone number of the device
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	isExplicitNullPhoneNumber bool `json:"-"`
	// Android security patch level
	AndroidSecurityPatchLevel *string `json:"androidSecurityPatchLevel,omitempty"`
	isExplicitNullAndroidSecurityPatchLevel bool `json:"-"`
	// User display name
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	isExplicitNullUserDisplayName bool `json:"-"`
	// ConfigrMgr client enabled features
	ConfigurationManagerClientEnabledFeatures *AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures `json:"configurationManagerClientEnabledFeatures,omitempty"`
	isExplicitNullConfigurationManagerClientEnabledFeatures bool `json:"-"`
	// Wi-Fi MAC
	WiFiMacAddress *string `json:"wiFiMacAddress,omitempty"`
	isExplicitNullWiFiMacAddress bool `json:"-"`
	// The device health attestation state.
	DeviceHealthAttestationState *AnyOfmicrosoftGraphDeviceHealthAttestationState `json:"deviceHealthAttestationState,omitempty"`
	isExplicitNullDeviceHealthAttestationState bool `json:"-"`
	// Subscriber Carrier
	SubscriberCarrier *string `json:"subscriberCarrier,omitempty"`
	isExplicitNullSubscriberCarrier bool `json:"-"`
	// MEID
	Meid *string `json:"meid,omitempty"`
	isExplicitNullMeid bool `json:"-"`
	// Total Storage in Bytes
	TotalStorageSpaceInBytes *int64 `json:"totalStorageSpaceInBytes,omitempty"`

	// Free Storage in Bytes
	FreeStorageSpaceInBytes *int64 `json:"freeStorageSpaceInBytes,omitempty"`

	// Automatically generated name to identify a device. Can be overwritten to a user friendly name.
	ManagedDeviceName *string `json:"managedDeviceName,omitempty"`
	isExplicitNullManagedDeviceName bool `json:"-"`
	// Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only.
	PartnerReportedThreatState *AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState `json:"partnerReportedThreatState,omitempty"`

	DeviceConfigurationStates *[]MicrosoftGraphDeviceConfigurationState `json:"deviceConfigurationStates,omitempty"`

	DeviceCompliancePolicyStates *[]MicrosoftGraphDeviceCompliancePolicyState `json:"deviceCompliancePolicyStates,omitempty"`

	DeviceCategory *AnyOfmicrosoftGraphDeviceCategory `json:"deviceCategory,omitempty"`
	isExplicitNullDeviceCategory bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphManagedDevice) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetUserIdOk() (string, bool) {
	if o == nil || o.UserId == nil {
		var ret string
		return ret, false
	}
	return *o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MicrosoftGraphManagedDevice) SetUserId(v string) {
	o.UserId = &v
}

// SetUserIdExplicitNull (un)sets UserId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserId value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetUserIdExplicitNull(b bool) {
	o.UserId = nil
	o.isExplicitNullUserId = b
}
// GetDeviceName returns the DeviceName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceNameOk() (string, bool) {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *MicrosoftGraphManagedDevice) SetDeviceName(v string) {
	o.DeviceName = &v
}

// SetDeviceNameExplicitNull (un)sets DeviceName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceName value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetDeviceNameExplicitNull(b bool) {
	o.DeviceName = nil
	o.isExplicitNullDeviceName = b
}
// GetManagedDeviceOwnerType returns the ManagedDeviceOwnerType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceOwnerType() AnyOfmicrosoftGraphManagedDeviceOwnerType {
	if o == nil || o.ManagedDeviceOwnerType == nil {
		var ret AnyOfmicrosoftGraphManagedDeviceOwnerType
		return ret
	}
	return *o.ManagedDeviceOwnerType
}

// GetManagedDeviceOwnerTypeOk returns a tuple with the ManagedDeviceOwnerType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceOwnerTypeOk() (AnyOfmicrosoftGraphManagedDeviceOwnerType, bool) {
	if o == nil || o.ManagedDeviceOwnerType == nil {
		var ret AnyOfmicrosoftGraphManagedDeviceOwnerType
		return ret, false
	}
	return *o.ManagedDeviceOwnerType, true
}

// HasManagedDeviceOwnerType returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagedDeviceOwnerType() bool {
	if o != nil && o.ManagedDeviceOwnerType != nil {
		return true
	}

	return false
}

// SetManagedDeviceOwnerType gets a reference to the given AnyOfmicrosoftGraphManagedDeviceOwnerType and assigns it to the ManagedDeviceOwnerType field.
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceOwnerType(v AnyOfmicrosoftGraphManagedDeviceOwnerType) {
	o.ManagedDeviceOwnerType = &v
}

// GetDeviceActionResults returns the DeviceActionResults field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceActionResults() []AnyOfmicrosoftGraphDeviceActionResult {
	if o == nil || o.DeviceActionResults == nil {
		var ret []AnyOfmicrosoftGraphDeviceActionResult
		return ret
	}
	return *o.DeviceActionResults
}

// GetDeviceActionResultsOk returns a tuple with the DeviceActionResults field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceActionResultsOk() ([]AnyOfmicrosoftGraphDeviceActionResult, bool) {
	if o == nil || o.DeviceActionResults == nil {
		var ret []AnyOfmicrosoftGraphDeviceActionResult
		return ret, false
	}
	return *o.DeviceActionResults, true
}

// HasDeviceActionResults returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceActionResults() bool {
	if o != nil && o.DeviceActionResults != nil {
		return true
	}

	return false
}

// SetDeviceActionResults gets a reference to the given []AnyOfmicrosoftGraphDeviceActionResult and assigns it to the DeviceActionResults field.
func (o *MicrosoftGraphManagedDevice) SetDeviceActionResults(v []AnyOfmicrosoftGraphDeviceActionResult) {
	o.DeviceActionResults = &v
}

// GetEnrolledDateTime returns the EnrolledDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEnrolledDateTime() time.Time {
	if o == nil || o.EnrolledDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EnrolledDateTime
}

// GetEnrolledDateTimeOk returns a tuple with the EnrolledDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEnrolledDateTimeOk() (time.Time, bool) {
	if o == nil || o.EnrolledDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EnrolledDateTime, true
}

// HasEnrolledDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEnrolledDateTime() bool {
	if o != nil && o.EnrolledDateTime != nil {
		return true
	}

	return false
}

// SetEnrolledDateTime gets a reference to the given time.Time and assigns it to the EnrolledDateTime field.
func (o *MicrosoftGraphManagedDevice) SetEnrolledDateTime(v time.Time) {
	o.EnrolledDateTime = &v
}

// GetLastSyncDateTime returns the LastSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetLastSyncDateTime() time.Time {
	if o == nil || o.LastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSyncDateTime
}

// GetLastSyncDateTimeOk returns a tuple with the LastSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetLastSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastSyncDateTime, true
}

// HasLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasLastSyncDateTime() bool {
	if o != nil && o.LastSyncDateTime != nil {
		return true
	}

	return false
}

// SetLastSyncDateTime gets a reference to the given time.Time and assigns it to the LastSyncDateTime field.
func (o *MicrosoftGraphManagedDevice) SetLastSyncDateTime(v time.Time) {
	o.LastSyncDateTime = &v
}

// GetOperatingSystem returns the OperatingSystem field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetOperatingSystemOk() (string, bool) {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret, false
	}
	return *o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphManagedDevice) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// SetOperatingSystemExplicitNull (un)sets OperatingSystem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OperatingSystem value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetOperatingSystemExplicitNull(b bool) {
	o.OperatingSystem = nil
	o.isExplicitNullOperatingSystem = b
}
// GetComplianceState returns the ComplianceState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetComplianceState() AnyOfmicrosoftGraphComplianceState {
	if o == nil || o.ComplianceState == nil {
		var ret AnyOfmicrosoftGraphComplianceState
		return ret
	}
	return *o.ComplianceState
}

// GetComplianceStateOk returns a tuple with the ComplianceState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetComplianceStateOk() (AnyOfmicrosoftGraphComplianceState, bool) {
	if o == nil || o.ComplianceState == nil {
		var ret AnyOfmicrosoftGraphComplianceState
		return ret, false
	}
	return *o.ComplianceState, true
}

// HasComplianceState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasComplianceState() bool {
	if o != nil && o.ComplianceState != nil {
		return true
	}

	return false
}

// SetComplianceState gets a reference to the given AnyOfmicrosoftGraphComplianceState and assigns it to the ComplianceState field.
func (o *MicrosoftGraphManagedDevice) SetComplianceState(v AnyOfmicrosoftGraphComplianceState) {
	o.ComplianceState = &v
}

// GetJailBroken returns the JailBroken field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetJailBroken() string {
	if o == nil || o.JailBroken == nil {
		var ret string
		return ret
	}
	return *o.JailBroken
}

// GetJailBrokenOk returns a tuple with the JailBroken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetJailBrokenOk() (string, bool) {
	if o == nil || o.JailBroken == nil {
		var ret string
		return ret, false
	}
	return *o.JailBroken, true
}

// HasJailBroken returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasJailBroken() bool {
	if o != nil && o.JailBroken != nil {
		return true
	}

	return false
}

// SetJailBroken gets a reference to the given string and assigns it to the JailBroken field.
func (o *MicrosoftGraphManagedDevice) SetJailBroken(v string) {
	o.JailBroken = &v
}

// SetJailBrokenExplicitNull (un)sets JailBroken to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The JailBroken value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetJailBrokenExplicitNull(b bool) {
	o.JailBroken = nil
	o.isExplicitNullJailBroken = b
}
// GetManagementAgent returns the ManagementAgent field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetManagementAgent() AnyOfmicrosoftGraphManagementAgentType {
	if o == nil || o.ManagementAgent == nil {
		var ret AnyOfmicrosoftGraphManagementAgentType
		return ret
	}
	return *o.ManagementAgent
}

// GetManagementAgentOk returns a tuple with the ManagementAgent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetManagementAgentOk() (AnyOfmicrosoftGraphManagementAgentType, bool) {
	if o == nil || o.ManagementAgent == nil {
		var ret AnyOfmicrosoftGraphManagementAgentType
		return ret, false
	}
	return *o.ManagementAgent, true
}

// HasManagementAgent returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagementAgent() bool {
	if o != nil && o.ManagementAgent != nil {
		return true
	}

	return false
}

// SetManagementAgent gets a reference to the given AnyOfmicrosoftGraphManagementAgentType and assigns it to the ManagementAgent field.
func (o *MicrosoftGraphManagedDevice) SetManagementAgent(v AnyOfmicrosoftGraphManagementAgentType) {
	o.ManagementAgent = &v
}

// GetOsVersion returns the OsVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetOsVersion() string {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetOsVersionOk() (string, bool) {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasOsVersion() bool {
	if o != nil && o.OsVersion != nil {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *MicrosoftGraphManagedDevice) SetOsVersion(v string) {
	o.OsVersion = &v
}

// SetOsVersionExplicitNull (un)sets OsVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OsVersion value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetOsVersionExplicitNull(b bool) {
	o.OsVersion = nil
	o.isExplicitNullOsVersion = b
}
// GetEasActivated returns the EasActivated field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEasActivated() bool {
	if o == nil || o.EasActivated == nil {
		var ret bool
		return ret
	}
	return *o.EasActivated
}

// GetEasActivatedOk returns a tuple with the EasActivated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEasActivatedOk() (bool, bool) {
	if o == nil || o.EasActivated == nil {
		var ret bool
		return ret, false
	}
	return *o.EasActivated, true
}

// HasEasActivated returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasActivated() bool {
	if o != nil && o.EasActivated != nil {
		return true
	}

	return false
}

// SetEasActivated gets a reference to the given bool and assigns it to the EasActivated field.
func (o *MicrosoftGraphManagedDevice) SetEasActivated(v bool) {
	o.EasActivated = &v
}

// GetEasDeviceId returns the EasDeviceId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEasDeviceId() string {
	if o == nil || o.EasDeviceId == nil {
		var ret string
		return ret
	}
	return *o.EasDeviceId
}

// GetEasDeviceIdOk returns a tuple with the EasDeviceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEasDeviceIdOk() (string, bool) {
	if o == nil || o.EasDeviceId == nil {
		var ret string
		return ret, false
	}
	return *o.EasDeviceId, true
}

// HasEasDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasDeviceId() bool {
	if o != nil && o.EasDeviceId != nil {
		return true
	}

	return false
}

// SetEasDeviceId gets a reference to the given string and assigns it to the EasDeviceId field.
func (o *MicrosoftGraphManagedDevice) SetEasDeviceId(v string) {
	o.EasDeviceId = &v
}

// SetEasDeviceIdExplicitNull (un)sets EasDeviceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EasDeviceId value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetEasDeviceIdExplicitNull(b bool) {
	o.EasDeviceId = nil
	o.isExplicitNullEasDeviceId = b
}
// GetEasActivationDateTime returns the EasActivationDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEasActivationDateTime() time.Time {
	if o == nil || o.EasActivationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EasActivationDateTime
}

// GetEasActivationDateTimeOk returns a tuple with the EasActivationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEasActivationDateTimeOk() (time.Time, bool) {
	if o == nil || o.EasActivationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EasActivationDateTime, true
}

// HasEasActivationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEasActivationDateTime() bool {
	if o != nil && o.EasActivationDateTime != nil {
		return true
	}

	return false
}

// SetEasActivationDateTime gets a reference to the given time.Time and assigns it to the EasActivationDateTime field.
func (o *MicrosoftGraphManagedDevice) SetEasActivationDateTime(v time.Time) {
	o.EasActivationDateTime = &v
}

// GetAzureADRegistered returns the AzureADRegistered field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetAzureADRegistered() bool {
	if o == nil || o.AzureADRegistered == nil {
		var ret bool
		return ret
	}
	return *o.AzureADRegistered
}

// GetAzureADRegisteredOk returns a tuple with the AzureADRegistered field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetAzureADRegisteredOk() (bool, bool) {
	if o == nil || o.AzureADRegistered == nil {
		var ret bool
		return ret, false
	}
	return *o.AzureADRegistered, true
}

// HasAzureADRegistered returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAzureADRegistered() bool {
	if o != nil && o.AzureADRegistered != nil {
		return true
	}

	return false
}

// SetAzureADRegistered gets a reference to the given bool and assigns it to the AzureADRegistered field.
func (o *MicrosoftGraphManagedDevice) SetAzureADRegistered(v bool) {
	o.AzureADRegistered = &v
}

// SetAzureADRegisteredExplicitNull (un)sets AzureADRegistered to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AzureADRegistered value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetAzureADRegisteredExplicitNull(b bool) {
	o.AzureADRegistered = nil
	o.isExplicitNullAzureADRegistered = b
}
// GetDeviceEnrollmentType returns the DeviceEnrollmentType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceEnrollmentType() AnyOfmicrosoftGraphDeviceEnrollmentType {
	if o == nil || o.DeviceEnrollmentType == nil {
		var ret AnyOfmicrosoftGraphDeviceEnrollmentType
		return ret
	}
	return *o.DeviceEnrollmentType
}

// GetDeviceEnrollmentTypeOk returns a tuple with the DeviceEnrollmentType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceEnrollmentTypeOk() (AnyOfmicrosoftGraphDeviceEnrollmentType, bool) {
	if o == nil || o.DeviceEnrollmentType == nil {
		var ret AnyOfmicrosoftGraphDeviceEnrollmentType
		return ret, false
	}
	return *o.DeviceEnrollmentType, true
}

// HasDeviceEnrollmentType returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceEnrollmentType() bool {
	if o != nil && o.DeviceEnrollmentType != nil {
		return true
	}

	return false
}

// SetDeviceEnrollmentType gets a reference to the given AnyOfmicrosoftGraphDeviceEnrollmentType and assigns it to the DeviceEnrollmentType field.
func (o *MicrosoftGraphManagedDevice) SetDeviceEnrollmentType(v AnyOfmicrosoftGraphDeviceEnrollmentType) {
	o.DeviceEnrollmentType = &v
}

// GetActivationLockBypassCode returns the ActivationLockBypassCode field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetActivationLockBypassCode() string {
	if o == nil || o.ActivationLockBypassCode == nil {
		var ret string
		return ret
	}
	return *o.ActivationLockBypassCode
}

// GetActivationLockBypassCodeOk returns a tuple with the ActivationLockBypassCode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetActivationLockBypassCodeOk() (string, bool) {
	if o == nil || o.ActivationLockBypassCode == nil {
		var ret string
		return ret, false
	}
	return *o.ActivationLockBypassCode, true
}

// HasActivationLockBypassCode returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasActivationLockBypassCode() bool {
	if o != nil && o.ActivationLockBypassCode != nil {
		return true
	}

	return false
}

// SetActivationLockBypassCode gets a reference to the given string and assigns it to the ActivationLockBypassCode field.
func (o *MicrosoftGraphManagedDevice) SetActivationLockBypassCode(v string) {
	o.ActivationLockBypassCode = &v
}

// SetActivationLockBypassCodeExplicitNull (un)sets ActivationLockBypassCode to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ActivationLockBypassCode value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetActivationLockBypassCodeExplicitNull(b bool) {
	o.ActivationLockBypassCode = nil
	o.isExplicitNullActivationLockBypassCode = b
}
// GetEmailAddress returns the EmailAddress field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetEmailAddressOk() (string, bool) {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret, false
	}
	return *o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *MicrosoftGraphManagedDevice) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// SetEmailAddressExplicitNull (un)sets EmailAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EmailAddress value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetEmailAddressExplicitNull(b bool) {
	o.EmailAddress = nil
	o.isExplicitNullEmailAddress = b
}
// GetAzureADDeviceId returns the AzureADDeviceId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetAzureADDeviceId() string {
	if o == nil || o.AzureADDeviceId == nil {
		var ret string
		return ret
	}
	return *o.AzureADDeviceId
}

// GetAzureADDeviceIdOk returns a tuple with the AzureADDeviceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetAzureADDeviceIdOk() (string, bool) {
	if o == nil || o.AzureADDeviceId == nil {
		var ret string
		return ret, false
	}
	return *o.AzureADDeviceId, true
}

// HasAzureADDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAzureADDeviceId() bool {
	if o != nil && o.AzureADDeviceId != nil {
		return true
	}

	return false
}

// SetAzureADDeviceId gets a reference to the given string and assigns it to the AzureADDeviceId field.
func (o *MicrosoftGraphManagedDevice) SetAzureADDeviceId(v string) {
	o.AzureADDeviceId = &v
}

// SetAzureADDeviceIdExplicitNull (un)sets AzureADDeviceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AzureADDeviceId value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetAzureADDeviceIdExplicitNull(b bool) {
	o.AzureADDeviceId = nil
	o.isExplicitNullAzureADDeviceId = b
}
// GetDeviceRegistrationState returns the DeviceRegistrationState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceRegistrationState() AnyOfmicrosoftGraphDeviceRegistrationState {
	if o == nil || o.DeviceRegistrationState == nil {
		var ret AnyOfmicrosoftGraphDeviceRegistrationState
		return ret
	}
	return *o.DeviceRegistrationState
}

// GetDeviceRegistrationStateOk returns a tuple with the DeviceRegistrationState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceRegistrationStateOk() (AnyOfmicrosoftGraphDeviceRegistrationState, bool) {
	if o == nil || o.DeviceRegistrationState == nil {
		var ret AnyOfmicrosoftGraphDeviceRegistrationState
		return ret, false
	}
	return *o.DeviceRegistrationState, true
}

// HasDeviceRegistrationState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceRegistrationState() bool {
	if o != nil && o.DeviceRegistrationState != nil {
		return true
	}

	return false
}

// SetDeviceRegistrationState gets a reference to the given AnyOfmicrosoftGraphDeviceRegistrationState and assigns it to the DeviceRegistrationState field.
func (o *MicrosoftGraphManagedDevice) SetDeviceRegistrationState(v AnyOfmicrosoftGraphDeviceRegistrationState) {
	o.DeviceRegistrationState = &v
}

// GetDeviceCategoryDisplayName returns the DeviceCategoryDisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryDisplayName() string {
	if o == nil || o.DeviceCategoryDisplayName == nil {
		var ret string
		return ret
	}
	return *o.DeviceCategoryDisplayName
}

// GetDeviceCategoryDisplayNameOk returns a tuple with the DeviceCategoryDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryDisplayNameOk() (string, bool) {
	if o == nil || o.DeviceCategoryDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceCategoryDisplayName, true
}

// HasDeviceCategoryDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCategoryDisplayName() bool {
	if o != nil && o.DeviceCategoryDisplayName != nil {
		return true
	}

	return false
}

// SetDeviceCategoryDisplayName gets a reference to the given string and assigns it to the DeviceCategoryDisplayName field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCategoryDisplayName(v string) {
	o.DeviceCategoryDisplayName = &v
}

// SetDeviceCategoryDisplayNameExplicitNull (un)sets DeviceCategoryDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceCategoryDisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetDeviceCategoryDisplayNameExplicitNull(b bool) {
	o.DeviceCategoryDisplayName = nil
	o.isExplicitNullDeviceCategoryDisplayName = b
}
// GetIsSupervised returns the IsSupervised field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetIsSupervised() bool {
	if o == nil || o.IsSupervised == nil {
		var ret bool
		return ret
	}
	return *o.IsSupervised
}

// GetIsSupervisedOk returns a tuple with the IsSupervised field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIsSupervisedOk() (bool, bool) {
	if o == nil || o.IsSupervised == nil {
		var ret bool
		return ret, false
	}
	return *o.IsSupervised, true
}

// HasIsSupervised returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasIsSupervised() bool {
	if o != nil && o.IsSupervised != nil {
		return true
	}

	return false
}

// SetIsSupervised gets a reference to the given bool and assigns it to the IsSupervised field.
func (o *MicrosoftGraphManagedDevice) SetIsSupervised(v bool) {
	o.IsSupervised = &v
}

// GetExchangeLastSuccessfulSyncDateTime returns the ExchangeLastSuccessfulSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetExchangeLastSuccessfulSyncDateTime() time.Time {
	if o == nil || o.ExchangeLastSuccessfulSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExchangeLastSuccessfulSyncDateTime
}

// GetExchangeLastSuccessfulSyncDateTimeOk returns a tuple with the ExchangeLastSuccessfulSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetExchangeLastSuccessfulSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.ExchangeLastSuccessfulSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExchangeLastSuccessfulSyncDateTime, true
}

// HasExchangeLastSuccessfulSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeLastSuccessfulSyncDateTime() bool {
	if o != nil && o.ExchangeLastSuccessfulSyncDateTime != nil {
		return true
	}

	return false
}

// SetExchangeLastSuccessfulSyncDateTime gets a reference to the given time.Time and assigns it to the ExchangeLastSuccessfulSyncDateTime field.
func (o *MicrosoftGraphManagedDevice) SetExchangeLastSuccessfulSyncDateTime(v time.Time) {
	o.ExchangeLastSuccessfulSyncDateTime = &v
}

// GetExchangeAccessState returns the ExchangeAccessState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessState() AnyOfmicrosoftGraphDeviceManagementExchangeAccessState {
	if o == nil || o.ExchangeAccessState == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessState
		return ret
	}
	return *o.ExchangeAccessState
}

// GetExchangeAccessStateOk returns a tuple with the ExchangeAccessState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateOk() (AnyOfmicrosoftGraphDeviceManagementExchangeAccessState, bool) {
	if o == nil || o.ExchangeAccessState == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessState
		return ret, false
	}
	return *o.ExchangeAccessState, true
}

// HasExchangeAccessState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeAccessState() bool {
	if o != nil && o.ExchangeAccessState != nil {
		return true
	}

	return false
}

// SetExchangeAccessState gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeAccessState and assigns it to the ExchangeAccessState field.
func (o *MicrosoftGraphManagedDevice) SetExchangeAccessState(v AnyOfmicrosoftGraphDeviceManagementExchangeAccessState) {
	o.ExchangeAccessState = &v
}

// GetExchangeAccessStateReason returns the ExchangeAccessStateReason field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateReason() AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason {
	if o == nil || o.ExchangeAccessStateReason == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason
		return ret
	}
	return *o.ExchangeAccessStateReason
}

// GetExchangeAccessStateReasonOk returns a tuple with the ExchangeAccessStateReason field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetExchangeAccessStateReasonOk() (AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason, bool) {
	if o == nil || o.ExchangeAccessStateReason == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason
		return ret, false
	}
	return *o.ExchangeAccessStateReason, true
}

// HasExchangeAccessStateReason returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasExchangeAccessStateReason() bool {
	if o != nil && o.ExchangeAccessStateReason != nil {
		return true
	}

	return false
}

// SetExchangeAccessStateReason gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason and assigns it to the ExchangeAccessStateReason field.
func (o *MicrosoftGraphManagedDevice) SetExchangeAccessStateReason(v AnyOfmicrosoftGraphDeviceManagementExchangeAccessStateReason) {
	o.ExchangeAccessStateReason = &v
}

// GetRemoteAssistanceSessionUrl returns the RemoteAssistanceSessionUrl field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionUrl() string {
	if o == nil || o.RemoteAssistanceSessionUrl == nil {
		var ret string
		return ret
	}
	return *o.RemoteAssistanceSessionUrl
}

// GetRemoteAssistanceSessionUrlOk returns a tuple with the RemoteAssistanceSessionUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionUrlOk() (string, bool) {
	if o == nil || o.RemoteAssistanceSessionUrl == nil {
		var ret string
		return ret, false
	}
	return *o.RemoteAssistanceSessionUrl, true
}

// HasRemoteAssistanceSessionUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasRemoteAssistanceSessionUrl() bool {
	if o != nil && o.RemoteAssistanceSessionUrl != nil {
		return true
	}

	return false
}

// SetRemoteAssistanceSessionUrl gets a reference to the given string and assigns it to the RemoteAssistanceSessionUrl field.
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionUrl(v string) {
	o.RemoteAssistanceSessionUrl = &v
}

// SetRemoteAssistanceSessionUrlExplicitNull (un)sets RemoteAssistanceSessionUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RemoteAssistanceSessionUrl value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionUrlExplicitNull(b bool) {
	o.RemoteAssistanceSessionUrl = nil
	o.isExplicitNullRemoteAssistanceSessionUrl = b
}
// GetRemoteAssistanceSessionErrorDetails returns the RemoteAssistanceSessionErrorDetails field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionErrorDetails() string {
	if o == nil || o.RemoteAssistanceSessionErrorDetails == nil {
		var ret string
		return ret
	}
	return *o.RemoteAssistanceSessionErrorDetails
}

// GetRemoteAssistanceSessionErrorDetailsOk returns a tuple with the RemoteAssistanceSessionErrorDetails field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetRemoteAssistanceSessionErrorDetailsOk() (string, bool) {
	if o == nil || o.RemoteAssistanceSessionErrorDetails == nil {
		var ret string
		return ret, false
	}
	return *o.RemoteAssistanceSessionErrorDetails, true
}

// HasRemoteAssistanceSessionErrorDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasRemoteAssistanceSessionErrorDetails() bool {
	if o != nil && o.RemoteAssistanceSessionErrorDetails != nil {
		return true
	}

	return false
}

// SetRemoteAssistanceSessionErrorDetails gets a reference to the given string and assigns it to the RemoteAssistanceSessionErrorDetails field.
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionErrorDetails(v string) {
	o.RemoteAssistanceSessionErrorDetails = &v
}

// SetRemoteAssistanceSessionErrorDetailsExplicitNull (un)sets RemoteAssistanceSessionErrorDetails to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RemoteAssistanceSessionErrorDetails value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetRemoteAssistanceSessionErrorDetailsExplicitNull(b bool) {
	o.RemoteAssistanceSessionErrorDetails = nil
	o.isExplicitNullRemoteAssistanceSessionErrorDetails = b
}
// GetIsEncrypted returns the IsEncrypted field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetIsEncrypted() bool {
	if o == nil || o.IsEncrypted == nil {
		var ret bool
		return ret
	}
	return *o.IsEncrypted
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetIsEncryptedOk() (bool, bool) {
	if o == nil || o.IsEncrypted == nil {
		var ret bool
		return ret, false
	}
	return *o.IsEncrypted, true
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted != nil {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given bool and assigns it to the IsEncrypted field.
func (o *MicrosoftGraphManagedDevice) SetIsEncrypted(v bool) {
	o.IsEncrypted = &v
}

// GetUserPrincipalName returns the UserPrincipalName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetUserPrincipalNameOk() (string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *MicrosoftGraphManagedDevice) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// SetUserPrincipalNameExplicitNull (un)sets UserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserPrincipalName value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetUserPrincipalNameExplicitNull(b bool) {
	o.UserPrincipalName = nil
	o.isExplicitNullUserPrincipalName = b
}
// GetModel returns the Model field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetModelOk() (string, bool) {
	if o == nil || o.Model == nil {
		var ret string
		return ret, false
	}
	return *o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *MicrosoftGraphManagedDevice) SetModel(v string) {
	o.Model = &v
}

// SetModelExplicitNull (un)sets Model to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Model value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetModelExplicitNull(b bool) {
	o.Model = nil
	o.isExplicitNullModel = b
}
// GetManufacturer returns the Manufacturer field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetManufacturer() string {
	if o == nil || o.Manufacturer == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetManufacturerOk() (string, bool) {
	if o == nil || o.Manufacturer == nil {
		var ret string
		return ret, false
	}
	return *o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *MicrosoftGraphManagedDevice) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// SetManufacturerExplicitNull (un)sets Manufacturer to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Manufacturer value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetManufacturerExplicitNull(b bool) {
	o.Manufacturer = nil
	o.isExplicitNullManufacturer = b
}
// GetImei returns the Imei field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetImei() string {
	if o == nil || o.Imei == nil {
		var ret string
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetImeiOk() (string, bool) {
	if o == nil || o.Imei == nil {
		var ret string
		return ret, false
	}
	return *o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasImei() bool {
	if o != nil && o.Imei != nil {
		return true
	}

	return false
}

// SetImei gets a reference to the given string and assigns it to the Imei field.
func (o *MicrosoftGraphManagedDevice) SetImei(v string) {
	o.Imei = &v
}

// SetImeiExplicitNull (un)sets Imei to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Imei value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetImeiExplicitNull(b bool) {
	o.Imei = nil
	o.isExplicitNullImei = b
}
// GetComplianceGracePeriodExpirationDateTime returns the ComplianceGracePeriodExpirationDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetComplianceGracePeriodExpirationDateTime() time.Time {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ComplianceGracePeriodExpirationDateTime
}

// GetComplianceGracePeriodExpirationDateTimeOk returns a tuple with the ComplianceGracePeriodExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetComplianceGracePeriodExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ComplianceGracePeriodExpirationDateTime, true
}

// HasComplianceGracePeriodExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasComplianceGracePeriodExpirationDateTime() bool {
	if o != nil && o.ComplianceGracePeriodExpirationDateTime != nil {
		return true
	}

	return false
}

// SetComplianceGracePeriodExpirationDateTime gets a reference to the given time.Time and assigns it to the ComplianceGracePeriodExpirationDateTime field.
func (o *MicrosoftGraphManagedDevice) SetComplianceGracePeriodExpirationDateTime(v time.Time) {
	o.ComplianceGracePeriodExpirationDateTime = &v
}

// GetSerialNumber returns the SerialNumber field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetSerialNumberOk() (string, bool) {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret, false
	}
	return *o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MicrosoftGraphManagedDevice) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// SetSerialNumberExplicitNull (un)sets SerialNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SerialNumber value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetSerialNumberExplicitNull(b bool) {
	o.SerialNumber = nil
	o.isExplicitNullSerialNumber = b
}
// GetPhoneNumber returns the PhoneNumber field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetPhoneNumberOk() (string, bool) {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret, false
	}
	return *o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *MicrosoftGraphManagedDevice) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// SetPhoneNumberExplicitNull (un)sets PhoneNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PhoneNumber value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetPhoneNumberExplicitNull(b bool) {
	o.PhoneNumber = nil
	o.isExplicitNullPhoneNumber = b
}
// GetAndroidSecurityPatchLevel returns the AndroidSecurityPatchLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetAndroidSecurityPatchLevel() string {
	if o == nil || o.AndroidSecurityPatchLevel == nil {
		var ret string
		return ret
	}
	return *o.AndroidSecurityPatchLevel
}

// GetAndroidSecurityPatchLevelOk returns a tuple with the AndroidSecurityPatchLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetAndroidSecurityPatchLevelOk() (string, bool) {
	if o == nil || o.AndroidSecurityPatchLevel == nil {
		var ret string
		return ret, false
	}
	return *o.AndroidSecurityPatchLevel, true
}

// HasAndroidSecurityPatchLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasAndroidSecurityPatchLevel() bool {
	if o != nil && o.AndroidSecurityPatchLevel != nil {
		return true
	}

	return false
}

// SetAndroidSecurityPatchLevel gets a reference to the given string and assigns it to the AndroidSecurityPatchLevel field.
func (o *MicrosoftGraphManagedDevice) SetAndroidSecurityPatchLevel(v string) {
	o.AndroidSecurityPatchLevel = &v
}

// SetAndroidSecurityPatchLevelExplicitNull (un)sets AndroidSecurityPatchLevel to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AndroidSecurityPatchLevel value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetAndroidSecurityPatchLevelExplicitNull(b bool) {
	o.AndroidSecurityPatchLevel = nil
	o.isExplicitNullAndroidSecurityPatchLevel = b
}
// GetUserDisplayName returns the UserDisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetUserDisplayNameOk() (string, bool) {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName != nil {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *MicrosoftGraphManagedDevice) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// SetUserDisplayNameExplicitNull (un)sets UserDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserDisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetUserDisplayNameExplicitNull(b bool) {
	o.UserDisplayName = nil
	o.isExplicitNullUserDisplayName = b
}
// GetConfigurationManagerClientEnabledFeatures returns the ConfigurationManagerClientEnabledFeatures field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetConfigurationManagerClientEnabledFeatures() AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures {
	if o == nil || o.ConfigurationManagerClientEnabledFeatures == nil {
		var ret AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures
		return ret
	}
	return *o.ConfigurationManagerClientEnabledFeatures
}

// GetConfigurationManagerClientEnabledFeaturesOk returns a tuple with the ConfigurationManagerClientEnabledFeatures field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetConfigurationManagerClientEnabledFeaturesOk() (AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures, bool) {
	if o == nil || o.ConfigurationManagerClientEnabledFeatures == nil {
		var ret AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures
		return ret, false
	}
	return *o.ConfigurationManagerClientEnabledFeatures, true
}

// HasConfigurationManagerClientEnabledFeatures returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasConfigurationManagerClientEnabledFeatures() bool {
	if o != nil && o.ConfigurationManagerClientEnabledFeatures != nil {
		return true
	}

	return false
}

// SetConfigurationManagerClientEnabledFeatures gets a reference to the given AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures and assigns it to the ConfigurationManagerClientEnabledFeatures field.
func (o *MicrosoftGraphManagedDevice) SetConfigurationManagerClientEnabledFeatures(v AnyOfmicrosoftGraphConfigurationManagerClientEnabledFeatures) {
	o.ConfigurationManagerClientEnabledFeatures = &v
}

// SetConfigurationManagerClientEnabledFeaturesExplicitNull (un)sets ConfigurationManagerClientEnabledFeatures to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConfigurationManagerClientEnabledFeatures value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetConfigurationManagerClientEnabledFeaturesExplicitNull(b bool) {
	o.ConfigurationManagerClientEnabledFeatures = nil
	o.isExplicitNullConfigurationManagerClientEnabledFeatures = b
}
// GetWiFiMacAddress returns the WiFiMacAddress field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetWiFiMacAddress() string {
	if o == nil || o.WiFiMacAddress == nil {
		var ret string
		return ret
	}
	return *o.WiFiMacAddress
}

// GetWiFiMacAddressOk returns a tuple with the WiFiMacAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetWiFiMacAddressOk() (string, bool) {
	if o == nil || o.WiFiMacAddress == nil {
		var ret string
		return ret, false
	}
	return *o.WiFiMacAddress, true
}

// HasWiFiMacAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasWiFiMacAddress() bool {
	if o != nil && o.WiFiMacAddress != nil {
		return true
	}

	return false
}

// SetWiFiMacAddress gets a reference to the given string and assigns it to the WiFiMacAddress field.
func (o *MicrosoftGraphManagedDevice) SetWiFiMacAddress(v string) {
	o.WiFiMacAddress = &v
}

// SetWiFiMacAddressExplicitNull (un)sets WiFiMacAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WiFiMacAddress value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetWiFiMacAddressExplicitNull(b bool) {
	o.WiFiMacAddress = nil
	o.isExplicitNullWiFiMacAddress = b
}
// GetDeviceHealthAttestationState returns the DeviceHealthAttestationState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceHealthAttestationState() AnyOfmicrosoftGraphDeviceHealthAttestationState {
	if o == nil || o.DeviceHealthAttestationState == nil {
		var ret AnyOfmicrosoftGraphDeviceHealthAttestationState
		return ret
	}
	return *o.DeviceHealthAttestationState
}

// GetDeviceHealthAttestationStateOk returns a tuple with the DeviceHealthAttestationState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceHealthAttestationStateOk() (AnyOfmicrosoftGraphDeviceHealthAttestationState, bool) {
	if o == nil || o.DeviceHealthAttestationState == nil {
		var ret AnyOfmicrosoftGraphDeviceHealthAttestationState
		return ret, false
	}
	return *o.DeviceHealthAttestationState, true
}

// HasDeviceHealthAttestationState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceHealthAttestationState() bool {
	if o != nil && o.DeviceHealthAttestationState != nil {
		return true
	}

	return false
}

// SetDeviceHealthAttestationState gets a reference to the given AnyOfmicrosoftGraphDeviceHealthAttestationState and assigns it to the DeviceHealthAttestationState field.
func (o *MicrosoftGraphManagedDevice) SetDeviceHealthAttestationState(v AnyOfmicrosoftGraphDeviceHealthAttestationState) {
	o.DeviceHealthAttestationState = &v
}

// SetDeviceHealthAttestationStateExplicitNull (un)sets DeviceHealthAttestationState to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceHealthAttestationState value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetDeviceHealthAttestationStateExplicitNull(b bool) {
	o.DeviceHealthAttestationState = nil
	o.isExplicitNullDeviceHealthAttestationState = b
}
// GetSubscriberCarrier returns the SubscriberCarrier field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetSubscriberCarrier() string {
	if o == nil || o.SubscriberCarrier == nil {
		var ret string
		return ret
	}
	return *o.SubscriberCarrier
}

// GetSubscriberCarrierOk returns a tuple with the SubscriberCarrier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetSubscriberCarrierOk() (string, bool) {
	if o == nil || o.SubscriberCarrier == nil {
		var ret string
		return ret, false
	}
	return *o.SubscriberCarrier, true
}

// HasSubscriberCarrier returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasSubscriberCarrier() bool {
	if o != nil && o.SubscriberCarrier != nil {
		return true
	}

	return false
}

// SetSubscriberCarrier gets a reference to the given string and assigns it to the SubscriberCarrier field.
func (o *MicrosoftGraphManagedDevice) SetSubscriberCarrier(v string) {
	o.SubscriberCarrier = &v
}

// SetSubscriberCarrierExplicitNull (un)sets SubscriberCarrier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SubscriberCarrier value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetSubscriberCarrierExplicitNull(b bool) {
	o.SubscriberCarrier = nil
	o.isExplicitNullSubscriberCarrier = b
}
// GetMeid returns the Meid field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetMeid() string {
	if o == nil || o.Meid == nil {
		var ret string
		return ret
	}
	return *o.Meid
}

// GetMeidOk returns a tuple with the Meid field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetMeidOk() (string, bool) {
	if o == nil || o.Meid == nil {
		var ret string
		return ret, false
	}
	return *o.Meid, true
}

// HasMeid returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasMeid() bool {
	if o != nil && o.Meid != nil {
		return true
	}

	return false
}

// SetMeid gets a reference to the given string and assigns it to the Meid field.
func (o *MicrosoftGraphManagedDevice) SetMeid(v string) {
	o.Meid = &v
}

// SetMeidExplicitNull (un)sets Meid to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Meid value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetMeidExplicitNull(b bool) {
	o.Meid = nil
	o.isExplicitNullMeid = b
}
// GetTotalStorageSpaceInBytes returns the TotalStorageSpaceInBytes field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetTotalStorageSpaceInBytes() int64 {
	if o == nil || o.TotalStorageSpaceInBytes == nil {
		var ret int64
		return ret
	}
	return *o.TotalStorageSpaceInBytes
}

// GetTotalStorageSpaceInBytesOk returns a tuple with the TotalStorageSpaceInBytes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetTotalStorageSpaceInBytesOk() (int64, bool) {
	if o == nil || o.TotalStorageSpaceInBytes == nil {
		var ret int64
		return ret, false
	}
	return *o.TotalStorageSpaceInBytes, true
}

// HasTotalStorageSpaceInBytes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasTotalStorageSpaceInBytes() bool {
	if o != nil && o.TotalStorageSpaceInBytes != nil {
		return true
	}

	return false
}

// SetTotalStorageSpaceInBytes gets a reference to the given int64 and assigns it to the TotalStorageSpaceInBytes field.
func (o *MicrosoftGraphManagedDevice) SetTotalStorageSpaceInBytes(v int64) {
	o.TotalStorageSpaceInBytes = &v
}

// GetFreeStorageSpaceInBytes returns the FreeStorageSpaceInBytes field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetFreeStorageSpaceInBytes() int64 {
	if o == nil || o.FreeStorageSpaceInBytes == nil {
		var ret int64
		return ret
	}
	return *o.FreeStorageSpaceInBytes
}

// GetFreeStorageSpaceInBytesOk returns a tuple with the FreeStorageSpaceInBytes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetFreeStorageSpaceInBytesOk() (int64, bool) {
	if o == nil || o.FreeStorageSpaceInBytes == nil {
		var ret int64
		return ret, false
	}
	return *o.FreeStorageSpaceInBytes, true
}

// HasFreeStorageSpaceInBytes returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasFreeStorageSpaceInBytes() bool {
	if o != nil && o.FreeStorageSpaceInBytes != nil {
		return true
	}

	return false
}

// SetFreeStorageSpaceInBytes gets a reference to the given int64 and assigns it to the FreeStorageSpaceInBytes field.
func (o *MicrosoftGraphManagedDevice) SetFreeStorageSpaceInBytes(v int64) {
	o.FreeStorageSpaceInBytes = &v
}

// GetManagedDeviceName returns the ManagedDeviceName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceName() string {
	if o == nil || o.ManagedDeviceName == nil {
		var ret string
		return ret
	}
	return *o.ManagedDeviceName
}

// GetManagedDeviceNameOk returns a tuple with the ManagedDeviceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetManagedDeviceNameOk() (string, bool) {
	if o == nil || o.ManagedDeviceName == nil {
		var ret string
		return ret, false
	}
	return *o.ManagedDeviceName, true
}

// HasManagedDeviceName returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasManagedDeviceName() bool {
	if o != nil && o.ManagedDeviceName != nil {
		return true
	}

	return false
}

// SetManagedDeviceName gets a reference to the given string and assigns it to the ManagedDeviceName field.
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceName(v string) {
	o.ManagedDeviceName = &v
}

// SetManagedDeviceNameExplicitNull (un)sets ManagedDeviceName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ManagedDeviceName value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetManagedDeviceNameExplicitNull(b bool) {
	o.ManagedDeviceName = nil
	o.isExplicitNullManagedDeviceName = b
}
// GetPartnerReportedThreatState returns the PartnerReportedThreatState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetPartnerReportedThreatState() AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState {
	if o == nil || o.PartnerReportedThreatState == nil {
		var ret AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState
		return ret
	}
	return *o.PartnerReportedThreatState
}

// GetPartnerReportedThreatStateOk returns a tuple with the PartnerReportedThreatState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetPartnerReportedThreatStateOk() (AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState, bool) {
	if o == nil || o.PartnerReportedThreatState == nil {
		var ret AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState
		return ret, false
	}
	return *o.PartnerReportedThreatState, true
}

// HasPartnerReportedThreatState returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasPartnerReportedThreatState() bool {
	if o != nil && o.PartnerReportedThreatState != nil {
		return true
	}

	return false
}

// SetPartnerReportedThreatState gets a reference to the given AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState and assigns it to the PartnerReportedThreatState field.
func (o *MicrosoftGraphManagedDevice) SetPartnerReportedThreatState(v AnyOfmicrosoftGraphManagedDevicePartnerReportedHealthState) {
	o.PartnerReportedThreatState = &v
}

// GetDeviceConfigurationStates returns the DeviceConfigurationStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceConfigurationStates() []MicrosoftGraphDeviceConfigurationState {
	if o == nil || o.DeviceConfigurationStates == nil {
		var ret []MicrosoftGraphDeviceConfigurationState
		return ret
	}
	return *o.DeviceConfigurationStates
}

// GetDeviceConfigurationStatesOk returns a tuple with the DeviceConfigurationStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceConfigurationStatesOk() ([]MicrosoftGraphDeviceConfigurationState, bool) {
	if o == nil || o.DeviceConfigurationStates == nil {
		var ret []MicrosoftGraphDeviceConfigurationState
		return ret, false
	}
	return *o.DeviceConfigurationStates, true
}

// HasDeviceConfigurationStates returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceConfigurationStates() bool {
	if o != nil && o.DeviceConfigurationStates != nil {
		return true
	}

	return false
}

// SetDeviceConfigurationStates gets a reference to the given []MicrosoftGraphDeviceConfigurationState and assigns it to the DeviceConfigurationStates field.
func (o *MicrosoftGraphManagedDevice) SetDeviceConfigurationStates(v []MicrosoftGraphDeviceConfigurationState) {
	o.DeviceConfigurationStates = &v
}

// GetDeviceCompliancePolicyStates returns the DeviceCompliancePolicyStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceCompliancePolicyStates() []MicrosoftGraphDeviceCompliancePolicyState {
	if o == nil || o.DeviceCompliancePolicyStates == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyState
		return ret
	}
	return *o.DeviceCompliancePolicyStates
}

// GetDeviceCompliancePolicyStatesOk returns a tuple with the DeviceCompliancePolicyStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceCompliancePolicyStatesOk() ([]MicrosoftGraphDeviceCompliancePolicyState, bool) {
	if o == nil || o.DeviceCompliancePolicyStates == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyState
		return ret, false
	}
	return *o.DeviceCompliancePolicyStates, true
}

// HasDeviceCompliancePolicyStates returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCompliancePolicyStates() bool {
	if o != nil && o.DeviceCompliancePolicyStates != nil {
		return true
	}

	return false
}

// SetDeviceCompliancePolicyStates gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyState and assigns it to the DeviceCompliancePolicyStates field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCompliancePolicyStates(v []MicrosoftGraphDeviceCompliancePolicyState) {
	o.DeviceCompliancePolicyStates = &v
}

// GetDeviceCategory returns the DeviceCategory field if non-nil, zero value otherwise.
func (o *MicrosoftGraphManagedDevice) GetDeviceCategory() AnyOfmicrosoftGraphDeviceCategory {
	if o == nil || o.DeviceCategory == nil {
		var ret AnyOfmicrosoftGraphDeviceCategory
		return ret
	}
	return *o.DeviceCategory
}

// GetDeviceCategoryOk returns a tuple with the DeviceCategory field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphManagedDevice) GetDeviceCategoryOk() (AnyOfmicrosoftGraphDeviceCategory, bool) {
	if o == nil || o.DeviceCategory == nil {
		var ret AnyOfmicrosoftGraphDeviceCategory
		return ret, false
	}
	return *o.DeviceCategory, true
}

// HasDeviceCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphManagedDevice) HasDeviceCategory() bool {
	if o != nil && o.DeviceCategory != nil {
		return true
	}

	return false
}

// SetDeviceCategory gets a reference to the given AnyOfmicrosoftGraphDeviceCategory and assigns it to the DeviceCategory field.
func (o *MicrosoftGraphManagedDevice) SetDeviceCategory(v AnyOfmicrosoftGraphDeviceCategory) {
	o.DeviceCategory = &v
}

// SetDeviceCategoryExplicitNull (un)sets DeviceCategory to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceCategory value is set to nil even if false is passed
func (o *MicrosoftGraphManagedDevice) SetDeviceCategoryExplicitNull(b bool) {
	o.DeviceCategory = nil
	o.isExplicitNullDeviceCategory = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphManagedDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UserId == nil {
		if o.isExplicitNullUserId {
			toSerialize["userId"] = o.UserId
		}
	} else {
		toSerialize["userId"] = o.UserId
	}
	if o.DeviceName == nil {
		if o.isExplicitNullDeviceName {
			toSerialize["deviceName"] = o.DeviceName
		}
	} else {
		toSerialize["deviceName"] = o.DeviceName
	}
	if o.ManagedDeviceOwnerType != nil {
		toSerialize["managedDeviceOwnerType"] = o.ManagedDeviceOwnerType
	}
	if o.DeviceActionResults != nil {
		toSerialize["deviceActionResults"] = o.DeviceActionResults
	}
	if o.EnrolledDateTime != nil {
		toSerialize["enrolledDateTime"] = o.EnrolledDateTime
	}
	if o.LastSyncDateTime != nil {
		toSerialize["lastSyncDateTime"] = o.LastSyncDateTime
	}
	if o.OperatingSystem == nil {
		if o.isExplicitNullOperatingSystem {
			toSerialize["operatingSystem"] = o.OperatingSystem
		}
	} else {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.ComplianceState != nil {
		toSerialize["complianceState"] = o.ComplianceState
	}
	if o.JailBroken == nil {
		if o.isExplicitNullJailBroken {
			toSerialize["jailBroken"] = o.JailBroken
		}
	} else {
		toSerialize["jailBroken"] = o.JailBroken
	}
	if o.ManagementAgent != nil {
		toSerialize["managementAgent"] = o.ManagementAgent
	}
	if o.OsVersion == nil {
		if o.isExplicitNullOsVersion {
			toSerialize["osVersion"] = o.OsVersion
		}
	} else {
		toSerialize["osVersion"] = o.OsVersion
	}
	if o.EasActivated != nil {
		toSerialize["easActivated"] = o.EasActivated
	}
	if o.EasDeviceId == nil {
		if o.isExplicitNullEasDeviceId {
			toSerialize["easDeviceId"] = o.EasDeviceId
		}
	} else {
		toSerialize["easDeviceId"] = o.EasDeviceId
	}
	if o.EasActivationDateTime != nil {
		toSerialize["easActivationDateTime"] = o.EasActivationDateTime
	}
	if o.AzureADRegistered == nil {
		if o.isExplicitNullAzureADRegistered {
			toSerialize["azureADRegistered"] = o.AzureADRegistered
		}
	} else {
		toSerialize["azureADRegistered"] = o.AzureADRegistered
	}
	if o.DeviceEnrollmentType != nil {
		toSerialize["deviceEnrollmentType"] = o.DeviceEnrollmentType
	}
	if o.ActivationLockBypassCode == nil {
		if o.isExplicitNullActivationLockBypassCode {
			toSerialize["activationLockBypassCode"] = o.ActivationLockBypassCode
		}
	} else {
		toSerialize["activationLockBypassCode"] = o.ActivationLockBypassCode
	}
	if o.EmailAddress == nil {
		if o.isExplicitNullEmailAddress {
			toSerialize["emailAddress"] = o.EmailAddress
		}
	} else {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if o.AzureADDeviceId == nil {
		if o.isExplicitNullAzureADDeviceId {
			toSerialize["azureADDeviceId"] = o.AzureADDeviceId
		}
	} else {
		toSerialize["azureADDeviceId"] = o.AzureADDeviceId
	}
	if o.DeviceRegistrationState != nil {
		toSerialize["deviceRegistrationState"] = o.DeviceRegistrationState
	}
	if o.DeviceCategoryDisplayName == nil {
		if o.isExplicitNullDeviceCategoryDisplayName {
			toSerialize["deviceCategoryDisplayName"] = o.DeviceCategoryDisplayName
		}
	} else {
		toSerialize["deviceCategoryDisplayName"] = o.DeviceCategoryDisplayName
	}
	if o.IsSupervised != nil {
		toSerialize["isSupervised"] = o.IsSupervised
	}
	if o.ExchangeLastSuccessfulSyncDateTime != nil {
		toSerialize["exchangeLastSuccessfulSyncDateTime"] = o.ExchangeLastSuccessfulSyncDateTime
	}
	if o.ExchangeAccessState != nil {
		toSerialize["exchangeAccessState"] = o.ExchangeAccessState
	}
	if o.ExchangeAccessStateReason != nil {
		toSerialize["exchangeAccessStateReason"] = o.ExchangeAccessStateReason
	}
	if o.RemoteAssistanceSessionUrl == nil {
		if o.isExplicitNullRemoteAssistanceSessionUrl {
			toSerialize["remoteAssistanceSessionUrl"] = o.RemoteAssistanceSessionUrl
		}
	} else {
		toSerialize["remoteAssistanceSessionUrl"] = o.RemoteAssistanceSessionUrl
	}
	if o.RemoteAssistanceSessionErrorDetails == nil {
		if o.isExplicitNullRemoteAssistanceSessionErrorDetails {
			toSerialize["remoteAssistanceSessionErrorDetails"] = o.RemoteAssistanceSessionErrorDetails
		}
	} else {
		toSerialize["remoteAssistanceSessionErrorDetails"] = o.RemoteAssistanceSessionErrorDetails
	}
	if o.IsEncrypted != nil {
		toSerialize["isEncrypted"] = o.IsEncrypted
	}
	if o.UserPrincipalName == nil {
		if o.isExplicitNullUserPrincipalName {
			toSerialize["userPrincipalName"] = o.UserPrincipalName
		}
	} else {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	if o.Model == nil {
		if o.isExplicitNullModel {
			toSerialize["model"] = o.Model
		}
	} else {
		toSerialize["model"] = o.Model
	}
	if o.Manufacturer == nil {
		if o.isExplicitNullManufacturer {
			toSerialize["manufacturer"] = o.Manufacturer
		}
	} else {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if o.Imei == nil {
		if o.isExplicitNullImei {
			toSerialize["imei"] = o.Imei
		}
	} else {
		toSerialize["imei"] = o.Imei
	}
	if o.ComplianceGracePeriodExpirationDateTime != nil {
		toSerialize["complianceGracePeriodExpirationDateTime"] = o.ComplianceGracePeriodExpirationDateTime
	}
	if o.SerialNumber == nil {
		if o.isExplicitNullSerialNumber {
			toSerialize["serialNumber"] = o.SerialNumber
		}
	} else {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if o.PhoneNumber == nil {
		if o.isExplicitNullPhoneNumber {
			toSerialize["phoneNumber"] = o.PhoneNumber
		}
	} else {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.AndroidSecurityPatchLevel == nil {
		if o.isExplicitNullAndroidSecurityPatchLevel {
			toSerialize["androidSecurityPatchLevel"] = o.AndroidSecurityPatchLevel
		}
	} else {
		toSerialize["androidSecurityPatchLevel"] = o.AndroidSecurityPatchLevel
	}
	if o.UserDisplayName == nil {
		if o.isExplicitNullUserDisplayName {
			toSerialize["userDisplayName"] = o.UserDisplayName
		}
	} else {
		toSerialize["userDisplayName"] = o.UserDisplayName
	}
	if o.ConfigurationManagerClientEnabledFeatures == nil {
		if o.isExplicitNullConfigurationManagerClientEnabledFeatures {
			toSerialize["configurationManagerClientEnabledFeatures"] = o.ConfigurationManagerClientEnabledFeatures
		}
	} else {
		toSerialize["configurationManagerClientEnabledFeatures"] = o.ConfigurationManagerClientEnabledFeatures
	}
	if o.WiFiMacAddress == nil {
		if o.isExplicitNullWiFiMacAddress {
			toSerialize["wiFiMacAddress"] = o.WiFiMacAddress
		}
	} else {
		toSerialize["wiFiMacAddress"] = o.WiFiMacAddress
	}
	if o.DeviceHealthAttestationState == nil {
		if o.isExplicitNullDeviceHealthAttestationState {
			toSerialize["deviceHealthAttestationState"] = o.DeviceHealthAttestationState
		}
	} else {
		toSerialize["deviceHealthAttestationState"] = o.DeviceHealthAttestationState
	}
	if o.SubscriberCarrier == nil {
		if o.isExplicitNullSubscriberCarrier {
			toSerialize["subscriberCarrier"] = o.SubscriberCarrier
		}
	} else {
		toSerialize["subscriberCarrier"] = o.SubscriberCarrier
	}
	if o.Meid == nil {
		if o.isExplicitNullMeid {
			toSerialize["meid"] = o.Meid
		}
	} else {
		toSerialize["meid"] = o.Meid
	}
	if o.TotalStorageSpaceInBytes != nil {
		toSerialize["totalStorageSpaceInBytes"] = o.TotalStorageSpaceInBytes
	}
	if o.FreeStorageSpaceInBytes != nil {
		toSerialize["freeStorageSpaceInBytes"] = o.FreeStorageSpaceInBytes
	}
	if o.ManagedDeviceName == nil {
		if o.isExplicitNullManagedDeviceName {
			toSerialize["managedDeviceName"] = o.ManagedDeviceName
		}
	} else {
		toSerialize["managedDeviceName"] = o.ManagedDeviceName
	}
	if o.PartnerReportedThreatState != nil {
		toSerialize["partnerReportedThreatState"] = o.PartnerReportedThreatState
	}
	if o.DeviceConfigurationStates != nil {
		toSerialize["deviceConfigurationStates"] = o.DeviceConfigurationStates
	}
	if o.DeviceCompliancePolicyStates != nil {
		toSerialize["deviceCompliancePolicyStates"] = o.DeviceCompliancePolicyStates
	}
	if o.DeviceCategory == nil {
		if o.isExplicitNullDeviceCategory {
			toSerialize["deviceCategory"] = o.DeviceCategory
		}
	} else {
		toSerialize["deviceCategory"] = o.DeviceCategory
	}
	return json.Marshal(toSerialize)
}


