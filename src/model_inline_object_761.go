/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject761 struct for InlineObject761
type InlineObject761 struct {
	XNum *AnyOfobject `json:"xNum,omitempty"`
	isExplicitNullXNum bool `json:"-"`
	YNum *AnyOfobject `json:"yNum,omitempty"`
	isExplicitNullYNum bool `json:"-"`
}

// GetXNum returns the XNum field if non-nil, zero value otherwise.
func (o *InlineObject761) GetXNum() AnyOfobject {
	if o == nil || o.XNum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.XNum
}

// GetXNumOk returns a tuple with the XNum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject761) GetXNumOk() (AnyOfobject, bool) {
	if o == nil || o.XNum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.XNum, true
}

// HasXNum returns a boolean if a field has been set.
func (o *InlineObject761) HasXNum() bool {
	if o != nil && o.XNum != nil {
		return true
	}

	return false
}

// SetXNum gets a reference to the given AnyOfobject and assigns it to the XNum field.
func (o *InlineObject761) SetXNum(v AnyOfobject) {
	o.XNum = &v
}

// SetXNumExplicitNull (un)sets XNum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The XNum value is set to nil even if false is passed
func (o *InlineObject761) SetXNumExplicitNull(b bool) {
	o.XNum = nil
	o.isExplicitNullXNum = b
}
// GetYNum returns the YNum field if non-nil, zero value otherwise.
func (o *InlineObject761) GetYNum() AnyOfobject {
	if o == nil || o.YNum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.YNum
}

// GetYNumOk returns a tuple with the YNum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject761) GetYNumOk() (AnyOfobject, bool) {
	if o == nil || o.YNum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.YNum, true
}

// HasYNum returns a boolean if a field has been set.
func (o *InlineObject761) HasYNum() bool {
	if o != nil && o.YNum != nil {
		return true
	}

	return false
}

// SetYNum gets a reference to the given AnyOfobject and assigns it to the YNum field.
func (o *InlineObject761) SetYNum(v AnyOfobject) {
	o.YNum = &v
}

// SetYNumExplicitNull (un)sets YNum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The YNum value is set to nil even if false is passed
func (o *InlineObject761) SetYNumExplicitNull(b bool) {
	o.YNum = nil
	o.isExplicitNullYNum = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject761) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.XNum == nil {
		if o.isExplicitNullXNum {
			toSerialize["xNum"] = o.XNum
		}
	} else {
		toSerialize["xNum"] = o.XNum
	}
	if o.YNum == nil {
		if o.isExplicitNullYNum {
			toSerialize["yNum"] = o.YNum
		}
	} else {
		toSerialize["yNum"] = o.YNum
	}
	return json.Marshal(toSerialize)
}


