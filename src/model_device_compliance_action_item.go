/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// DeviceComplianceActionItem Scheduled Action Configuration
type DeviceComplianceActionItem struct {
	// Number of hours to wait till the action will be enforced. Valid values 0 to 8760
	GracePeriodHours *int32 `json:"gracePeriodHours,omitempty"`

	// What action to take
	ActionType *AnyOfmicrosoftGraphDeviceComplianceActionType `json:"actionType,omitempty"`

	// What notification Message template to use
	NotificationTemplateId *string `json:"notificationTemplateId,omitempty"`
	isExplicitNullNotificationTemplateId bool `json:"-"`
	// A list of group IDs to speicify who to CC this notification message to.
	NotificationMessageCCList *[]string `json:"notificationMessageCCList,omitempty"`

}

// GetGracePeriodHours returns the GracePeriodHours field if non-nil, zero value otherwise.
func (o *DeviceComplianceActionItem) GetGracePeriodHours() int32 {
	if o == nil || o.GracePeriodHours == nil {
		var ret int32
		return ret
	}
	return *o.GracePeriodHours
}

// GetGracePeriodHoursOk returns a tuple with the GracePeriodHours field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetGracePeriodHoursOk() (int32, bool) {
	if o == nil || o.GracePeriodHours == nil {
		var ret int32
		return ret, false
	}
	return *o.GracePeriodHours, true
}

// HasGracePeriodHours returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasGracePeriodHours() bool {
	if o != nil && o.GracePeriodHours != nil {
		return true
	}

	return false
}

// SetGracePeriodHours gets a reference to the given int32 and assigns it to the GracePeriodHours field.
func (o *DeviceComplianceActionItem) SetGracePeriodHours(v int32) {
	o.GracePeriodHours = &v
}

// GetActionType returns the ActionType field if non-nil, zero value otherwise.
func (o *DeviceComplianceActionItem) GetActionType() AnyOfmicrosoftGraphDeviceComplianceActionType {
	if o == nil || o.ActionType == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceActionType
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetActionTypeOk() (AnyOfmicrosoftGraphDeviceComplianceActionType, bool) {
	if o == nil || o.ActionType == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceActionType
		return ret, false
	}
	return *o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceActionType and assigns it to the ActionType field.
func (o *DeviceComplianceActionItem) SetActionType(v AnyOfmicrosoftGraphDeviceComplianceActionType) {
	o.ActionType = &v
}

// GetNotificationTemplateId returns the NotificationTemplateId field if non-nil, zero value otherwise.
func (o *DeviceComplianceActionItem) GetNotificationTemplateId() string {
	if o == nil || o.NotificationTemplateId == nil {
		var ret string
		return ret
	}
	return *o.NotificationTemplateId
}

// GetNotificationTemplateIdOk returns a tuple with the NotificationTemplateId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetNotificationTemplateIdOk() (string, bool) {
	if o == nil || o.NotificationTemplateId == nil {
		var ret string
		return ret, false
	}
	return *o.NotificationTemplateId, true
}

// HasNotificationTemplateId returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasNotificationTemplateId() bool {
	if o != nil && o.NotificationTemplateId != nil {
		return true
	}

	return false
}

// SetNotificationTemplateId gets a reference to the given string and assigns it to the NotificationTemplateId field.
func (o *DeviceComplianceActionItem) SetNotificationTemplateId(v string) {
	o.NotificationTemplateId = &v
}

// SetNotificationTemplateIdExplicitNull (un)sets NotificationTemplateId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NotificationTemplateId value is set to nil even if false is passed
func (o *DeviceComplianceActionItem) SetNotificationTemplateIdExplicitNull(b bool) {
	o.NotificationTemplateId = nil
	o.isExplicitNullNotificationTemplateId = b
}
// GetNotificationMessageCCList returns the NotificationMessageCCList field if non-nil, zero value otherwise.
func (o *DeviceComplianceActionItem) GetNotificationMessageCCList() []string {
	if o == nil || o.NotificationMessageCCList == nil {
		var ret []string
		return ret
	}
	return *o.NotificationMessageCCList
}

// GetNotificationMessageCCListOk returns a tuple with the NotificationMessageCCList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceComplianceActionItem) GetNotificationMessageCCListOk() ([]string, bool) {
	if o == nil || o.NotificationMessageCCList == nil {
		var ret []string
		return ret, false
	}
	return *o.NotificationMessageCCList, true
}

// HasNotificationMessageCCList returns a boolean if a field has been set.
func (o *DeviceComplianceActionItem) HasNotificationMessageCCList() bool {
	if o != nil && o.NotificationMessageCCList != nil {
		return true
	}

	return false
}

// SetNotificationMessageCCList gets a reference to the given []string and assigns it to the NotificationMessageCCList field.
func (o *DeviceComplianceActionItem) SetNotificationMessageCCList(v []string) {
	o.NotificationMessageCCList = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o DeviceComplianceActionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GracePeriodHours != nil {
		toSerialize["gracePeriodHours"] = o.GracePeriodHours
	}
	if o.ActionType != nil {
		toSerialize["actionType"] = o.ActionType
	}
	if o.NotificationTemplateId == nil {
		if o.isExplicitNullNotificationTemplateId {
			toSerialize["notificationTemplateId"] = o.NotificationTemplateId
		}
	} else {
		toSerialize["notificationTemplateId"] = o.NotificationTemplateId
	}
	if o.NotificationMessageCCList != nil {
		toSerialize["notificationMessageCCList"] = o.NotificationMessageCCList
	}
	return json.Marshal(toSerialize)
}


