/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphFile struct for MicrosoftGraphFile
type MicrosoftGraphFile struct {
	Hashes *AnyOfmicrosoftGraphHashes `json:"hashes,omitempty"`
	isExplicitNullHashes bool `json:"-"`
	MimeType *string `json:"mimeType,omitempty"`
	isExplicitNullMimeType bool `json:"-"`
	ProcessingMetadata *bool `json:"processingMetadata,omitempty"`
	isExplicitNullProcessingMetadata bool `json:"-"`
}

// GetHashes returns the Hashes field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFile) GetHashes() AnyOfmicrosoftGraphHashes {
	if o == nil || o.Hashes == nil {
		var ret AnyOfmicrosoftGraphHashes
		return ret
	}
	return *o.Hashes
}

// GetHashesOk returns a tuple with the Hashes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFile) GetHashesOk() (AnyOfmicrosoftGraphHashes, bool) {
	if o == nil || o.Hashes == nil {
		var ret AnyOfmicrosoftGraphHashes
		return ret, false
	}
	return *o.Hashes, true
}

// HasHashes returns a boolean if a field has been set.
func (o *MicrosoftGraphFile) HasHashes() bool {
	if o != nil && o.Hashes != nil {
		return true
	}

	return false
}

// SetHashes gets a reference to the given AnyOfmicrosoftGraphHashes and assigns it to the Hashes field.
func (o *MicrosoftGraphFile) SetHashes(v AnyOfmicrosoftGraphHashes) {
	o.Hashes = &v
}

// SetHashesExplicitNull (un)sets Hashes to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Hashes value is set to nil even if false is passed
func (o *MicrosoftGraphFile) SetHashesExplicitNull(b bool) {
	o.Hashes = nil
	o.isExplicitNullHashes = b
}
// GetMimeType returns the MimeType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFile) GetMimeType() string {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFile) GetMimeTypeOk() (string, bool) {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret, false
	}
	return *o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *MicrosoftGraphFile) HasMimeType() bool {
	if o != nil && o.MimeType != nil {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *MicrosoftGraphFile) SetMimeType(v string) {
	o.MimeType = &v
}

// SetMimeTypeExplicitNull (un)sets MimeType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MimeType value is set to nil even if false is passed
func (o *MicrosoftGraphFile) SetMimeTypeExplicitNull(b bool) {
	o.MimeType = nil
	o.isExplicitNullMimeType = b
}
// GetProcessingMetadata returns the ProcessingMetadata field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFile) GetProcessingMetadata() bool {
	if o == nil || o.ProcessingMetadata == nil {
		var ret bool
		return ret
	}
	return *o.ProcessingMetadata
}

// GetProcessingMetadataOk returns a tuple with the ProcessingMetadata field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFile) GetProcessingMetadataOk() (bool, bool) {
	if o == nil || o.ProcessingMetadata == nil {
		var ret bool
		return ret, false
	}
	return *o.ProcessingMetadata, true
}

// HasProcessingMetadata returns a boolean if a field has been set.
func (o *MicrosoftGraphFile) HasProcessingMetadata() bool {
	if o != nil && o.ProcessingMetadata != nil {
		return true
	}

	return false
}

// SetProcessingMetadata gets a reference to the given bool and assigns it to the ProcessingMetadata field.
func (o *MicrosoftGraphFile) SetProcessingMetadata(v bool) {
	o.ProcessingMetadata = &v
}

// SetProcessingMetadataExplicitNull (un)sets ProcessingMetadata to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ProcessingMetadata value is set to nil even if false is passed
func (o *MicrosoftGraphFile) SetProcessingMetadataExplicitNull(b bool) {
	o.ProcessingMetadata = nil
	o.isExplicitNullProcessingMetadata = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hashes == nil {
		if o.isExplicitNullHashes {
			toSerialize["hashes"] = o.Hashes
		}
	} else {
		toSerialize["hashes"] = o.Hashes
	}
	if o.MimeType == nil {
		if o.isExplicitNullMimeType {
			toSerialize["mimeType"] = o.MimeType
		}
	} else {
		toSerialize["mimeType"] = o.MimeType
	}
	if o.ProcessingMetadata == nil {
		if o.isExplicitNullProcessingMetadata {
			toSerialize["processingMetadata"] = o.ProcessingMetadata
		}
	} else {
		toSerialize["processingMetadata"] = o.ProcessingMetadata
	}
	return json.Marshal(toSerialize)
}


