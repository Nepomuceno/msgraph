/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// SharedDriveItem struct for SharedDriveItem
type SharedDriveItem struct {
	Owner *AnyOfmicrosoftGraphIdentitySet `json:"owner,omitempty"`
	isExplicitNullOwner bool `json:"-"`
	DriveItem *AnyOfmicrosoftGraphDriveItem `json:"driveItem,omitempty"`
	isExplicitNullDriveItem bool `json:"-"`
	Items *[]MicrosoftGraphDriveItem `json:"items,omitempty"`

	List *AnyOfmicrosoftGraphList `json:"list,omitempty"`
	isExplicitNullList bool `json:"-"`
	ListItem *AnyOfmicrosoftGraphListItem `json:"listItem,omitempty"`
	isExplicitNullListItem bool `json:"-"`
	Root *AnyOfmicrosoftGraphDriveItem `json:"root,omitempty"`
	isExplicitNullRoot bool `json:"-"`
	Site *AnyOfmicrosoftGraphSite `json:"site,omitempty"`
	isExplicitNullSite bool `json:"-"`
}

// GetOwner returns the Owner field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetOwner() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.Owner == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetOwnerOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.Owner == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *SharedDriveItem) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the Owner field.
func (o *SharedDriveItem) SetOwner(v AnyOfmicrosoftGraphIdentitySet) {
	o.Owner = &v
}

// SetOwnerExplicitNull (un)sets Owner to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Owner value is set to nil even if false is passed
func (o *SharedDriveItem) SetOwnerExplicitNull(b bool) {
	o.Owner = nil
	o.isExplicitNullOwner = b
}
// GetDriveItem returns the DriveItem field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetDriveItem() AnyOfmicrosoftGraphDriveItem {
	if o == nil || o.DriveItem == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return *o.DriveItem
}

// GetDriveItemOk returns a tuple with the DriveItem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetDriveItemOk() (AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.DriveItem == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret, false
	}
	return *o.DriveItem, true
}

// HasDriveItem returns a boolean if a field has been set.
func (o *SharedDriveItem) HasDriveItem() bool {
	if o != nil && o.DriveItem != nil {
		return true
	}

	return false
}

// SetDriveItem gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the DriveItem field.
func (o *SharedDriveItem) SetDriveItem(v AnyOfmicrosoftGraphDriveItem) {
	o.DriveItem = &v
}

// SetDriveItemExplicitNull (un)sets DriveItem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DriveItem value is set to nil even if false is passed
func (o *SharedDriveItem) SetDriveItemExplicitNull(b bool) {
	o.DriveItem = nil
	o.isExplicitNullDriveItem = b
}
// GetItems returns the Items field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetItems() []MicrosoftGraphDriveItem {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphDriveItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetItemsOk() ([]MicrosoftGraphDriveItem, bool) {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphDriveItem
		return ret, false
	}
	return *o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SharedDriveItem) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MicrosoftGraphDriveItem and assigns it to the Items field.
func (o *SharedDriveItem) SetItems(v []MicrosoftGraphDriveItem) {
	o.Items = &v
}

// GetList returns the List field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetList() AnyOfmicrosoftGraphList {
	if o == nil || o.List == nil {
		var ret AnyOfmicrosoftGraphList
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetListOk() (AnyOfmicrosoftGraphList, bool) {
	if o == nil || o.List == nil {
		var ret AnyOfmicrosoftGraphList
		return ret, false
	}
	return *o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *SharedDriveItem) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given AnyOfmicrosoftGraphList and assigns it to the List field.
func (o *SharedDriveItem) SetList(v AnyOfmicrosoftGraphList) {
	o.List = &v
}

// SetListExplicitNull (un)sets List to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The List value is set to nil even if false is passed
func (o *SharedDriveItem) SetListExplicitNull(b bool) {
	o.List = nil
	o.isExplicitNullList = b
}
// GetListItem returns the ListItem field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetListItem() AnyOfmicrosoftGraphListItem {
	if o == nil || o.ListItem == nil {
		var ret AnyOfmicrosoftGraphListItem
		return ret
	}
	return *o.ListItem
}

// GetListItemOk returns a tuple with the ListItem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetListItemOk() (AnyOfmicrosoftGraphListItem, bool) {
	if o == nil || o.ListItem == nil {
		var ret AnyOfmicrosoftGraphListItem
		return ret, false
	}
	return *o.ListItem, true
}

// HasListItem returns a boolean if a field has been set.
func (o *SharedDriveItem) HasListItem() bool {
	if o != nil && o.ListItem != nil {
		return true
	}

	return false
}

// SetListItem gets a reference to the given AnyOfmicrosoftGraphListItem and assigns it to the ListItem field.
func (o *SharedDriveItem) SetListItem(v AnyOfmicrosoftGraphListItem) {
	o.ListItem = &v
}

// SetListItemExplicitNull (un)sets ListItem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ListItem value is set to nil even if false is passed
func (o *SharedDriveItem) SetListItemExplicitNull(b bool) {
	o.ListItem = nil
	o.isExplicitNullListItem = b
}
// GetRoot returns the Root field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetRoot() AnyOfmicrosoftGraphDriveItem {
	if o == nil || o.Root == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetRootOk() (AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.Root == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret, false
	}
	return *o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *SharedDriveItem) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the Root field.
func (o *SharedDriveItem) SetRoot(v AnyOfmicrosoftGraphDriveItem) {
	o.Root = &v
}

// SetRootExplicitNull (un)sets Root to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Root value is set to nil even if false is passed
func (o *SharedDriveItem) SetRootExplicitNull(b bool) {
	o.Root = nil
	o.isExplicitNullRoot = b
}
// GetSite returns the Site field if non-nil, zero value otherwise.
func (o *SharedDriveItem) GetSite() AnyOfmicrosoftGraphSite {
	if o == nil || o.Site == nil {
		var ret AnyOfmicrosoftGraphSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedDriveItem) GetSiteOk() (AnyOfmicrosoftGraphSite, bool) {
	if o == nil || o.Site == nil {
		var ret AnyOfmicrosoftGraphSite
		return ret, false
	}
	return *o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *SharedDriveItem) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given AnyOfmicrosoftGraphSite and assigns it to the Site field.
func (o *SharedDriveItem) SetSite(v AnyOfmicrosoftGraphSite) {
	o.Site = &v
}

// SetSiteExplicitNull (un)sets Site to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Site value is set to nil even if false is passed
func (o *SharedDriveItem) SetSiteExplicitNull(b bool) {
	o.Site = nil
	o.isExplicitNullSite = b
}

// MarshalJSON returns the JSON representation of the model.
func (o SharedDriveItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Owner == nil {
		if o.isExplicitNullOwner {
			toSerialize["owner"] = o.Owner
		}
	} else {
		toSerialize["owner"] = o.Owner
	}
	if o.DriveItem == nil {
		if o.isExplicitNullDriveItem {
			toSerialize["driveItem"] = o.DriveItem
		}
	} else {
		toSerialize["driveItem"] = o.DriveItem
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.List == nil {
		if o.isExplicitNullList {
			toSerialize["list"] = o.List
		}
	} else {
		toSerialize["list"] = o.List
	}
	if o.ListItem == nil {
		if o.isExplicitNullListItem {
			toSerialize["listItem"] = o.ListItem
		}
	} else {
		toSerialize["listItem"] = o.ListItem
	}
	if o.Root == nil {
		if o.isExplicitNullRoot {
			toSerialize["root"] = o.Root
		}
	} else {
		toSerialize["root"] = o.Root
	}
	if o.Site == nil {
		if o.isExplicitNullSite {
			toSerialize["site"] = o.Site
		}
	} else {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}


