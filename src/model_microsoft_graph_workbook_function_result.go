/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWorkbookFunctionResult struct for MicrosoftGraphWorkbookFunctionResult
type MicrosoftGraphWorkbookFunctionResult struct {
	Id *string `json:"id,omitempty"`

	Error *string `json:"error,omitempty"`
	isExplicitNullError bool `json:"-"`
	Value *AnyOfobject `json:"value,omitempty"`
	isExplicitNullValue bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookFunctionResult) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookFunctionResult) SetId(v string) {
	o.Id = &v
}

// GetError returns the Error field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookFunctionResult) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) GetErrorOk() (string, bool) {
	if o == nil || o.Error == nil {
		var ret string
		return ret, false
	}
	return *o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *MicrosoftGraphWorkbookFunctionResult) SetError(v string) {
	o.Error = &v
}

// SetErrorExplicitNull (un)sets Error to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Error value is set to nil even if false is passed
func (o *MicrosoftGraphWorkbookFunctionResult) SetErrorExplicitNull(b bool) {
	o.Error = nil
	o.isExplicitNullError = b
}
// GetValue returns the Value field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookFunctionResult) GetValue() AnyOfobject {
	if o == nil || o.Value == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) GetValueOk() (AnyOfobject, bool) {
	if o == nil || o.Value == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookFunctionResult) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given AnyOfobject and assigns it to the Value field.
func (o *MicrosoftGraphWorkbookFunctionResult) SetValue(v AnyOfobject) {
	o.Value = &v
}

// SetValueExplicitNull (un)sets Value to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Value value is set to nil even if false is passed
func (o *MicrosoftGraphWorkbookFunctionResult) SetValueExplicitNull(b bool) {
	o.Value = nil
	o.isExplicitNullValue = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWorkbookFunctionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Error == nil {
		if o.isExplicitNullError {
			toSerialize["error"] = o.Error
		}
	} else {
		toSerialize["error"] = o.Error
	}
	if o.Value == nil {
		if o.isExplicitNullValue {
			toSerialize["value"] = o.Value
		}
	} else {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}


