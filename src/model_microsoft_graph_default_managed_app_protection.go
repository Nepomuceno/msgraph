/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphDefaultManagedAppProtection struct for MicrosoftGraphDefaultManagedAppProtection
type MicrosoftGraphDefaultManagedAppProtection struct {
	Id *string `json:"id,omitempty"`

	// Policy display name.
	DisplayName *string `json:"displayName,omitempty"`

	// The policy's description.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// The date and time the policy was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Last time the policy was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// Version of the entity.
	Version *string `json:"version,omitempty"`
	isExplicitNullVersion bool `json:"-"`
	// The period after which access is checked when the device is not connected to the internet.
	PeriodOfflineBeforeAccessCheck *string `json:"periodOfflineBeforeAccessCheck,omitempty"`

	// The period after which access is checked when the device is connected to the internet.
	PeriodOnlineBeforeAccessCheck *string `json:"periodOnlineBeforeAccessCheck,omitempty"`

	// Sources from which data is allowed to be transferred.
	AllowedInboundDataTransferSources *AnyOfmicrosoftGraphManagedAppDataTransferLevel `json:"allowedInboundDataTransferSources,omitempty"`

	// Destinations to which data is allowed to be transferred.
	AllowedOutboundDataTransferDestinations *AnyOfmicrosoftGraphManagedAppDataTransferLevel `json:"allowedOutboundDataTransferDestinations,omitempty"`

	// Indicates whether organizational credentials are required for app use.
	OrganizationalCredentialsRequired *bool `json:"organizationalCredentialsRequired,omitempty"`

	// The level to which the clipboard may be shared between apps on the managed device.
	AllowedOutboundClipboardSharingLevel *AnyOfmicrosoftGraphManagedAppClipboardSharingLevel `json:"allowedOutboundClipboardSharingLevel,omitempty"`

	// Indicates whether the backup of a managed app's data is blocked.
	DataBackupBlocked *bool `json:"dataBackupBlocked,omitempty"`

	// Indicates whether device compliance is required.
	DeviceComplianceRequired *bool `json:"deviceComplianceRequired,omitempty"`

	// Indicates whether internet links should be opened in the managed browser app.
	ManagedBrowserToOpenLinksRequired *bool `json:"managedBrowserToOpenLinksRequired,omitempty"`

	// Indicates whether users may use the \"Save As\" menu item to save a copy of protected files.
	SaveAsBlocked *bool `json:"saveAsBlocked,omitempty"`

	// The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
	PeriodOfflineBeforeWipeIsEnforced *string `json:"periodOfflineBeforeWipeIsEnforced,omitempty"`

	// Indicates whether an app-level pin is required.
	PinRequired *bool `json:"pinRequired,omitempty"`

	// Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
	MaximumPinRetries *int32 `json:"maximumPinRetries,omitempty"`

	// Indicates whether simplePin is blocked.
	SimplePinBlocked *bool `json:"simplePinBlocked,omitempty"`

	// Minimum pin length required for an app-level pin if PinRequired is set to True
	MinimumPinLength *int32 `json:"minimumPinLength,omitempty"`

	// Character set which may be used for an app-level pin if PinRequired is set to True.
	PinCharacterSet *AnyOfmicrosoftGraphManagedAppPinCharacterSet `json:"pinCharacterSet,omitempty"`

	// TimePeriod before the all-level pin must be reset if PinRequired is set to True.
	PeriodBeforePinReset *string `json:"periodBeforePinReset,omitempty"`

	// Data storage locations where a user may store managed data.
	AllowedDataStorageLocations *[]AnyOfmicrosoftGraphManagedAppDataStorageLocation `json:"allowedDataStorageLocations,omitempty"`

	// Indicates whether contacts can be synced to the user's device.
	ContactSyncBlocked *bool `json:"contactSyncBlocked,omitempty"`

	// Indicates whether printing is allowed from managed apps.
	PrintBlocked *bool `json:"printBlocked,omitempty"`

	// Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
	FingerprintBlocked *bool `json:"fingerprintBlocked,omitempty"`

	// Indicates whether use of the app pin is required if the device pin is set.
	DisableAppPinIfDevicePinIsSet *bool `json:"disableAppPinIfDevicePinIsSet,omitempty"`

	// Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredOsVersion *string `json:"minimumRequiredOsVersion,omitempty"`
	isExplicitNullMinimumRequiredOsVersion bool `json:"-"`
	// Versions less than the specified version will result in warning message on the managed app from accessing company data.
	MinimumWarningOsVersion *string `json:"minimumWarningOsVersion,omitempty"`
	isExplicitNullMinimumWarningOsVersion bool `json:"-"`
	// Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredAppVersion *string `json:"minimumRequiredAppVersion,omitempty"`
	isExplicitNullMinimumRequiredAppVersion bool `json:"-"`
	// Versions less than the specified version will result in warning message on the managed app.
	MinimumWarningAppVersion *string `json:"minimumWarningAppVersion,omitempty"`
	isExplicitNullMinimumWarningAppVersion bool `json:"-"`
	// Type of encryption which should be used for data in a managed app. (iOS Only)
	AppDataEncryptionType *AnyOfmicrosoftGraphManagedAppDataEncryptionType `json:"appDataEncryptionType,omitempty"`

	// Indicates whether screen capture is blocked. (Android only)
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`

	// Indicates whether managed-app data should be encrypted. (Android only)
	EncryptAppData *bool `json:"encryptAppData,omitempty"`

	// When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
	DisableAppEncryptionIfDeviceEncryptionIsEnabled *bool `json:"disableAppEncryptionIfDeviceEncryptionIsEnabled,omitempty"`

	// Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
	MinimumRequiredSdkVersion *string `json:"minimumRequiredSdkVersion,omitempty"`
	isExplicitNullMinimumRequiredSdkVersion bool `json:"-"`
	// A set of string key and string value pairs to be sent to the affected users, unalterned by this service
	CustomSettings *[]MicrosoftGraphKeyValuePair `json:"customSettings,omitempty"`

	// Count of apps to which the current policy is deployed.
	DeployedAppCount *int32 `json:"deployedAppCount,omitempty"`

	// Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
	MinimumRequiredPatchVersion *string `json:"minimumRequiredPatchVersion,omitempty"`
	isExplicitNullMinimumRequiredPatchVersion bool `json:"-"`
	// Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
	MinimumWarningPatchVersion *string `json:"minimumWarningPatchVersion,omitempty"`
	isExplicitNullMinimumWarningPatchVersion bool `json:"-"`
	// Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
	FaceIdBlocked *bool `json:"faceIdBlocked,omitempty"`

	Apps *[]MicrosoftGraphManagedMobileApp `json:"apps,omitempty"`

	DeploymentSummary *AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary `json:"deploymentSummary,omitempty"`
	isExplicitNullDeploymentSummary bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetVersion(v string) {
	o.Version = &v
}

// SetVersionExplicitNull (un)sets Version to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Version value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetVersionExplicitNull(b bool) {
	o.Version = nil
	o.isExplicitNullVersion = b
}
// GetPeriodOfflineBeforeAccessCheck returns the PeriodOfflineBeforeAccessCheck field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOfflineBeforeAccessCheck() string {
	if o == nil || o.PeriodOfflineBeforeAccessCheck == nil {
		var ret string
		return ret
	}
	return *o.PeriodOfflineBeforeAccessCheck
}

// GetPeriodOfflineBeforeAccessCheckOk returns a tuple with the PeriodOfflineBeforeAccessCheck field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOfflineBeforeAccessCheckOk() (string, bool) {
	if o == nil || o.PeriodOfflineBeforeAccessCheck == nil {
		var ret string
		return ret, false
	}
	return *o.PeriodOfflineBeforeAccessCheck, true
}

// HasPeriodOfflineBeforeAccessCheck returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPeriodOfflineBeforeAccessCheck() bool {
	if o != nil && o.PeriodOfflineBeforeAccessCheck != nil {
		return true
	}

	return false
}

// SetPeriodOfflineBeforeAccessCheck gets a reference to the given string and assigns it to the PeriodOfflineBeforeAccessCheck field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPeriodOfflineBeforeAccessCheck(v string) {
	o.PeriodOfflineBeforeAccessCheck = &v
}

// GetPeriodOnlineBeforeAccessCheck returns the PeriodOnlineBeforeAccessCheck field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOnlineBeforeAccessCheck() string {
	if o == nil || o.PeriodOnlineBeforeAccessCheck == nil {
		var ret string
		return ret
	}
	return *o.PeriodOnlineBeforeAccessCheck
}

// GetPeriodOnlineBeforeAccessCheckOk returns a tuple with the PeriodOnlineBeforeAccessCheck field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOnlineBeforeAccessCheckOk() (string, bool) {
	if o == nil || o.PeriodOnlineBeforeAccessCheck == nil {
		var ret string
		return ret, false
	}
	return *o.PeriodOnlineBeforeAccessCheck, true
}

// HasPeriodOnlineBeforeAccessCheck returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPeriodOnlineBeforeAccessCheck() bool {
	if o != nil && o.PeriodOnlineBeforeAccessCheck != nil {
		return true
	}

	return false
}

// SetPeriodOnlineBeforeAccessCheck gets a reference to the given string and assigns it to the PeriodOnlineBeforeAccessCheck field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPeriodOnlineBeforeAccessCheck(v string) {
	o.PeriodOnlineBeforeAccessCheck = &v
}

// GetAllowedInboundDataTransferSources returns the AllowedInboundDataTransferSources field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedInboundDataTransferSources() AnyOfmicrosoftGraphManagedAppDataTransferLevel {
	if o == nil || o.AllowedInboundDataTransferSources == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret
	}
	return *o.AllowedInboundDataTransferSources
}

// GetAllowedInboundDataTransferSourcesOk returns a tuple with the AllowedInboundDataTransferSources field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedInboundDataTransferSourcesOk() (AnyOfmicrosoftGraphManagedAppDataTransferLevel, bool) {
	if o == nil || o.AllowedInboundDataTransferSources == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret, false
	}
	return *o.AllowedInboundDataTransferSources, true
}

// HasAllowedInboundDataTransferSources returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasAllowedInboundDataTransferSources() bool {
	if o != nil && o.AllowedInboundDataTransferSources != nil {
		return true
	}

	return false
}

// SetAllowedInboundDataTransferSources gets a reference to the given AnyOfmicrosoftGraphManagedAppDataTransferLevel and assigns it to the AllowedInboundDataTransferSources field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetAllowedInboundDataTransferSources(v AnyOfmicrosoftGraphManagedAppDataTransferLevel) {
	o.AllowedInboundDataTransferSources = &v
}

// GetAllowedOutboundDataTransferDestinations returns the AllowedOutboundDataTransferDestinations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedOutboundDataTransferDestinations() AnyOfmicrosoftGraphManagedAppDataTransferLevel {
	if o == nil || o.AllowedOutboundDataTransferDestinations == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret
	}
	return *o.AllowedOutboundDataTransferDestinations
}

// GetAllowedOutboundDataTransferDestinationsOk returns a tuple with the AllowedOutboundDataTransferDestinations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedOutboundDataTransferDestinationsOk() (AnyOfmicrosoftGraphManagedAppDataTransferLevel, bool) {
	if o == nil || o.AllowedOutboundDataTransferDestinations == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataTransferLevel
		return ret, false
	}
	return *o.AllowedOutboundDataTransferDestinations, true
}

// HasAllowedOutboundDataTransferDestinations returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasAllowedOutboundDataTransferDestinations() bool {
	if o != nil && o.AllowedOutboundDataTransferDestinations != nil {
		return true
	}

	return false
}

// SetAllowedOutboundDataTransferDestinations gets a reference to the given AnyOfmicrosoftGraphManagedAppDataTransferLevel and assigns it to the AllowedOutboundDataTransferDestinations field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetAllowedOutboundDataTransferDestinations(v AnyOfmicrosoftGraphManagedAppDataTransferLevel) {
	o.AllowedOutboundDataTransferDestinations = &v
}

// GetOrganizationalCredentialsRequired returns the OrganizationalCredentialsRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetOrganizationalCredentialsRequired() bool {
	if o == nil || o.OrganizationalCredentialsRequired == nil {
		var ret bool
		return ret
	}
	return *o.OrganizationalCredentialsRequired
}

// GetOrganizationalCredentialsRequiredOk returns a tuple with the OrganizationalCredentialsRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetOrganizationalCredentialsRequiredOk() (bool, bool) {
	if o == nil || o.OrganizationalCredentialsRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.OrganizationalCredentialsRequired, true
}

// HasOrganizationalCredentialsRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasOrganizationalCredentialsRequired() bool {
	if o != nil && o.OrganizationalCredentialsRequired != nil {
		return true
	}

	return false
}

// SetOrganizationalCredentialsRequired gets a reference to the given bool and assigns it to the OrganizationalCredentialsRequired field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetOrganizationalCredentialsRequired(v bool) {
	o.OrganizationalCredentialsRequired = &v
}

// GetAllowedOutboundClipboardSharingLevel returns the AllowedOutboundClipboardSharingLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedOutboundClipboardSharingLevel() AnyOfmicrosoftGraphManagedAppClipboardSharingLevel {
	if o == nil || o.AllowedOutboundClipboardSharingLevel == nil {
		var ret AnyOfmicrosoftGraphManagedAppClipboardSharingLevel
		return ret
	}
	return *o.AllowedOutboundClipboardSharingLevel
}

// GetAllowedOutboundClipboardSharingLevelOk returns a tuple with the AllowedOutboundClipboardSharingLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedOutboundClipboardSharingLevelOk() (AnyOfmicrosoftGraphManagedAppClipboardSharingLevel, bool) {
	if o == nil || o.AllowedOutboundClipboardSharingLevel == nil {
		var ret AnyOfmicrosoftGraphManagedAppClipboardSharingLevel
		return ret, false
	}
	return *o.AllowedOutboundClipboardSharingLevel, true
}

// HasAllowedOutboundClipboardSharingLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasAllowedOutboundClipboardSharingLevel() bool {
	if o != nil && o.AllowedOutboundClipboardSharingLevel != nil {
		return true
	}

	return false
}

// SetAllowedOutboundClipboardSharingLevel gets a reference to the given AnyOfmicrosoftGraphManagedAppClipboardSharingLevel and assigns it to the AllowedOutboundClipboardSharingLevel field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetAllowedOutboundClipboardSharingLevel(v AnyOfmicrosoftGraphManagedAppClipboardSharingLevel) {
	o.AllowedOutboundClipboardSharingLevel = &v
}

// GetDataBackupBlocked returns the DataBackupBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDataBackupBlocked() bool {
	if o == nil || o.DataBackupBlocked == nil {
		var ret bool
		return ret
	}
	return *o.DataBackupBlocked
}

// GetDataBackupBlockedOk returns a tuple with the DataBackupBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDataBackupBlockedOk() (bool, bool) {
	if o == nil || o.DataBackupBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.DataBackupBlocked, true
}

// HasDataBackupBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDataBackupBlocked() bool {
	if o != nil && o.DataBackupBlocked != nil {
		return true
	}

	return false
}

// SetDataBackupBlocked gets a reference to the given bool and assigns it to the DataBackupBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDataBackupBlocked(v bool) {
	o.DataBackupBlocked = &v
}

// GetDeviceComplianceRequired returns the DeviceComplianceRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeviceComplianceRequired() bool {
	if o == nil || o.DeviceComplianceRequired == nil {
		var ret bool
		return ret
	}
	return *o.DeviceComplianceRequired
}

// GetDeviceComplianceRequiredOk returns a tuple with the DeviceComplianceRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeviceComplianceRequiredOk() (bool, bool) {
	if o == nil || o.DeviceComplianceRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceComplianceRequired, true
}

// HasDeviceComplianceRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDeviceComplianceRequired() bool {
	if o != nil && o.DeviceComplianceRequired != nil {
		return true
	}

	return false
}

// SetDeviceComplianceRequired gets a reference to the given bool and assigns it to the DeviceComplianceRequired field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDeviceComplianceRequired(v bool) {
	o.DeviceComplianceRequired = &v
}

// GetManagedBrowserToOpenLinksRequired returns the ManagedBrowserToOpenLinksRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetManagedBrowserToOpenLinksRequired() bool {
	if o == nil || o.ManagedBrowserToOpenLinksRequired == nil {
		var ret bool
		return ret
	}
	return *o.ManagedBrowserToOpenLinksRequired
}

// GetManagedBrowserToOpenLinksRequiredOk returns a tuple with the ManagedBrowserToOpenLinksRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetManagedBrowserToOpenLinksRequiredOk() (bool, bool) {
	if o == nil || o.ManagedBrowserToOpenLinksRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.ManagedBrowserToOpenLinksRequired, true
}

// HasManagedBrowserToOpenLinksRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasManagedBrowserToOpenLinksRequired() bool {
	if o != nil && o.ManagedBrowserToOpenLinksRequired != nil {
		return true
	}

	return false
}

// SetManagedBrowserToOpenLinksRequired gets a reference to the given bool and assigns it to the ManagedBrowserToOpenLinksRequired field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetManagedBrowserToOpenLinksRequired(v bool) {
	o.ManagedBrowserToOpenLinksRequired = &v
}

// GetSaveAsBlocked returns the SaveAsBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetSaveAsBlocked() bool {
	if o == nil || o.SaveAsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SaveAsBlocked
}

// GetSaveAsBlockedOk returns a tuple with the SaveAsBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetSaveAsBlockedOk() (bool, bool) {
	if o == nil || o.SaveAsBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.SaveAsBlocked, true
}

// HasSaveAsBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasSaveAsBlocked() bool {
	if o != nil && o.SaveAsBlocked != nil {
		return true
	}

	return false
}

// SetSaveAsBlocked gets a reference to the given bool and assigns it to the SaveAsBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetSaveAsBlocked(v bool) {
	o.SaveAsBlocked = &v
}

// GetPeriodOfflineBeforeWipeIsEnforced returns the PeriodOfflineBeforeWipeIsEnforced field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOfflineBeforeWipeIsEnforced() string {
	if o == nil || o.PeriodOfflineBeforeWipeIsEnforced == nil {
		var ret string
		return ret
	}
	return *o.PeriodOfflineBeforeWipeIsEnforced
}

// GetPeriodOfflineBeforeWipeIsEnforcedOk returns a tuple with the PeriodOfflineBeforeWipeIsEnforced field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodOfflineBeforeWipeIsEnforcedOk() (string, bool) {
	if o == nil || o.PeriodOfflineBeforeWipeIsEnforced == nil {
		var ret string
		return ret, false
	}
	return *o.PeriodOfflineBeforeWipeIsEnforced, true
}

// HasPeriodOfflineBeforeWipeIsEnforced returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPeriodOfflineBeforeWipeIsEnforced() bool {
	if o != nil && o.PeriodOfflineBeforeWipeIsEnforced != nil {
		return true
	}

	return false
}

// SetPeriodOfflineBeforeWipeIsEnforced gets a reference to the given string and assigns it to the PeriodOfflineBeforeWipeIsEnforced field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPeriodOfflineBeforeWipeIsEnforced(v string) {
	o.PeriodOfflineBeforeWipeIsEnforced = &v
}

// GetPinRequired returns the PinRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPinRequired() bool {
	if o == nil || o.PinRequired == nil {
		var ret bool
		return ret
	}
	return *o.PinRequired
}

// GetPinRequiredOk returns a tuple with the PinRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPinRequiredOk() (bool, bool) {
	if o == nil || o.PinRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.PinRequired, true
}

// HasPinRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPinRequired() bool {
	if o != nil && o.PinRequired != nil {
		return true
	}

	return false
}

// SetPinRequired gets a reference to the given bool and assigns it to the PinRequired field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPinRequired(v bool) {
	o.PinRequired = &v
}

// GetMaximumPinRetries returns the MaximumPinRetries field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMaximumPinRetries() int32 {
	if o == nil || o.MaximumPinRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaximumPinRetries
}

// GetMaximumPinRetriesOk returns a tuple with the MaximumPinRetries field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMaximumPinRetriesOk() (int32, bool) {
	if o == nil || o.MaximumPinRetries == nil {
		var ret int32
		return ret, false
	}
	return *o.MaximumPinRetries, true
}

// HasMaximumPinRetries returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMaximumPinRetries() bool {
	if o != nil && o.MaximumPinRetries != nil {
		return true
	}

	return false
}

// SetMaximumPinRetries gets a reference to the given int32 and assigns it to the MaximumPinRetries field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMaximumPinRetries(v int32) {
	o.MaximumPinRetries = &v
}

// GetSimplePinBlocked returns the SimplePinBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetSimplePinBlocked() bool {
	if o == nil || o.SimplePinBlocked == nil {
		var ret bool
		return ret
	}
	return *o.SimplePinBlocked
}

// GetSimplePinBlockedOk returns a tuple with the SimplePinBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetSimplePinBlockedOk() (bool, bool) {
	if o == nil || o.SimplePinBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.SimplePinBlocked, true
}

// HasSimplePinBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasSimplePinBlocked() bool {
	if o != nil && o.SimplePinBlocked != nil {
		return true
	}

	return false
}

// SetSimplePinBlocked gets a reference to the given bool and assigns it to the SimplePinBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetSimplePinBlocked(v bool) {
	o.SimplePinBlocked = &v
}

// GetMinimumPinLength returns the MinimumPinLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumPinLength() int32 {
	if o == nil || o.MinimumPinLength == nil {
		var ret int32
		return ret
	}
	return *o.MinimumPinLength
}

// GetMinimumPinLengthOk returns a tuple with the MinimumPinLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumPinLengthOk() (int32, bool) {
	if o == nil || o.MinimumPinLength == nil {
		var ret int32
		return ret, false
	}
	return *o.MinimumPinLength, true
}

// HasMinimumPinLength returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumPinLength() bool {
	if o != nil && o.MinimumPinLength != nil {
		return true
	}

	return false
}

// SetMinimumPinLength gets a reference to the given int32 and assigns it to the MinimumPinLength field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumPinLength(v int32) {
	o.MinimumPinLength = &v
}

// GetPinCharacterSet returns the PinCharacterSet field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPinCharacterSet() AnyOfmicrosoftGraphManagedAppPinCharacterSet {
	if o == nil || o.PinCharacterSet == nil {
		var ret AnyOfmicrosoftGraphManagedAppPinCharacterSet
		return ret
	}
	return *o.PinCharacterSet
}

// GetPinCharacterSetOk returns a tuple with the PinCharacterSet field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPinCharacterSetOk() (AnyOfmicrosoftGraphManagedAppPinCharacterSet, bool) {
	if o == nil || o.PinCharacterSet == nil {
		var ret AnyOfmicrosoftGraphManagedAppPinCharacterSet
		return ret, false
	}
	return *o.PinCharacterSet, true
}

// HasPinCharacterSet returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPinCharacterSet() bool {
	if o != nil && o.PinCharacterSet != nil {
		return true
	}

	return false
}

// SetPinCharacterSet gets a reference to the given AnyOfmicrosoftGraphManagedAppPinCharacterSet and assigns it to the PinCharacterSet field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPinCharacterSet(v AnyOfmicrosoftGraphManagedAppPinCharacterSet) {
	o.PinCharacterSet = &v
}

// GetPeriodBeforePinReset returns the PeriodBeforePinReset field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodBeforePinReset() string {
	if o == nil || o.PeriodBeforePinReset == nil {
		var ret string
		return ret
	}
	return *o.PeriodBeforePinReset
}

// GetPeriodBeforePinResetOk returns a tuple with the PeriodBeforePinReset field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPeriodBeforePinResetOk() (string, bool) {
	if o == nil || o.PeriodBeforePinReset == nil {
		var ret string
		return ret, false
	}
	return *o.PeriodBeforePinReset, true
}

// HasPeriodBeforePinReset returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPeriodBeforePinReset() bool {
	if o != nil && o.PeriodBeforePinReset != nil {
		return true
	}

	return false
}

// SetPeriodBeforePinReset gets a reference to the given string and assigns it to the PeriodBeforePinReset field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPeriodBeforePinReset(v string) {
	o.PeriodBeforePinReset = &v
}

// GetAllowedDataStorageLocations returns the AllowedDataStorageLocations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedDataStorageLocations() []AnyOfmicrosoftGraphManagedAppDataStorageLocation {
	if o == nil || o.AllowedDataStorageLocations == nil {
		var ret []AnyOfmicrosoftGraphManagedAppDataStorageLocation
		return ret
	}
	return *o.AllowedDataStorageLocations
}

// GetAllowedDataStorageLocationsOk returns a tuple with the AllowedDataStorageLocations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAllowedDataStorageLocationsOk() ([]AnyOfmicrosoftGraphManagedAppDataStorageLocation, bool) {
	if o == nil || o.AllowedDataStorageLocations == nil {
		var ret []AnyOfmicrosoftGraphManagedAppDataStorageLocation
		return ret, false
	}
	return *o.AllowedDataStorageLocations, true
}

// HasAllowedDataStorageLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasAllowedDataStorageLocations() bool {
	if o != nil && o.AllowedDataStorageLocations != nil {
		return true
	}

	return false
}

// SetAllowedDataStorageLocations gets a reference to the given []AnyOfmicrosoftGraphManagedAppDataStorageLocation and assigns it to the AllowedDataStorageLocations field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetAllowedDataStorageLocations(v []AnyOfmicrosoftGraphManagedAppDataStorageLocation) {
	o.AllowedDataStorageLocations = &v
}

// GetContactSyncBlocked returns the ContactSyncBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetContactSyncBlocked() bool {
	if o == nil || o.ContactSyncBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ContactSyncBlocked
}

// GetContactSyncBlockedOk returns a tuple with the ContactSyncBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetContactSyncBlockedOk() (bool, bool) {
	if o == nil || o.ContactSyncBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.ContactSyncBlocked, true
}

// HasContactSyncBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasContactSyncBlocked() bool {
	if o != nil && o.ContactSyncBlocked != nil {
		return true
	}

	return false
}

// SetContactSyncBlocked gets a reference to the given bool and assigns it to the ContactSyncBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetContactSyncBlocked(v bool) {
	o.ContactSyncBlocked = &v
}

// GetPrintBlocked returns the PrintBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPrintBlocked() bool {
	if o == nil || o.PrintBlocked == nil {
		var ret bool
		return ret
	}
	return *o.PrintBlocked
}

// GetPrintBlockedOk returns a tuple with the PrintBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetPrintBlockedOk() (bool, bool) {
	if o == nil || o.PrintBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.PrintBlocked, true
}

// HasPrintBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasPrintBlocked() bool {
	if o != nil && o.PrintBlocked != nil {
		return true
	}

	return false
}

// SetPrintBlocked gets a reference to the given bool and assigns it to the PrintBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetPrintBlocked(v bool) {
	o.PrintBlocked = &v
}

// GetFingerprintBlocked returns the FingerprintBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetFingerprintBlocked() bool {
	if o == nil || o.FingerprintBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FingerprintBlocked
}

// GetFingerprintBlockedOk returns a tuple with the FingerprintBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetFingerprintBlockedOk() (bool, bool) {
	if o == nil || o.FingerprintBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.FingerprintBlocked, true
}

// HasFingerprintBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasFingerprintBlocked() bool {
	if o != nil && o.FingerprintBlocked != nil {
		return true
	}

	return false
}

// SetFingerprintBlocked gets a reference to the given bool and assigns it to the FingerprintBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetFingerprintBlocked(v bool) {
	o.FingerprintBlocked = &v
}

// GetDisableAppPinIfDevicePinIsSet returns the DisableAppPinIfDevicePinIsSet field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisableAppPinIfDevicePinIsSet() bool {
	if o == nil || o.DisableAppPinIfDevicePinIsSet == nil {
		var ret bool
		return ret
	}
	return *o.DisableAppPinIfDevicePinIsSet
}

// GetDisableAppPinIfDevicePinIsSetOk returns a tuple with the DisableAppPinIfDevicePinIsSet field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisableAppPinIfDevicePinIsSetOk() (bool, bool) {
	if o == nil || o.DisableAppPinIfDevicePinIsSet == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableAppPinIfDevicePinIsSet, true
}

// HasDisableAppPinIfDevicePinIsSet returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDisableAppPinIfDevicePinIsSet() bool {
	if o != nil && o.DisableAppPinIfDevicePinIsSet != nil {
		return true
	}

	return false
}

// SetDisableAppPinIfDevicePinIsSet gets a reference to the given bool and assigns it to the DisableAppPinIfDevicePinIsSet field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDisableAppPinIfDevicePinIsSet(v bool) {
	o.DisableAppPinIfDevicePinIsSet = &v
}

// GetMinimumRequiredOsVersion returns the MinimumRequiredOsVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredOsVersion() string {
	if o == nil || o.MinimumRequiredOsVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredOsVersion
}

// GetMinimumRequiredOsVersionOk returns a tuple with the MinimumRequiredOsVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredOsVersionOk() (string, bool) {
	if o == nil || o.MinimumRequiredOsVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumRequiredOsVersion, true
}

// HasMinimumRequiredOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumRequiredOsVersion() bool {
	if o != nil && o.MinimumRequiredOsVersion != nil {
		return true
	}

	return false
}

// SetMinimumRequiredOsVersion gets a reference to the given string and assigns it to the MinimumRequiredOsVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredOsVersion(v string) {
	o.MinimumRequiredOsVersion = &v
}

// SetMinimumRequiredOsVersionExplicitNull (un)sets MinimumRequiredOsVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumRequiredOsVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredOsVersionExplicitNull(b bool) {
	o.MinimumRequiredOsVersion = nil
	o.isExplicitNullMinimumRequiredOsVersion = b
}
// GetMinimumWarningOsVersion returns the MinimumWarningOsVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningOsVersion() string {
	if o == nil || o.MinimumWarningOsVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningOsVersion
}

// GetMinimumWarningOsVersionOk returns a tuple with the MinimumWarningOsVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningOsVersionOk() (string, bool) {
	if o == nil || o.MinimumWarningOsVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumWarningOsVersion, true
}

// HasMinimumWarningOsVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumWarningOsVersion() bool {
	if o != nil && o.MinimumWarningOsVersion != nil {
		return true
	}

	return false
}

// SetMinimumWarningOsVersion gets a reference to the given string and assigns it to the MinimumWarningOsVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningOsVersion(v string) {
	o.MinimumWarningOsVersion = &v
}

// SetMinimumWarningOsVersionExplicitNull (un)sets MinimumWarningOsVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumWarningOsVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningOsVersionExplicitNull(b bool) {
	o.MinimumWarningOsVersion = nil
	o.isExplicitNullMinimumWarningOsVersion = b
}
// GetMinimumRequiredAppVersion returns the MinimumRequiredAppVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredAppVersion() string {
	if o == nil || o.MinimumRequiredAppVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredAppVersion
}

// GetMinimumRequiredAppVersionOk returns a tuple with the MinimumRequiredAppVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredAppVersionOk() (string, bool) {
	if o == nil || o.MinimumRequiredAppVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumRequiredAppVersion, true
}

// HasMinimumRequiredAppVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumRequiredAppVersion() bool {
	if o != nil && o.MinimumRequiredAppVersion != nil {
		return true
	}

	return false
}

// SetMinimumRequiredAppVersion gets a reference to the given string and assigns it to the MinimumRequiredAppVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredAppVersion(v string) {
	o.MinimumRequiredAppVersion = &v
}

// SetMinimumRequiredAppVersionExplicitNull (un)sets MinimumRequiredAppVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumRequiredAppVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredAppVersionExplicitNull(b bool) {
	o.MinimumRequiredAppVersion = nil
	o.isExplicitNullMinimumRequiredAppVersion = b
}
// GetMinimumWarningAppVersion returns the MinimumWarningAppVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningAppVersion() string {
	if o == nil || o.MinimumWarningAppVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningAppVersion
}

// GetMinimumWarningAppVersionOk returns a tuple with the MinimumWarningAppVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningAppVersionOk() (string, bool) {
	if o == nil || o.MinimumWarningAppVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumWarningAppVersion, true
}

// HasMinimumWarningAppVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumWarningAppVersion() bool {
	if o != nil && o.MinimumWarningAppVersion != nil {
		return true
	}

	return false
}

// SetMinimumWarningAppVersion gets a reference to the given string and assigns it to the MinimumWarningAppVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningAppVersion(v string) {
	o.MinimumWarningAppVersion = &v
}

// SetMinimumWarningAppVersionExplicitNull (un)sets MinimumWarningAppVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumWarningAppVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningAppVersionExplicitNull(b bool) {
	o.MinimumWarningAppVersion = nil
	o.isExplicitNullMinimumWarningAppVersion = b
}
// GetAppDataEncryptionType returns the AppDataEncryptionType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAppDataEncryptionType() AnyOfmicrosoftGraphManagedAppDataEncryptionType {
	if o == nil || o.AppDataEncryptionType == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataEncryptionType
		return ret
	}
	return *o.AppDataEncryptionType
}

// GetAppDataEncryptionTypeOk returns a tuple with the AppDataEncryptionType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAppDataEncryptionTypeOk() (AnyOfmicrosoftGraphManagedAppDataEncryptionType, bool) {
	if o == nil || o.AppDataEncryptionType == nil {
		var ret AnyOfmicrosoftGraphManagedAppDataEncryptionType
		return ret, false
	}
	return *o.AppDataEncryptionType, true
}

// HasAppDataEncryptionType returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasAppDataEncryptionType() bool {
	if o != nil && o.AppDataEncryptionType != nil {
		return true
	}

	return false
}

// SetAppDataEncryptionType gets a reference to the given AnyOfmicrosoftGraphManagedAppDataEncryptionType and assigns it to the AppDataEncryptionType field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetAppDataEncryptionType(v AnyOfmicrosoftGraphManagedAppDataEncryptionType) {
	o.AppDataEncryptionType = &v
}

// GetScreenCaptureBlocked returns the ScreenCaptureBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetScreenCaptureBlocked() bool {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ScreenCaptureBlocked
}

// GetScreenCaptureBlockedOk returns a tuple with the ScreenCaptureBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetScreenCaptureBlockedOk() (bool, bool) {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.ScreenCaptureBlocked, true
}

// HasScreenCaptureBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasScreenCaptureBlocked() bool {
	if o != nil && o.ScreenCaptureBlocked != nil {
		return true
	}

	return false
}

// SetScreenCaptureBlocked gets a reference to the given bool and assigns it to the ScreenCaptureBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetScreenCaptureBlocked(v bool) {
	o.ScreenCaptureBlocked = &v
}

// GetEncryptAppData returns the EncryptAppData field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetEncryptAppData() bool {
	if o == nil || o.EncryptAppData == nil {
		var ret bool
		return ret
	}
	return *o.EncryptAppData
}

// GetEncryptAppDataOk returns a tuple with the EncryptAppData field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetEncryptAppDataOk() (bool, bool) {
	if o == nil || o.EncryptAppData == nil {
		var ret bool
		return ret, false
	}
	return *o.EncryptAppData, true
}

// HasEncryptAppData returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasEncryptAppData() bool {
	if o != nil && o.EncryptAppData != nil {
		return true
	}

	return false
}

// SetEncryptAppData gets a reference to the given bool and assigns it to the EncryptAppData field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetEncryptAppData(v bool) {
	o.EncryptAppData = &v
}

// GetDisableAppEncryptionIfDeviceEncryptionIsEnabled returns the DisableAppEncryptionIfDeviceEncryptionIsEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisableAppEncryptionIfDeviceEncryptionIsEnabled() bool {
	if o == nil || o.DisableAppEncryptionIfDeviceEncryptionIsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DisableAppEncryptionIfDeviceEncryptionIsEnabled
}

// GetDisableAppEncryptionIfDeviceEncryptionIsEnabledOk returns a tuple with the DisableAppEncryptionIfDeviceEncryptionIsEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDisableAppEncryptionIfDeviceEncryptionIsEnabledOk() (bool, bool) {
	if o == nil || o.DisableAppEncryptionIfDeviceEncryptionIsEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableAppEncryptionIfDeviceEncryptionIsEnabled, true
}

// HasDisableAppEncryptionIfDeviceEncryptionIsEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDisableAppEncryptionIfDeviceEncryptionIsEnabled() bool {
	if o != nil && o.DisableAppEncryptionIfDeviceEncryptionIsEnabled != nil {
		return true
	}

	return false
}

// SetDisableAppEncryptionIfDeviceEncryptionIsEnabled gets a reference to the given bool and assigns it to the DisableAppEncryptionIfDeviceEncryptionIsEnabled field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDisableAppEncryptionIfDeviceEncryptionIsEnabled(v bool) {
	o.DisableAppEncryptionIfDeviceEncryptionIsEnabled = &v
}

// GetMinimumRequiredSdkVersion returns the MinimumRequiredSdkVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredSdkVersion() string {
	if o == nil || o.MinimumRequiredSdkVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredSdkVersion
}

// GetMinimumRequiredSdkVersionOk returns a tuple with the MinimumRequiredSdkVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredSdkVersionOk() (string, bool) {
	if o == nil || o.MinimumRequiredSdkVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumRequiredSdkVersion, true
}

// HasMinimumRequiredSdkVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumRequiredSdkVersion() bool {
	if o != nil && o.MinimumRequiredSdkVersion != nil {
		return true
	}

	return false
}

// SetMinimumRequiredSdkVersion gets a reference to the given string and assigns it to the MinimumRequiredSdkVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredSdkVersion(v string) {
	o.MinimumRequiredSdkVersion = &v
}

// SetMinimumRequiredSdkVersionExplicitNull (un)sets MinimumRequiredSdkVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumRequiredSdkVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredSdkVersionExplicitNull(b bool) {
	o.MinimumRequiredSdkVersion = nil
	o.isExplicitNullMinimumRequiredSdkVersion = b
}
// GetCustomSettings returns the CustomSettings field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetCustomSettings() []MicrosoftGraphKeyValuePair {
	if o == nil || o.CustomSettings == nil {
		var ret []MicrosoftGraphKeyValuePair
		return ret
	}
	return *o.CustomSettings
}

// GetCustomSettingsOk returns a tuple with the CustomSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetCustomSettingsOk() ([]MicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.CustomSettings == nil {
		var ret []MicrosoftGraphKeyValuePair
		return ret, false
	}
	return *o.CustomSettings, true
}

// HasCustomSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasCustomSettings() bool {
	if o != nil && o.CustomSettings != nil {
		return true
	}

	return false
}

// SetCustomSettings gets a reference to the given []MicrosoftGraphKeyValuePair and assigns it to the CustomSettings field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetCustomSettings(v []MicrosoftGraphKeyValuePair) {
	o.CustomSettings = &v
}

// GetDeployedAppCount returns the DeployedAppCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeployedAppCount() int32 {
	if o == nil || o.DeployedAppCount == nil {
		var ret int32
		return ret
	}
	return *o.DeployedAppCount
}

// GetDeployedAppCountOk returns a tuple with the DeployedAppCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeployedAppCountOk() (int32, bool) {
	if o == nil || o.DeployedAppCount == nil {
		var ret int32
		return ret, false
	}
	return *o.DeployedAppCount, true
}

// HasDeployedAppCount returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDeployedAppCount() bool {
	if o != nil && o.DeployedAppCount != nil {
		return true
	}

	return false
}

// SetDeployedAppCount gets a reference to the given int32 and assigns it to the DeployedAppCount field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDeployedAppCount(v int32) {
	o.DeployedAppCount = &v
}

// GetMinimumRequiredPatchVersion returns the MinimumRequiredPatchVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredPatchVersion() string {
	if o == nil || o.MinimumRequiredPatchVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumRequiredPatchVersion
}

// GetMinimumRequiredPatchVersionOk returns a tuple with the MinimumRequiredPatchVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumRequiredPatchVersionOk() (string, bool) {
	if o == nil || o.MinimumRequiredPatchVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumRequiredPatchVersion, true
}

// HasMinimumRequiredPatchVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumRequiredPatchVersion() bool {
	if o != nil && o.MinimumRequiredPatchVersion != nil {
		return true
	}

	return false
}

// SetMinimumRequiredPatchVersion gets a reference to the given string and assigns it to the MinimumRequiredPatchVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredPatchVersion(v string) {
	o.MinimumRequiredPatchVersion = &v
}

// SetMinimumRequiredPatchVersionExplicitNull (un)sets MinimumRequiredPatchVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumRequiredPatchVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumRequiredPatchVersionExplicitNull(b bool) {
	o.MinimumRequiredPatchVersion = nil
	o.isExplicitNullMinimumRequiredPatchVersion = b
}
// GetMinimumWarningPatchVersion returns the MinimumWarningPatchVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningPatchVersion() string {
	if o == nil || o.MinimumWarningPatchVersion == nil {
		var ret string
		return ret
	}
	return *o.MinimumWarningPatchVersion
}

// GetMinimumWarningPatchVersionOk returns a tuple with the MinimumWarningPatchVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetMinimumWarningPatchVersionOk() (string, bool) {
	if o == nil || o.MinimumWarningPatchVersion == nil {
		var ret string
		return ret, false
	}
	return *o.MinimumWarningPatchVersion, true
}

// HasMinimumWarningPatchVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasMinimumWarningPatchVersion() bool {
	if o != nil && o.MinimumWarningPatchVersion != nil {
		return true
	}

	return false
}

// SetMinimumWarningPatchVersion gets a reference to the given string and assigns it to the MinimumWarningPatchVersion field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningPatchVersion(v string) {
	o.MinimumWarningPatchVersion = &v
}

// SetMinimumWarningPatchVersionExplicitNull (un)sets MinimumWarningPatchVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumWarningPatchVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetMinimumWarningPatchVersionExplicitNull(b bool) {
	o.MinimumWarningPatchVersion = nil
	o.isExplicitNullMinimumWarningPatchVersion = b
}
// GetFaceIdBlocked returns the FaceIdBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetFaceIdBlocked() bool {
	if o == nil || o.FaceIdBlocked == nil {
		var ret bool
		return ret
	}
	return *o.FaceIdBlocked
}

// GetFaceIdBlockedOk returns a tuple with the FaceIdBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetFaceIdBlockedOk() (bool, bool) {
	if o == nil || o.FaceIdBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.FaceIdBlocked, true
}

// HasFaceIdBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasFaceIdBlocked() bool {
	if o != nil && o.FaceIdBlocked != nil {
		return true
	}

	return false
}

// SetFaceIdBlocked gets a reference to the given bool and assigns it to the FaceIdBlocked field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetFaceIdBlocked(v bool) {
	o.FaceIdBlocked = &v
}

// GetApps returns the Apps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetApps() []MicrosoftGraphManagedMobileApp {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphManagedMobileApp
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetAppsOk() ([]MicrosoftGraphManagedMobileApp, bool) {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphManagedMobileApp
		return ret, false
	}
	return *o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []MicrosoftGraphManagedMobileApp and assigns it to the Apps field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetApps(v []MicrosoftGraphManagedMobileApp) {
	o.Apps = &v
}

// GetDeploymentSummary returns the DeploymentSummary field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeploymentSummary() AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary {
	if o == nil || o.DeploymentSummary == nil {
		var ret AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary
		return ret
	}
	return *o.DeploymentSummary
}

// GetDeploymentSummaryOk returns a tuple with the DeploymentSummary field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) GetDeploymentSummaryOk() (AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary, bool) {
	if o == nil || o.DeploymentSummary == nil {
		var ret AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary
		return ret, false
	}
	return *o.DeploymentSummary, true
}

// HasDeploymentSummary returns a boolean if a field has been set.
func (o *MicrosoftGraphDefaultManagedAppProtection) HasDeploymentSummary() bool {
	if o != nil && o.DeploymentSummary != nil {
		return true
	}

	return false
}

// SetDeploymentSummary gets a reference to the given AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary and assigns it to the DeploymentSummary field.
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDeploymentSummary(v AnyOfmicrosoftGraphManagedAppPolicyDeploymentSummary) {
	o.DeploymentSummary = &v
}

// SetDeploymentSummaryExplicitNull (un)sets DeploymentSummary to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeploymentSummary value is set to nil even if false is passed
func (o *MicrosoftGraphDefaultManagedAppProtection) SetDeploymentSummaryExplicitNull(b bool) {
	o.DeploymentSummary = nil
	o.isExplicitNullDeploymentSummary = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDefaultManagedAppProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Version == nil {
		if o.isExplicitNullVersion {
			toSerialize["version"] = o.Version
		}
	} else {
		toSerialize["version"] = o.Version
	}
	if o.PeriodOfflineBeforeAccessCheck != nil {
		toSerialize["periodOfflineBeforeAccessCheck"] = o.PeriodOfflineBeforeAccessCheck
	}
	if o.PeriodOnlineBeforeAccessCheck != nil {
		toSerialize["periodOnlineBeforeAccessCheck"] = o.PeriodOnlineBeforeAccessCheck
	}
	if o.AllowedInboundDataTransferSources != nil {
		toSerialize["allowedInboundDataTransferSources"] = o.AllowedInboundDataTransferSources
	}
	if o.AllowedOutboundDataTransferDestinations != nil {
		toSerialize["allowedOutboundDataTransferDestinations"] = o.AllowedOutboundDataTransferDestinations
	}
	if o.OrganizationalCredentialsRequired != nil {
		toSerialize["organizationalCredentialsRequired"] = o.OrganizationalCredentialsRequired
	}
	if o.AllowedOutboundClipboardSharingLevel != nil {
		toSerialize["allowedOutboundClipboardSharingLevel"] = o.AllowedOutboundClipboardSharingLevel
	}
	if o.DataBackupBlocked != nil {
		toSerialize["dataBackupBlocked"] = o.DataBackupBlocked
	}
	if o.DeviceComplianceRequired != nil {
		toSerialize["deviceComplianceRequired"] = o.DeviceComplianceRequired
	}
	if o.ManagedBrowserToOpenLinksRequired != nil {
		toSerialize["managedBrowserToOpenLinksRequired"] = o.ManagedBrowserToOpenLinksRequired
	}
	if o.SaveAsBlocked != nil {
		toSerialize["saveAsBlocked"] = o.SaveAsBlocked
	}
	if o.PeriodOfflineBeforeWipeIsEnforced != nil {
		toSerialize["periodOfflineBeforeWipeIsEnforced"] = o.PeriodOfflineBeforeWipeIsEnforced
	}
	if o.PinRequired != nil {
		toSerialize["pinRequired"] = o.PinRequired
	}
	if o.MaximumPinRetries != nil {
		toSerialize["maximumPinRetries"] = o.MaximumPinRetries
	}
	if o.SimplePinBlocked != nil {
		toSerialize["simplePinBlocked"] = o.SimplePinBlocked
	}
	if o.MinimumPinLength != nil {
		toSerialize["minimumPinLength"] = o.MinimumPinLength
	}
	if o.PinCharacterSet != nil {
		toSerialize["pinCharacterSet"] = o.PinCharacterSet
	}
	if o.PeriodBeforePinReset != nil {
		toSerialize["periodBeforePinReset"] = o.PeriodBeforePinReset
	}
	if o.AllowedDataStorageLocations != nil {
		toSerialize["allowedDataStorageLocations"] = o.AllowedDataStorageLocations
	}
	if o.ContactSyncBlocked != nil {
		toSerialize["contactSyncBlocked"] = o.ContactSyncBlocked
	}
	if o.PrintBlocked != nil {
		toSerialize["printBlocked"] = o.PrintBlocked
	}
	if o.FingerprintBlocked != nil {
		toSerialize["fingerprintBlocked"] = o.FingerprintBlocked
	}
	if o.DisableAppPinIfDevicePinIsSet != nil {
		toSerialize["disableAppPinIfDevicePinIsSet"] = o.DisableAppPinIfDevicePinIsSet
	}
	if o.MinimumRequiredOsVersion == nil {
		if o.isExplicitNullMinimumRequiredOsVersion {
			toSerialize["minimumRequiredOsVersion"] = o.MinimumRequiredOsVersion
		}
	} else {
		toSerialize["minimumRequiredOsVersion"] = o.MinimumRequiredOsVersion
	}
	if o.MinimumWarningOsVersion == nil {
		if o.isExplicitNullMinimumWarningOsVersion {
			toSerialize["minimumWarningOsVersion"] = o.MinimumWarningOsVersion
		}
	} else {
		toSerialize["minimumWarningOsVersion"] = o.MinimumWarningOsVersion
	}
	if o.MinimumRequiredAppVersion == nil {
		if o.isExplicitNullMinimumRequiredAppVersion {
			toSerialize["minimumRequiredAppVersion"] = o.MinimumRequiredAppVersion
		}
	} else {
		toSerialize["minimumRequiredAppVersion"] = o.MinimumRequiredAppVersion
	}
	if o.MinimumWarningAppVersion == nil {
		if o.isExplicitNullMinimumWarningAppVersion {
			toSerialize["minimumWarningAppVersion"] = o.MinimumWarningAppVersion
		}
	} else {
		toSerialize["minimumWarningAppVersion"] = o.MinimumWarningAppVersion
	}
	if o.AppDataEncryptionType != nil {
		toSerialize["appDataEncryptionType"] = o.AppDataEncryptionType
	}
	if o.ScreenCaptureBlocked != nil {
		toSerialize["screenCaptureBlocked"] = o.ScreenCaptureBlocked
	}
	if o.EncryptAppData != nil {
		toSerialize["encryptAppData"] = o.EncryptAppData
	}
	if o.DisableAppEncryptionIfDeviceEncryptionIsEnabled != nil {
		toSerialize["disableAppEncryptionIfDeviceEncryptionIsEnabled"] = o.DisableAppEncryptionIfDeviceEncryptionIsEnabled
	}
	if o.MinimumRequiredSdkVersion == nil {
		if o.isExplicitNullMinimumRequiredSdkVersion {
			toSerialize["minimumRequiredSdkVersion"] = o.MinimumRequiredSdkVersion
		}
	} else {
		toSerialize["minimumRequiredSdkVersion"] = o.MinimumRequiredSdkVersion
	}
	if o.CustomSettings != nil {
		toSerialize["customSettings"] = o.CustomSettings
	}
	if o.DeployedAppCount != nil {
		toSerialize["deployedAppCount"] = o.DeployedAppCount
	}
	if o.MinimumRequiredPatchVersion == nil {
		if o.isExplicitNullMinimumRequiredPatchVersion {
			toSerialize["minimumRequiredPatchVersion"] = o.MinimumRequiredPatchVersion
		}
	} else {
		toSerialize["minimumRequiredPatchVersion"] = o.MinimumRequiredPatchVersion
	}
	if o.MinimumWarningPatchVersion == nil {
		if o.isExplicitNullMinimumWarningPatchVersion {
			toSerialize["minimumWarningPatchVersion"] = o.MinimumWarningPatchVersion
		}
	} else {
		toSerialize["minimumWarningPatchVersion"] = o.MinimumWarningPatchVersion
	}
	if o.FaceIdBlocked != nil {
		toSerialize["faceIdBlocked"] = o.FaceIdBlocked
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.DeploymentSummary == nil {
		if o.isExplicitNullDeploymentSummary {
			toSerialize["deploymentSummary"] = o.DeploymentSummary
		}
	} else {
		toSerialize["deploymentSummary"] = o.DeploymentSummary
	}
	return json.Marshal(toSerialize)
}


