/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// WebApp Contains properties and inherited properties for web apps.
type WebApp struct {
	// The web app URL.
	AppUrl *string `json:"appUrl,omitempty"`
	isExplicitNullAppUrl bool `json:"-"`
	// Whether or not to use managed browser. This property is only applicable for Android and IOS.
	UseManagedBrowser *bool `json:"useManagedBrowser,omitempty"`

}

// GetAppUrl returns the AppUrl field if non-nil, zero value otherwise.
func (o *WebApp) GetAppUrl() string {
	if o == nil || o.AppUrl == nil {
		var ret string
		return ret
	}
	return *o.AppUrl
}

// GetAppUrlOk returns a tuple with the AppUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebApp) GetAppUrlOk() (string, bool) {
	if o == nil || o.AppUrl == nil {
		var ret string
		return ret, false
	}
	return *o.AppUrl, true
}

// HasAppUrl returns a boolean if a field has been set.
func (o *WebApp) HasAppUrl() bool {
	if o != nil && o.AppUrl != nil {
		return true
	}

	return false
}

// SetAppUrl gets a reference to the given string and assigns it to the AppUrl field.
func (o *WebApp) SetAppUrl(v string) {
	o.AppUrl = &v
}

// SetAppUrlExplicitNull (un)sets AppUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppUrl value is set to nil even if false is passed
func (o *WebApp) SetAppUrlExplicitNull(b bool) {
	o.AppUrl = nil
	o.isExplicitNullAppUrl = b
}
// GetUseManagedBrowser returns the UseManagedBrowser field if non-nil, zero value otherwise.
func (o *WebApp) GetUseManagedBrowser() bool {
	if o == nil || o.UseManagedBrowser == nil {
		var ret bool
		return ret
	}
	return *o.UseManagedBrowser
}

// GetUseManagedBrowserOk returns a tuple with the UseManagedBrowser field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebApp) GetUseManagedBrowserOk() (bool, bool) {
	if o == nil || o.UseManagedBrowser == nil {
		var ret bool
		return ret, false
	}
	return *o.UseManagedBrowser, true
}

// HasUseManagedBrowser returns a boolean if a field has been set.
func (o *WebApp) HasUseManagedBrowser() bool {
	if o != nil && o.UseManagedBrowser != nil {
		return true
	}

	return false
}

// SetUseManagedBrowser gets a reference to the given bool and assigns it to the UseManagedBrowser field.
func (o *WebApp) SetUseManagedBrowser(v bool) {
	o.UseManagedBrowser = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o WebApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppUrl == nil {
		if o.isExplicitNullAppUrl {
			toSerialize["appUrl"] = o.AppUrl
		}
	} else {
		toSerialize["appUrl"] = o.AppUrl
	}
	if o.UseManagedBrowser != nil {
		toSerialize["useManagedBrowser"] = o.UseManagedBrowser
	}
	return json.Marshal(toSerialize)
}


