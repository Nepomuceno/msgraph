/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject872 struct for InlineObject872
type InlineObject872 struct {
	Probability *AnyOfobject `json:"probability,omitempty"`
	isExplicitNullProbability bool `json:"-"`
	DegFreedom1 *AnyOfobject `json:"degFreedom1,omitempty"`
	isExplicitNullDegFreedom1 bool `json:"-"`
	DegFreedom2 *AnyOfobject `json:"degFreedom2,omitempty"`
	isExplicitNullDegFreedom2 bool `json:"-"`
}

// GetProbability returns the Probability field if non-nil, zero value otherwise.
func (o *InlineObject872) GetProbability() AnyOfobject {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject872) GetProbabilityOk() (AnyOfobject, bool) {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *InlineObject872) HasProbability() bool {
	if o != nil && o.Probability != nil {
		return true
	}

	return false
}

// SetProbability gets a reference to the given AnyOfobject and assigns it to the Probability field.
func (o *InlineObject872) SetProbability(v AnyOfobject) {
	o.Probability = &v
}

// SetProbabilityExplicitNull (un)sets Probability to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Probability value is set to nil even if false is passed
func (o *InlineObject872) SetProbabilityExplicitNull(b bool) {
	o.Probability = nil
	o.isExplicitNullProbability = b
}
// GetDegFreedom1 returns the DegFreedom1 field if non-nil, zero value otherwise.
func (o *InlineObject872) GetDegFreedom1() AnyOfobject {
	if o == nil || o.DegFreedom1 == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.DegFreedom1
}

// GetDegFreedom1Ok returns a tuple with the DegFreedom1 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject872) GetDegFreedom1Ok() (AnyOfobject, bool) {
	if o == nil || o.DegFreedom1 == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.DegFreedom1, true
}

// HasDegFreedom1 returns a boolean if a field has been set.
func (o *InlineObject872) HasDegFreedom1() bool {
	if o != nil && o.DegFreedom1 != nil {
		return true
	}

	return false
}

// SetDegFreedom1 gets a reference to the given AnyOfobject and assigns it to the DegFreedom1 field.
func (o *InlineObject872) SetDegFreedom1(v AnyOfobject) {
	o.DegFreedom1 = &v
}

// SetDegFreedom1ExplicitNull (un)sets DegFreedom1 to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DegFreedom1 value is set to nil even if false is passed
func (o *InlineObject872) SetDegFreedom1ExplicitNull(b bool) {
	o.DegFreedom1 = nil
	o.isExplicitNullDegFreedom1 = b
}
// GetDegFreedom2 returns the DegFreedom2 field if non-nil, zero value otherwise.
func (o *InlineObject872) GetDegFreedom2() AnyOfobject {
	if o == nil || o.DegFreedom2 == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.DegFreedom2
}

// GetDegFreedom2Ok returns a tuple with the DegFreedom2 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject872) GetDegFreedom2Ok() (AnyOfobject, bool) {
	if o == nil || o.DegFreedom2 == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.DegFreedom2, true
}

// HasDegFreedom2 returns a boolean if a field has been set.
func (o *InlineObject872) HasDegFreedom2() bool {
	if o != nil && o.DegFreedom2 != nil {
		return true
	}

	return false
}

// SetDegFreedom2 gets a reference to the given AnyOfobject and assigns it to the DegFreedom2 field.
func (o *InlineObject872) SetDegFreedom2(v AnyOfobject) {
	o.DegFreedom2 = &v
}

// SetDegFreedom2ExplicitNull (un)sets DegFreedom2 to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DegFreedom2 value is set to nil even if false is passed
func (o *InlineObject872) SetDegFreedom2ExplicitNull(b bool) {
	o.DegFreedom2 = nil
	o.isExplicitNullDegFreedom2 = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject872) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Probability == nil {
		if o.isExplicitNullProbability {
			toSerialize["probability"] = o.Probability
		}
	} else {
		toSerialize["probability"] = o.Probability
	}
	if o.DegFreedom1 == nil {
		if o.isExplicitNullDegFreedom1 {
			toSerialize["degFreedom1"] = o.DegFreedom1
		}
	} else {
		toSerialize["degFreedom1"] = o.DegFreedom1
	}
	if o.DegFreedom2 == nil {
		if o.isExplicitNullDegFreedom2 {
			toSerialize["degFreedom2"] = o.DegFreedom2
		}
	} else {
		toSerialize["degFreedom2"] = o.DegFreedom2
	}
	return json.Marshal(toSerialize)
}


