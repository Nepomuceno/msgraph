/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// WorkbookFormatProtection struct for WorkbookFormatProtection
type WorkbookFormatProtection struct {
	FormulaHidden *bool `json:"formulaHidden,omitempty"`
	isExplicitNullFormulaHidden bool `json:"-"`
	Locked *bool `json:"locked,omitempty"`
	isExplicitNullLocked bool `json:"-"`
}

// GetFormulaHidden returns the FormulaHidden field if non-nil, zero value otherwise.
func (o *WorkbookFormatProtection) GetFormulaHidden() bool {
	if o == nil || o.FormulaHidden == nil {
		var ret bool
		return ret
	}
	return *o.FormulaHidden
}

// GetFormulaHiddenOk returns a tuple with the FormulaHidden field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookFormatProtection) GetFormulaHiddenOk() (bool, bool) {
	if o == nil || o.FormulaHidden == nil {
		var ret bool
		return ret, false
	}
	return *o.FormulaHidden, true
}

// HasFormulaHidden returns a boolean if a field has been set.
func (o *WorkbookFormatProtection) HasFormulaHidden() bool {
	if o != nil && o.FormulaHidden != nil {
		return true
	}

	return false
}

// SetFormulaHidden gets a reference to the given bool and assigns it to the FormulaHidden field.
func (o *WorkbookFormatProtection) SetFormulaHidden(v bool) {
	o.FormulaHidden = &v
}

// SetFormulaHiddenExplicitNull (un)sets FormulaHidden to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FormulaHidden value is set to nil even if false is passed
func (o *WorkbookFormatProtection) SetFormulaHiddenExplicitNull(b bool) {
	o.FormulaHidden = nil
	o.isExplicitNullFormulaHidden = b
}
// GetLocked returns the Locked field if non-nil, zero value otherwise.
func (o *WorkbookFormatProtection) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookFormatProtection) GetLockedOk() (bool, bool) {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret, false
	}
	return *o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *WorkbookFormatProtection) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *WorkbookFormatProtection) SetLocked(v bool) {
	o.Locked = &v
}

// SetLockedExplicitNull (un)sets Locked to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Locked value is set to nil even if false is passed
func (o *WorkbookFormatProtection) SetLockedExplicitNull(b bool) {
	o.Locked = nil
	o.isExplicitNullLocked = b
}

// MarshalJSON returns the JSON representation of the model.
func (o WorkbookFormatProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FormulaHidden == nil {
		if o.isExplicitNullFormulaHidden {
			toSerialize["formulaHidden"] = o.FormulaHidden
		}
	} else {
		toSerialize["formulaHidden"] = o.FormulaHidden
	}
	if o.Locked == nil {
		if o.isExplicitNullLocked {
			toSerialize["locked"] = o.Locked
		}
	} else {
		toSerialize["locked"] = o.Locked
	}
	return json.Marshal(toSerialize)
}


