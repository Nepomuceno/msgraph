/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// EducationRoot struct for EducationRoot
type EducationRoot struct {
	Classes *[]MicrosoftGraphEducationClass `json:"classes,omitempty"`

	Schools *[]MicrosoftGraphEducationSchool `json:"schools,omitempty"`

	Users *[]MicrosoftGraphEducationUser `json:"users,omitempty"`

	Me *AnyOfmicrosoftGraphEducationUser `json:"me,omitempty"`
	isExplicitNullMe bool `json:"-"`
}

// GetClasses returns the Classes field if non-nil, zero value otherwise.
func (o *EducationRoot) GetClasses() []MicrosoftGraphEducationClass {
	if o == nil || o.Classes == nil {
		var ret []MicrosoftGraphEducationClass
		return ret
	}
	return *o.Classes
}

// GetClassesOk returns a tuple with the Classes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationRoot) GetClassesOk() ([]MicrosoftGraphEducationClass, bool) {
	if o == nil || o.Classes == nil {
		var ret []MicrosoftGraphEducationClass
		return ret, false
	}
	return *o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *EducationRoot) HasClasses() bool {
	if o != nil && o.Classes != nil {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []MicrosoftGraphEducationClass and assigns it to the Classes field.
func (o *EducationRoot) SetClasses(v []MicrosoftGraphEducationClass) {
	o.Classes = &v
}

// GetSchools returns the Schools field if non-nil, zero value otherwise.
func (o *EducationRoot) GetSchools() []MicrosoftGraphEducationSchool {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret
	}
	return *o.Schools
}

// GetSchoolsOk returns a tuple with the Schools field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationRoot) GetSchoolsOk() ([]MicrosoftGraphEducationSchool, bool) {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret, false
	}
	return *o.Schools, true
}

// HasSchools returns a boolean if a field has been set.
func (o *EducationRoot) HasSchools() bool {
	if o != nil && o.Schools != nil {
		return true
	}

	return false
}

// SetSchools gets a reference to the given []MicrosoftGraphEducationSchool and assigns it to the Schools field.
func (o *EducationRoot) SetSchools(v []MicrosoftGraphEducationSchool) {
	o.Schools = &v
}

// GetUsers returns the Users field if non-nil, zero value otherwise.
func (o *EducationRoot) GetUsers() []MicrosoftGraphEducationUser {
	if o == nil || o.Users == nil {
		var ret []MicrosoftGraphEducationUser
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationRoot) GetUsersOk() ([]MicrosoftGraphEducationUser, bool) {
	if o == nil || o.Users == nil {
		var ret []MicrosoftGraphEducationUser
		return ret, false
	}
	return *o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *EducationRoot) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []MicrosoftGraphEducationUser and assigns it to the Users field.
func (o *EducationRoot) SetUsers(v []MicrosoftGraphEducationUser) {
	o.Users = &v
}

// GetMe returns the Me field if non-nil, zero value otherwise.
func (o *EducationRoot) GetMe() AnyOfmicrosoftGraphEducationUser {
	if o == nil || o.Me == nil {
		var ret AnyOfmicrosoftGraphEducationUser
		return ret
	}
	return *o.Me
}

// GetMeOk returns a tuple with the Me field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationRoot) GetMeOk() (AnyOfmicrosoftGraphEducationUser, bool) {
	if o == nil || o.Me == nil {
		var ret AnyOfmicrosoftGraphEducationUser
		return ret, false
	}
	return *o.Me, true
}

// HasMe returns a boolean if a field has been set.
func (o *EducationRoot) HasMe() bool {
	if o != nil && o.Me != nil {
		return true
	}

	return false
}

// SetMe gets a reference to the given AnyOfmicrosoftGraphEducationUser and assigns it to the Me field.
func (o *EducationRoot) SetMe(v AnyOfmicrosoftGraphEducationUser) {
	o.Me = &v
}

// SetMeExplicitNull (un)sets Me to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Me value is set to nil even if false is passed
func (o *EducationRoot) SetMeExplicitNull(b bool) {
	o.Me = nil
	o.isExplicitNullMe = b
}

// MarshalJSON returns the JSON representation of the model.
func (o EducationRoot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Classes != nil {
		toSerialize["classes"] = o.Classes
	}
	if o.Schools != nil {
		toSerialize["schools"] = o.Schools
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	if o.Me == nil {
		if o.isExplicitNullMe {
			toSerialize["me"] = o.Me
		}
	} else {
		toSerialize["me"] = o.Me
	}
	return json.Marshal(toSerialize)
}


