/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject857 struct for InlineObject857
type InlineObject857 struct {
	StartDate *AnyOfobject `json:"startDate,omitempty"`
	isExplicitNullStartDate bool `json:"-"`
	Months *AnyOfobject `json:"months,omitempty"`
	isExplicitNullMonths bool `json:"-"`
}

// GetStartDate returns the StartDate field if non-nil, zero value otherwise.
func (o *InlineObject857) GetStartDate() AnyOfobject {
	if o == nil || o.StartDate == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject857) GetStartDateOk() (AnyOfobject, bool) {
	if o == nil || o.StartDate == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineObject857) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given AnyOfobject and assigns it to the StartDate field.
func (o *InlineObject857) SetStartDate(v AnyOfobject) {
	o.StartDate = &v
}

// SetStartDateExplicitNull (un)sets StartDate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartDate value is set to nil even if false is passed
func (o *InlineObject857) SetStartDateExplicitNull(b bool) {
	o.StartDate = nil
	o.isExplicitNullStartDate = b
}
// GetMonths returns the Months field if non-nil, zero value otherwise.
func (o *InlineObject857) GetMonths() AnyOfobject {
	if o == nil || o.Months == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Months
}

// GetMonthsOk returns a tuple with the Months field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject857) GetMonthsOk() (AnyOfobject, bool) {
	if o == nil || o.Months == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Months, true
}

// HasMonths returns a boolean if a field has been set.
func (o *InlineObject857) HasMonths() bool {
	if o != nil && o.Months != nil {
		return true
	}

	return false
}

// SetMonths gets a reference to the given AnyOfobject and assigns it to the Months field.
func (o *InlineObject857) SetMonths(v AnyOfobject) {
	o.Months = &v
}

// SetMonthsExplicitNull (un)sets Months to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Months value is set to nil even if false is passed
func (o *InlineObject857) SetMonthsExplicitNull(b bool) {
	o.Months = nil
	o.isExplicitNullMonths = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject857) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate == nil {
		if o.isExplicitNullStartDate {
			toSerialize["startDate"] = o.StartDate
		}
	} else {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Months == nil {
		if o.isExplicitNullMonths {
			toSerialize["months"] = o.Months
		}
	} else {
		toSerialize["months"] = o.Months
	}
	return json.Marshal(toSerialize)
}


