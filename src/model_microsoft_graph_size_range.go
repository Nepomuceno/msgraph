/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphSizeRange struct for MicrosoftGraphSizeRange
type MicrosoftGraphSizeRange struct {
	MinimumSize *int32 `json:"minimumSize,omitempty"`
	isExplicitNullMinimumSize bool `json:"-"`
	MaximumSize *int32 `json:"maximumSize,omitempty"`
	isExplicitNullMaximumSize bool `json:"-"`
}

// GetMinimumSize returns the MinimumSize field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSizeRange) GetMinimumSize() int32 {
	if o == nil || o.MinimumSize == nil {
		var ret int32
		return ret
	}
	return *o.MinimumSize
}

// GetMinimumSizeOk returns a tuple with the MinimumSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSizeRange) GetMinimumSizeOk() (int32, bool) {
	if o == nil || o.MinimumSize == nil {
		var ret int32
		return ret, false
	}
	return *o.MinimumSize, true
}

// HasMinimumSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSizeRange) HasMinimumSize() bool {
	if o != nil && o.MinimumSize != nil {
		return true
	}

	return false
}

// SetMinimumSize gets a reference to the given int32 and assigns it to the MinimumSize field.
func (o *MicrosoftGraphSizeRange) SetMinimumSize(v int32) {
	o.MinimumSize = &v
}

// SetMinimumSizeExplicitNull (un)sets MinimumSize to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumSize value is set to nil even if false is passed
func (o *MicrosoftGraphSizeRange) SetMinimumSizeExplicitNull(b bool) {
	o.MinimumSize = nil
	o.isExplicitNullMinimumSize = b
}
// GetMaximumSize returns the MaximumSize field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSizeRange) GetMaximumSize() int32 {
	if o == nil || o.MaximumSize == nil {
		var ret int32
		return ret
	}
	return *o.MaximumSize
}

// GetMaximumSizeOk returns a tuple with the MaximumSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSizeRange) GetMaximumSizeOk() (int32, bool) {
	if o == nil || o.MaximumSize == nil {
		var ret int32
		return ret, false
	}
	return *o.MaximumSize, true
}

// HasMaximumSize returns a boolean if a field has been set.
func (o *MicrosoftGraphSizeRange) HasMaximumSize() bool {
	if o != nil && o.MaximumSize != nil {
		return true
	}

	return false
}

// SetMaximumSize gets a reference to the given int32 and assigns it to the MaximumSize field.
func (o *MicrosoftGraphSizeRange) SetMaximumSize(v int32) {
	o.MaximumSize = &v
}

// SetMaximumSizeExplicitNull (un)sets MaximumSize to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MaximumSize value is set to nil even if false is passed
func (o *MicrosoftGraphSizeRange) SetMaximumSizeExplicitNull(b bool) {
	o.MaximumSize = nil
	o.isExplicitNullMaximumSize = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphSizeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MinimumSize == nil {
		if o.isExplicitNullMinimumSize {
			toSerialize["minimumSize"] = o.MinimumSize
		}
	} else {
		toSerialize["minimumSize"] = o.MinimumSize
	}
	if o.MaximumSize == nil {
		if o.isExplicitNullMaximumSize {
			toSerialize["maximumSize"] = o.MaximumSize
		}
	} else {
		toSerialize["maximumSize"] = o.MaximumSize
	}
	return json.Marshal(toSerialize)
}


