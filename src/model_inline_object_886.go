/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject886 struct for InlineObject886
type InlineObject886 struct {
	Probability *AnyOfobject `json:"probability,omitempty"`
	isExplicitNullProbability bool `json:"-"`
	Alpha *AnyOfobject `json:"alpha,omitempty"`
	isExplicitNullAlpha bool `json:"-"`
	Beta *AnyOfobject `json:"beta,omitempty"`
	isExplicitNullBeta bool `json:"-"`
}

// GetProbability returns the Probability field if non-nil, zero value otherwise.
func (o *InlineObject886) GetProbability() AnyOfobject {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject886) GetProbabilityOk() (AnyOfobject, bool) {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *InlineObject886) HasProbability() bool {
	if o != nil && o.Probability != nil {
		return true
	}

	return false
}

// SetProbability gets a reference to the given AnyOfobject and assigns it to the Probability field.
func (o *InlineObject886) SetProbability(v AnyOfobject) {
	o.Probability = &v
}

// SetProbabilityExplicitNull (un)sets Probability to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Probability value is set to nil even if false is passed
func (o *InlineObject886) SetProbabilityExplicitNull(b bool) {
	o.Probability = nil
	o.isExplicitNullProbability = b
}
// GetAlpha returns the Alpha field if non-nil, zero value otherwise.
func (o *InlineObject886) GetAlpha() AnyOfobject {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject886) GetAlphaOk() (AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject886) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject886) SetAlpha(v AnyOfobject) {
	o.Alpha = &v
}

// SetAlphaExplicitNull (un)sets Alpha to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Alpha value is set to nil even if false is passed
func (o *InlineObject886) SetAlphaExplicitNull(b bool) {
	o.Alpha = nil
	o.isExplicitNullAlpha = b
}
// GetBeta returns the Beta field if non-nil, zero value otherwise.
func (o *InlineObject886) GetBeta() AnyOfobject {
	if o == nil || o.Beta == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Beta
}

// GetBetaOk returns a tuple with the Beta field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject886) GetBetaOk() (AnyOfobject, bool) {
	if o == nil || o.Beta == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *InlineObject886) HasBeta() bool {
	if o != nil && o.Beta != nil {
		return true
	}

	return false
}

// SetBeta gets a reference to the given AnyOfobject and assigns it to the Beta field.
func (o *InlineObject886) SetBeta(v AnyOfobject) {
	o.Beta = &v
}

// SetBetaExplicitNull (un)sets Beta to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Beta value is set to nil even if false is passed
func (o *InlineObject886) SetBetaExplicitNull(b bool) {
	o.Beta = nil
	o.isExplicitNullBeta = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject886) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Probability == nil {
		if o.isExplicitNullProbability {
			toSerialize["probability"] = o.Probability
		}
	} else {
		toSerialize["probability"] = o.Probability
	}
	if o.Alpha == nil {
		if o.isExplicitNullAlpha {
			toSerialize["alpha"] = o.Alpha
		}
	} else {
		toSerialize["alpha"] = o.Alpha
	}
	if o.Beta == nil {
		if o.isExplicitNullBeta {
			toSerialize["beta"] = o.Beta
		}
	} else {
		toSerialize["beta"] = o.Beta
	}
	return json.Marshal(toSerialize)
}


