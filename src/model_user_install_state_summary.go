/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// UserInstallStateSummary Contains properties for the installation state summary for a user.
type UserInstallStateSummary struct {
	// User name.
	UserName *string `json:"userName,omitempty"`
	isExplicitNullUserName bool `json:"-"`
	// Installed Device Count.
	InstalledDeviceCount *int32 `json:"installedDeviceCount,omitempty"`

	// Failed Device Count.
	FailedDeviceCount *int32 `json:"failedDeviceCount,omitempty"`

	// Not installed device count.
	NotInstalledDeviceCount *int32 `json:"notInstalledDeviceCount,omitempty"`

	DeviceStates *[]MicrosoftGraphDeviceInstallState `json:"deviceStates,omitempty"`

}

// GetUserName returns the UserName field if non-nil, zero value otherwise.
func (o *UserInstallStateSummary) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserInstallStateSummary) GetUserNameOk() (string, bool) {
	if o == nil || o.UserName == nil {
		var ret string
		return ret, false
	}
	return *o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *UserInstallStateSummary) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *UserInstallStateSummary) SetUserName(v string) {
	o.UserName = &v
}

// SetUserNameExplicitNull (un)sets UserName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserName value is set to nil even if false is passed
func (o *UserInstallStateSummary) SetUserNameExplicitNull(b bool) {
	o.UserName = nil
	o.isExplicitNullUserName = b
}
// GetInstalledDeviceCount returns the InstalledDeviceCount field if non-nil, zero value otherwise.
func (o *UserInstallStateSummary) GetInstalledDeviceCount() int32 {
	if o == nil || o.InstalledDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.InstalledDeviceCount
}

// GetInstalledDeviceCountOk returns a tuple with the InstalledDeviceCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserInstallStateSummary) GetInstalledDeviceCountOk() (int32, bool) {
	if o == nil || o.InstalledDeviceCount == nil {
		var ret int32
		return ret, false
	}
	return *o.InstalledDeviceCount, true
}

// HasInstalledDeviceCount returns a boolean if a field has been set.
func (o *UserInstallStateSummary) HasInstalledDeviceCount() bool {
	if o != nil && o.InstalledDeviceCount != nil {
		return true
	}

	return false
}

// SetInstalledDeviceCount gets a reference to the given int32 and assigns it to the InstalledDeviceCount field.
func (o *UserInstallStateSummary) SetInstalledDeviceCount(v int32) {
	o.InstalledDeviceCount = &v
}

// GetFailedDeviceCount returns the FailedDeviceCount field if non-nil, zero value otherwise.
func (o *UserInstallStateSummary) GetFailedDeviceCount() int32 {
	if o == nil || o.FailedDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.FailedDeviceCount
}

// GetFailedDeviceCountOk returns a tuple with the FailedDeviceCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserInstallStateSummary) GetFailedDeviceCountOk() (int32, bool) {
	if o == nil || o.FailedDeviceCount == nil {
		var ret int32
		return ret, false
	}
	return *o.FailedDeviceCount, true
}

// HasFailedDeviceCount returns a boolean if a field has been set.
func (o *UserInstallStateSummary) HasFailedDeviceCount() bool {
	if o != nil && o.FailedDeviceCount != nil {
		return true
	}

	return false
}

// SetFailedDeviceCount gets a reference to the given int32 and assigns it to the FailedDeviceCount field.
func (o *UserInstallStateSummary) SetFailedDeviceCount(v int32) {
	o.FailedDeviceCount = &v
}

// GetNotInstalledDeviceCount returns the NotInstalledDeviceCount field if non-nil, zero value otherwise.
func (o *UserInstallStateSummary) GetNotInstalledDeviceCount() int32 {
	if o == nil || o.NotInstalledDeviceCount == nil {
		var ret int32
		return ret
	}
	return *o.NotInstalledDeviceCount
}

// GetNotInstalledDeviceCountOk returns a tuple with the NotInstalledDeviceCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserInstallStateSummary) GetNotInstalledDeviceCountOk() (int32, bool) {
	if o == nil || o.NotInstalledDeviceCount == nil {
		var ret int32
		return ret, false
	}
	return *o.NotInstalledDeviceCount, true
}

// HasNotInstalledDeviceCount returns a boolean if a field has been set.
func (o *UserInstallStateSummary) HasNotInstalledDeviceCount() bool {
	if o != nil && o.NotInstalledDeviceCount != nil {
		return true
	}

	return false
}

// SetNotInstalledDeviceCount gets a reference to the given int32 and assigns it to the NotInstalledDeviceCount field.
func (o *UserInstallStateSummary) SetNotInstalledDeviceCount(v int32) {
	o.NotInstalledDeviceCount = &v
}

// GetDeviceStates returns the DeviceStates field if non-nil, zero value otherwise.
func (o *UserInstallStateSummary) GetDeviceStates() []MicrosoftGraphDeviceInstallState {
	if o == nil || o.DeviceStates == nil {
		var ret []MicrosoftGraphDeviceInstallState
		return ret
	}
	return *o.DeviceStates
}

// GetDeviceStatesOk returns a tuple with the DeviceStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserInstallStateSummary) GetDeviceStatesOk() ([]MicrosoftGraphDeviceInstallState, bool) {
	if o == nil || o.DeviceStates == nil {
		var ret []MicrosoftGraphDeviceInstallState
		return ret, false
	}
	return *o.DeviceStates, true
}

// HasDeviceStates returns a boolean if a field has been set.
func (o *UserInstallStateSummary) HasDeviceStates() bool {
	if o != nil && o.DeviceStates != nil {
		return true
	}

	return false
}

// SetDeviceStates gets a reference to the given []MicrosoftGraphDeviceInstallState and assigns it to the DeviceStates field.
func (o *UserInstallStateSummary) SetDeviceStates(v []MicrosoftGraphDeviceInstallState) {
	o.DeviceStates = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o UserInstallStateSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserName == nil {
		if o.isExplicitNullUserName {
			toSerialize["userName"] = o.UserName
		}
	} else {
		toSerialize["userName"] = o.UserName
	}
	if o.InstalledDeviceCount != nil {
		toSerialize["installedDeviceCount"] = o.InstalledDeviceCount
	}
	if o.FailedDeviceCount != nil {
		toSerialize["failedDeviceCount"] = o.FailedDeviceCount
	}
	if o.NotInstalledDeviceCount != nil {
		toSerialize["notInstalledDeviceCount"] = o.NotInstalledDeviceCount
	}
	if o.DeviceStates != nil {
		toSerialize["deviceStates"] = o.DeviceStates
	}
	return json.Marshal(toSerialize)
}


