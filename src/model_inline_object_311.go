/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject311 struct for InlineObject311
type InlineObject311 struct {
	CurrentPassword *string `json:"currentPassword,omitempty"`
	isExplicitNullCurrentPassword bool `json:"-"`
	NewPassword *string `json:"newPassword,omitempty"`
	isExplicitNullNewPassword bool `json:"-"`
}

// GetCurrentPassword returns the CurrentPassword field if non-nil, zero value otherwise.
func (o *InlineObject311) GetCurrentPassword() string {
	if o == nil || o.CurrentPassword == nil {
		var ret string
		return ret
	}
	return *o.CurrentPassword
}

// GetCurrentPasswordOk returns a tuple with the CurrentPassword field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject311) GetCurrentPasswordOk() (string, bool) {
	if o == nil || o.CurrentPassword == nil {
		var ret string
		return ret, false
	}
	return *o.CurrentPassword, true
}

// HasCurrentPassword returns a boolean if a field has been set.
func (o *InlineObject311) HasCurrentPassword() bool {
	if o != nil && o.CurrentPassword != nil {
		return true
	}

	return false
}

// SetCurrentPassword gets a reference to the given string and assigns it to the CurrentPassword field.
func (o *InlineObject311) SetCurrentPassword(v string) {
	o.CurrentPassword = &v
}

// SetCurrentPasswordExplicitNull (un)sets CurrentPassword to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CurrentPassword value is set to nil even if false is passed
func (o *InlineObject311) SetCurrentPasswordExplicitNull(b bool) {
	o.CurrentPassword = nil
	o.isExplicitNullCurrentPassword = b
}
// GetNewPassword returns the NewPassword field if non-nil, zero value otherwise.
func (o *InlineObject311) GetNewPassword() string {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject311) GetNewPasswordOk() (string, bool) {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret, false
	}
	return *o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *InlineObject311) HasNewPassword() bool {
	if o != nil && o.NewPassword != nil {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *InlineObject311) SetNewPassword(v string) {
	o.NewPassword = &v
}

// SetNewPasswordExplicitNull (un)sets NewPassword to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NewPassword value is set to nil even if false is passed
func (o *InlineObject311) SetNewPasswordExplicitNull(b bool) {
	o.NewPassword = nil
	o.isExplicitNullNewPassword = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject311) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentPassword == nil {
		if o.isExplicitNullCurrentPassword {
			toSerialize["currentPassword"] = o.CurrentPassword
		}
	} else {
		toSerialize["currentPassword"] = o.CurrentPassword
	}
	if o.NewPassword == nil {
		if o.isExplicitNullNewPassword {
			toSerialize["newPassword"] = o.NewPassword
		}
	} else {
		toSerialize["newPassword"] = o.NewPassword
	}
	return json.Marshal(toSerialize)
}


