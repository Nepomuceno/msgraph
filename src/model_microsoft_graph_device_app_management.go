/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphDeviceAppManagement struct for MicrosoftGraphDeviceAppManagement
type MicrosoftGraphDeviceAppManagement struct {
	Id *string `json:"id,omitempty"`

	// The last time the apps from the Microsoft Store for Business were synced successfully for the account.
	MicrosoftStoreForBusinessLastSuccessfulSyncDateTime *time.Time `json:"microsoftStoreForBusinessLastSuccessfulSyncDateTime,omitempty"`

	// Whether the account is enabled for syncing applications from the Microsoft Store for Business.
	IsEnabledForMicrosoftStoreForBusiness *bool `json:"isEnabledForMicrosoftStoreForBusiness,omitempty"`

	// The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is <languagecode2>-<country/regioncode2>, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.
	MicrosoftStoreForBusinessLanguage *string `json:"microsoftStoreForBusinessLanguage,omitempty"`
	isExplicitNullMicrosoftStoreForBusinessLanguage bool `json:"-"`
	// The last time an application sync from the Microsoft Store for Business was completed.
	MicrosoftStoreForBusinessLastCompletedApplicationSyncTime *time.Time `json:"microsoftStoreForBusinessLastCompletedApplicationSyncTime,omitempty"`

	ManagedEBooks *[]MicrosoftGraphManagedEBook `json:"managedEBooks,omitempty"`

	MobileApps *[]MicrosoftGraphMobileApp `json:"mobileApps,omitempty"`

	MobileAppCategories *[]MicrosoftGraphMobileAppCategory `json:"mobileAppCategories,omitempty"`

	MobileAppConfigurations *[]MicrosoftGraphManagedDeviceMobileAppConfiguration `json:"mobileAppConfigurations,omitempty"`

	VppTokens *[]MicrosoftGraphVppToken `json:"vppTokens,omitempty"`

	ManagedAppPolicies *[]MicrosoftGraphManagedAppPolicy `json:"managedAppPolicies,omitempty"`

	IosManagedAppProtections *[]MicrosoftGraphIosManagedAppProtection `json:"iosManagedAppProtections,omitempty"`

	AndroidManagedAppProtections *[]MicrosoftGraphAndroidManagedAppProtection `json:"androidManagedAppProtections,omitempty"`

	DefaultManagedAppProtections *[]MicrosoftGraphDefaultManagedAppProtection `json:"defaultManagedAppProtections,omitempty"`

	TargetedManagedAppConfigurations *[]MicrosoftGraphTargetedManagedAppConfiguration `json:"targetedManagedAppConfigurations,omitempty"`

	MdmWindowsInformationProtectionPolicies *[]MicrosoftGraphMdmWindowsInformationProtectionPolicy `json:"mdmWindowsInformationProtectionPolicies,omitempty"`

	WindowsInformationProtectionPolicies *[]MicrosoftGraphWindowsInformationProtectionPolicy `json:"windowsInformationProtectionPolicies,omitempty"`

	ManagedAppRegistrations *[]MicrosoftGraphManagedAppRegistration `json:"managedAppRegistrations,omitempty"`

	ManagedAppStatuses *[]MicrosoftGraphManagedAppStatus `json:"managedAppStatuses,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceAppManagement) SetId(v string) {
	o.Id = &v
}

// GetMicrosoftStoreForBusinessLastSuccessfulSyncDateTime returns the MicrosoftStoreForBusinessLastSuccessfulSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLastSuccessfulSyncDateTime() time.Time {
	if o == nil || o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime
}

// GetMicrosoftStoreForBusinessLastSuccessfulSyncDateTimeOk returns a tuple with the MicrosoftStoreForBusinessLastSuccessfulSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLastSuccessfulSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime, true
}

// HasMicrosoftStoreForBusinessLastSuccessfulSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMicrosoftStoreForBusinessLastSuccessfulSyncDateTime() bool {
	if o != nil && o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime != nil {
		return true
	}

	return false
}

// SetMicrosoftStoreForBusinessLastSuccessfulSyncDateTime gets a reference to the given time.Time and assigns it to the MicrosoftStoreForBusinessLastSuccessfulSyncDateTime field.
func (o *MicrosoftGraphDeviceAppManagement) SetMicrosoftStoreForBusinessLastSuccessfulSyncDateTime(v time.Time) {
	o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime = &v
}

// GetIsEnabledForMicrosoftStoreForBusiness returns the IsEnabledForMicrosoftStoreForBusiness field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetIsEnabledForMicrosoftStoreForBusiness() bool {
	if o == nil || o.IsEnabledForMicrosoftStoreForBusiness == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabledForMicrosoftStoreForBusiness
}

// GetIsEnabledForMicrosoftStoreForBusinessOk returns a tuple with the IsEnabledForMicrosoftStoreForBusiness field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetIsEnabledForMicrosoftStoreForBusinessOk() (bool, bool) {
	if o == nil || o.IsEnabledForMicrosoftStoreForBusiness == nil {
		var ret bool
		return ret, false
	}
	return *o.IsEnabledForMicrosoftStoreForBusiness, true
}

// HasIsEnabledForMicrosoftStoreForBusiness returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasIsEnabledForMicrosoftStoreForBusiness() bool {
	if o != nil && o.IsEnabledForMicrosoftStoreForBusiness != nil {
		return true
	}

	return false
}

// SetIsEnabledForMicrosoftStoreForBusiness gets a reference to the given bool and assigns it to the IsEnabledForMicrosoftStoreForBusiness field.
func (o *MicrosoftGraphDeviceAppManagement) SetIsEnabledForMicrosoftStoreForBusiness(v bool) {
	o.IsEnabledForMicrosoftStoreForBusiness = &v
}

// GetMicrosoftStoreForBusinessLanguage returns the MicrosoftStoreForBusinessLanguage field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLanguage() string {
	if o == nil || o.MicrosoftStoreForBusinessLanguage == nil {
		var ret string
		return ret
	}
	return *o.MicrosoftStoreForBusinessLanguage
}

// GetMicrosoftStoreForBusinessLanguageOk returns a tuple with the MicrosoftStoreForBusinessLanguage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLanguageOk() (string, bool) {
	if o == nil || o.MicrosoftStoreForBusinessLanguage == nil {
		var ret string
		return ret, false
	}
	return *o.MicrosoftStoreForBusinessLanguage, true
}

// HasMicrosoftStoreForBusinessLanguage returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMicrosoftStoreForBusinessLanguage() bool {
	if o != nil && o.MicrosoftStoreForBusinessLanguage != nil {
		return true
	}

	return false
}

// SetMicrosoftStoreForBusinessLanguage gets a reference to the given string and assigns it to the MicrosoftStoreForBusinessLanguage field.
func (o *MicrosoftGraphDeviceAppManagement) SetMicrosoftStoreForBusinessLanguage(v string) {
	o.MicrosoftStoreForBusinessLanguage = &v
}

// SetMicrosoftStoreForBusinessLanguageExplicitNull (un)sets MicrosoftStoreForBusinessLanguage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MicrosoftStoreForBusinessLanguage value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceAppManagement) SetMicrosoftStoreForBusinessLanguageExplicitNull(b bool) {
	o.MicrosoftStoreForBusinessLanguage = nil
	o.isExplicitNullMicrosoftStoreForBusinessLanguage = b
}
// GetMicrosoftStoreForBusinessLastCompletedApplicationSyncTime returns the MicrosoftStoreForBusinessLastCompletedApplicationSyncTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLastCompletedApplicationSyncTime() time.Time {
	if o == nil || o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime == nil {
		var ret time.Time
		return ret
	}
	return *o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime
}

// GetMicrosoftStoreForBusinessLastCompletedApplicationSyncTimeOk returns a tuple with the MicrosoftStoreForBusinessLastCompletedApplicationSyncTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMicrosoftStoreForBusinessLastCompletedApplicationSyncTimeOk() (time.Time, bool) {
	if o == nil || o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime, true
}

// HasMicrosoftStoreForBusinessLastCompletedApplicationSyncTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMicrosoftStoreForBusinessLastCompletedApplicationSyncTime() bool {
	if o != nil && o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime != nil {
		return true
	}

	return false
}

// SetMicrosoftStoreForBusinessLastCompletedApplicationSyncTime gets a reference to the given time.Time and assigns it to the MicrosoftStoreForBusinessLastCompletedApplicationSyncTime field.
func (o *MicrosoftGraphDeviceAppManagement) SetMicrosoftStoreForBusinessLastCompletedApplicationSyncTime(v time.Time) {
	o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime = &v
}

// GetManagedEBooks returns the ManagedEBooks field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedEBooks() []MicrosoftGraphManagedEBook {
	if o == nil || o.ManagedEBooks == nil {
		var ret []MicrosoftGraphManagedEBook
		return ret
	}
	return *o.ManagedEBooks
}

// GetManagedEBooksOk returns a tuple with the ManagedEBooks field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedEBooksOk() ([]MicrosoftGraphManagedEBook, bool) {
	if o == nil || o.ManagedEBooks == nil {
		var ret []MicrosoftGraphManagedEBook
		return ret, false
	}
	return *o.ManagedEBooks, true
}

// HasManagedEBooks returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasManagedEBooks() bool {
	if o != nil && o.ManagedEBooks != nil {
		return true
	}

	return false
}

// SetManagedEBooks gets a reference to the given []MicrosoftGraphManagedEBook and assigns it to the ManagedEBooks field.
func (o *MicrosoftGraphDeviceAppManagement) SetManagedEBooks(v []MicrosoftGraphManagedEBook) {
	o.ManagedEBooks = &v
}

// GetMobileApps returns the MobileApps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileApps() []MicrosoftGraphMobileApp {
	if o == nil || o.MobileApps == nil {
		var ret []MicrosoftGraphMobileApp
		return ret
	}
	return *o.MobileApps
}

// GetMobileAppsOk returns a tuple with the MobileApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileAppsOk() ([]MicrosoftGraphMobileApp, bool) {
	if o == nil || o.MobileApps == nil {
		var ret []MicrosoftGraphMobileApp
		return ret, false
	}
	return *o.MobileApps, true
}

// HasMobileApps returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMobileApps() bool {
	if o != nil && o.MobileApps != nil {
		return true
	}

	return false
}

// SetMobileApps gets a reference to the given []MicrosoftGraphMobileApp and assigns it to the MobileApps field.
func (o *MicrosoftGraphDeviceAppManagement) SetMobileApps(v []MicrosoftGraphMobileApp) {
	o.MobileApps = &v
}

// GetMobileAppCategories returns the MobileAppCategories field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileAppCategories() []MicrosoftGraphMobileAppCategory {
	if o == nil || o.MobileAppCategories == nil {
		var ret []MicrosoftGraphMobileAppCategory
		return ret
	}
	return *o.MobileAppCategories
}

// GetMobileAppCategoriesOk returns a tuple with the MobileAppCategories field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileAppCategoriesOk() ([]MicrosoftGraphMobileAppCategory, bool) {
	if o == nil || o.MobileAppCategories == nil {
		var ret []MicrosoftGraphMobileAppCategory
		return ret, false
	}
	return *o.MobileAppCategories, true
}

// HasMobileAppCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMobileAppCategories() bool {
	if o != nil && o.MobileAppCategories != nil {
		return true
	}

	return false
}

// SetMobileAppCategories gets a reference to the given []MicrosoftGraphMobileAppCategory and assigns it to the MobileAppCategories field.
func (o *MicrosoftGraphDeviceAppManagement) SetMobileAppCategories(v []MicrosoftGraphMobileAppCategory) {
	o.MobileAppCategories = &v
}

// GetMobileAppConfigurations returns the MobileAppConfigurations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileAppConfigurations() []MicrosoftGraphManagedDeviceMobileAppConfiguration {
	if o == nil || o.MobileAppConfigurations == nil {
		var ret []MicrosoftGraphManagedDeviceMobileAppConfiguration
		return ret
	}
	return *o.MobileAppConfigurations
}

// GetMobileAppConfigurationsOk returns a tuple with the MobileAppConfigurations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMobileAppConfigurationsOk() ([]MicrosoftGraphManagedDeviceMobileAppConfiguration, bool) {
	if o == nil || o.MobileAppConfigurations == nil {
		var ret []MicrosoftGraphManagedDeviceMobileAppConfiguration
		return ret, false
	}
	return *o.MobileAppConfigurations, true
}

// HasMobileAppConfigurations returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMobileAppConfigurations() bool {
	if o != nil && o.MobileAppConfigurations != nil {
		return true
	}

	return false
}

// SetMobileAppConfigurations gets a reference to the given []MicrosoftGraphManagedDeviceMobileAppConfiguration and assigns it to the MobileAppConfigurations field.
func (o *MicrosoftGraphDeviceAppManagement) SetMobileAppConfigurations(v []MicrosoftGraphManagedDeviceMobileAppConfiguration) {
	o.MobileAppConfigurations = &v
}

// GetVppTokens returns the VppTokens field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetVppTokens() []MicrosoftGraphVppToken {
	if o == nil || o.VppTokens == nil {
		var ret []MicrosoftGraphVppToken
		return ret
	}
	return *o.VppTokens
}

// GetVppTokensOk returns a tuple with the VppTokens field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetVppTokensOk() ([]MicrosoftGraphVppToken, bool) {
	if o == nil || o.VppTokens == nil {
		var ret []MicrosoftGraphVppToken
		return ret, false
	}
	return *o.VppTokens, true
}

// HasVppTokens returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasVppTokens() bool {
	if o != nil && o.VppTokens != nil {
		return true
	}

	return false
}

// SetVppTokens gets a reference to the given []MicrosoftGraphVppToken and assigns it to the VppTokens field.
func (o *MicrosoftGraphDeviceAppManagement) SetVppTokens(v []MicrosoftGraphVppToken) {
	o.VppTokens = &v
}

// GetManagedAppPolicies returns the ManagedAppPolicies field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppPolicies() []MicrosoftGraphManagedAppPolicy {
	if o == nil || o.ManagedAppPolicies == nil {
		var ret []MicrosoftGraphManagedAppPolicy
		return ret
	}
	return *o.ManagedAppPolicies
}

// GetManagedAppPoliciesOk returns a tuple with the ManagedAppPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppPoliciesOk() ([]MicrosoftGraphManagedAppPolicy, bool) {
	if o == nil || o.ManagedAppPolicies == nil {
		var ret []MicrosoftGraphManagedAppPolicy
		return ret, false
	}
	return *o.ManagedAppPolicies, true
}

// HasManagedAppPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasManagedAppPolicies() bool {
	if o != nil && o.ManagedAppPolicies != nil {
		return true
	}

	return false
}

// SetManagedAppPolicies gets a reference to the given []MicrosoftGraphManagedAppPolicy and assigns it to the ManagedAppPolicies field.
func (o *MicrosoftGraphDeviceAppManagement) SetManagedAppPolicies(v []MicrosoftGraphManagedAppPolicy) {
	o.ManagedAppPolicies = &v
}

// GetIosManagedAppProtections returns the IosManagedAppProtections field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetIosManagedAppProtections() []MicrosoftGraphIosManagedAppProtection {
	if o == nil || o.IosManagedAppProtections == nil {
		var ret []MicrosoftGraphIosManagedAppProtection
		return ret
	}
	return *o.IosManagedAppProtections
}

// GetIosManagedAppProtectionsOk returns a tuple with the IosManagedAppProtections field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetIosManagedAppProtectionsOk() ([]MicrosoftGraphIosManagedAppProtection, bool) {
	if o == nil || o.IosManagedAppProtections == nil {
		var ret []MicrosoftGraphIosManagedAppProtection
		return ret, false
	}
	return *o.IosManagedAppProtections, true
}

// HasIosManagedAppProtections returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasIosManagedAppProtections() bool {
	if o != nil && o.IosManagedAppProtections != nil {
		return true
	}

	return false
}

// SetIosManagedAppProtections gets a reference to the given []MicrosoftGraphIosManagedAppProtection and assigns it to the IosManagedAppProtections field.
func (o *MicrosoftGraphDeviceAppManagement) SetIosManagedAppProtections(v []MicrosoftGraphIosManagedAppProtection) {
	o.IosManagedAppProtections = &v
}

// GetAndroidManagedAppProtections returns the AndroidManagedAppProtections field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetAndroidManagedAppProtections() []MicrosoftGraphAndroidManagedAppProtection {
	if o == nil || o.AndroidManagedAppProtections == nil {
		var ret []MicrosoftGraphAndroidManagedAppProtection
		return ret
	}
	return *o.AndroidManagedAppProtections
}

// GetAndroidManagedAppProtectionsOk returns a tuple with the AndroidManagedAppProtections field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetAndroidManagedAppProtectionsOk() ([]MicrosoftGraphAndroidManagedAppProtection, bool) {
	if o == nil || o.AndroidManagedAppProtections == nil {
		var ret []MicrosoftGraphAndroidManagedAppProtection
		return ret, false
	}
	return *o.AndroidManagedAppProtections, true
}

// HasAndroidManagedAppProtections returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasAndroidManagedAppProtections() bool {
	if o != nil && o.AndroidManagedAppProtections != nil {
		return true
	}

	return false
}

// SetAndroidManagedAppProtections gets a reference to the given []MicrosoftGraphAndroidManagedAppProtection and assigns it to the AndroidManagedAppProtections field.
func (o *MicrosoftGraphDeviceAppManagement) SetAndroidManagedAppProtections(v []MicrosoftGraphAndroidManagedAppProtection) {
	o.AndroidManagedAppProtections = &v
}

// GetDefaultManagedAppProtections returns the DefaultManagedAppProtections field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetDefaultManagedAppProtections() []MicrosoftGraphDefaultManagedAppProtection {
	if o == nil || o.DefaultManagedAppProtections == nil {
		var ret []MicrosoftGraphDefaultManagedAppProtection
		return ret
	}
	return *o.DefaultManagedAppProtections
}

// GetDefaultManagedAppProtectionsOk returns a tuple with the DefaultManagedAppProtections field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetDefaultManagedAppProtectionsOk() ([]MicrosoftGraphDefaultManagedAppProtection, bool) {
	if o == nil || o.DefaultManagedAppProtections == nil {
		var ret []MicrosoftGraphDefaultManagedAppProtection
		return ret, false
	}
	return *o.DefaultManagedAppProtections, true
}

// HasDefaultManagedAppProtections returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasDefaultManagedAppProtections() bool {
	if o != nil && o.DefaultManagedAppProtections != nil {
		return true
	}

	return false
}

// SetDefaultManagedAppProtections gets a reference to the given []MicrosoftGraphDefaultManagedAppProtection and assigns it to the DefaultManagedAppProtections field.
func (o *MicrosoftGraphDeviceAppManagement) SetDefaultManagedAppProtections(v []MicrosoftGraphDefaultManagedAppProtection) {
	o.DefaultManagedAppProtections = &v
}

// GetTargetedManagedAppConfigurations returns the TargetedManagedAppConfigurations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetTargetedManagedAppConfigurations() []MicrosoftGraphTargetedManagedAppConfiguration {
	if o == nil || o.TargetedManagedAppConfigurations == nil {
		var ret []MicrosoftGraphTargetedManagedAppConfiguration
		return ret
	}
	return *o.TargetedManagedAppConfigurations
}

// GetTargetedManagedAppConfigurationsOk returns a tuple with the TargetedManagedAppConfigurations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetTargetedManagedAppConfigurationsOk() ([]MicrosoftGraphTargetedManagedAppConfiguration, bool) {
	if o == nil || o.TargetedManagedAppConfigurations == nil {
		var ret []MicrosoftGraphTargetedManagedAppConfiguration
		return ret, false
	}
	return *o.TargetedManagedAppConfigurations, true
}

// HasTargetedManagedAppConfigurations returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasTargetedManagedAppConfigurations() bool {
	if o != nil && o.TargetedManagedAppConfigurations != nil {
		return true
	}

	return false
}

// SetTargetedManagedAppConfigurations gets a reference to the given []MicrosoftGraphTargetedManagedAppConfiguration and assigns it to the TargetedManagedAppConfigurations field.
func (o *MicrosoftGraphDeviceAppManagement) SetTargetedManagedAppConfigurations(v []MicrosoftGraphTargetedManagedAppConfiguration) {
	o.TargetedManagedAppConfigurations = &v
}

// GetMdmWindowsInformationProtectionPolicies returns the MdmWindowsInformationProtectionPolicies field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetMdmWindowsInformationProtectionPolicies() []MicrosoftGraphMdmWindowsInformationProtectionPolicy {
	if o == nil || o.MdmWindowsInformationProtectionPolicies == nil {
		var ret []MicrosoftGraphMdmWindowsInformationProtectionPolicy
		return ret
	}
	return *o.MdmWindowsInformationProtectionPolicies
}

// GetMdmWindowsInformationProtectionPoliciesOk returns a tuple with the MdmWindowsInformationProtectionPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetMdmWindowsInformationProtectionPoliciesOk() ([]MicrosoftGraphMdmWindowsInformationProtectionPolicy, bool) {
	if o == nil || o.MdmWindowsInformationProtectionPolicies == nil {
		var ret []MicrosoftGraphMdmWindowsInformationProtectionPolicy
		return ret, false
	}
	return *o.MdmWindowsInformationProtectionPolicies, true
}

// HasMdmWindowsInformationProtectionPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasMdmWindowsInformationProtectionPolicies() bool {
	if o != nil && o.MdmWindowsInformationProtectionPolicies != nil {
		return true
	}

	return false
}

// SetMdmWindowsInformationProtectionPolicies gets a reference to the given []MicrosoftGraphMdmWindowsInformationProtectionPolicy and assigns it to the MdmWindowsInformationProtectionPolicies field.
func (o *MicrosoftGraphDeviceAppManagement) SetMdmWindowsInformationProtectionPolicies(v []MicrosoftGraphMdmWindowsInformationProtectionPolicy) {
	o.MdmWindowsInformationProtectionPolicies = &v
}

// GetWindowsInformationProtectionPolicies returns the WindowsInformationProtectionPolicies field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetWindowsInformationProtectionPolicies() []MicrosoftGraphWindowsInformationProtectionPolicy {
	if o == nil || o.WindowsInformationProtectionPolicies == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionPolicy
		return ret
	}
	return *o.WindowsInformationProtectionPolicies
}

// GetWindowsInformationProtectionPoliciesOk returns a tuple with the WindowsInformationProtectionPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetWindowsInformationProtectionPoliciesOk() ([]MicrosoftGraphWindowsInformationProtectionPolicy, bool) {
	if o == nil || o.WindowsInformationProtectionPolicies == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionPolicy
		return ret, false
	}
	return *o.WindowsInformationProtectionPolicies, true
}

// HasWindowsInformationProtectionPolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasWindowsInformationProtectionPolicies() bool {
	if o != nil && o.WindowsInformationProtectionPolicies != nil {
		return true
	}

	return false
}

// SetWindowsInformationProtectionPolicies gets a reference to the given []MicrosoftGraphWindowsInformationProtectionPolicy and assigns it to the WindowsInformationProtectionPolicies field.
func (o *MicrosoftGraphDeviceAppManagement) SetWindowsInformationProtectionPolicies(v []MicrosoftGraphWindowsInformationProtectionPolicy) {
	o.WindowsInformationProtectionPolicies = &v
}

// GetManagedAppRegistrations returns the ManagedAppRegistrations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppRegistrations() []MicrosoftGraphManagedAppRegistration {
	if o == nil || o.ManagedAppRegistrations == nil {
		var ret []MicrosoftGraphManagedAppRegistration
		return ret
	}
	return *o.ManagedAppRegistrations
}

// GetManagedAppRegistrationsOk returns a tuple with the ManagedAppRegistrations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppRegistrationsOk() ([]MicrosoftGraphManagedAppRegistration, bool) {
	if o == nil || o.ManagedAppRegistrations == nil {
		var ret []MicrosoftGraphManagedAppRegistration
		return ret, false
	}
	return *o.ManagedAppRegistrations, true
}

// HasManagedAppRegistrations returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasManagedAppRegistrations() bool {
	if o != nil && o.ManagedAppRegistrations != nil {
		return true
	}

	return false
}

// SetManagedAppRegistrations gets a reference to the given []MicrosoftGraphManagedAppRegistration and assigns it to the ManagedAppRegistrations field.
func (o *MicrosoftGraphDeviceAppManagement) SetManagedAppRegistrations(v []MicrosoftGraphManagedAppRegistration) {
	o.ManagedAppRegistrations = &v
}

// GetManagedAppStatuses returns the ManagedAppStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppStatuses() []MicrosoftGraphManagedAppStatus {
	if o == nil || o.ManagedAppStatuses == nil {
		var ret []MicrosoftGraphManagedAppStatus
		return ret
	}
	return *o.ManagedAppStatuses
}

// GetManagedAppStatusesOk returns a tuple with the ManagedAppStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceAppManagement) GetManagedAppStatusesOk() ([]MicrosoftGraphManagedAppStatus, bool) {
	if o == nil || o.ManagedAppStatuses == nil {
		var ret []MicrosoftGraphManagedAppStatus
		return ret, false
	}
	return *o.ManagedAppStatuses, true
}

// HasManagedAppStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceAppManagement) HasManagedAppStatuses() bool {
	if o != nil && o.ManagedAppStatuses != nil {
		return true
	}

	return false
}

// SetManagedAppStatuses gets a reference to the given []MicrosoftGraphManagedAppStatus and assigns it to the ManagedAppStatuses field.
func (o *MicrosoftGraphDeviceAppManagement) SetManagedAppStatuses(v []MicrosoftGraphManagedAppStatus) {
	o.ManagedAppStatuses = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDeviceAppManagement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime != nil {
		toSerialize["microsoftStoreForBusinessLastSuccessfulSyncDateTime"] = o.MicrosoftStoreForBusinessLastSuccessfulSyncDateTime
	}
	if o.IsEnabledForMicrosoftStoreForBusiness != nil {
		toSerialize["isEnabledForMicrosoftStoreForBusiness"] = o.IsEnabledForMicrosoftStoreForBusiness
	}
	if o.MicrosoftStoreForBusinessLanguage == nil {
		if o.isExplicitNullMicrosoftStoreForBusinessLanguage {
			toSerialize["microsoftStoreForBusinessLanguage"] = o.MicrosoftStoreForBusinessLanguage
		}
	} else {
		toSerialize["microsoftStoreForBusinessLanguage"] = o.MicrosoftStoreForBusinessLanguage
	}
	if o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime != nil {
		toSerialize["microsoftStoreForBusinessLastCompletedApplicationSyncTime"] = o.MicrosoftStoreForBusinessLastCompletedApplicationSyncTime
	}
	if o.ManagedEBooks != nil {
		toSerialize["managedEBooks"] = o.ManagedEBooks
	}
	if o.MobileApps != nil {
		toSerialize["mobileApps"] = o.MobileApps
	}
	if o.MobileAppCategories != nil {
		toSerialize["mobileAppCategories"] = o.MobileAppCategories
	}
	if o.MobileAppConfigurations != nil {
		toSerialize["mobileAppConfigurations"] = o.MobileAppConfigurations
	}
	if o.VppTokens != nil {
		toSerialize["vppTokens"] = o.VppTokens
	}
	if o.ManagedAppPolicies != nil {
		toSerialize["managedAppPolicies"] = o.ManagedAppPolicies
	}
	if o.IosManagedAppProtections != nil {
		toSerialize["iosManagedAppProtections"] = o.IosManagedAppProtections
	}
	if o.AndroidManagedAppProtections != nil {
		toSerialize["androidManagedAppProtections"] = o.AndroidManagedAppProtections
	}
	if o.DefaultManagedAppProtections != nil {
		toSerialize["defaultManagedAppProtections"] = o.DefaultManagedAppProtections
	}
	if o.TargetedManagedAppConfigurations != nil {
		toSerialize["targetedManagedAppConfigurations"] = o.TargetedManagedAppConfigurations
	}
	if o.MdmWindowsInformationProtectionPolicies != nil {
		toSerialize["mdmWindowsInformationProtectionPolicies"] = o.MdmWindowsInformationProtectionPolicies
	}
	if o.WindowsInformationProtectionPolicies != nil {
		toSerialize["windowsInformationProtectionPolicies"] = o.WindowsInformationProtectionPolicies
	}
	if o.ManagedAppRegistrations != nil {
		toSerialize["managedAppRegistrations"] = o.ManagedAppRegistrations
	}
	if o.ManagedAppStatuses != nil {
		toSerialize["managedAppStatuses"] = o.ManagedAppStatuses
	}
	return json.Marshal(toSerialize)
}


