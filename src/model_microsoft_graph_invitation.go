/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphInvitation struct for MicrosoftGraphInvitation
type MicrosoftGraphInvitation struct {
	Id *string `json:"id,omitempty"`

	InvitedUserDisplayName *string `json:"invitedUserDisplayName,omitempty"`
	isExplicitNullInvitedUserDisplayName bool `json:"-"`
	InvitedUserType *string `json:"invitedUserType,omitempty"`
	isExplicitNullInvitedUserType bool `json:"-"`
	InvitedUserEmailAddress *string `json:"invitedUserEmailAddress,omitempty"`

	InvitedUserMessageInfo *AnyOfmicrosoftGraphInvitedUserMessageInfo `json:"invitedUserMessageInfo,omitempty"`
	isExplicitNullInvitedUserMessageInfo bool `json:"-"`
	SendInvitationMessage *bool `json:"sendInvitationMessage,omitempty"`
	isExplicitNullSendInvitationMessage bool `json:"-"`
	InviteRedirectUrl *string `json:"inviteRedirectUrl,omitempty"`

	InviteRedeemUrl *string `json:"inviteRedeemUrl,omitempty"`
	isExplicitNullInviteRedeemUrl bool `json:"-"`
	Status *string `json:"status,omitempty"`
	isExplicitNullStatus bool `json:"-"`
	InvitedUser *AnyOfmicrosoftGraphUser `json:"invitedUser,omitempty"`
	isExplicitNullInvitedUser bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphInvitation) SetId(v string) {
	o.Id = &v
}

// GetInvitedUserDisplayName returns the InvitedUserDisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUserDisplayName() string {
	if o == nil || o.InvitedUserDisplayName == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserDisplayName
}

// GetInvitedUserDisplayNameOk returns a tuple with the InvitedUserDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserDisplayNameOk() (string, bool) {
	if o == nil || o.InvitedUserDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.InvitedUserDisplayName, true
}

// HasInvitedUserDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserDisplayName() bool {
	if o != nil && o.InvitedUserDisplayName != nil {
		return true
	}

	return false
}

// SetInvitedUserDisplayName gets a reference to the given string and assigns it to the InvitedUserDisplayName field.
func (o *MicrosoftGraphInvitation) SetInvitedUserDisplayName(v string) {
	o.InvitedUserDisplayName = &v
}

// SetInvitedUserDisplayNameExplicitNull (un)sets InvitedUserDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InvitedUserDisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetInvitedUserDisplayNameExplicitNull(b bool) {
	o.InvitedUserDisplayName = nil
	o.isExplicitNullInvitedUserDisplayName = b
}
// GetInvitedUserType returns the InvitedUserType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUserType() string {
	if o == nil || o.InvitedUserType == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserType
}

// GetInvitedUserTypeOk returns a tuple with the InvitedUserType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserTypeOk() (string, bool) {
	if o == nil || o.InvitedUserType == nil {
		var ret string
		return ret, false
	}
	return *o.InvitedUserType, true
}

// HasInvitedUserType returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserType() bool {
	if o != nil && o.InvitedUserType != nil {
		return true
	}

	return false
}

// SetInvitedUserType gets a reference to the given string and assigns it to the InvitedUserType field.
func (o *MicrosoftGraphInvitation) SetInvitedUserType(v string) {
	o.InvitedUserType = &v
}

// SetInvitedUserTypeExplicitNull (un)sets InvitedUserType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InvitedUserType value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetInvitedUserTypeExplicitNull(b bool) {
	o.InvitedUserType = nil
	o.isExplicitNullInvitedUserType = b
}
// GetInvitedUserEmailAddress returns the InvitedUserEmailAddress field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUserEmailAddress() string {
	if o == nil || o.InvitedUserEmailAddress == nil {
		var ret string
		return ret
	}
	return *o.InvitedUserEmailAddress
}

// GetInvitedUserEmailAddressOk returns a tuple with the InvitedUserEmailAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserEmailAddressOk() (string, bool) {
	if o == nil || o.InvitedUserEmailAddress == nil {
		var ret string
		return ret, false
	}
	return *o.InvitedUserEmailAddress, true
}

// HasInvitedUserEmailAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserEmailAddress() bool {
	if o != nil && o.InvitedUserEmailAddress != nil {
		return true
	}

	return false
}

// SetInvitedUserEmailAddress gets a reference to the given string and assigns it to the InvitedUserEmailAddress field.
func (o *MicrosoftGraphInvitation) SetInvitedUserEmailAddress(v string) {
	o.InvitedUserEmailAddress = &v
}

// GetInvitedUserMessageInfo returns the InvitedUserMessageInfo field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUserMessageInfo() AnyOfmicrosoftGraphInvitedUserMessageInfo {
	if o == nil || o.InvitedUserMessageInfo == nil {
		var ret AnyOfmicrosoftGraphInvitedUserMessageInfo
		return ret
	}
	return *o.InvitedUserMessageInfo
}

// GetInvitedUserMessageInfoOk returns a tuple with the InvitedUserMessageInfo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserMessageInfoOk() (AnyOfmicrosoftGraphInvitedUserMessageInfo, bool) {
	if o == nil || o.InvitedUserMessageInfo == nil {
		var ret AnyOfmicrosoftGraphInvitedUserMessageInfo
		return ret, false
	}
	return *o.InvitedUserMessageInfo, true
}

// HasInvitedUserMessageInfo returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUserMessageInfo() bool {
	if o != nil && o.InvitedUserMessageInfo != nil {
		return true
	}

	return false
}

// SetInvitedUserMessageInfo gets a reference to the given AnyOfmicrosoftGraphInvitedUserMessageInfo and assigns it to the InvitedUserMessageInfo field.
func (o *MicrosoftGraphInvitation) SetInvitedUserMessageInfo(v AnyOfmicrosoftGraphInvitedUserMessageInfo) {
	o.InvitedUserMessageInfo = &v
}

// SetInvitedUserMessageInfoExplicitNull (un)sets InvitedUserMessageInfo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InvitedUserMessageInfo value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetInvitedUserMessageInfoExplicitNull(b bool) {
	o.InvitedUserMessageInfo = nil
	o.isExplicitNullInvitedUserMessageInfo = b
}
// GetSendInvitationMessage returns the SendInvitationMessage field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetSendInvitationMessage() bool {
	if o == nil || o.SendInvitationMessage == nil {
		var ret bool
		return ret
	}
	return *o.SendInvitationMessage
}

// GetSendInvitationMessageOk returns a tuple with the SendInvitationMessage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetSendInvitationMessageOk() (bool, bool) {
	if o == nil || o.SendInvitationMessage == nil {
		var ret bool
		return ret, false
	}
	return *o.SendInvitationMessage, true
}

// HasSendInvitationMessage returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasSendInvitationMessage() bool {
	if o != nil && o.SendInvitationMessage != nil {
		return true
	}

	return false
}

// SetSendInvitationMessage gets a reference to the given bool and assigns it to the SendInvitationMessage field.
func (o *MicrosoftGraphInvitation) SetSendInvitationMessage(v bool) {
	o.SendInvitationMessage = &v
}

// SetSendInvitationMessageExplicitNull (un)sets SendInvitationMessage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SendInvitationMessage value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetSendInvitationMessageExplicitNull(b bool) {
	o.SendInvitationMessage = nil
	o.isExplicitNullSendInvitationMessage = b
}
// GetInviteRedirectUrl returns the InviteRedirectUrl field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInviteRedirectUrl() string {
	if o == nil || o.InviteRedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.InviteRedirectUrl
}

// GetInviteRedirectUrlOk returns a tuple with the InviteRedirectUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInviteRedirectUrlOk() (string, bool) {
	if o == nil || o.InviteRedirectUrl == nil {
		var ret string
		return ret, false
	}
	return *o.InviteRedirectUrl, true
}

// HasInviteRedirectUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInviteRedirectUrl() bool {
	if o != nil && o.InviteRedirectUrl != nil {
		return true
	}

	return false
}

// SetInviteRedirectUrl gets a reference to the given string and assigns it to the InviteRedirectUrl field.
func (o *MicrosoftGraphInvitation) SetInviteRedirectUrl(v string) {
	o.InviteRedirectUrl = &v
}

// GetInviteRedeemUrl returns the InviteRedeemUrl field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInviteRedeemUrl() string {
	if o == nil || o.InviteRedeemUrl == nil {
		var ret string
		return ret
	}
	return *o.InviteRedeemUrl
}

// GetInviteRedeemUrlOk returns a tuple with the InviteRedeemUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInviteRedeemUrlOk() (string, bool) {
	if o == nil || o.InviteRedeemUrl == nil {
		var ret string
		return ret, false
	}
	return *o.InviteRedeemUrl, true
}

// HasInviteRedeemUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInviteRedeemUrl() bool {
	if o != nil && o.InviteRedeemUrl != nil {
		return true
	}

	return false
}

// SetInviteRedeemUrl gets a reference to the given string and assigns it to the InviteRedeemUrl field.
func (o *MicrosoftGraphInvitation) SetInviteRedeemUrl(v string) {
	o.InviteRedeemUrl = &v
}

// SetInviteRedeemUrlExplicitNull (un)sets InviteRedeemUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InviteRedeemUrl value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetInviteRedeemUrlExplicitNull(b bool) {
	o.InviteRedeemUrl = nil
	o.isExplicitNullInviteRedeemUrl = b
}
// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetStatusOk() (string, bool) {
	if o == nil || o.Status == nil {
		var ret string
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MicrosoftGraphInvitation) SetStatus(v string) {
	o.Status = &v
}

// SetStatusExplicitNull (un)sets Status to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Status value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetStatusExplicitNull(b bool) {
	o.Status = nil
	o.isExplicitNullStatus = b
}
// GetInvitedUser returns the InvitedUser field if non-nil, zero value otherwise.
func (o *MicrosoftGraphInvitation) GetInvitedUser() AnyOfmicrosoftGraphUser {
	if o == nil || o.InvitedUser == nil {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return *o.InvitedUser
}

// GetInvitedUserOk returns a tuple with the InvitedUser field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphInvitation) GetInvitedUserOk() (AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.InvitedUser == nil {
		var ret AnyOfmicrosoftGraphUser
		return ret, false
	}
	return *o.InvitedUser, true
}

// HasInvitedUser returns a boolean if a field has been set.
func (o *MicrosoftGraphInvitation) HasInvitedUser() bool {
	if o != nil && o.InvitedUser != nil {
		return true
	}

	return false
}

// SetInvitedUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the InvitedUser field.
func (o *MicrosoftGraphInvitation) SetInvitedUser(v AnyOfmicrosoftGraphUser) {
	o.InvitedUser = &v
}

// SetInvitedUserExplicitNull (un)sets InvitedUser to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InvitedUser value is set to nil even if false is passed
func (o *MicrosoftGraphInvitation) SetInvitedUserExplicitNull(b bool) {
	o.InvitedUser = nil
	o.isExplicitNullInvitedUser = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphInvitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InvitedUserDisplayName == nil {
		if o.isExplicitNullInvitedUserDisplayName {
			toSerialize["invitedUserDisplayName"] = o.InvitedUserDisplayName
		}
	} else {
		toSerialize["invitedUserDisplayName"] = o.InvitedUserDisplayName
	}
	if o.InvitedUserType == nil {
		if o.isExplicitNullInvitedUserType {
			toSerialize["invitedUserType"] = o.InvitedUserType
		}
	} else {
		toSerialize["invitedUserType"] = o.InvitedUserType
	}
	if o.InvitedUserEmailAddress != nil {
		toSerialize["invitedUserEmailAddress"] = o.InvitedUserEmailAddress
	}
	if o.InvitedUserMessageInfo == nil {
		if o.isExplicitNullInvitedUserMessageInfo {
			toSerialize["invitedUserMessageInfo"] = o.InvitedUserMessageInfo
		}
	} else {
		toSerialize["invitedUserMessageInfo"] = o.InvitedUserMessageInfo
	}
	if o.SendInvitationMessage == nil {
		if o.isExplicitNullSendInvitationMessage {
			toSerialize["sendInvitationMessage"] = o.SendInvitationMessage
		}
	} else {
		toSerialize["sendInvitationMessage"] = o.SendInvitationMessage
	}
	if o.InviteRedirectUrl != nil {
		toSerialize["inviteRedirectUrl"] = o.InviteRedirectUrl
	}
	if o.InviteRedeemUrl == nil {
		if o.isExplicitNullInviteRedeemUrl {
			toSerialize["inviteRedeemUrl"] = o.InviteRedeemUrl
		}
	} else {
		toSerialize["inviteRedeemUrl"] = o.InviteRedeemUrl
	}
	if o.Status == nil {
		if o.isExplicitNullStatus {
			toSerialize["status"] = o.Status
		}
	} else {
		toSerialize["status"] = o.Status
	}
	if o.InvitedUser == nil {
		if o.isExplicitNullInvitedUser {
			toSerialize["invitedUser"] = o.InvitedUser
		}
	} else {
		toSerialize["invitedUser"] = o.InvitedUser
	}
	return json.Marshal(toSerialize)
}


