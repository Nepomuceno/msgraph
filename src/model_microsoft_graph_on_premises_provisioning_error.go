/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphOnPremisesProvisioningError struct for MicrosoftGraphOnPremisesProvisioningError
type MicrosoftGraphOnPremisesProvisioningError struct {
	Value *string `json:"value,omitempty"`
	isExplicitNullValue bool `json:"-"`
	Category *string `json:"category,omitempty"`
	isExplicitNullCategory bool `json:"-"`
	PropertyCausingError *string `json:"propertyCausingError,omitempty"`
	isExplicitNullPropertyCausingError bool `json:"-"`
	OccurredDateTime *time.Time `json:"occurredDateTime,omitempty"`
	isExplicitNullOccurredDateTime bool `json:"-"`
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetValueOk() (string, bool) {
	if o == nil || o.Value == nil {
		var ret string
		return ret, false
	}
	return *o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetValue(v string) {
	o.Value = &v
}

// SetValueExplicitNull (un)sets Value to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Value value is set to nil even if false is passed
func (o *MicrosoftGraphOnPremisesProvisioningError) SetValueExplicitNull(b bool) {
	o.Value = nil
	o.isExplicitNullValue = b
}
// GetCategory returns the Category field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetCategoryOk() (string, bool) {
	if o == nil || o.Category == nil {
		var ret string
		return ret, false
	}
	return *o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetCategory(v string) {
	o.Category = &v
}

// SetCategoryExplicitNull (un)sets Category to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Category value is set to nil even if false is passed
func (o *MicrosoftGraphOnPremisesProvisioningError) SetCategoryExplicitNull(b bool) {
	o.Category = nil
	o.isExplicitNullCategory = b
}
// GetPropertyCausingError returns the PropertyCausingError field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetPropertyCausingError() string {
	if o == nil || o.PropertyCausingError == nil {
		var ret string
		return ret
	}
	return *o.PropertyCausingError
}

// GetPropertyCausingErrorOk returns a tuple with the PropertyCausingError field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetPropertyCausingErrorOk() (string, bool) {
	if o == nil || o.PropertyCausingError == nil {
		var ret string
		return ret, false
	}
	return *o.PropertyCausingError, true
}

// HasPropertyCausingError returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasPropertyCausingError() bool {
	if o != nil && o.PropertyCausingError != nil {
		return true
	}

	return false
}

// SetPropertyCausingError gets a reference to the given string and assigns it to the PropertyCausingError field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetPropertyCausingError(v string) {
	o.PropertyCausingError = &v
}

// SetPropertyCausingErrorExplicitNull (un)sets PropertyCausingError to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PropertyCausingError value is set to nil even if false is passed
func (o *MicrosoftGraphOnPremisesProvisioningError) SetPropertyCausingErrorExplicitNull(b bool) {
	o.PropertyCausingError = nil
	o.isExplicitNullPropertyCausingError = b
}
// GetOccurredDateTime returns the OccurredDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetOccurredDateTime() time.Time {
	if o == nil || o.OccurredDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.OccurredDateTime
}

// GetOccurredDateTimeOk returns a tuple with the OccurredDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) GetOccurredDateTimeOk() (time.Time, bool) {
	if o == nil || o.OccurredDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.OccurredDateTime, true
}

// HasOccurredDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphOnPremisesProvisioningError) HasOccurredDateTime() bool {
	if o != nil && o.OccurredDateTime != nil {
		return true
	}

	return false
}

// SetOccurredDateTime gets a reference to the given time.Time and assigns it to the OccurredDateTime field.
func (o *MicrosoftGraphOnPremisesProvisioningError) SetOccurredDateTime(v time.Time) {
	o.OccurredDateTime = &v
}

// SetOccurredDateTimeExplicitNull (un)sets OccurredDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OccurredDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphOnPremisesProvisioningError) SetOccurredDateTimeExplicitNull(b bool) {
	o.OccurredDateTime = nil
	o.isExplicitNullOccurredDateTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphOnPremisesProvisioningError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value == nil {
		if o.isExplicitNullValue {
			toSerialize["value"] = o.Value
		}
	} else {
		toSerialize["value"] = o.Value
	}
	if o.Category == nil {
		if o.isExplicitNullCategory {
			toSerialize["category"] = o.Category
		}
	} else {
		toSerialize["category"] = o.Category
	}
	if o.PropertyCausingError == nil {
		if o.isExplicitNullPropertyCausingError {
			toSerialize["propertyCausingError"] = o.PropertyCausingError
		}
	} else {
		toSerialize["propertyCausingError"] = o.PropertyCausingError
	}
	if o.OccurredDateTime == nil {
		if o.isExplicitNullOccurredDateTime {
			toSerialize["occurredDateTime"] = o.OccurredDateTime
		}
	} else {
		toSerialize["occurredDateTime"] = o.OccurredDateTime
	}
	return json.Marshal(toSerialize)
}


