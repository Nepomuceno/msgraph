/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Planner struct for Planner
type Planner struct {
	Tasks *[]MicrosoftGraphPlannerTask `json:"tasks,omitempty"`

	Plans *[]MicrosoftGraphPlannerPlan `json:"plans,omitempty"`

	Buckets *[]MicrosoftGraphPlannerBucket `json:"buckets,omitempty"`

}

// GetTasks returns the Tasks field if non-nil, zero value otherwise.
func (o *Planner) GetTasks() []MicrosoftGraphPlannerTask {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPlannerTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Planner) GetTasksOk() ([]MicrosoftGraphPlannerTask, bool) {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPlannerTask
		return ret, false
	}
	return *o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *Planner) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []MicrosoftGraphPlannerTask and assigns it to the Tasks field.
func (o *Planner) SetTasks(v []MicrosoftGraphPlannerTask) {
	o.Tasks = &v
}

// GetPlans returns the Plans field if non-nil, zero value otherwise.
func (o *Planner) GetPlans() []MicrosoftGraphPlannerPlan {
	if o == nil || o.Plans == nil {
		var ret []MicrosoftGraphPlannerPlan
		return ret
	}
	return *o.Plans
}

// GetPlansOk returns a tuple with the Plans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Planner) GetPlansOk() ([]MicrosoftGraphPlannerPlan, bool) {
	if o == nil || o.Plans == nil {
		var ret []MicrosoftGraphPlannerPlan
		return ret, false
	}
	return *o.Plans, true
}

// HasPlans returns a boolean if a field has been set.
func (o *Planner) HasPlans() bool {
	if o != nil && o.Plans != nil {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []MicrosoftGraphPlannerPlan and assigns it to the Plans field.
func (o *Planner) SetPlans(v []MicrosoftGraphPlannerPlan) {
	o.Plans = &v
}

// GetBuckets returns the Buckets field if non-nil, zero value otherwise.
func (o *Planner) GetBuckets() []MicrosoftGraphPlannerBucket {
	if o == nil || o.Buckets == nil {
		var ret []MicrosoftGraphPlannerBucket
		return ret
	}
	return *o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Planner) GetBucketsOk() ([]MicrosoftGraphPlannerBucket, bool) {
	if o == nil || o.Buckets == nil {
		var ret []MicrosoftGraphPlannerBucket
		return ret, false
	}
	return *o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *Planner) HasBuckets() bool {
	if o != nil && o.Buckets != nil {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []MicrosoftGraphPlannerBucket and assigns it to the Buckets field.
func (o *Planner) SetBuckets(v []MicrosoftGraphPlannerBucket) {
	o.Buckets = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Planner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Plans != nil {
		toSerialize["plans"] = o.Plans
	}
	if o.Buckets != nil {
		toSerialize["buckets"] = o.Buckets
	}
	return json.Marshal(toSerialize)
}


