/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphPersonOrGroupColumn struct for MicrosoftGraphPersonOrGroupColumn
type MicrosoftGraphPersonOrGroupColumn struct {
	AllowMultipleSelection *bool `json:"allowMultipleSelection,omitempty"`
	isExplicitNullAllowMultipleSelection bool `json:"-"`
	ChooseFromType *string `json:"chooseFromType,omitempty"`
	isExplicitNullChooseFromType bool `json:"-"`
	DisplayAs *string `json:"displayAs,omitempty"`
	isExplicitNullDisplayAs bool `json:"-"`
}

// GetAllowMultipleSelection returns the AllowMultipleSelection field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPersonOrGroupColumn) GetAllowMultipleSelection() bool {
	if o == nil || o.AllowMultipleSelection == nil {
		var ret bool
		return ret
	}
	return *o.AllowMultipleSelection
}

// GetAllowMultipleSelectionOk returns a tuple with the AllowMultipleSelection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) GetAllowMultipleSelectionOk() (bool, bool) {
	if o == nil || o.AllowMultipleSelection == nil {
		var ret bool
		return ret, false
	}
	return *o.AllowMultipleSelection, true
}

// HasAllowMultipleSelection returns a boolean if a field has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) HasAllowMultipleSelection() bool {
	if o != nil && o.AllowMultipleSelection != nil {
		return true
	}

	return false
}

// SetAllowMultipleSelection gets a reference to the given bool and assigns it to the AllowMultipleSelection field.
func (o *MicrosoftGraphPersonOrGroupColumn) SetAllowMultipleSelection(v bool) {
	o.AllowMultipleSelection = &v
}

// SetAllowMultipleSelectionExplicitNull (un)sets AllowMultipleSelection to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AllowMultipleSelection value is set to nil even if false is passed
func (o *MicrosoftGraphPersonOrGroupColumn) SetAllowMultipleSelectionExplicitNull(b bool) {
	o.AllowMultipleSelection = nil
	o.isExplicitNullAllowMultipleSelection = b
}
// GetChooseFromType returns the ChooseFromType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPersonOrGroupColumn) GetChooseFromType() string {
	if o == nil || o.ChooseFromType == nil {
		var ret string
		return ret
	}
	return *o.ChooseFromType
}

// GetChooseFromTypeOk returns a tuple with the ChooseFromType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) GetChooseFromTypeOk() (string, bool) {
	if o == nil || o.ChooseFromType == nil {
		var ret string
		return ret, false
	}
	return *o.ChooseFromType, true
}

// HasChooseFromType returns a boolean if a field has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) HasChooseFromType() bool {
	if o != nil && o.ChooseFromType != nil {
		return true
	}

	return false
}

// SetChooseFromType gets a reference to the given string and assigns it to the ChooseFromType field.
func (o *MicrosoftGraphPersonOrGroupColumn) SetChooseFromType(v string) {
	o.ChooseFromType = &v
}

// SetChooseFromTypeExplicitNull (un)sets ChooseFromType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChooseFromType value is set to nil even if false is passed
func (o *MicrosoftGraphPersonOrGroupColumn) SetChooseFromTypeExplicitNull(b bool) {
	o.ChooseFromType = nil
	o.isExplicitNullChooseFromType = b
}
// GetDisplayAs returns the DisplayAs field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPersonOrGroupColumn) GetDisplayAs() string {
	if o == nil || o.DisplayAs == nil {
		var ret string
		return ret
	}
	return *o.DisplayAs
}

// GetDisplayAsOk returns a tuple with the DisplayAs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) GetDisplayAsOk() (string, bool) {
	if o == nil || o.DisplayAs == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayAs, true
}

// HasDisplayAs returns a boolean if a field has been set.
func (o *MicrosoftGraphPersonOrGroupColumn) HasDisplayAs() bool {
	if o != nil && o.DisplayAs != nil {
		return true
	}

	return false
}

// SetDisplayAs gets a reference to the given string and assigns it to the DisplayAs field.
func (o *MicrosoftGraphPersonOrGroupColumn) SetDisplayAs(v string) {
	o.DisplayAs = &v
}

// SetDisplayAsExplicitNull (un)sets DisplayAs to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayAs value is set to nil even if false is passed
func (o *MicrosoftGraphPersonOrGroupColumn) SetDisplayAsExplicitNull(b bool) {
	o.DisplayAs = nil
	o.isExplicitNullDisplayAs = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphPersonOrGroupColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowMultipleSelection == nil {
		if o.isExplicitNullAllowMultipleSelection {
			toSerialize["allowMultipleSelection"] = o.AllowMultipleSelection
		}
	} else {
		toSerialize["allowMultipleSelection"] = o.AllowMultipleSelection
	}
	if o.ChooseFromType == nil {
		if o.isExplicitNullChooseFromType {
			toSerialize["chooseFromType"] = o.ChooseFromType
		}
	} else {
		toSerialize["chooseFromType"] = o.ChooseFromType
	}
	if o.DisplayAs == nil {
		if o.isExplicitNullDisplayAs {
			toSerialize["displayAs"] = o.DisplayAs
		}
	} else {
		toSerialize["displayAs"] = o.DisplayAs
	}
	return json.Marshal(toSerialize)
}


