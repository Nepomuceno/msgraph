/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphVideo struct for MicrosoftGraphVideo
type MicrosoftGraphVideo struct {
	AudioBitsPerSample *int32 `json:"audioBitsPerSample,omitempty"`
	isExplicitNullAudioBitsPerSample bool `json:"-"`
	AudioChannels *int32 `json:"audioChannels,omitempty"`
	isExplicitNullAudioChannels bool `json:"-"`
	AudioFormat *string `json:"audioFormat,omitempty"`
	isExplicitNullAudioFormat bool `json:"-"`
	AudioSamplesPerSecond *int32 `json:"audioSamplesPerSecond,omitempty"`
	isExplicitNullAudioSamplesPerSecond bool `json:"-"`
	Bitrate *int32 `json:"bitrate,omitempty"`
	isExplicitNullBitrate bool `json:"-"`
	Duration *int64 `json:"duration,omitempty"`
	isExplicitNullDuration bool `json:"-"`
	FourCC *string `json:"fourCC,omitempty"`
	isExplicitNullFourCC bool `json:"-"`
	FrameRate *AnyOfnumberstringstring `json:"frameRate,omitempty"`
	isExplicitNullFrameRate bool `json:"-"`
	Height *int32 `json:"height,omitempty"`
	isExplicitNullHeight bool `json:"-"`
	Width *int32 `json:"width,omitempty"`
	isExplicitNullWidth bool `json:"-"`
}

// GetAudioBitsPerSample returns the AudioBitsPerSample field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetAudioBitsPerSample() int32 {
	if o == nil || o.AudioBitsPerSample == nil {
		var ret int32
		return ret
	}
	return *o.AudioBitsPerSample
}

// GetAudioBitsPerSampleOk returns a tuple with the AudioBitsPerSample field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetAudioBitsPerSampleOk() (int32, bool) {
	if o == nil || o.AudioBitsPerSample == nil {
		var ret int32
		return ret, false
	}
	return *o.AudioBitsPerSample, true
}

// HasAudioBitsPerSample returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasAudioBitsPerSample() bool {
	if o != nil && o.AudioBitsPerSample != nil {
		return true
	}

	return false
}

// SetAudioBitsPerSample gets a reference to the given int32 and assigns it to the AudioBitsPerSample field.
func (o *MicrosoftGraphVideo) SetAudioBitsPerSample(v int32) {
	o.AudioBitsPerSample = &v
}

// SetAudioBitsPerSampleExplicitNull (un)sets AudioBitsPerSample to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AudioBitsPerSample value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetAudioBitsPerSampleExplicitNull(b bool) {
	o.AudioBitsPerSample = nil
	o.isExplicitNullAudioBitsPerSample = b
}
// GetAudioChannels returns the AudioChannels field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetAudioChannels() int32 {
	if o == nil || o.AudioChannels == nil {
		var ret int32
		return ret
	}
	return *o.AudioChannels
}

// GetAudioChannelsOk returns a tuple with the AudioChannels field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetAudioChannelsOk() (int32, bool) {
	if o == nil || o.AudioChannels == nil {
		var ret int32
		return ret, false
	}
	return *o.AudioChannels, true
}

// HasAudioChannels returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasAudioChannels() bool {
	if o != nil && o.AudioChannels != nil {
		return true
	}

	return false
}

// SetAudioChannels gets a reference to the given int32 and assigns it to the AudioChannels field.
func (o *MicrosoftGraphVideo) SetAudioChannels(v int32) {
	o.AudioChannels = &v
}

// SetAudioChannelsExplicitNull (un)sets AudioChannels to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AudioChannels value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetAudioChannelsExplicitNull(b bool) {
	o.AudioChannels = nil
	o.isExplicitNullAudioChannels = b
}
// GetAudioFormat returns the AudioFormat field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetAudioFormat() string {
	if o == nil || o.AudioFormat == nil {
		var ret string
		return ret
	}
	return *o.AudioFormat
}

// GetAudioFormatOk returns a tuple with the AudioFormat field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetAudioFormatOk() (string, bool) {
	if o == nil || o.AudioFormat == nil {
		var ret string
		return ret, false
	}
	return *o.AudioFormat, true
}

// HasAudioFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasAudioFormat() bool {
	if o != nil && o.AudioFormat != nil {
		return true
	}

	return false
}

// SetAudioFormat gets a reference to the given string and assigns it to the AudioFormat field.
func (o *MicrosoftGraphVideo) SetAudioFormat(v string) {
	o.AudioFormat = &v
}

// SetAudioFormatExplicitNull (un)sets AudioFormat to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AudioFormat value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetAudioFormatExplicitNull(b bool) {
	o.AudioFormat = nil
	o.isExplicitNullAudioFormat = b
}
// GetAudioSamplesPerSecond returns the AudioSamplesPerSecond field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetAudioSamplesPerSecond() int32 {
	if o == nil || o.AudioSamplesPerSecond == nil {
		var ret int32
		return ret
	}
	return *o.AudioSamplesPerSecond
}

// GetAudioSamplesPerSecondOk returns a tuple with the AudioSamplesPerSecond field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetAudioSamplesPerSecondOk() (int32, bool) {
	if o == nil || o.AudioSamplesPerSecond == nil {
		var ret int32
		return ret, false
	}
	return *o.AudioSamplesPerSecond, true
}

// HasAudioSamplesPerSecond returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasAudioSamplesPerSecond() bool {
	if o != nil && o.AudioSamplesPerSecond != nil {
		return true
	}

	return false
}

// SetAudioSamplesPerSecond gets a reference to the given int32 and assigns it to the AudioSamplesPerSecond field.
func (o *MicrosoftGraphVideo) SetAudioSamplesPerSecond(v int32) {
	o.AudioSamplesPerSecond = &v
}

// SetAudioSamplesPerSecondExplicitNull (un)sets AudioSamplesPerSecond to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AudioSamplesPerSecond value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetAudioSamplesPerSecondExplicitNull(b bool) {
	o.AudioSamplesPerSecond = nil
	o.isExplicitNullAudioSamplesPerSecond = b
}
// GetBitrate returns the Bitrate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetBitrate() int32 {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetBitrateOk() (int32, bool) {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret, false
	}
	return *o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int32 and assigns it to the Bitrate field.
func (o *MicrosoftGraphVideo) SetBitrate(v int32) {
	o.Bitrate = &v
}

// SetBitrateExplicitNull (un)sets Bitrate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Bitrate value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetBitrateExplicitNull(b bool) {
	o.Bitrate = nil
	o.isExplicitNullBitrate = b
}
// GetDuration returns the Duration field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetDuration() int64 {
	if o == nil || o.Duration == nil {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetDurationOk() (int64, bool) {
	if o == nil || o.Duration == nil {
		var ret int64
		return ret, false
	}
	return *o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *MicrosoftGraphVideo) SetDuration(v int64) {
	o.Duration = &v
}

// SetDurationExplicitNull (un)sets Duration to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Duration value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetDurationExplicitNull(b bool) {
	o.Duration = nil
	o.isExplicitNullDuration = b
}
// GetFourCC returns the FourCC field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetFourCC() string {
	if o == nil || o.FourCC == nil {
		var ret string
		return ret
	}
	return *o.FourCC
}

// GetFourCCOk returns a tuple with the FourCC field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetFourCCOk() (string, bool) {
	if o == nil || o.FourCC == nil {
		var ret string
		return ret, false
	}
	return *o.FourCC, true
}

// HasFourCC returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasFourCC() bool {
	if o != nil && o.FourCC != nil {
		return true
	}

	return false
}

// SetFourCC gets a reference to the given string and assigns it to the FourCC field.
func (o *MicrosoftGraphVideo) SetFourCC(v string) {
	o.FourCC = &v
}

// SetFourCCExplicitNull (un)sets FourCC to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FourCC value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetFourCCExplicitNull(b bool) {
	o.FourCC = nil
	o.isExplicitNullFourCC = b
}
// GetFrameRate returns the FrameRate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetFrameRate() AnyOfnumberstringstring {
	if o == nil || o.FrameRate == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.FrameRate
}

// GetFrameRateOk returns a tuple with the FrameRate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetFrameRateOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.FrameRate == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.FrameRate, true
}

// HasFrameRate returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasFrameRate() bool {
	if o != nil && o.FrameRate != nil {
		return true
	}

	return false
}

// SetFrameRate gets a reference to the given AnyOfnumberstringstring and assigns it to the FrameRate field.
func (o *MicrosoftGraphVideo) SetFrameRate(v AnyOfnumberstringstring) {
	o.FrameRate = &v
}

// SetFrameRateExplicitNull (un)sets FrameRate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FrameRate value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetFrameRateExplicitNull(b bool) {
	o.FrameRate = nil
	o.isExplicitNullFrameRate = b
}
// GetHeight returns the Height field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetHeightOk() (int32, bool) {
	if o == nil || o.Height == nil {
		var ret int32
		return ret, false
	}
	return *o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *MicrosoftGraphVideo) SetHeight(v int32) {
	o.Height = &v
}

// SetHeightExplicitNull (un)sets Height to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Height value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetHeightExplicitNull(b bool) {
	o.Height = nil
	o.isExplicitNullHeight = b
}
// GetWidth returns the Width field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVideo) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVideo) GetWidthOk() (int32, bool) {
	if o == nil || o.Width == nil {
		var ret int32
		return ret, false
	}
	return *o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *MicrosoftGraphVideo) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *MicrosoftGraphVideo) SetWidth(v int32) {
	o.Width = &v
}

// SetWidthExplicitNull (un)sets Width to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Width value is set to nil even if false is passed
func (o *MicrosoftGraphVideo) SetWidthExplicitNull(b bool) {
	o.Width = nil
	o.isExplicitNullWidth = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphVideo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AudioBitsPerSample == nil {
		if o.isExplicitNullAudioBitsPerSample {
			toSerialize["audioBitsPerSample"] = o.AudioBitsPerSample
		}
	} else {
		toSerialize["audioBitsPerSample"] = o.AudioBitsPerSample
	}
	if o.AudioChannels == nil {
		if o.isExplicitNullAudioChannels {
			toSerialize["audioChannels"] = o.AudioChannels
		}
	} else {
		toSerialize["audioChannels"] = o.AudioChannels
	}
	if o.AudioFormat == nil {
		if o.isExplicitNullAudioFormat {
			toSerialize["audioFormat"] = o.AudioFormat
		}
	} else {
		toSerialize["audioFormat"] = o.AudioFormat
	}
	if o.AudioSamplesPerSecond == nil {
		if o.isExplicitNullAudioSamplesPerSecond {
			toSerialize["audioSamplesPerSecond"] = o.AudioSamplesPerSecond
		}
	} else {
		toSerialize["audioSamplesPerSecond"] = o.AudioSamplesPerSecond
	}
	if o.Bitrate == nil {
		if o.isExplicitNullBitrate {
			toSerialize["bitrate"] = o.Bitrate
		}
	} else {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.Duration == nil {
		if o.isExplicitNullDuration {
			toSerialize["duration"] = o.Duration
		}
	} else {
		toSerialize["duration"] = o.Duration
	}
	if o.FourCC == nil {
		if o.isExplicitNullFourCC {
			toSerialize["fourCC"] = o.FourCC
		}
	} else {
		toSerialize["fourCC"] = o.FourCC
	}
	if o.FrameRate == nil {
		if o.isExplicitNullFrameRate {
			toSerialize["frameRate"] = o.FrameRate
		}
	} else {
		toSerialize["frameRate"] = o.FrameRate
	}
	if o.Height == nil {
		if o.isExplicitNullHeight {
			toSerialize["height"] = o.Height
		}
	} else {
		toSerialize["height"] = o.Height
	}
	if o.Width == nil {
		if o.isExplicitNullWidth {
			toSerialize["width"] = o.Width
		}
	} else {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}


