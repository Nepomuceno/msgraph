/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphIosCompliancePolicy struct for MicrosoftGraphIosCompliancePolicy
type MicrosoftGraphIosCompliancePolicy struct {
	Id *string `json:"id,omitempty"`

	// DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`

	// Version of the device configuration.
	Version *int32 `json:"version,omitempty"`

	ScheduledActionsForRule *[]MicrosoftGraphDeviceComplianceScheduledActionForRule `json:"scheduledActionsForRule,omitempty"`

	DeviceStatuses *[]MicrosoftGraphDeviceComplianceDeviceStatus `json:"deviceStatuses,omitempty"`

	UserStatuses *[]MicrosoftGraphDeviceComplianceUserStatus `json:"userStatuses,omitempty"`

	DeviceStatusOverview *AnyOfmicrosoftGraphDeviceComplianceDeviceOverview `json:"deviceStatusOverview,omitempty"`
	isExplicitNullDeviceStatusOverview bool `json:"-"`
	UserStatusOverview *AnyOfmicrosoftGraphDeviceComplianceUserOverview `json:"userStatusOverview,omitempty"`
	isExplicitNullUserStatusOverview bool `json:"-"`
	DeviceSettingStateSummaries *[]MicrosoftGraphSettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`

	Assignments *[]MicrosoftGraphDeviceCompliancePolicyAssignment `json:"assignments,omitempty"`

	// Indicates whether or not to block simple passcodes.
	PasscodeBlockSimple *bool `json:"passcodeBlockSimple,omitempty"`

	// Number of days before the passcode expires. Valid values 1 to 65535
	PasscodeExpirationDays *int32 `json:"passcodeExpirationDays,omitempty"`
	isExplicitNullPasscodeExpirationDays bool `json:"-"`
	// Minimum length of passcode. Valid values 4 to 14
	PasscodeMinimumLength *int32 `json:"passcodeMinimumLength,omitempty"`
	isExplicitNullPasscodeMinimumLength bool `json:"-"`
	// Minutes of inactivity before a passcode is required.
	PasscodeMinutesOfInactivityBeforeLock *int32 `json:"passcodeMinutesOfInactivityBeforeLock,omitempty"`
	isExplicitNullPasscodeMinutesOfInactivityBeforeLock bool `json:"-"`
	// Number of previous passcodes to block. Valid values 1 to 24
	PasscodePreviousPasscodeBlockCount *int32 `json:"passcodePreviousPasscodeBlockCount,omitempty"`
	isExplicitNullPasscodePreviousPasscodeBlockCount bool `json:"-"`
	// The number of character sets required in the password.
	PasscodeMinimumCharacterSetCount *int32 `json:"passcodeMinimumCharacterSetCount,omitempty"`
	isExplicitNullPasscodeMinimumCharacterSetCount bool `json:"-"`
	// The required passcode type.
	PasscodeRequiredType *AnyOfmicrosoftGraphRequiredPasswordType `json:"passcodeRequiredType,omitempty"`

	// Indicates whether or not to require a passcode.
	PasscodeRequired *bool `json:"passcodeRequired,omitempty"`

	// Minimum IOS version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	isExplicitNullOsMinimumVersion bool `json:"-"`
	// Maximum IOS version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	isExplicitNullOsMaximumVersion bool `json:"-"`
	// Devices must not be jailbroken or rooted.
	SecurityBlockJailbrokenDevices *bool `json:"securityBlockJailbrokenDevices,omitempty"`

	// Require that devices have enabled device threat protection .
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`

	// Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *AnyOfmicrosoftGraphDeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`

	// Indicates whether or not to require a managed email profile.
	ManagedEmailProfileRequired *bool `json:"managedEmailProfileRequired,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphIosCompliancePolicy) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphIosCompliancePolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphIosCompliancePolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetVersionOk() (int32, bool) {
	if o == nil || o.Version == nil {
		var ret int32
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MicrosoftGraphIosCompliancePolicy) SetVersion(v int32) {
	o.Version = &v
}

// GetScheduledActionsForRule returns the ScheduledActionsForRule field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetScheduledActionsForRule() []MicrosoftGraphDeviceComplianceScheduledActionForRule {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret
	}
	return *o.ScheduledActionsForRule
}

// GetScheduledActionsForRuleOk returns a tuple with the ScheduledActionsForRule field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetScheduledActionsForRuleOk() ([]MicrosoftGraphDeviceComplianceScheduledActionForRule, bool) {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret, false
	}
	return *o.ScheduledActionsForRule, true
}

// HasScheduledActionsForRule returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasScheduledActionsForRule() bool {
	if o != nil && o.ScheduledActionsForRule != nil {
		return true
	}

	return false
}

// SetScheduledActionsForRule gets a reference to the given []MicrosoftGraphDeviceComplianceScheduledActionForRule and assigns it to the ScheduledActionsForRule field.
func (o *MicrosoftGraphIosCompliancePolicy) SetScheduledActionsForRule(v []MicrosoftGraphDeviceComplianceScheduledActionForRule) {
	o.ScheduledActionsForRule = &v
}

// GetDeviceStatuses returns the DeviceStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceStatuses() []MicrosoftGraphDeviceComplianceDeviceStatus {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret
	}
	return *o.DeviceStatuses
}

// GetDeviceStatusesOk returns a tuple with the DeviceStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceStatusesOk() ([]MicrosoftGraphDeviceComplianceDeviceStatus, bool) {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret, false
	}
	return *o.DeviceStatuses, true
}

// HasDeviceStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDeviceStatuses() bool {
	if o != nil && o.DeviceStatuses != nil {
		return true
	}

	return false
}

// SetDeviceStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceDeviceStatus and assigns it to the DeviceStatuses field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceStatuses(v []MicrosoftGraphDeviceComplianceDeviceStatus) {
	o.DeviceStatuses = &v
}

// GetUserStatuses returns the UserStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetUserStatuses() []MicrosoftGraphDeviceComplianceUserStatus {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret
	}
	return *o.UserStatuses
}

// GetUserStatusesOk returns a tuple with the UserStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetUserStatusesOk() ([]MicrosoftGraphDeviceComplianceUserStatus, bool) {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret, false
	}
	return *o.UserStatuses, true
}

// HasUserStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasUserStatuses() bool {
	if o != nil && o.UserStatuses != nil {
		return true
	}

	return false
}

// SetUserStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceUserStatus and assigns it to the UserStatuses field.
func (o *MicrosoftGraphIosCompliancePolicy) SetUserStatuses(v []MicrosoftGraphDeviceComplianceUserStatus) {
	o.UserStatuses = &v
}

// GetDeviceStatusOverview returns the DeviceStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceStatusOverview() AnyOfmicrosoftGraphDeviceComplianceDeviceOverview {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret
	}
	return *o.DeviceStatusOverview
}

// GetDeviceStatusOverviewOk returns a tuple with the DeviceStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceDeviceOverview, bool) {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret, false
	}
	return *o.DeviceStatusOverview, true
}

// HasDeviceStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDeviceStatusOverview() bool {
	if o != nil && o.DeviceStatusOverview != nil {
		return true
	}

	return false
}

// SetDeviceStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceDeviceOverview and assigns it to the DeviceStatusOverview field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceDeviceOverview) {
	o.DeviceStatusOverview = &v
}

// SetDeviceStatusOverviewExplicitNull (un)sets DeviceStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceStatusOverviewExplicitNull(b bool) {
	o.DeviceStatusOverview = nil
	o.isExplicitNullDeviceStatusOverview = b
}
// GetUserStatusOverview returns the UserStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetUserStatusOverview() AnyOfmicrosoftGraphDeviceComplianceUserOverview {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret
	}
	return *o.UserStatusOverview
}

// GetUserStatusOverviewOk returns a tuple with the UserStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetUserStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceUserOverview, bool) {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret, false
	}
	return *o.UserStatusOverview, true
}

// HasUserStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasUserStatusOverview() bool {
	if o != nil && o.UserStatusOverview != nil {
		return true
	}

	return false
}

// SetUserStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceUserOverview and assigns it to the UserStatusOverview field.
func (o *MicrosoftGraphIosCompliancePolicy) SetUserStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceUserOverview) {
	o.UserStatusOverview = &v
}

// SetUserStatusOverviewExplicitNull (un)sets UserStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetUserStatusOverviewExplicitNull(b bool) {
	o.UserStatusOverview = nil
	o.isExplicitNullUserStatusOverview = b
}
// GetDeviceSettingStateSummaries returns the DeviceSettingStateSummaries field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceSettingStateSummaries() []MicrosoftGraphSettingStateDeviceSummary {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret
	}
	return *o.DeviceSettingStateSummaries
}

// GetDeviceSettingStateSummariesOk returns a tuple with the DeviceSettingStateSummaries field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceSettingStateSummariesOk() ([]MicrosoftGraphSettingStateDeviceSummary, bool) {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret, false
	}
	return *o.DeviceSettingStateSummaries, true
}

// HasDeviceSettingStateSummaries returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDeviceSettingStateSummaries() bool {
	if o != nil && o.DeviceSettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceSettingStateSummaries gets a reference to the given []MicrosoftGraphSettingStateDeviceSummary and assigns it to the DeviceSettingStateSummaries field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceSettingStateSummaries(v []MicrosoftGraphSettingStateDeviceSummary) {
	o.DeviceSettingStateSummaries = &v
}

// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetAssignments() []MicrosoftGraphDeviceCompliancePolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetAssignmentsOk() ([]MicrosoftGraphDeviceCompliancePolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphIosCompliancePolicy) SetAssignments(v []MicrosoftGraphDeviceCompliancePolicyAssignment) {
	o.Assignments = &v
}

// GetPasscodeBlockSimple returns the PasscodeBlockSimple field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeBlockSimple() bool {
	if o == nil || o.PasscodeBlockSimple == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeBlockSimple
}

// GetPasscodeBlockSimpleOk returns a tuple with the PasscodeBlockSimple field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeBlockSimpleOk() (bool, bool) {
	if o == nil || o.PasscodeBlockSimple == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeBlockSimple, true
}

// HasPasscodeBlockSimple returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeBlockSimple() bool {
	if o != nil && o.PasscodeBlockSimple != nil {
		return true
	}

	return false
}

// SetPasscodeBlockSimple gets a reference to the given bool and assigns it to the PasscodeBlockSimple field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeBlockSimple(v bool) {
	o.PasscodeBlockSimple = &v
}

// GetPasscodeExpirationDays returns the PasscodeExpirationDays field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeExpirationDays() int32 {
	if o == nil || o.PasscodeExpirationDays == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeExpirationDays
}

// GetPasscodeExpirationDaysOk returns a tuple with the PasscodeExpirationDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeExpirationDaysOk() (int32, bool) {
	if o == nil || o.PasscodeExpirationDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeExpirationDays, true
}

// HasPasscodeExpirationDays returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeExpirationDays() bool {
	if o != nil && o.PasscodeExpirationDays != nil {
		return true
	}

	return false
}

// SetPasscodeExpirationDays gets a reference to the given int32 and assigns it to the PasscodeExpirationDays field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeExpirationDays(v int32) {
	o.PasscodeExpirationDays = &v
}

// SetPasscodeExpirationDaysExplicitNull (un)sets PasscodeExpirationDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeExpirationDays value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeExpirationDaysExplicitNull(b bool) {
	o.PasscodeExpirationDays = nil
	o.isExplicitNullPasscodeExpirationDays = b
}
// GetPasscodeMinimumLength returns the PasscodeMinimumLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinimumLength() int32 {
	if o == nil || o.PasscodeMinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinimumLength
}

// GetPasscodeMinimumLengthOk returns a tuple with the PasscodeMinimumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinimumLengthOk() (int32, bool) {
	if o == nil || o.PasscodeMinimumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinimumLength, true
}

// HasPasscodeMinimumLength returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeMinimumLength() bool {
	if o != nil && o.PasscodeMinimumLength != nil {
		return true
	}

	return false
}

// SetPasscodeMinimumLength gets a reference to the given int32 and assigns it to the PasscodeMinimumLength field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinimumLength(v int32) {
	o.PasscodeMinimumLength = &v
}

// SetPasscodeMinimumLengthExplicitNull (un)sets PasscodeMinimumLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinimumLength value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinimumLengthExplicitNull(b bool) {
	o.PasscodeMinimumLength = nil
	o.isExplicitNullPasscodeMinimumLength = b
}
// GetPasscodeMinutesOfInactivityBeforeLock returns the PasscodeMinutesOfInactivityBeforeLock field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinutesOfInactivityBeforeLock() int32 {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinutesOfInactivityBeforeLock
}

// GetPasscodeMinutesOfInactivityBeforeLockOk returns a tuple with the PasscodeMinutesOfInactivityBeforeLock field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinutesOfInactivityBeforeLockOk() (int32, bool) {
	if o == nil || o.PasscodeMinutesOfInactivityBeforeLock == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinutesOfInactivityBeforeLock, true
}

// HasPasscodeMinutesOfInactivityBeforeLock returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeMinutesOfInactivityBeforeLock() bool {
	if o != nil && o.PasscodeMinutesOfInactivityBeforeLock != nil {
		return true
	}

	return false
}

// SetPasscodeMinutesOfInactivityBeforeLock gets a reference to the given int32 and assigns it to the PasscodeMinutesOfInactivityBeforeLock field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinutesOfInactivityBeforeLock(v int32) {
	o.PasscodeMinutesOfInactivityBeforeLock = &v
}

// SetPasscodeMinutesOfInactivityBeforeLockExplicitNull (un)sets PasscodeMinutesOfInactivityBeforeLock to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinutesOfInactivityBeforeLock value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinutesOfInactivityBeforeLockExplicitNull(b bool) {
	o.PasscodeMinutesOfInactivityBeforeLock = nil
	o.isExplicitNullPasscodeMinutesOfInactivityBeforeLock = b
}
// GetPasscodePreviousPasscodeBlockCount returns the PasscodePreviousPasscodeBlockCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodePreviousPasscodeBlockCount() int32 {
	if o == nil || o.PasscodePreviousPasscodeBlockCount == nil {
		var ret int32
		return ret
	}
	return *o.PasscodePreviousPasscodeBlockCount
}

// GetPasscodePreviousPasscodeBlockCountOk returns a tuple with the PasscodePreviousPasscodeBlockCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodePreviousPasscodeBlockCountOk() (int32, bool) {
	if o == nil || o.PasscodePreviousPasscodeBlockCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodePreviousPasscodeBlockCount, true
}

// HasPasscodePreviousPasscodeBlockCount returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodePreviousPasscodeBlockCount() bool {
	if o != nil && o.PasscodePreviousPasscodeBlockCount != nil {
		return true
	}

	return false
}

// SetPasscodePreviousPasscodeBlockCount gets a reference to the given int32 and assigns it to the PasscodePreviousPasscodeBlockCount field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodePreviousPasscodeBlockCount(v int32) {
	o.PasscodePreviousPasscodeBlockCount = &v
}

// SetPasscodePreviousPasscodeBlockCountExplicitNull (un)sets PasscodePreviousPasscodeBlockCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodePreviousPasscodeBlockCount value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodePreviousPasscodeBlockCountExplicitNull(b bool) {
	o.PasscodePreviousPasscodeBlockCount = nil
	o.isExplicitNullPasscodePreviousPasscodeBlockCount = b
}
// GetPasscodeMinimumCharacterSetCount returns the PasscodeMinimumCharacterSetCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinimumCharacterSetCount() int32 {
	if o == nil || o.PasscodeMinimumCharacterSetCount == nil {
		var ret int32
		return ret
	}
	return *o.PasscodeMinimumCharacterSetCount
}

// GetPasscodeMinimumCharacterSetCountOk returns a tuple with the PasscodeMinimumCharacterSetCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeMinimumCharacterSetCountOk() (int32, bool) {
	if o == nil || o.PasscodeMinimumCharacterSetCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasscodeMinimumCharacterSetCount, true
}

// HasPasscodeMinimumCharacterSetCount returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeMinimumCharacterSetCount() bool {
	if o != nil && o.PasscodeMinimumCharacterSetCount != nil {
		return true
	}

	return false
}

// SetPasscodeMinimumCharacterSetCount gets a reference to the given int32 and assigns it to the PasscodeMinimumCharacterSetCount field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinimumCharacterSetCount(v int32) {
	o.PasscodeMinimumCharacterSetCount = &v
}

// SetPasscodeMinimumCharacterSetCountExplicitNull (un)sets PasscodeMinimumCharacterSetCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasscodeMinimumCharacterSetCount value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeMinimumCharacterSetCountExplicitNull(b bool) {
	o.PasscodeMinimumCharacterSetCount = nil
	o.isExplicitNullPasscodeMinimumCharacterSetCount = b
}
// GetPasscodeRequiredType returns the PasscodeRequiredType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeRequiredType() AnyOfmicrosoftGraphRequiredPasswordType {
	if o == nil || o.PasscodeRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret
	}
	return *o.PasscodeRequiredType
}

// GetPasscodeRequiredTypeOk returns a tuple with the PasscodeRequiredType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeRequiredTypeOk() (AnyOfmicrosoftGraphRequiredPasswordType, bool) {
	if o == nil || o.PasscodeRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret, false
	}
	return *o.PasscodeRequiredType, true
}

// HasPasscodeRequiredType returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeRequiredType() bool {
	if o != nil && o.PasscodeRequiredType != nil {
		return true
	}

	return false
}

// SetPasscodeRequiredType gets a reference to the given AnyOfmicrosoftGraphRequiredPasswordType and assigns it to the PasscodeRequiredType field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeRequiredType(v AnyOfmicrosoftGraphRequiredPasswordType) {
	o.PasscodeRequiredType = &v
}

// GetPasscodeRequired returns the PasscodeRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeRequired() bool {
	if o == nil || o.PasscodeRequired == nil {
		var ret bool
		return ret
	}
	return *o.PasscodeRequired
}

// GetPasscodeRequiredOk returns a tuple with the PasscodeRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetPasscodeRequiredOk() (bool, bool) {
	if o == nil || o.PasscodeRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.PasscodeRequired, true
}

// HasPasscodeRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasPasscodeRequired() bool {
	if o != nil && o.PasscodeRequired != nil {
		return true
	}

	return false
}

// SetPasscodeRequired gets a reference to the given bool and assigns it to the PasscodeRequired field.
func (o *MicrosoftGraphIosCompliancePolicy) SetPasscodeRequired(v bool) {
	o.PasscodeRequired = &v
}

// GetOsMinimumVersion returns the OsMinimumVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetOsMinimumVersion() string {
	if o == nil || o.OsMinimumVersion == nil {
		var ret string
		return ret
	}
	return *o.OsMinimumVersion
}

// GetOsMinimumVersionOk returns a tuple with the OsMinimumVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetOsMinimumVersionOk() (string, bool) {
	if o == nil || o.OsMinimumVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OsMinimumVersion, true
}

// HasOsMinimumVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasOsMinimumVersion() bool {
	if o != nil && o.OsMinimumVersion != nil {
		return true
	}

	return false
}

// SetOsMinimumVersion gets a reference to the given string and assigns it to the OsMinimumVersion field.
func (o *MicrosoftGraphIosCompliancePolicy) SetOsMinimumVersion(v string) {
	o.OsMinimumVersion = &v
}

// SetOsMinimumVersionExplicitNull (un)sets OsMinimumVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OsMinimumVersion value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetOsMinimumVersionExplicitNull(b bool) {
	o.OsMinimumVersion = nil
	o.isExplicitNullOsMinimumVersion = b
}
// GetOsMaximumVersion returns the OsMaximumVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetOsMaximumVersion() string {
	if o == nil || o.OsMaximumVersion == nil {
		var ret string
		return ret
	}
	return *o.OsMaximumVersion
}

// GetOsMaximumVersionOk returns a tuple with the OsMaximumVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetOsMaximumVersionOk() (string, bool) {
	if o == nil || o.OsMaximumVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OsMaximumVersion, true
}

// HasOsMaximumVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasOsMaximumVersion() bool {
	if o != nil && o.OsMaximumVersion != nil {
		return true
	}

	return false
}

// SetOsMaximumVersion gets a reference to the given string and assigns it to the OsMaximumVersion field.
func (o *MicrosoftGraphIosCompliancePolicy) SetOsMaximumVersion(v string) {
	o.OsMaximumVersion = &v
}

// SetOsMaximumVersionExplicitNull (un)sets OsMaximumVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OsMaximumVersion value is set to nil even if false is passed
func (o *MicrosoftGraphIosCompliancePolicy) SetOsMaximumVersionExplicitNull(b bool) {
	o.OsMaximumVersion = nil
	o.isExplicitNullOsMaximumVersion = b
}
// GetSecurityBlockJailbrokenDevices returns the SecurityBlockJailbrokenDevices field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetSecurityBlockJailbrokenDevices() bool {
	if o == nil || o.SecurityBlockJailbrokenDevices == nil {
		var ret bool
		return ret
	}
	return *o.SecurityBlockJailbrokenDevices
}

// GetSecurityBlockJailbrokenDevicesOk returns a tuple with the SecurityBlockJailbrokenDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetSecurityBlockJailbrokenDevicesOk() (bool, bool) {
	if o == nil || o.SecurityBlockJailbrokenDevices == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityBlockJailbrokenDevices, true
}

// HasSecurityBlockJailbrokenDevices returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasSecurityBlockJailbrokenDevices() bool {
	if o != nil && o.SecurityBlockJailbrokenDevices != nil {
		return true
	}

	return false
}

// SetSecurityBlockJailbrokenDevices gets a reference to the given bool and assigns it to the SecurityBlockJailbrokenDevices field.
func (o *MicrosoftGraphIosCompliancePolicy) SetSecurityBlockJailbrokenDevices(v bool) {
	o.SecurityBlockJailbrokenDevices = &v
}

// GetDeviceThreatProtectionEnabled returns the DeviceThreatProtectionEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceThreatProtectionEnabled() bool {
	if o == nil || o.DeviceThreatProtectionEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DeviceThreatProtectionEnabled
}

// GetDeviceThreatProtectionEnabledOk returns a tuple with the DeviceThreatProtectionEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceThreatProtectionEnabledOk() (bool, bool) {
	if o == nil || o.DeviceThreatProtectionEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.DeviceThreatProtectionEnabled, true
}

// HasDeviceThreatProtectionEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDeviceThreatProtectionEnabled() bool {
	if o != nil && o.DeviceThreatProtectionEnabled != nil {
		return true
	}

	return false
}

// SetDeviceThreatProtectionEnabled gets a reference to the given bool and assigns it to the DeviceThreatProtectionEnabled field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceThreatProtectionEnabled(v bool) {
	o.DeviceThreatProtectionEnabled = &v
}

// GetDeviceThreatProtectionRequiredSecurityLevel returns the DeviceThreatProtectionRequiredSecurityLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceThreatProtectionRequiredSecurityLevel() AnyOfmicrosoftGraphDeviceThreatProtectionLevel {
	if o == nil || o.DeviceThreatProtectionRequiredSecurityLevel == nil {
		var ret AnyOfmicrosoftGraphDeviceThreatProtectionLevel
		return ret
	}
	return *o.DeviceThreatProtectionRequiredSecurityLevel
}

// GetDeviceThreatProtectionRequiredSecurityLevelOk returns a tuple with the DeviceThreatProtectionRequiredSecurityLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetDeviceThreatProtectionRequiredSecurityLevelOk() (AnyOfmicrosoftGraphDeviceThreatProtectionLevel, bool) {
	if o == nil || o.DeviceThreatProtectionRequiredSecurityLevel == nil {
		var ret AnyOfmicrosoftGraphDeviceThreatProtectionLevel
		return ret, false
	}
	return *o.DeviceThreatProtectionRequiredSecurityLevel, true
}

// HasDeviceThreatProtectionRequiredSecurityLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasDeviceThreatProtectionRequiredSecurityLevel() bool {
	if o != nil && o.DeviceThreatProtectionRequiredSecurityLevel != nil {
		return true
	}

	return false
}

// SetDeviceThreatProtectionRequiredSecurityLevel gets a reference to the given AnyOfmicrosoftGraphDeviceThreatProtectionLevel and assigns it to the DeviceThreatProtectionRequiredSecurityLevel field.
func (o *MicrosoftGraphIosCompliancePolicy) SetDeviceThreatProtectionRequiredSecurityLevel(v AnyOfmicrosoftGraphDeviceThreatProtectionLevel) {
	o.DeviceThreatProtectionRequiredSecurityLevel = &v
}

// GetManagedEmailProfileRequired returns the ManagedEmailProfileRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosCompliancePolicy) GetManagedEmailProfileRequired() bool {
	if o == nil || o.ManagedEmailProfileRequired == nil {
		var ret bool
		return ret
	}
	return *o.ManagedEmailProfileRequired
}

// GetManagedEmailProfileRequiredOk returns a tuple with the ManagedEmailProfileRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosCompliancePolicy) GetManagedEmailProfileRequiredOk() (bool, bool) {
	if o == nil || o.ManagedEmailProfileRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.ManagedEmailProfileRequired, true
}

// HasManagedEmailProfileRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphIosCompliancePolicy) HasManagedEmailProfileRequired() bool {
	if o != nil && o.ManagedEmailProfileRequired != nil {
		return true
	}

	return false
}

// SetManagedEmailProfileRequired gets a reference to the given bool and assigns it to the ManagedEmailProfileRequired field.
func (o *MicrosoftGraphIosCompliancePolicy) SetManagedEmailProfileRequired(v bool) {
	o.ManagedEmailProfileRequired = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphIosCompliancePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.ScheduledActionsForRule != nil {
		toSerialize["scheduledActionsForRule"] = o.ScheduledActionsForRule
	}
	if o.DeviceStatuses != nil {
		toSerialize["deviceStatuses"] = o.DeviceStatuses
	}
	if o.UserStatuses != nil {
		toSerialize["userStatuses"] = o.UserStatuses
	}
	if o.DeviceStatusOverview == nil {
		if o.isExplicitNullDeviceStatusOverview {
			toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
		}
	} else {
		toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
	}
	if o.UserStatusOverview == nil {
		if o.isExplicitNullUserStatusOverview {
			toSerialize["userStatusOverview"] = o.UserStatusOverview
		}
	} else {
		toSerialize["userStatusOverview"] = o.UserStatusOverview
	}
	if o.DeviceSettingStateSummaries != nil {
		toSerialize["deviceSettingStateSummaries"] = o.DeviceSettingStateSummaries
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.PasscodeBlockSimple != nil {
		toSerialize["passcodeBlockSimple"] = o.PasscodeBlockSimple
	}
	if o.PasscodeExpirationDays == nil {
		if o.isExplicitNullPasscodeExpirationDays {
			toSerialize["passcodeExpirationDays"] = o.PasscodeExpirationDays
		}
	} else {
		toSerialize["passcodeExpirationDays"] = o.PasscodeExpirationDays
	}
	if o.PasscodeMinimumLength == nil {
		if o.isExplicitNullPasscodeMinimumLength {
			toSerialize["passcodeMinimumLength"] = o.PasscodeMinimumLength
		}
	} else {
		toSerialize["passcodeMinimumLength"] = o.PasscodeMinimumLength
	}
	if o.PasscodeMinutesOfInactivityBeforeLock == nil {
		if o.isExplicitNullPasscodeMinutesOfInactivityBeforeLock {
			toSerialize["passcodeMinutesOfInactivityBeforeLock"] = o.PasscodeMinutesOfInactivityBeforeLock
		}
	} else {
		toSerialize["passcodeMinutesOfInactivityBeforeLock"] = o.PasscodeMinutesOfInactivityBeforeLock
	}
	if o.PasscodePreviousPasscodeBlockCount == nil {
		if o.isExplicitNullPasscodePreviousPasscodeBlockCount {
			toSerialize["passcodePreviousPasscodeBlockCount"] = o.PasscodePreviousPasscodeBlockCount
		}
	} else {
		toSerialize["passcodePreviousPasscodeBlockCount"] = o.PasscodePreviousPasscodeBlockCount
	}
	if o.PasscodeMinimumCharacterSetCount == nil {
		if o.isExplicitNullPasscodeMinimumCharacterSetCount {
			toSerialize["passcodeMinimumCharacterSetCount"] = o.PasscodeMinimumCharacterSetCount
		}
	} else {
		toSerialize["passcodeMinimumCharacterSetCount"] = o.PasscodeMinimumCharacterSetCount
	}
	if o.PasscodeRequiredType != nil {
		toSerialize["passcodeRequiredType"] = o.PasscodeRequiredType
	}
	if o.PasscodeRequired != nil {
		toSerialize["passcodeRequired"] = o.PasscodeRequired
	}
	if o.OsMinimumVersion == nil {
		if o.isExplicitNullOsMinimumVersion {
			toSerialize["osMinimumVersion"] = o.OsMinimumVersion
		}
	} else {
		toSerialize["osMinimumVersion"] = o.OsMinimumVersion
	}
	if o.OsMaximumVersion == nil {
		if o.isExplicitNullOsMaximumVersion {
			toSerialize["osMaximumVersion"] = o.OsMaximumVersion
		}
	} else {
		toSerialize["osMaximumVersion"] = o.OsMaximumVersion
	}
	if o.SecurityBlockJailbrokenDevices != nil {
		toSerialize["securityBlockJailbrokenDevices"] = o.SecurityBlockJailbrokenDevices
	}
	if o.DeviceThreatProtectionEnabled != nil {
		toSerialize["deviceThreatProtectionEnabled"] = o.DeviceThreatProtectionEnabled
	}
	if o.DeviceThreatProtectionRequiredSecurityLevel != nil {
		toSerialize["deviceThreatProtectionRequiredSecurityLevel"] = o.DeviceThreatProtectionRequiredSecurityLevel
	}
	if o.ManagedEmailProfileRequired != nil {
		toSerialize["managedEmailProfileRequired"] = o.ManagedEmailProfileRequired
	}
	return json.Marshal(toSerialize)
}


