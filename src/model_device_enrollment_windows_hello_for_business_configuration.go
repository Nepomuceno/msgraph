/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// DeviceEnrollmentWindowsHelloForBusinessConfiguration struct for DeviceEnrollmentWindowsHelloForBusinessConfiguration
type DeviceEnrollmentWindowsHelloForBusinessConfiguration struct {
	PinMinimumLength *int32 `json:"pinMinimumLength,omitempty"`

	PinMaximumLength *int32 `json:"pinMaximumLength,omitempty"`

	PinUppercaseCharactersUsage *AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage `json:"pinUppercaseCharactersUsage,omitempty"`

	PinLowercaseCharactersUsage *AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage `json:"pinLowercaseCharactersUsage,omitempty"`

	PinSpecialCharactersUsage *AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage `json:"pinSpecialCharactersUsage,omitempty"`

	State *AnyOfmicrosoftGraphEnablement `json:"state,omitempty"`

	SecurityDeviceRequired *bool `json:"securityDeviceRequired,omitempty"`

	UnlockWithBiometricsEnabled *bool `json:"unlockWithBiometricsEnabled,omitempty"`

	RemotePassportEnabled *bool `json:"remotePassportEnabled,omitempty"`

	PinPreviousBlockCount *int32 `json:"pinPreviousBlockCount,omitempty"`

	PinExpirationInDays *int32 `json:"pinExpirationInDays,omitempty"`

	EnhancedBiometricsState *AnyOfmicrosoftGraphEnablement `json:"enhancedBiometricsState,omitempty"`

}

// GetPinMinimumLength returns the PinMinimumLength field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinMinimumLength() int32 {
	if o == nil || o.PinMinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.PinMinimumLength
}

// GetPinMinimumLengthOk returns a tuple with the PinMinimumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinMinimumLengthOk() (int32, bool) {
	if o == nil || o.PinMinimumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PinMinimumLength, true
}

// HasPinMinimumLength returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinMinimumLength() bool {
	if o != nil && o.PinMinimumLength != nil {
		return true
	}

	return false
}

// SetPinMinimumLength gets a reference to the given int32 and assigns it to the PinMinimumLength field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinMinimumLength(v int32) {
	o.PinMinimumLength = &v
}

// GetPinMaximumLength returns the PinMaximumLength field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinMaximumLength() int32 {
	if o == nil || o.PinMaximumLength == nil {
		var ret int32
		return ret
	}
	return *o.PinMaximumLength
}

// GetPinMaximumLengthOk returns a tuple with the PinMaximumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinMaximumLengthOk() (int32, bool) {
	if o == nil || o.PinMaximumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PinMaximumLength, true
}

// HasPinMaximumLength returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinMaximumLength() bool {
	if o != nil && o.PinMaximumLength != nil {
		return true
	}

	return false
}

// SetPinMaximumLength gets a reference to the given int32 and assigns it to the PinMaximumLength field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinMaximumLength(v int32) {
	o.PinMaximumLength = &v
}

// GetPinUppercaseCharactersUsage returns the PinUppercaseCharactersUsage field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinUppercaseCharactersUsage() AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage {
	if o == nil || o.PinUppercaseCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret
	}
	return *o.PinUppercaseCharactersUsage
}

// GetPinUppercaseCharactersUsageOk returns a tuple with the PinUppercaseCharactersUsage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinUppercaseCharactersUsageOk() (AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage, bool) {
	if o == nil || o.PinUppercaseCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret, false
	}
	return *o.PinUppercaseCharactersUsage, true
}

// HasPinUppercaseCharactersUsage returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinUppercaseCharactersUsage() bool {
	if o != nil && o.PinUppercaseCharactersUsage != nil {
		return true
	}

	return false
}

// SetPinUppercaseCharactersUsage gets a reference to the given AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage and assigns it to the PinUppercaseCharactersUsage field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinUppercaseCharactersUsage(v AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage) {
	o.PinUppercaseCharactersUsage = &v
}

// GetPinLowercaseCharactersUsage returns the PinLowercaseCharactersUsage field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinLowercaseCharactersUsage() AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage {
	if o == nil || o.PinLowercaseCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret
	}
	return *o.PinLowercaseCharactersUsage
}

// GetPinLowercaseCharactersUsageOk returns a tuple with the PinLowercaseCharactersUsage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinLowercaseCharactersUsageOk() (AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage, bool) {
	if o == nil || o.PinLowercaseCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret, false
	}
	return *o.PinLowercaseCharactersUsage, true
}

// HasPinLowercaseCharactersUsage returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinLowercaseCharactersUsage() bool {
	if o != nil && o.PinLowercaseCharactersUsage != nil {
		return true
	}

	return false
}

// SetPinLowercaseCharactersUsage gets a reference to the given AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage and assigns it to the PinLowercaseCharactersUsage field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinLowercaseCharactersUsage(v AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage) {
	o.PinLowercaseCharactersUsage = &v
}

// GetPinSpecialCharactersUsage returns the PinSpecialCharactersUsage field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinSpecialCharactersUsage() AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage {
	if o == nil || o.PinSpecialCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret
	}
	return *o.PinSpecialCharactersUsage
}

// GetPinSpecialCharactersUsageOk returns a tuple with the PinSpecialCharactersUsage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinSpecialCharactersUsageOk() (AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage, bool) {
	if o == nil || o.PinSpecialCharactersUsage == nil {
		var ret AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage
		return ret, false
	}
	return *o.PinSpecialCharactersUsage, true
}

// HasPinSpecialCharactersUsage returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinSpecialCharactersUsage() bool {
	if o != nil && o.PinSpecialCharactersUsage != nil {
		return true
	}

	return false
}

// SetPinSpecialCharactersUsage gets a reference to the given AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage and assigns it to the PinSpecialCharactersUsage field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinSpecialCharactersUsage(v AnyOfmicrosoftGraphWindowsHelloForBusinessPinUsage) {
	o.PinSpecialCharactersUsage = &v
}

// GetState returns the State field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetState() AnyOfmicrosoftGraphEnablement {
	if o == nil || o.State == nil {
		var ret AnyOfmicrosoftGraphEnablement
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetStateOk() (AnyOfmicrosoftGraphEnablement, bool) {
	if o == nil || o.State == nil {
		var ret AnyOfmicrosoftGraphEnablement
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given AnyOfmicrosoftGraphEnablement and assigns it to the State field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetState(v AnyOfmicrosoftGraphEnablement) {
	o.State = &v
}

// GetSecurityDeviceRequired returns the SecurityDeviceRequired field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetSecurityDeviceRequired() bool {
	if o == nil || o.SecurityDeviceRequired == nil {
		var ret bool
		return ret
	}
	return *o.SecurityDeviceRequired
}

// GetSecurityDeviceRequiredOk returns a tuple with the SecurityDeviceRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetSecurityDeviceRequiredOk() (bool, bool) {
	if o == nil || o.SecurityDeviceRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityDeviceRequired, true
}

// HasSecurityDeviceRequired returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasSecurityDeviceRequired() bool {
	if o != nil && o.SecurityDeviceRequired != nil {
		return true
	}

	return false
}

// SetSecurityDeviceRequired gets a reference to the given bool and assigns it to the SecurityDeviceRequired field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetSecurityDeviceRequired(v bool) {
	o.SecurityDeviceRequired = &v
}

// GetUnlockWithBiometricsEnabled returns the UnlockWithBiometricsEnabled field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetUnlockWithBiometricsEnabled() bool {
	if o == nil || o.UnlockWithBiometricsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.UnlockWithBiometricsEnabled
}

// GetUnlockWithBiometricsEnabledOk returns a tuple with the UnlockWithBiometricsEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetUnlockWithBiometricsEnabledOk() (bool, bool) {
	if o == nil || o.UnlockWithBiometricsEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.UnlockWithBiometricsEnabled, true
}

// HasUnlockWithBiometricsEnabled returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasUnlockWithBiometricsEnabled() bool {
	if o != nil && o.UnlockWithBiometricsEnabled != nil {
		return true
	}

	return false
}

// SetUnlockWithBiometricsEnabled gets a reference to the given bool and assigns it to the UnlockWithBiometricsEnabled field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetUnlockWithBiometricsEnabled(v bool) {
	o.UnlockWithBiometricsEnabled = &v
}

// GetRemotePassportEnabled returns the RemotePassportEnabled field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetRemotePassportEnabled() bool {
	if o == nil || o.RemotePassportEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RemotePassportEnabled
}

// GetRemotePassportEnabledOk returns a tuple with the RemotePassportEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetRemotePassportEnabledOk() (bool, bool) {
	if o == nil || o.RemotePassportEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.RemotePassportEnabled, true
}

// HasRemotePassportEnabled returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasRemotePassportEnabled() bool {
	if o != nil && o.RemotePassportEnabled != nil {
		return true
	}

	return false
}

// SetRemotePassportEnabled gets a reference to the given bool and assigns it to the RemotePassportEnabled field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetRemotePassportEnabled(v bool) {
	o.RemotePassportEnabled = &v
}

// GetPinPreviousBlockCount returns the PinPreviousBlockCount field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinPreviousBlockCount() int32 {
	if o == nil || o.PinPreviousBlockCount == nil {
		var ret int32
		return ret
	}
	return *o.PinPreviousBlockCount
}

// GetPinPreviousBlockCountOk returns a tuple with the PinPreviousBlockCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinPreviousBlockCountOk() (int32, bool) {
	if o == nil || o.PinPreviousBlockCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PinPreviousBlockCount, true
}

// HasPinPreviousBlockCount returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinPreviousBlockCount() bool {
	if o != nil && o.PinPreviousBlockCount != nil {
		return true
	}

	return false
}

// SetPinPreviousBlockCount gets a reference to the given int32 and assigns it to the PinPreviousBlockCount field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinPreviousBlockCount(v int32) {
	o.PinPreviousBlockCount = &v
}

// GetPinExpirationInDays returns the PinExpirationInDays field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinExpirationInDays() int32 {
	if o == nil || o.PinExpirationInDays == nil {
		var ret int32
		return ret
	}
	return *o.PinExpirationInDays
}

// GetPinExpirationInDaysOk returns a tuple with the PinExpirationInDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetPinExpirationInDaysOk() (int32, bool) {
	if o == nil || o.PinExpirationInDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PinExpirationInDays, true
}

// HasPinExpirationInDays returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasPinExpirationInDays() bool {
	if o != nil && o.PinExpirationInDays != nil {
		return true
	}

	return false
}

// SetPinExpirationInDays gets a reference to the given int32 and assigns it to the PinExpirationInDays field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetPinExpirationInDays(v int32) {
	o.PinExpirationInDays = &v
}

// GetEnhancedBiometricsState returns the EnhancedBiometricsState field if non-nil, zero value otherwise.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetEnhancedBiometricsState() AnyOfmicrosoftGraphEnablement {
	if o == nil || o.EnhancedBiometricsState == nil {
		var ret AnyOfmicrosoftGraphEnablement
		return ret
	}
	return *o.EnhancedBiometricsState
}

// GetEnhancedBiometricsStateOk returns a tuple with the EnhancedBiometricsState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) GetEnhancedBiometricsStateOk() (AnyOfmicrosoftGraphEnablement, bool) {
	if o == nil || o.EnhancedBiometricsState == nil {
		var ret AnyOfmicrosoftGraphEnablement
		return ret, false
	}
	return *o.EnhancedBiometricsState, true
}

// HasEnhancedBiometricsState returns a boolean if a field has been set.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) HasEnhancedBiometricsState() bool {
	if o != nil && o.EnhancedBiometricsState != nil {
		return true
	}

	return false
}

// SetEnhancedBiometricsState gets a reference to the given AnyOfmicrosoftGraphEnablement and assigns it to the EnhancedBiometricsState field.
func (o *DeviceEnrollmentWindowsHelloForBusinessConfiguration) SetEnhancedBiometricsState(v AnyOfmicrosoftGraphEnablement) {
	o.EnhancedBiometricsState = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o DeviceEnrollmentWindowsHelloForBusinessConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PinMinimumLength != nil {
		toSerialize["pinMinimumLength"] = o.PinMinimumLength
	}
	if o.PinMaximumLength != nil {
		toSerialize["pinMaximumLength"] = o.PinMaximumLength
	}
	if o.PinUppercaseCharactersUsage != nil {
		toSerialize["pinUppercaseCharactersUsage"] = o.PinUppercaseCharactersUsage
	}
	if o.PinLowercaseCharactersUsage != nil {
		toSerialize["pinLowercaseCharactersUsage"] = o.PinLowercaseCharactersUsage
	}
	if o.PinSpecialCharactersUsage != nil {
		toSerialize["pinSpecialCharactersUsage"] = o.PinSpecialCharactersUsage
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.SecurityDeviceRequired != nil {
		toSerialize["securityDeviceRequired"] = o.SecurityDeviceRequired
	}
	if o.UnlockWithBiometricsEnabled != nil {
		toSerialize["unlockWithBiometricsEnabled"] = o.UnlockWithBiometricsEnabled
	}
	if o.RemotePassportEnabled != nil {
		toSerialize["remotePassportEnabled"] = o.RemotePassportEnabled
	}
	if o.PinPreviousBlockCount != nil {
		toSerialize["pinPreviousBlockCount"] = o.PinPreviousBlockCount
	}
	if o.PinExpirationInDays != nil {
		toSerialize["pinExpirationInDays"] = o.PinExpirationInDays
	}
	if o.EnhancedBiometricsState != nil {
		toSerialize["enhancedBiometricsState"] = o.EnhancedBiometricsState
	}
	return json.Marshal(toSerialize)
}


