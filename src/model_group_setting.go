/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// GroupSetting struct for GroupSetting
type GroupSetting struct {
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	TemplateId *string `json:"templateId,omitempty"`
	isExplicitNullTemplateId bool `json:"-"`
	Values *[]MicrosoftGraphSettingValue `json:"values,omitempty"`

}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *GroupSetting) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GroupSetting) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GroupSetting) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GroupSetting) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *GroupSetting) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetTemplateId returns the TemplateId field if non-nil, zero value otherwise.
func (o *GroupSetting) GetTemplateId() string {
	if o == nil || o.TemplateId == nil {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GroupSetting) GetTemplateIdOk() (string, bool) {
	if o == nil || o.TemplateId == nil {
		var ret string
		return ret, false
	}
	return *o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *GroupSetting) HasTemplateId() bool {
	if o != nil && o.TemplateId != nil {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *GroupSetting) SetTemplateId(v string) {
	o.TemplateId = &v
}

// SetTemplateIdExplicitNull (un)sets TemplateId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TemplateId value is set to nil even if false is passed
func (o *GroupSetting) SetTemplateIdExplicitNull(b bool) {
	o.TemplateId = nil
	o.isExplicitNullTemplateId = b
}
// GetValues returns the Values field if non-nil, zero value otherwise.
func (o *GroupSetting) GetValues() []MicrosoftGraphSettingValue {
	if o == nil || o.Values == nil {
		var ret []MicrosoftGraphSettingValue
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GroupSetting) GetValuesOk() ([]MicrosoftGraphSettingValue, bool) {
	if o == nil || o.Values == nil {
		var ret []MicrosoftGraphSettingValue
		return ret, false
	}
	return *o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *GroupSetting) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []MicrosoftGraphSettingValue and assigns it to the Values field.
func (o *GroupSetting) SetValues(v []MicrosoftGraphSettingValue) {
	o.Values = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o GroupSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.TemplateId == nil {
		if o.isExplicitNullTemplateId {
			toSerialize["templateId"] = o.TemplateId
		}
	} else {
		toSerialize["templateId"] = o.TemplateId
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}


