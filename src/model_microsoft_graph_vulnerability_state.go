/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphVulnerabilityState struct for MicrosoftGraphVulnerabilityState
type MicrosoftGraphVulnerabilityState struct {
	Cve *string `json:"cve,omitempty"`
	isExplicitNullCve bool `json:"-"`
	Severity *string `json:"severity,omitempty"`
	isExplicitNullSeverity bool `json:"-"`
	WasRunning *bool `json:"wasRunning,omitempty"`
	isExplicitNullWasRunning bool `json:"-"`
}

// GetCve returns the Cve field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVulnerabilityState) GetCve() string {
	if o == nil || o.Cve == nil {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVulnerabilityState) GetCveOk() (string, bool) {
	if o == nil || o.Cve == nil {
		var ret string
		return ret, false
	}
	return *o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasCve() bool {
	if o != nil && o.Cve != nil {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *MicrosoftGraphVulnerabilityState) SetCve(v string) {
	o.Cve = &v
}

// SetCveExplicitNull (un)sets Cve to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Cve value is set to nil even if false is passed
func (o *MicrosoftGraphVulnerabilityState) SetCveExplicitNull(b bool) {
	o.Cve = nil
	o.isExplicitNullCve = b
}
// GetSeverity returns the Severity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVulnerabilityState) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVulnerabilityState) GetSeverityOk() (string, bool) {
	if o == nil || o.Severity == nil {
		var ret string
		return ret, false
	}
	return *o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *MicrosoftGraphVulnerabilityState) SetSeverity(v string) {
	o.Severity = &v
}

// SetSeverityExplicitNull (un)sets Severity to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Severity value is set to nil even if false is passed
func (o *MicrosoftGraphVulnerabilityState) SetSeverityExplicitNull(b bool) {
	o.Severity = nil
	o.isExplicitNullSeverity = b
}
// GetWasRunning returns the WasRunning field if non-nil, zero value otherwise.
func (o *MicrosoftGraphVulnerabilityState) GetWasRunning() bool {
	if o == nil || o.WasRunning == nil {
		var ret bool
		return ret
	}
	return *o.WasRunning
}

// GetWasRunningOk returns a tuple with the WasRunning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphVulnerabilityState) GetWasRunningOk() (bool, bool) {
	if o == nil || o.WasRunning == nil {
		var ret bool
		return ret, false
	}
	return *o.WasRunning, true
}

// HasWasRunning returns a boolean if a field has been set.
func (o *MicrosoftGraphVulnerabilityState) HasWasRunning() bool {
	if o != nil && o.WasRunning != nil {
		return true
	}

	return false
}

// SetWasRunning gets a reference to the given bool and assigns it to the WasRunning field.
func (o *MicrosoftGraphVulnerabilityState) SetWasRunning(v bool) {
	o.WasRunning = &v
}

// SetWasRunningExplicitNull (un)sets WasRunning to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WasRunning value is set to nil even if false is passed
func (o *MicrosoftGraphVulnerabilityState) SetWasRunningExplicitNull(b bool) {
	o.WasRunning = nil
	o.isExplicitNullWasRunning = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphVulnerabilityState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cve == nil {
		if o.isExplicitNullCve {
			toSerialize["cve"] = o.Cve
		}
	} else {
		toSerialize["cve"] = o.Cve
	}
	if o.Severity == nil {
		if o.isExplicitNullSeverity {
			toSerialize["severity"] = o.Severity
		}
	} else {
		toSerialize["severity"] = o.Severity
	}
	if o.WasRunning == nil {
		if o.isExplicitNullWasRunning {
			toSerialize["wasRunning"] = o.WasRunning
		}
	} else {
		toSerialize["wasRunning"] = o.WasRunning
	}
	return json.Marshal(toSerialize)
}


