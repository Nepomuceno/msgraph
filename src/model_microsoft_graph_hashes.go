/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphHashes struct for MicrosoftGraphHashes
type MicrosoftGraphHashes struct {
	Crc32Hash *string `json:"crc32Hash,omitempty"`
	isExplicitNullCrc32Hash bool `json:"-"`
	QuickXorHash *string `json:"quickXorHash,omitempty"`
	isExplicitNullQuickXorHash bool `json:"-"`
	Sha1Hash *string `json:"sha1Hash,omitempty"`
	isExplicitNullSha1Hash bool `json:"-"`
}

// GetCrc32Hash returns the Crc32Hash field if non-nil, zero value otherwise.
func (o *MicrosoftGraphHashes) GetCrc32Hash() string {
	if o == nil || o.Crc32Hash == nil {
		var ret string
		return ret
	}
	return *o.Crc32Hash
}

// GetCrc32HashOk returns a tuple with the Crc32Hash field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphHashes) GetCrc32HashOk() (string, bool) {
	if o == nil || o.Crc32Hash == nil {
		var ret string
		return ret, false
	}
	return *o.Crc32Hash, true
}

// HasCrc32Hash returns a boolean if a field has been set.
func (o *MicrosoftGraphHashes) HasCrc32Hash() bool {
	if o != nil && o.Crc32Hash != nil {
		return true
	}

	return false
}

// SetCrc32Hash gets a reference to the given string and assigns it to the Crc32Hash field.
func (o *MicrosoftGraphHashes) SetCrc32Hash(v string) {
	o.Crc32Hash = &v
}

// SetCrc32HashExplicitNull (un)sets Crc32Hash to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Crc32Hash value is set to nil even if false is passed
func (o *MicrosoftGraphHashes) SetCrc32HashExplicitNull(b bool) {
	o.Crc32Hash = nil
	o.isExplicitNullCrc32Hash = b
}
// GetQuickXorHash returns the QuickXorHash field if non-nil, zero value otherwise.
func (o *MicrosoftGraphHashes) GetQuickXorHash() string {
	if o == nil || o.QuickXorHash == nil {
		var ret string
		return ret
	}
	return *o.QuickXorHash
}

// GetQuickXorHashOk returns a tuple with the QuickXorHash field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphHashes) GetQuickXorHashOk() (string, bool) {
	if o == nil || o.QuickXorHash == nil {
		var ret string
		return ret, false
	}
	return *o.QuickXorHash, true
}

// HasQuickXorHash returns a boolean if a field has been set.
func (o *MicrosoftGraphHashes) HasQuickXorHash() bool {
	if o != nil && o.QuickXorHash != nil {
		return true
	}

	return false
}

// SetQuickXorHash gets a reference to the given string and assigns it to the QuickXorHash field.
func (o *MicrosoftGraphHashes) SetQuickXorHash(v string) {
	o.QuickXorHash = &v
}

// SetQuickXorHashExplicitNull (un)sets QuickXorHash to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The QuickXorHash value is set to nil even if false is passed
func (o *MicrosoftGraphHashes) SetQuickXorHashExplicitNull(b bool) {
	o.QuickXorHash = nil
	o.isExplicitNullQuickXorHash = b
}
// GetSha1Hash returns the Sha1Hash field if non-nil, zero value otherwise.
func (o *MicrosoftGraphHashes) GetSha1Hash() string {
	if o == nil || o.Sha1Hash == nil {
		var ret string
		return ret
	}
	return *o.Sha1Hash
}

// GetSha1HashOk returns a tuple with the Sha1Hash field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphHashes) GetSha1HashOk() (string, bool) {
	if o == nil || o.Sha1Hash == nil {
		var ret string
		return ret, false
	}
	return *o.Sha1Hash, true
}

// HasSha1Hash returns a boolean if a field has been set.
func (o *MicrosoftGraphHashes) HasSha1Hash() bool {
	if o != nil && o.Sha1Hash != nil {
		return true
	}

	return false
}

// SetSha1Hash gets a reference to the given string and assigns it to the Sha1Hash field.
func (o *MicrosoftGraphHashes) SetSha1Hash(v string) {
	o.Sha1Hash = &v
}

// SetSha1HashExplicitNull (un)sets Sha1Hash to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sha1Hash value is set to nil even if false is passed
func (o *MicrosoftGraphHashes) SetSha1HashExplicitNull(b bool) {
	o.Sha1Hash = nil
	o.isExplicitNullSha1Hash = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphHashes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Crc32Hash == nil {
		if o.isExplicitNullCrc32Hash {
			toSerialize["crc32Hash"] = o.Crc32Hash
		}
	} else {
		toSerialize["crc32Hash"] = o.Crc32Hash
	}
	if o.QuickXorHash == nil {
		if o.isExplicitNullQuickXorHash {
			toSerialize["quickXorHash"] = o.QuickXorHash
		}
	} else {
		toSerialize["quickXorHash"] = o.QuickXorHash
	}
	if o.Sha1Hash == nil {
		if o.isExplicitNullSha1Hash {
			toSerialize["sha1Hash"] = o.Sha1Hash
		}
	} else {
		toSerialize["sha1Hash"] = o.Sha1Hash
	}
	return json.Marshal(toSerialize)
}


