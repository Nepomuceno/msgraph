/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphPlannerExternalReference struct for MicrosoftGraphPlannerExternalReference
type MicrosoftGraphPlannerExternalReference struct {
	Alias *string `json:"alias,omitempty"`
	isExplicitNullAlias bool `json:"-"`
	Type *string `json:"type,omitempty"`
	isExplicitNullType bool `json:"-"`
	PreviewPriority *string `json:"previewPriority,omitempty"`
	isExplicitNullPreviewPriority bool `json:"-"`
	LastModifiedBy *AnyOfmicrosoftGraphIdentitySet `json:"lastModifiedBy,omitempty"`
	isExplicitNullLastModifiedBy bool `json:"-"`
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	isExplicitNullLastModifiedDateTime bool `json:"-"`
}

// GetAlias returns the Alias field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerExternalReference) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerExternalReference) GetAliasOk() (string, bool) {
	if o == nil || o.Alias == nil {
		var ret string
		return ret, false
	}
	return *o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerExternalReference) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *MicrosoftGraphPlannerExternalReference) SetAlias(v string) {
	o.Alias = &v
}

// SetAliasExplicitNull (un)sets Alias to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Alias value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerExternalReference) SetAliasExplicitNull(b bool) {
	o.Alias = nil
	o.isExplicitNullAlias = b
}
// GetType returns the Type field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerExternalReference) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerExternalReference) GetTypeOk() (string, bool) {
	if o == nil || o.Type == nil {
		var ret string
		return ret, false
	}
	return *o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerExternalReference) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MicrosoftGraphPlannerExternalReference) SetType(v string) {
	o.Type = &v
}

// SetTypeExplicitNull (un)sets Type to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Type value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerExternalReference) SetTypeExplicitNull(b bool) {
	o.Type = nil
	o.isExplicitNullType = b
}
// GetPreviewPriority returns the PreviewPriority field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerExternalReference) GetPreviewPriority() string {
	if o == nil || o.PreviewPriority == nil {
		var ret string
		return ret
	}
	return *o.PreviewPriority
}

// GetPreviewPriorityOk returns a tuple with the PreviewPriority field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerExternalReference) GetPreviewPriorityOk() (string, bool) {
	if o == nil || o.PreviewPriority == nil {
		var ret string
		return ret, false
	}
	return *o.PreviewPriority, true
}

// HasPreviewPriority returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerExternalReference) HasPreviewPriority() bool {
	if o != nil && o.PreviewPriority != nil {
		return true
	}

	return false
}

// SetPreviewPriority gets a reference to the given string and assigns it to the PreviewPriority field.
func (o *MicrosoftGraphPlannerExternalReference) SetPreviewPriority(v string) {
	o.PreviewPriority = &v
}

// SetPreviewPriorityExplicitNull (un)sets PreviewPriority to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreviewPriority value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerExternalReference) SetPreviewPriorityExplicitNull(b bool) {
	o.PreviewPriority = nil
	o.isExplicitNullPreviewPriority = b
}
// GetLastModifiedBy returns the LastModifiedBy field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerExternalReference) GetLastModifiedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.LastModifiedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerExternalReference) GetLastModifiedByOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.LastModifiedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerExternalReference) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the LastModifiedBy field.
func (o *MicrosoftGraphPlannerExternalReference) SetLastModifiedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.LastModifiedBy = &v
}

// SetLastModifiedByExplicitNull (un)sets LastModifiedBy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastModifiedBy value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerExternalReference) SetLastModifiedByExplicitNull(b bool) {
	o.LastModifiedBy = nil
	o.isExplicitNullLastModifiedBy = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerExternalReference) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerExternalReference) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerExternalReference) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphPlannerExternalReference) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// SetLastModifiedDateTimeExplicitNull (un)sets LastModifiedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastModifiedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerExternalReference) SetLastModifiedDateTimeExplicitNull(b bool) {
	o.LastModifiedDateTime = nil
	o.isExplicitNullLastModifiedDateTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphPlannerExternalReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alias == nil {
		if o.isExplicitNullAlias {
			toSerialize["alias"] = o.Alias
		}
	} else {
		toSerialize["alias"] = o.Alias
	}
	if o.Type == nil {
		if o.isExplicitNullType {
			toSerialize["type"] = o.Type
		}
	} else {
		toSerialize["type"] = o.Type
	}
	if o.PreviewPriority == nil {
		if o.isExplicitNullPreviewPriority {
			toSerialize["previewPriority"] = o.PreviewPriority
		}
	} else {
		toSerialize["previewPriority"] = o.PreviewPriority
	}
	if o.LastModifiedBy == nil {
		if o.isExplicitNullLastModifiedBy {
			toSerialize["lastModifiedBy"] = o.LastModifiedBy
		}
	} else {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LastModifiedDateTime == nil {
		if o.isExplicitNullLastModifiedDateTime {
			toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
		}
	} else {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	return json.Marshal(toSerialize)
}


