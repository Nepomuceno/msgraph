/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWorkbookWorksheet struct for MicrosoftGraphWorkbookWorksheet
type MicrosoftGraphWorkbookWorksheet struct {
	Id *string `json:"id,omitempty"`

	Name *string `json:"name,omitempty"`
	isExplicitNullName bool `json:"-"`
	Position *int32 `json:"position,omitempty"`

	Visibility *string `json:"visibility,omitempty"`

	Charts *[]MicrosoftGraphWorkbookChart `json:"charts,omitempty"`

	Names *[]MicrosoftGraphWorkbookNamedItem `json:"names,omitempty"`

	PivotTables *[]MicrosoftGraphWorkbookPivotTable `json:"pivotTables,omitempty"`

	Protection *AnyOfmicrosoftGraphWorkbookWorksheetProtection `json:"protection,omitempty"`
	isExplicitNullProtection bool `json:"-"`
	Tables *[]MicrosoftGraphWorkbookTable `json:"tables,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWorkbookWorksheet) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphWorkbookWorksheet) SetName(v string) {
	o.Name = &v
}

// SetNameExplicitNull (un)sets Name to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Name value is set to nil even if false is passed
func (o *MicrosoftGraphWorkbookWorksheet) SetNameExplicitNull(b bool) {
	o.Name = nil
	o.isExplicitNullName = b
}
// GetPosition returns the Position field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetPositionOk() (int32, bool) {
	if o == nil || o.Position == nil {
		var ret int32
		return ret, false
	}
	return *o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *MicrosoftGraphWorkbookWorksheet) SetPosition(v int32) {
	o.Position = &v
}

// GetVisibility returns the Visibility field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetVisibilityOk() (string, bool) {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret, false
	}
	return *o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *MicrosoftGraphWorkbookWorksheet) SetVisibility(v string) {
	o.Visibility = &v
}

// GetCharts returns the Charts field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetCharts() []MicrosoftGraphWorkbookChart {
	if o == nil || o.Charts == nil {
		var ret []MicrosoftGraphWorkbookChart
		return ret
	}
	return *o.Charts
}

// GetChartsOk returns a tuple with the Charts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetChartsOk() ([]MicrosoftGraphWorkbookChart, bool) {
	if o == nil || o.Charts == nil {
		var ret []MicrosoftGraphWorkbookChart
		return ret, false
	}
	return *o.Charts, true
}

// HasCharts returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasCharts() bool {
	if o != nil && o.Charts != nil {
		return true
	}

	return false
}

// SetCharts gets a reference to the given []MicrosoftGraphWorkbookChart and assigns it to the Charts field.
func (o *MicrosoftGraphWorkbookWorksheet) SetCharts(v []MicrosoftGraphWorkbookChart) {
	o.Charts = &v
}

// GetNames returns the Names field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetNames() []MicrosoftGraphWorkbookNamedItem {
	if o == nil || o.Names == nil {
		var ret []MicrosoftGraphWorkbookNamedItem
		return ret
	}
	return *o.Names
}

// GetNamesOk returns a tuple with the Names field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetNamesOk() ([]MicrosoftGraphWorkbookNamedItem, bool) {
	if o == nil || o.Names == nil {
		var ret []MicrosoftGraphWorkbookNamedItem
		return ret, false
	}
	return *o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasNames() bool {
	if o != nil && o.Names != nil {
		return true
	}

	return false
}

// SetNames gets a reference to the given []MicrosoftGraphWorkbookNamedItem and assigns it to the Names field.
func (o *MicrosoftGraphWorkbookWorksheet) SetNames(v []MicrosoftGraphWorkbookNamedItem) {
	o.Names = &v
}

// GetPivotTables returns the PivotTables field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetPivotTables() []MicrosoftGraphWorkbookPivotTable {
	if o == nil || o.PivotTables == nil {
		var ret []MicrosoftGraphWorkbookPivotTable
		return ret
	}
	return *o.PivotTables
}

// GetPivotTablesOk returns a tuple with the PivotTables field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetPivotTablesOk() ([]MicrosoftGraphWorkbookPivotTable, bool) {
	if o == nil || o.PivotTables == nil {
		var ret []MicrosoftGraphWorkbookPivotTable
		return ret, false
	}
	return *o.PivotTables, true
}

// HasPivotTables returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasPivotTables() bool {
	if o != nil && o.PivotTables != nil {
		return true
	}

	return false
}

// SetPivotTables gets a reference to the given []MicrosoftGraphWorkbookPivotTable and assigns it to the PivotTables field.
func (o *MicrosoftGraphWorkbookWorksheet) SetPivotTables(v []MicrosoftGraphWorkbookPivotTable) {
	o.PivotTables = &v
}

// GetProtection returns the Protection field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetProtection() AnyOfmicrosoftGraphWorkbookWorksheetProtection {
	if o == nil || o.Protection == nil {
		var ret AnyOfmicrosoftGraphWorkbookWorksheetProtection
		return ret
	}
	return *o.Protection
}

// GetProtectionOk returns a tuple with the Protection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetProtectionOk() (AnyOfmicrosoftGraphWorkbookWorksheetProtection, bool) {
	if o == nil || o.Protection == nil {
		var ret AnyOfmicrosoftGraphWorkbookWorksheetProtection
		return ret, false
	}
	return *o.Protection, true
}

// HasProtection returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasProtection() bool {
	if o != nil && o.Protection != nil {
		return true
	}

	return false
}

// SetProtection gets a reference to the given AnyOfmicrosoftGraphWorkbookWorksheetProtection and assigns it to the Protection field.
func (o *MicrosoftGraphWorkbookWorksheet) SetProtection(v AnyOfmicrosoftGraphWorkbookWorksheetProtection) {
	o.Protection = &v
}

// SetProtectionExplicitNull (un)sets Protection to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Protection value is set to nil even if false is passed
func (o *MicrosoftGraphWorkbookWorksheet) SetProtectionExplicitNull(b bool) {
	o.Protection = nil
	o.isExplicitNullProtection = b
}
// GetTables returns the Tables field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkbookWorksheet) GetTables() []MicrosoftGraphWorkbookTable {
	if o == nil || o.Tables == nil {
		var ret []MicrosoftGraphWorkbookTable
		return ret
	}
	return *o.Tables
}

// GetTablesOk returns a tuple with the Tables field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkbookWorksheet) GetTablesOk() ([]MicrosoftGraphWorkbookTable, bool) {
	if o == nil || o.Tables == nil {
		var ret []MicrosoftGraphWorkbookTable
		return ret, false
	}
	return *o.Tables, true
}

// HasTables returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkbookWorksheet) HasTables() bool {
	if o != nil && o.Tables != nil {
		return true
	}

	return false
}

// SetTables gets a reference to the given []MicrosoftGraphWorkbookTable and assigns it to the Tables field.
func (o *MicrosoftGraphWorkbookWorksheet) SetTables(v []MicrosoftGraphWorkbookTable) {
	o.Tables = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWorkbookWorksheet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name == nil {
		if o.isExplicitNullName {
			toSerialize["name"] = o.Name
		}
	} else {
		toSerialize["name"] = o.Name
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Charts != nil {
		toSerialize["charts"] = o.Charts
	}
	if o.Names != nil {
		toSerialize["names"] = o.Names
	}
	if o.PivotTables != nil {
		toSerialize["pivotTables"] = o.PivotTables
	}
	if o.Protection == nil {
		if o.isExplicitNullProtection {
			toSerialize["protection"] = o.Protection
		}
	} else {
		toSerialize["protection"] = o.Protection
	}
	if o.Tables != nil {
		toSerialize["tables"] = o.Tables
	}
	return json.Marshal(toSerialize)
}


