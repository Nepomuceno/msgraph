/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphDevice struct for MicrosoftGraphDevice
type MicrosoftGraphDevice struct {
	Id *string `json:"id,omitempty"`

	DeletedDateTime *time.Time `json:"deletedDateTime,omitempty"`
	isExplicitNullDeletedDateTime bool `json:"-"`
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	isExplicitNullAccountEnabled bool `json:"-"`
	AlternativeSecurityIds *[]MicrosoftGraphAlternativeSecurityId `json:"alternativeSecurityIds,omitempty"`

	ApproximateLastSignInDateTime *time.Time `json:"approximateLastSignInDateTime,omitempty"`
	isExplicitNullApproximateLastSignInDateTime bool `json:"-"`
	ComplianceExpirationDateTime *time.Time `json:"complianceExpirationDateTime,omitempty"`
	isExplicitNullComplianceExpirationDateTime bool `json:"-"`
	DeviceId *string `json:"deviceId,omitempty"`
	isExplicitNullDeviceId bool `json:"-"`
	DeviceMetadata *string `json:"deviceMetadata,omitempty"`
	isExplicitNullDeviceMetadata bool `json:"-"`
	DeviceVersion *int32 `json:"deviceVersion,omitempty"`
	isExplicitNullDeviceVersion bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	IsCompliant *bool `json:"isCompliant,omitempty"`
	isExplicitNullIsCompliant bool `json:"-"`
	IsManaged *bool `json:"isManaged,omitempty"`
	isExplicitNullIsManaged bool `json:"-"`
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	isExplicitNullOnPremisesLastSyncDateTime bool `json:"-"`
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	isExplicitNullOnPremisesSyncEnabled bool `json:"-"`
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	isExplicitNullOperatingSystem bool `json:"-"`
	OperatingSystemVersion *string `json:"operatingSystemVersion,omitempty"`
	isExplicitNullOperatingSystemVersion bool `json:"-"`
	PhysicalIds *[]string `json:"physicalIds,omitempty"`

	ProfileType *string `json:"profileType,omitempty"`
	isExplicitNullProfileType bool `json:"-"`
	SystemLabels *[]string `json:"systemLabels,omitempty"`

	TrustType *string `json:"trustType,omitempty"`
	isExplicitNullTrustType bool `json:"-"`
	MemberOf *[]MicrosoftGraphDirectoryObject `json:"memberOf,omitempty"`

	RegisteredOwners *[]MicrosoftGraphDirectoryObject `json:"registeredOwners,omitempty"`

	RegisteredUsers *[]MicrosoftGraphDirectoryObject `json:"registeredUsers,omitempty"`

	TransitiveMemberOf *[]MicrosoftGraphDirectoryObject `json:"transitiveMemberOf,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDevice) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetDeletedDateTimeOk() (time.Time, bool) {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DeletedDateTime, true
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime != nil {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given time.Time and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphDevice) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime = &v
}

// SetDeletedDateTimeExplicitNull (un)sets DeletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeletedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetDeletedDateTimeExplicitNull(b bool) {
	o.DeletedDateTime = nil
	o.isExplicitNullDeletedDateTime = b
}
// GetAccountEnabled returns the AccountEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetAccountEnabled() bool {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AccountEnabled
}

// GetAccountEnabledOk returns a tuple with the AccountEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetAccountEnabledOk() (bool, bool) {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.AccountEnabled, true
}

// HasAccountEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasAccountEnabled() bool {
	if o != nil && o.AccountEnabled != nil {
		return true
	}

	return false
}

// SetAccountEnabled gets a reference to the given bool and assigns it to the AccountEnabled field.
func (o *MicrosoftGraphDevice) SetAccountEnabled(v bool) {
	o.AccountEnabled = &v
}

// SetAccountEnabledExplicitNull (un)sets AccountEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AccountEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetAccountEnabledExplicitNull(b bool) {
	o.AccountEnabled = nil
	o.isExplicitNullAccountEnabled = b
}
// GetAlternativeSecurityIds returns the AlternativeSecurityIds field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetAlternativeSecurityIds() []MicrosoftGraphAlternativeSecurityId {
	if o == nil || o.AlternativeSecurityIds == nil {
		var ret []MicrosoftGraphAlternativeSecurityId
		return ret
	}
	return *o.AlternativeSecurityIds
}

// GetAlternativeSecurityIdsOk returns a tuple with the AlternativeSecurityIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetAlternativeSecurityIdsOk() ([]MicrosoftGraphAlternativeSecurityId, bool) {
	if o == nil || o.AlternativeSecurityIds == nil {
		var ret []MicrosoftGraphAlternativeSecurityId
		return ret, false
	}
	return *o.AlternativeSecurityIds, true
}

// HasAlternativeSecurityIds returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasAlternativeSecurityIds() bool {
	if o != nil && o.AlternativeSecurityIds != nil {
		return true
	}

	return false
}

// SetAlternativeSecurityIds gets a reference to the given []MicrosoftGraphAlternativeSecurityId and assigns it to the AlternativeSecurityIds field.
func (o *MicrosoftGraphDevice) SetAlternativeSecurityIds(v []MicrosoftGraphAlternativeSecurityId) {
	o.AlternativeSecurityIds = &v
}

// GetApproximateLastSignInDateTime returns the ApproximateLastSignInDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetApproximateLastSignInDateTime() time.Time {
	if o == nil || o.ApproximateLastSignInDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ApproximateLastSignInDateTime
}

// GetApproximateLastSignInDateTimeOk returns a tuple with the ApproximateLastSignInDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetApproximateLastSignInDateTimeOk() (time.Time, bool) {
	if o == nil || o.ApproximateLastSignInDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ApproximateLastSignInDateTime, true
}

// HasApproximateLastSignInDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasApproximateLastSignInDateTime() bool {
	if o != nil && o.ApproximateLastSignInDateTime != nil {
		return true
	}

	return false
}

// SetApproximateLastSignInDateTime gets a reference to the given time.Time and assigns it to the ApproximateLastSignInDateTime field.
func (o *MicrosoftGraphDevice) SetApproximateLastSignInDateTime(v time.Time) {
	o.ApproximateLastSignInDateTime = &v
}

// SetApproximateLastSignInDateTimeExplicitNull (un)sets ApproximateLastSignInDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ApproximateLastSignInDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetApproximateLastSignInDateTimeExplicitNull(b bool) {
	o.ApproximateLastSignInDateTime = nil
	o.isExplicitNullApproximateLastSignInDateTime = b
}
// GetComplianceExpirationDateTime returns the ComplianceExpirationDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetComplianceExpirationDateTime() time.Time {
	if o == nil || o.ComplianceExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ComplianceExpirationDateTime
}

// GetComplianceExpirationDateTimeOk returns a tuple with the ComplianceExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetComplianceExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ComplianceExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ComplianceExpirationDateTime, true
}

// HasComplianceExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasComplianceExpirationDateTime() bool {
	if o != nil && o.ComplianceExpirationDateTime != nil {
		return true
	}

	return false
}

// SetComplianceExpirationDateTime gets a reference to the given time.Time and assigns it to the ComplianceExpirationDateTime field.
func (o *MicrosoftGraphDevice) SetComplianceExpirationDateTime(v time.Time) {
	o.ComplianceExpirationDateTime = &v
}

// SetComplianceExpirationDateTimeExplicitNull (un)sets ComplianceExpirationDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ComplianceExpirationDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetComplianceExpirationDateTimeExplicitNull(b bool) {
	o.ComplianceExpirationDateTime = nil
	o.isExplicitNullComplianceExpirationDateTime = b
}
// GetDeviceId returns the DeviceId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetDeviceIdOk() (string, bool) {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *MicrosoftGraphDevice) SetDeviceId(v string) {
	o.DeviceId = &v
}

// SetDeviceIdExplicitNull (un)sets DeviceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceId value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetDeviceIdExplicitNull(b bool) {
	o.DeviceId = nil
	o.isExplicitNullDeviceId = b
}
// GetDeviceMetadata returns the DeviceMetadata field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetDeviceMetadata() string {
	if o == nil || o.DeviceMetadata == nil {
		var ret string
		return ret
	}
	return *o.DeviceMetadata
}

// GetDeviceMetadataOk returns a tuple with the DeviceMetadata field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetDeviceMetadataOk() (string, bool) {
	if o == nil || o.DeviceMetadata == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceMetadata, true
}

// HasDeviceMetadata returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasDeviceMetadata() bool {
	if o != nil && o.DeviceMetadata != nil {
		return true
	}

	return false
}

// SetDeviceMetadata gets a reference to the given string and assigns it to the DeviceMetadata field.
func (o *MicrosoftGraphDevice) SetDeviceMetadata(v string) {
	o.DeviceMetadata = &v
}

// SetDeviceMetadataExplicitNull (un)sets DeviceMetadata to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceMetadata value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetDeviceMetadataExplicitNull(b bool) {
	o.DeviceMetadata = nil
	o.isExplicitNullDeviceMetadata = b
}
// GetDeviceVersion returns the DeviceVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetDeviceVersion() int32 {
	if o == nil || o.DeviceVersion == nil {
		var ret int32
		return ret
	}
	return *o.DeviceVersion
}

// GetDeviceVersionOk returns a tuple with the DeviceVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetDeviceVersionOk() (int32, bool) {
	if o == nil || o.DeviceVersion == nil {
		var ret int32
		return ret, false
	}
	return *o.DeviceVersion, true
}

// HasDeviceVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasDeviceVersion() bool {
	if o != nil && o.DeviceVersion != nil {
		return true
	}

	return false
}

// SetDeviceVersion gets a reference to the given int32 and assigns it to the DeviceVersion field.
func (o *MicrosoftGraphDevice) SetDeviceVersion(v int32) {
	o.DeviceVersion = &v
}

// SetDeviceVersionExplicitNull (un)sets DeviceVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetDeviceVersionExplicitNull(b bool) {
	o.DeviceVersion = nil
	o.isExplicitNullDeviceVersion = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphDevice) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetIsCompliant returns the IsCompliant field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetIsCompliant() bool {
	if o == nil || o.IsCompliant == nil {
		var ret bool
		return ret
	}
	return *o.IsCompliant
}

// GetIsCompliantOk returns a tuple with the IsCompliant field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetIsCompliantOk() (bool, bool) {
	if o == nil || o.IsCompliant == nil {
		var ret bool
		return ret, false
	}
	return *o.IsCompliant, true
}

// HasIsCompliant returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasIsCompliant() bool {
	if o != nil && o.IsCompliant != nil {
		return true
	}

	return false
}

// SetIsCompliant gets a reference to the given bool and assigns it to the IsCompliant field.
func (o *MicrosoftGraphDevice) SetIsCompliant(v bool) {
	o.IsCompliant = &v
}

// SetIsCompliantExplicitNull (un)sets IsCompliant to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsCompliant value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetIsCompliantExplicitNull(b bool) {
	o.IsCompliant = nil
	o.isExplicitNullIsCompliant = b
}
// GetIsManaged returns the IsManaged field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetIsManaged() bool {
	if o == nil || o.IsManaged == nil {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetIsManagedOk() (bool, bool) {
	if o == nil || o.IsManaged == nil {
		var ret bool
		return ret, false
	}
	return *o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasIsManaged() bool {
	if o != nil && o.IsManaged != nil {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *MicrosoftGraphDevice) SetIsManaged(v bool) {
	o.IsManaged = &v
}

// SetIsManagedExplicitNull (un)sets IsManaged to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsManaged value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetIsManagedExplicitNull(b bool) {
	o.IsManaged = nil
	o.isExplicitNullIsManaged = b
}
// GetOnPremisesLastSyncDateTime returns the OnPremisesLastSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetOnPremisesLastSyncDateTime() time.Time {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.OnPremisesLastSyncDateTime
}

// GetOnPremisesLastSyncDateTimeOk returns a tuple with the OnPremisesLastSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetOnPremisesLastSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.OnPremisesLastSyncDateTime, true
}

// HasOnPremisesLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasOnPremisesLastSyncDateTime() bool {
	if o != nil && o.OnPremisesLastSyncDateTime != nil {
		return true
	}

	return false
}

// SetOnPremisesLastSyncDateTime gets a reference to the given time.Time and assigns it to the OnPremisesLastSyncDateTime field.
func (o *MicrosoftGraphDevice) SetOnPremisesLastSyncDateTime(v time.Time) {
	o.OnPremisesLastSyncDateTime = &v
}

// SetOnPremisesLastSyncDateTimeExplicitNull (un)sets OnPremisesLastSyncDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesLastSyncDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetOnPremisesLastSyncDateTimeExplicitNull(b bool) {
	o.OnPremisesLastSyncDateTime = nil
	o.isExplicitNullOnPremisesLastSyncDateTime = b
}
// GetOnPremisesSyncEnabled returns the OnPremisesSyncEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetOnPremisesSyncEnabled() bool {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret
	}
	return *o.OnPremisesSyncEnabled
}

// GetOnPremisesSyncEnabledOk returns a tuple with the OnPremisesSyncEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetOnPremisesSyncEnabledOk() (bool, bool) {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.OnPremisesSyncEnabled, true
}

// HasOnPremisesSyncEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasOnPremisesSyncEnabled() bool {
	if o != nil && o.OnPremisesSyncEnabled != nil {
		return true
	}

	return false
}

// SetOnPremisesSyncEnabled gets a reference to the given bool and assigns it to the OnPremisesSyncEnabled field.
func (o *MicrosoftGraphDevice) SetOnPremisesSyncEnabled(v bool) {
	o.OnPremisesSyncEnabled = &v
}

// SetOnPremisesSyncEnabledExplicitNull (un)sets OnPremisesSyncEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSyncEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetOnPremisesSyncEnabledExplicitNull(b bool) {
	o.OnPremisesSyncEnabled = nil
	o.isExplicitNullOnPremisesSyncEnabled = b
}
// GetOperatingSystem returns the OperatingSystem field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetOperatingSystemOk() (string, bool) {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret, false
	}
	return *o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphDevice) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// SetOperatingSystemExplicitNull (un)sets OperatingSystem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OperatingSystem value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetOperatingSystemExplicitNull(b bool) {
	o.OperatingSystem = nil
	o.isExplicitNullOperatingSystem = b
}
// GetOperatingSystemVersion returns the OperatingSystemVersion field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetOperatingSystemVersion() string {
	if o == nil || o.OperatingSystemVersion == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystemVersion
}

// GetOperatingSystemVersionOk returns a tuple with the OperatingSystemVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetOperatingSystemVersionOk() (string, bool) {
	if o == nil || o.OperatingSystemVersion == nil {
		var ret string
		return ret, false
	}
	return *o.OperatingSystemVersion, true
}

// HasOperatingSystemVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasOperatingSystemVersion() bool {
	if o != nil && o.OperatingSystemVersion != nil {
		return true
	}

	return false
}

// SetOperatingSystemVersion gets a reference to the given string and assigns it to the OperatingSystemVersion field.
func (o *MicrosoftGraphDevice) SetOperatingSystemVersion(v string) {
	o.OperatingSystemVersion = &v
}

// SetOperatingSystemVersionExplicitNull (un)sets OperatingSystemVersion to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OperatingSystemVersion value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetOperatingSystemVersionExplicitNull(b bool) {
	o.OperatingSystemVersion = nil
	o.isExplicitNullOperatingSystemVersion = b
}
// GetPhysicalIds returns the PhysicalIds field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetPhysicalIds() []string {
	if o == nil || o.PhysicalIds == nil {
		var ret []string
		return ret
	}
	return *o.PhysicalIds
}

// GetPhysicalIdsOk returns a tuple with the PhysicalIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetPhysicalIdsOk() ([]string, bool) {
	if o == nil || o.PhysicalIds == nil {
		var ret []string
		return ret, false
	}
	return *o.PhysicalIds, true
}

// HasPhysicalIds returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasPhysicalIds() bool {
	if o != nil && o.PhysicalIds != nil {
		return true
	}

	return false
}

// SetPhysicalIds gets a reference to the given []string and assigns it to the PhysicalIds field.
func (o *MicrosoftGraphDevice) SetPhysicalIds(v []string) {
	o.PhysicalIds = &v
}

// GetProfileType returns the ProfileType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetProfileType() string {
	if o == nil || o.ProfileType == nil {
		var ret string
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetProfileTypeOk() (string, bool) {
	if o == nil || o.ProfileType == nil {
		var ret string
		return ret, false
	}
	return *o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasProfileType() bool {
	if o != nil && o.ProfileType != nil {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given string and assigns it to the ProfileType field.
func (o *MicrosoftGraphDevice) SetProfileType(v string) {
	o.ProfileType = &v
}

// SetProfileTypeExplicitNull (un)sets ProfileType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ProfileType value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetProfileTypeExplicitNull(b bool) {
	o.ProfileType = nil
	o.isExplicitNullProfileType = b
}
// GetSystemLabels returns the SystemLabels field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetSystemLabels() []string {
	if o == nil || o.SystemLabels == nil {
		var ret []string
		return ret
	}
	return *o.SystemLabels
}

// GetSystemLabelsOk returns a tuple with the SystemLabels field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetSystemLabelsOk() ([]string, bool) {
	if o == nil || o.SystemLabels == nil {
		var ret []string
		return ret, false
	}
	return *o.SystemLabels, true
}

// HasSystemLabels returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasSystemLabels() bool {
	if o != nil && o.SystemLabels != nil {
		return true
	}

	return false
}

// SetSystemLabels gets a reference to the given []string and assigns it to the SystemLabels field.
func (o *MicrosoftGraphDevice) SetSystemLabels(v []string) {
	o.SystemLabels = &v
}

// GetTrustType returns the TrustType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetTrustType() string {
	if o == nil || o.TrustType == nil {
		var ret string
		return ret
	}
	return *o.TrustType
}

// GetTrustTypeOk returns a tuple with the TrustType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetTrustTypeOk() (string, bool) {
	if o == nil || o.TrustType == nil {
		var ret string
		return ret, false
	}
	return *o.TrustType, true
}

// HasTrustType returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasTrustType() bool {
	if o != nil && o.TrustType != nil {
		return true
	}

	return false
}

// SetTrustType gets a reference to the given string and assigns it to the TrustType field.
func (o *MicrosoftGraphDevice) SetTrustType(v string) {
	o.TrustType = &v
}

// SetTrustTypeExplicitNull (un)sets TrustType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TrustType value is set to nil even if false is passed
func (o *MicrosoftGraphDevice) SetTrustTypeExplicitNull(b bool) {
	o.TrustType = nil
	o.isExplicitNullTrustType = b
}
// GetMemberOf returns the MemberOf field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.MemberOf
}

// GetMemberOfOk returns a tuple with the MemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.MemberOf, true
}

// HasMemberOf returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasMemberOf() bool {
	if o != nil && o.MemberOf != nil {
		return true
	}

	return false
}

// SetMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the MemberOf field.
func (o *MicrosoftGraphDevice) SetMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.MemberOf = &v
}

// GetRegisteredOwners returns the RegisteredOwners field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetRegisteredOwners() []MicrosoftGraphDirectoryObject {
	if o == nil || o.RegisteredOwners == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.RegisteredOwners
}

// GetRegisteredOwnersOk returns a tuple with the RegisteredOwners field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetRegisteredOwnersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.RegisteredOwners == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.RegisteredOwners, true
}

// HasRegisteredOwners returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasRegisteredOwners() bool {
	if o != nil && o.RegisteredOwners != nil {
		return true
	}

	return false
}

// SetRegisteredOwners gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the RegisteredOwners field.
func (o *MicrosoftGraphDevice) SetRegisteredOwners(v []MicrosoftGraphDirectoryObject) {
	o.RegisteredOwners = &v
}

// GetRegisteredUsers returns the RegisteredUsers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetRegisteredUsers() []MicrosoftGraphDirectoryObject {
	if o == nil || o.RegisteredUsers == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.RegisteredUsers
}

// GetRegisteredUsersOk returns a tuple with the RegisteredUsers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetRegisteredUsersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.RegisteredUsers == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.RegisteredUsers, true
}

// HasRegisteredUsers returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasRegisteredUsers() bool {
	if o != nil && o.RegisteredUsers != nil {
		return true
	}

	return false
}

// SetRegisteredUsers gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the RegisteredUsers field.
func (o *MicrosoftGraphDevice) SetRegisteredUsers(v []MicrosoftGraphDirectoryObject) {
	o.RegisteredUsers = &v
}

// GetTransitiveMemberOf returns the TransitiveMemberOf field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetTransitiveMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.TransitiveMemberOf
}

// GetTransitiveMemberOfOk returns a tuple with the TransitiveMemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetTransitiveMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.TransitiveMemberOf, true
}

// HasTransitiveMemberOf returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasTransitiveMemberOf() bool {
	if o != nil && o.TransitiveMemberOf != nil {
		return true
	}

	return false
}

// SetTransitiveMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the TransitiveMemberOf field.
func (o *MicrosoftGraphDevice) SetTransitiveMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.TransitiveMemberOf = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDevice) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDevice) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphDevice) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphDevice) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime == nil {
		if o.isExplicitNullDeletedDateTime {
			toSerialize["deletedDateTime"] = o.DeletedDateTime
		}
	} else {
		toSerialize["deletedDateTime"] = o.DeletedDateTime
	}
	if o.AccountEnabled == nil {
		if o.isExplicitNullAccountEnabled {
			toSerialize["accountEnabled"] = o.AccountEnabled
		}
	} else {
		toSerialize["accountEnabled"] = o.AccountEnabled
	}
	if o.AlternativeSecurityIds != nil {
		toSerialize["alternativeSecurityIds"] = o.AlternativeSecurityIds
	}
	if o.ApproximateLastSignInDateTime == nil {
		if o.isExplicitNullApproximateLastSignInDateTime {
			toSerialize["approximateLastSignInDateTime"] = o.ApproximateLastSignInDateTime
		}
	} else {
		toSerialize["approximateLastSignInDateTime"] = o.ApproximateLastSignInDateTime
	}
	if o.ComplianceExpirationDateTime == nil {
		if o.isExplicitNullComplianceExpirationDateTime {
			toSerialize["complianceExpirationDateTime"] = o.ComplianceExpirationDateTime
		}
	} else {
		toSerialize["complianceExpirationDateTime"] = o.ComplianceExpirationDateTime
	}
	if o.DeviceId == nil {
		if o.isExplicitNullDeviceId {
			toSerialize["deviceId"] = o.DeviceId
		}
	} else {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DeviceMetadata == nil {
		if o.isExplicitNullDeviceMetadata {
			toSerialize["deviceMetadata"] = o.DeviceMetadata
		}
	} else {
		toSerialize["deviceMetadata"] = o.DeviceMetadata
	}
	if o.DeviceVersion == nil {
		if o.isExplicitNullDeviceVersion {
			toSerialize["deviceVersion"] = o.DeviceVersion
		}
	} else {
		toSerialize["deviceVersion"] = o.DeviceVersion
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.IsCompliant == nil {
		if o.isExplicitNullIsCompliant {
			toSerialize["isCompliant"] = o.IsCompliant
		}
	} else {
		toSerialize["isCompliant"] = o.IsCompliant
	}
	if o.IsManaged == nil {
		if o.isExplicitNullIsManaged {
			toSerialize["isManaged"] = o.IsManaged
		}
	} else {
		toSerialize["isManaged"] = o.IsManaged
	}
	if o.OnPremisesLastSyncDateTime == nil {
		if o.isExplicitNullOnPremisesLastSyncDateTime {
			toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
		}
	} else {
		toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
	}
	if o.OnPremisesSyncEnabled == nil {
		if o.isExplicitNullOnPremisesSyncEnabled {
			toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
		}
	} else {
		toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
	}
	if o.OperatingSystem == nil {
		if o.isExplicitNullOperatingSystem {
			toSerialize["operatingSystem"] = o.OperatingSystem
		}
	} else {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.OperatingSystemVersion == nil {
		if o.isExplicitNullOperatingSystemVersion {
			toSerialize["operatingSystemVersion"] = o.OperatingSystemVersion
		}
	} else {
		toSerialize["operatingSystemVersion"] = o.OperatingSystemVersion
	}
	if o.PhysicalIds != nil {
		toSerialize["physicalIds"] = o.PhysicalIds
	}
	if o.ProfileType == nil {
		if o.isExplicitNullProfileType {
			toSerialize["profileType"] = o.ProfileType
		}
	} else {
		toSerialize["profileType"] = o.ProfileType
	}
	if o.SystemLabels != nil {
		toSerialize["systemLabels"] = o.SystemLabels
	}
	if o.TrustType == nil {
		if o.isExplicitNullTrustType {
			toSerialize["trustType"] = o.TrustType
		}
	} else {
		toSerialize["trustType"] = o.TrustType
	}
	if o.MemberOf != nil {
		toSerialize["memberOf"] = o.MemberOf
	}
	if o.RegisteredOwners != nil {
		toSerialize["registeredOwners"] = o.RegisteredOwners
	}
	if o.RegisteredUsers != nil {
		toSerialize["registeredUsers"] = o.RegisteredUsers
	}
	if o.TransitiveMemberOf != nil {
		toSerialize["transitiveMemberOf"] = o.TransitiveMemberOf
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	return json.Marshal(toSerialize)
}


