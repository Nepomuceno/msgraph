/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject29 struct for InlineObject29
type InlineObject29 struct {
	DisableUserAccounts *bool `json:"disableUserAccounts,omitempty"`
	isExplicitNullDisableUserAccounts bool `json:"-"`
}

// GetDisableUserAccounts returns the DisableUserAccounts field if non-nil, zero value otherwise.
func (o *InlineObject29) GetDisableUserAccounts() bool {
	if o == nil || o.DisableUserAccounts == nil {
		var ret bool
		return ret
	}
	return *o.DisableUserAccounts
}

// GetDisableUserAccountsOk returns a tuple with the DisableUserAccounts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject29) GetDisableUserAccountsOk() (bool, bool) {
	if o == nil || o.DisableUserAccounts == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableUserAccounts, true
}

// HasDisableUserAccounts returns a boolean if a field has been set.
func (o *InlineObject29) HasDisableUserAccounts() bool {
	if o != nil && o.DisableUserAccounts != nil {
		return true
	}

	return false
}

// SetDisableUserAccounts gets a reference to the given bool and assigns it to the DisableUserAccounts field.
func (o *InlineObject29) SetDisableUserAccounts(v bool) {
	o.DisableUserAccounts = &v
}

// SetDisableUserAccountsExplicitNull (un)sets DisableUserAccounts to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisableUserAccounts value is set to nil even if false is passed
func (o *InlineObject29) SetDisableUserAccountsExplicitNull(b bool) {
	o.DisableUserAccounts = nil
	o.isExplicitNullDisableUserAccounts = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject29) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableUserAccounts == nil {
		if o.isExplicitNullDisableUserAccounts {
			toSerialize["disableUserAccounts"] = o.DisableUserAccounts
		}
	} else {
		toSerialize["disableUserAccounts"] = o.DisableUserAccounts
	}
	return json.Marshal(toSerialize)
}


