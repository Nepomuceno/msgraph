/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphPhoto struct for MicrosoftGraphPhoto
type MicrosoftGraphPhoto struct {
	CameraMake *string `json:"cameraMake,omitempty"`
	isExplicitNullCameraMake bool `json:"-"`
	CameraModel *string `json:"cameraModel,omitempty"`
	isExplicitNullCameraModel bool `json:"-"`
	ExposureDenominator *AnyOfnumberstringstring `json:"exposureDenominator,omitempty"`
	isExplicitNullExposureDenominator bool `json:"-"`
	ExposureNumerator *AnyOfnumberstringstring `json:"exposureNumerator,omitempty"`
	isExplicitNullExposureNumerator bool `json:"-"`
	FNumber *AnyOfnumberstringstring `json:"fNumber,omitempty"`
	isExplicitNullFNumber bool `json:"-"`
	FocalLength *AnyOfnumberstringstring `json:"focalLength,omitempty"`
	isExplicitNullFocalLength bool `json:"-"`
	Iso *int32 `json:"iso,omitempty"`
	isExplicitNullIso bool `json:"-"`
	TakenDateTime *time.Time `json:"takenDateTime,omitempty"`
	isExplicitNullTakenDateTime bool `json:"-"`
}

// GetCameraMake returns the CameraMake field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetCameraMake() string {
	if o == nil || o.CameraMake == nil {
		var ret string
		return ret
	}
	return *o.CameraMake
}

// GetCameraMakeOk returns a tuple with the CameraMake field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetCameraMakeOk() (string, bool) {
	if o == nil || o.CameraMake == nil {
		var ret string
		return ret, false
	}
	return *o.CameraMake, true
}

// HasCameraMake returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasCameraMake() bool {
	if o != nil && o.CameraMake != nil {
		return true
	}

	return false
}

// SetCameraMake gets a reference to the given string and assigns it to the CameraMake field.
func (o *MicrosoftGraphPhoto) SetCameraMake(v string) {
	o.CameraMake = &v
}

// SetCameraMakeExplicitNull (un)sets CameraMake to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CameraMake value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetCameraMakeExplicitNull(b bool) {
	o.CameraMake = nil
	o.isExplicitNullCameraMake = b
}
// GetCameraModel returns the CameraModel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetCameraModel() string {
	if o == nil || o.CameraModel == nil {
		var ret string
		return ret
	}
	return *o.CameraModel
}

// GetCameraModelOk returns a tuple with the CameraModel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetCameraModelOk() (string, bool) {
	if o == nil || o.CameraModel == nil {
		var ret string
		return ret, false
	}
	return *o.CameraModel, true
}

// HasCameraModel returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasCameraModel() bool {
	if o != nil && o.CameraModel != nil {
		return true
	}

	return false
}

// SetCameraModel gets a reference to the given string and assigns it to the CameraModel field.
func (o *MicrosoftGraphPhoto) SetCameraModel(v string) {
	o.CameraModel = &v
}

// SetCameraModelExplicitNull (un)sets CameraModel to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CameraModel value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetCameraModelExplicitNull(b bool) {
	o.CameraModel = nil
	o.isExplicitNullCameraModel = b
}
// GetExposureDenominator returns the ExposureDenominator field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetExposureDenominator() AnyOfnumberstringstring {
	if o == nil || o.ExposureDenominator == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.ExposureDenominator
}

// GetExposureDenominatorOk returns a tuple with the ExposureDenominator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetExposureDenominatorOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.ExposureDenominator == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.ExposureDenominator, true
}

// HasExposureDenominator returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasExposureDenominator() bool {
	if o != nil && o.ExposureDenominator != nil {
		return true
	}

	return false
}

// SetExposureDenominator gets a reference to the given AnyOfnumberstringstring and assigns it to the ExposureDenominator field.
func (o *MicrosoftGraphPhoto) SetExposureDenominator(v AnyOfnumberstringstring) {
	o.ExposureDenominator = &v
}

// SetExposureDenominatorExplicitNull (un)sets ExposureDenominator to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExposureDenominator value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetExposureDenominatorExplicitNull(b bool) {
	o.ExposureDenominator = nil
	o.isExplicitNullExposureDenominator = b
}
// GetExposureNumerator returns the ExposureNumerator field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetExposureNumerator() AnyOfnumberstringstring {
	if o == nil || o.ExposureNumerator == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.ExposureNumerator
}

// GetExposureNumeratorOk returns a tuple with the ExposureNumerator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetExposureNumeratorOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.ExposureNumerator == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.ExposureNumerator, true
}

// HasExposureNumerator returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasExposureNumerator() bool {
	if o != nil && o.ExposureNumerator != nil {
		return true
	}

	return false
}

// SetExposureNumerator gets a reference to the given AnyOfnumberstringstring and assigns it to the ExposureNumerator field.
func (o *MicrosoftGraphPhoto) SetExposureNumerator(v AnyOfnumberstringstring) {
	o.ExposureNumerator = &v
}

// SetExposureNumeratorExplicitNull (un)sets ExposureNumerator to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExposureNumerator value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetExposureNumeratorExplicitNull(b bool) {
	o.ExposureNumerator = nil
	o.isExplicitNullExposureNumerator = b
}
// GetFNumber returns the FNumber field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetFNumber() AnyOfnumberstringstring {
	if o == nil || o.FNumber == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.FNumber
}

// GetFNumberOk returns a tuple with the FNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetFNumberOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.FNumber == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.FNumber, true
}

// HasFNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasFNumber() bool {
	if o != nil && o.FNumber != nil {
		return true
	}

	return false
}

// SetFNumber gets a reference to the given AnyOfnumberstringstring and assigns it to the FNumber field.
func (o *MicrosoftGraphPhoto) SetFNumber(v AnyOfnumberstringstring) {
	o.FNumber = &v
}

// SetFNumberExplicitNull (un)sets FNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FNumber value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetFNumberExplicitNull(b bool) {
	o.FNumber = nil
	o.isExplicitNullFNumber = b
}
// GetFocalLength returns the FocalLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetFocalLength() AnyOfnumberstringstring {
	if o == nil || o.FocalLength == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.FocalLength
}

// GetFocalLengthOk returns a tuple with the FocalLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetFocalLengthOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.FocalLength == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.FocalLength, true
}

// HasFocalLength returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasFocalLength() bool {
	if o != nil && o.FocalLength != nil {
		return true
	}

	return false
}

// SetFocalLength gets a reference to the given AnyOfnumberstringstring and assigns it to the FocalLength field.
func (o *MicrosoftGraphPhoto) SetFocalLength(v AnyOfnumberstringstring) {
	o.FocalLength = &v
}

// SetFocalLengthExplicitNull (un)sets FocalLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FocalLength value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetFocalLengthExplicitNull(b bool) {
	o.FocalLength = nil
	o.isExplicitNullFocalLength = b
}
// GetIso returns the Iso field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetIso() int32 {
	if o == nil || o.Iso == nil {
		var ret int32
		return ret
	}
	return *o.Iso
}

// GetIsoOk returns a tuple with the Iso field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetIsoOk() (int32, bool) {
	if o == nil || o.Iso == nil {
		var ret int32
		return ret, false
	}
	return *o.Iso, true
}

// HasIso returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasIso() bool {
	if o != nil && o.Iso != nil {
		return true
	}

	return false
}

// SetIso gets a reference to the given int32 and assigns it to the Iso field.
func (o *MicrosoftGraphPhoto) SetIso(v int32) {
	o.Iso = &v
}

// SetIsoExplicitNull (un)sets Iso to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Iso value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetIsoExplicitNull(b bool) {
	o.Iso = nil
	o.isExplicitNullIso = b
}
// GetTakenDateTime returns the TakenDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPhoto) GetTakenDateTime() time.Time {
	if o == nil || o.TakenDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.TakenDateTime
}

// GetTakenDateTimeOk returns a tuple with the TakenDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPhoto) GetTakenDateTimeOk() (time.Time, bool) {
	if o == nil || o.TakenDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.TakenDateTime, true
}

// HasTakenDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPhoto) HasTakenDateTime() bool {
	if o != nil && o.TakenDateTime != nil {
		return true
	}

	return false
}

// SetTakenDateTime gets a reference to the given time.Time and assigns it to the TakenDateTime field.
func (o *MicrosoftGraphPhoto) SetTakenDateTime(v time.Time) {
	o.TakenDateTime = &v
}

// SetTakenDateTimeExplicitNull (un)sets TakenDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TakenDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPhoto) SetTakenDateTimeExplicitNull(b bool) {
	o.TakenDateTime = nil
	o.isExplicitNullTakenDateTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphPhoto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CameraMake == nil {
		if o.isExplicitNullCameraMake {
			toSerialize["cameraMake"] = o.CameraMake
		}
	} else {
		toSerialize["cameraMake"] = o.CameraMake
	}
	if o.CameraModel == nil {
		if o.isExplicitNullCameraModel {
			toSerialize["cameraModel"] = o.CameraModel
		}
	} else {
		toSerialize["cameraModel"] = o.CameraModel
	}
	if o.ExposureDenominator == nil {
		if o.isExplicitNullExposureDenominator {
			toSerialize["exposureDenominator"] = o.ExposureDenominator
		}
	} else {
		toSerialize["exposureDenominator"] = o.ExposureDenominator
	}
	if o.ExposureNumerator == nil {
		if o.isExplicitNullExposureNumerator {
			toSerialize["exposureNumerator"] = o.ExposureNumerator
		}
	} else {
		toSerialize["exposureNumerator"] = o.ExposureNumerator
	}
	if o.FNumber == nil {
		if o.isExplicitNullFNumber {
			toSerialize["fNumber"] = o.FNumber
		}
	} else {
		toSerialize["fNumber"] = o.FNumber
	}
	if o.FocalLength == nil {
		if o.isExplicitNullFocalLength {
			toSerialize["focalLength"] = o.FocalLength
		}
	} else {
		toSerialize["focalLength"] = o.FocalLength
	}
	if o.Iso == nil {
		if o.isExplicitNullIso {
			toSerialize["iso"] = o.Iso
		}
	} else {
		toSerialize["iso"] = o.Iso
	}
	if o.TakenDateTime == nil {
		if o.isExplicitNullTakenDateTime {
			toSerialize["takenDateTime"] = o.TakenDateTime
		}
	} else {
		toSerialize["takenDateTime"] = o.TakenDateTime
	}
	return json.Marshal(toSerialize)
}


