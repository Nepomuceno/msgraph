/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject25 struct for InlineObject25
type InlineObject25 struct {
	SecurityEnabledOnly *bool `json:"securityEnabledOnly,omitempty"`
	isExplicitNullSecurityEnabledOnly bool `json:"-"`
}

// GetSecurityEnabledOnly returns the SecurityEnabledOnly field if non-nil, zero value otherwise.
func (o *InlineObject25) GetSecurityEnabledOnly() bool {
	if o == nil || o.SecurityEnabledOnly == nil {
		var ret bool
		return ret
	}
	return *o.SecurityEnabledOnly
}

// GetSecurityEnabledOnlyOk returns a tuple with the SecurityEnabledOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject25) GetSecurityEnabledOnlyOk() (bool, bool) {
	if o == nil || o.SecurityEnabledOnly == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityEnabledOnly, true
}

// HasSecurityEnabledOnly returns a boolean if a field has been set.
func (o *InlineObject25) HasSecurityEnabledOnly() bool {
	if o != nil && o.SecurityEnabledOnly != nil {
		return true
	}

	return false
}

// SetSecurityEnabledOnly gets a reference to the given bool and assigns it to the SecurityEnabledOnly field.
func (o *InlineObject25) SetSecurityEnabledOnly(v bool) {
	o.SecurityEnabledOnly = &v
}

// SetSecurityEnabledOnlyExplicitNull (un)sets SecurityEnabledOnly to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SecurityEnabledOnly value is set to nil even if false is passed
func (o *InlineObject25) SetSecurityEnabledOnlyExplicitNull(b bool) {
	o.SecurityEnabledOnly = nil
	o.isExplicitNullSecurityEnabledOnly = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject25) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityEnabledOnly == nil {
		if o.isExplicitNullSecurityEnabledOnly {
			toSerialize["securityEnabledOnly"] = o.SecurityEnabledOnly
		}
	} else {
		toSerialize["securityEnabledOnly"] = o.SecurityEnabledOnly
	}
	return json.Marshal(toSerialize)
}


