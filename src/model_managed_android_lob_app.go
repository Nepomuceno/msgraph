/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// ManagedAndroidLobApp Contains properties and inherited properties for Managed Android Line Of Business apps.
type ManagedAndroidLobApp struct {
	// The package identifier.
	PackageId *string `json:"packageId,omitempty"`
	isExplicitNullPackageId bool `json:"-"`
	// The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *AnyOfmicrosoftGraphAndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	isExplicitNullMinimumSupportedOperatingSystem bool `json:"-"`
	// The version name of managed Android Line of Business (LoB) app.
	VersionName *string `json:"versionName,omitempty"`
	isExplicitNullVersionName bool `json:"-"`
	// The version code of managed Android Line of Business (LoB) app.
	VersionCode *string `json:"versionCode,omitempty"`
	isExplicitNullVersionCode bool `json:"-"`
}

// GetPackageId returns the PackageId field if non-nil, zero value otherwise.
func (o *ManagedAndroidLobApp) GetPackageId() string {
	if o == nil || o.PackageId == nil {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidLobApp) GetPackageIdOk() (string, bool) {
	if o == nil || o.PackageId == nil {
		var ret string
		return ret, false
	}
	return *o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *ManagedAndroidLobApp) HasPackageId() bool {
	if o != nil && o.PackageId != nil {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *ManagedAndroidLobApp) SetPackageId(v string) {
	o.PackageId = &v
}

// SetPackageIdExplicitNull (un)sets PackageId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PackageId value is set to nil even if false is passed
func (o *ManagedAndroidLobApp) SetPackageIdExplicitNull(b bool) {
	o.PackageId = nil
	o.isExplicitNullPackageId = b
}
// GetMinimumSupportedOperatingSystem returns the MinimumSupportedOperatingSystem field if non-nil, zero value otherwise.
func (o *ManagedAndroidLobApp) GetMinimumSupportedOperatingSystem() AnyOfmicrosoftGraphAndroidMinimumOperatingSystem {
	if o == nil || o.MinimumSupportedOperatingSystem == nil {
		var ret AnyOfmicrosoftGraphAndroidMinimumOperatingSystem
		return ret
	}
	return *o.MinimumSupportedOperatingSystem
}

// GetMinimumSupportedOperatingSystemOk returns a tuple with the MinimumSupportedOperatingSystem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidLobApp) GetMinimumSupportedOperatingSystemOk() (AnyOfmicrosoftGraphAndroidMinimumOperatingSystem, bool) {
	if o == nil || o.MinimumSupportedOperatingSystem == nil {
		var ret AnyOfmicrosoftGraphAndroidMinimumOperatingSystem
		return ret, false
	}
	return *o.MinimumSupportedOperatingSystem, true
}

// HasMinimumSupportedOperatingSystem returns a boolean if a field has been set.
func (o *ManagedAndroidLobApp) HasMinimumSupportedOperatingSystem() bool {
	if o != nil && o.MinimumSupportedOperatingSystem != nil {
		return true
	}

	return false
}

// SetMinimumSupportedOperatingSystem gets a reference to the given AnyOfmicrosoftGraphAndroidMinimumOperatingSystem and assigns it to the MinimumSupportedOperatingSystem field.
func (o *ManagedAndroidLobApp) SetMinimumSupportedOperatingSystem(v AnyOfmicrosoftGraphAndroidMinimumOperatingSystem) {
	o.MinimumSupportedOperatingSystem = &v
}

// SetMinimumSupportedOperatingSystemExplicitNull (un)sets MinimumSupportedOperatingSystem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MinimumSupportedOperatingSystem value is set to nil even if false is passed
func (o *ManagedAndroidLobApp) SetMinimumSupportedOperatingSystemExplicitNull(b bool) {
	o.MinimumSupportedOperatingSystem = nil
	o.isExplicitNullMinimumSupportedOperatingSystem = b
}
// GetVersionName returns the VersionName field if non-nil, zero value otherwise.
func (o *ManagedAndroidLobApp) GetVersionName() string {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidLobApp) GetVersionNameOk() (string, bool) {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret, false
	}
	return *o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *ManagedAndroidLobApp) HasVersionName() bool {
	if o != nil && o.VersionName != nil {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *ManagedAndroidLobApp) SetVersionName(v string) {
	o.VersionName = &v
}

// SetVersionNameExplicitNull (un)sets VersionName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The VersionName value is set to nil even if false is passed
func (o *ManagedAndroidLobApp) SetVersionNameExplicitNull(b bool) {
	o.VersionName = nil
	o.isExplicitNullVersionName = b
}
// GetVersionCode returns the VersionCode field if non-nil, zero value otherwise.
func (o *ManagedAndroidLobApp) GetVersionCode() string {
	if o == nil || o.VersionCode == nil {
		var ret string
		return ret
	}
	return *o.VersionCode
}

// GetVersionCodeOk returns a tuple with the VersionCode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAndroidLobApp) GetVersionCodeOk() (string, bool) {
	if o == nil || o.VersionCode == nil {
		var ret string
		return ret, false
	}
	return *o.VersionCode, true
}

// HasVersionCode returns a boolean if a field has been set.
func (o *ManagedAndroidLobApp) HasVersionCode() bool {
	if o != nil && o.VersionCode != nil {
		return true
	}

	return false
}

// SetVersionCode gets a reference to the given string and assigns it to the VersionCode field.
func (o *ManagedAndroidLobApp) SetVersionCode(v string) {
	o.VersionCode = &v
}

// SetVersionCodeExplicitNull (un)sets VersionCode to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The VersionCode value is set to nil even if false is passed
func (o *ManagedAndroidLobApp) SetVersionCodeExplicitNull(b bool) {
	o.VersionCode = nil
	o.isExplicitNullVersionCode = b
}

// MarshalJSON returns the JSON representation of the model.
func (o ManagedAndroidLobApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PackageId == nil {
		if o.isExplicitNullPackageId {
			toSerialize["packageId"] = o.PackageId
		}
	} else {
		toSerialize["packageId"] = o.PackageId
	}
	if o.MinimumSupportedOperatingSystem == nil {
		if o.isExplicitNullMinimumSupportedOperatingSystem {
			toSerialize["minimumSupportedOperatingSystem"] = o.MinimumSupportedOperatingSystem
		}
	} else {
		toSerialize["minimumSupportedOperatingSystem"] = o.MinimumSupportedOperatingSystem
	}
	if o.VersionName == nil {
		if o.isExplicitNullVersionName {
			toSerialize["versionName"] = o.VersionName
		}
	} else {
		toSerialize["versionName"] = o.VersionName
	}
	if o.VersionCode == nil {
		if o.isExplicitNullVersionCode {
			toSerialize["versionCode"] = o.VersionCode
		}
	} else {
		toSerialize["versionCode"] = o.VersionCode
	}
	return json.Marshal(toSerialize)
}


