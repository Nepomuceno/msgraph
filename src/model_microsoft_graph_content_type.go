/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphContentType struct for MicrosoftGraphContentType
type MicrosoftGraphContentType struct {
	Id *string `json:"id,omitempty"`

	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	Group *string `json:"group,omitempty"`
	isExplicitNullGroup bool `json:"-"`
	Hidden *bool `json:"hidden,omitempty"`
	isExplicitNullHidden bool `json:"-"`
	InheritedFrom *AnyOfmicrosoftGraphItemReference `json:"inheritedFrom,omitempty"`
	isExplicitNullInheritedFrom bool `json:"-"`
	Name *string `json:"name,omitempty"`
	isExplicitNullName bool `json:"-"`
	Order *AnyOfmicrosoftGraphContentTypeOrder `json:"order,omitempty"`
	isExplicitNullOrder bool `json:"-"`
	ParentId *string `json:"parentId,omitempty"`
	isExplicitNullParentId bool `json:"-"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	isExplicitNullReadOnly bool `json:"-"`
	Sealed *bool `json:"sealed,omitempty"`
	isExplicitNullSealed bool `json:"-"`
	ColumnLinks *[]MicrosoftGraphColumnLink `json:"columnLinks,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphContentType) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphContentType) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetGroup returns the Group field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetGroupOk() (string, bool) {
	if o == nil || o.Group == nil {
		var ret string
		return ret, false
	}
	return *o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *MicrosoftGraphContentType) SetGroup(v string) {
	o.Group = &v
}

// SetGroupExplicitNull (un)sets Group to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Group value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetGroupExplicitNull(b bool) {
	o.Group = nil
	o.isExplicitNullGroup = b
}
// GetHidden returns the Hidden field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetHiddenOk() (bool, bool) {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret, false
	}
	return *o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *MicrosoftGraphContentType) SetHidden(v bool) {
	o.Hidden = &v
}

// SetHiddenExplicitNull (un)sets Hidden to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Hidden value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetHiddenExplicitNull(b bool) {
	o.Hidden = nil
	o.isExplicitNullHidden = b
}
// GetInheritedFrom returns the InheritedFrom field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetInheritedFrom() AnyOfmicrosoftGraphItemReference {
	if o == nil || o.InheritedFrom == nil {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return *o.InheritedFrom
}

// GetInheritedFromOk returns a tuple with the InheritedFrom field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetInheritedFromOk() (AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.InheritedFrom == nil {
		var ret AnyOfmicrosoftGraphItemReference
		return ret, false
	}
	return *o.InheritedFrom, true
}

// HasInheritedFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasInheritedFrom() bool {
	if o != nil && o.InheritedFrom != nil {
		return true
	}

	return false
}

// SetInheritedFrom gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the InheritedFrom field.
func (o *MicrosoftGraphContentType) SetInheritedFrom(v AnyOfmicrosoftGraphItemReference) {
	o.InheritedFrom = &v
}

// SetInheritedFromExplicitNull (un)sets InheritedFrom to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InheritedFrom value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetInheritedFromExplicitNull(b bool) {
	o.InheritedFrom = nil
	o.isExplicitNullInheritedFrom = b
}
// GetName returns the Name field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphContentType) SetName(v string) {
	o.Name = &v
}

// SetNameExplicitNull (un)sets Name to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Name value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetNameExplicitNull(b bool) {
	o.Name = nil
	o.isExplicitNullName = b
}
// GetOrder returns the Order field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetOrder() AnyOfmicrosoftGraphContentTypeOrder {
	if o == nil || o.Order == nil {
		var ret AnyOfmicrosoftGraphContentTypeOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetOrderOk() (AnyOfmicrosoftGraphContentTypeOrder, bool) {
	if o == nil || o.Order == nil {
		var ret AnyOfmicrosoftGraphContentTypeOrder
		return ret, false
	}
	return *o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AnyOfmicrosoftGraphContentTypeOrder and assigns it to the Order field.
func (o *MicrosoftGraphContentType) SetOrder(v AnyOfmicrosoftGraphContentTypeOrder) {
	o.Order = &v
}

// SetOrderExplicitNull (un)sets Order to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Order value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetOrderExplicitNull(b bool) {
	o.Order = nil
	o.isExplicitNullOrder = b
}
// GetParentId returns the ParentId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetParentIdOk() (string, bool) {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret, false
	}
	return *o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *MicrosoftGraphContentType) SetParentId(v string) {
	o.ParentId = &v
}

// SetParentIdExplicitNull (un)sets ParentId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ParentId value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetParentIdExplicitNull(b bool) {
	o.ParentId = nil
	o.isExplicitNullParentId = b
}
// GetReadOnly returns the ReadOnly field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetReadOnlyOk() (bool, bool) {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret, false
	}
	return *o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *MicrosoftGraphContentType) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// SetReadOnlyExplicitNull (un)sets ReadOnly to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ReadOnly value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetReadOnlyExplicitNull(b bool) {
	o.ReadOnly = nil
	o.isExplicitNullReadOnly = b
}
// GetSealed returns the Sealed field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetSealed() bool {
	if o == nil || o.Sealed == nil {
		var ret bool
		return ret
	}
	return *o.Sealed
}

// GetSealedOk returns a tuple with the Sealed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetSealedOk() (bool, bool) {
	if o == nil || o.Sealed == nil {
		var ret bool
		return ret, false
	}
	return *o.Sealed, true
}

// HasSealed returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasSealed() bool {
	if o != nil && o.Sealed != nil {
		return true
	}

	return false
}

// SetSealed gets a reference to the given bool and assigns it to the Sealed field.
func (o *MicrosoftGraphContentType) SetSealed(v bool) {
	o.Sealed = &v
}

// SetSealedExplicitNull (un)sets Sealed to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sealed value is set to nil even if false is passed
func (o *MicrosoftGraphContentType) SetSealedExplicitNull(b bool) {
	o.Sealed = nil
	o.isExplicitNullSealed = b
}
// GetColumnLinks returns the ColumnLinks field if non-nil, zero value otherwise.
func (o *MicrosoftGraphContentType) GetColumnLinks() []MicrosoftGraphColumnLink {
	if o == nil || o.ColumnLinks == nil {
		var ret []MicrosoftGraphColumnLink
		return ret
	}
	return *o.ColumnLinks
}

// GetColumnLinksOk returns a tuple with the ColumnLinks field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphContentType) GetColumnLinksOk() ([]MicrosoftGraphColumnLink, bool) {
	if o == nil || o.ColumnLinks == nil {
		var ret []MicrosoftGraphColumnLink
		return ret, false
	}
	return *o.ColumnLinks, true
}

// HasColumnLinks returns a boolean if a field has been set.
func (o *MicrosoftGraphContentType) HasColumnLinks() bool {
	if o != nil && o.ColumnLinks != nil {
		return true
	}

	return false
}

// SetColumnLinks gets a reference to the given []MicrosoftGraphColumnLink and assigns it to the ColumnLinks field.
func (o *MicrosoftGraphContentType) SetColumnLinks(v []MicrosoftGraphColumnLink) {
	o.ColumnLinks = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphContentType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.Group == nil {
		if o.isExplicitNullGroup {
			toSerialize["group"] = o.Group
		}
	} else {
		toSerialize["group"] = o.Group
	}
	if o.Hidden == nil {
		if o.isExplicitNullHidden {
			toSerialize["hidden"] = o.Hidden
		}
	} else {
		toSerialize["hidden"] = o.Hidden
	}
	if o.InheritedFrom == nil {
		if o.isExplicitNullInheritedFrom {
			toSerialize["inheritedFrom"] = o.InheritedFrom
		}
	} else {
		toSerialize["inheritedFrom"] = o.InheritedFrom
	}
	if o.Name == nil {
		if o.isExplicitNullName {
			toSerialize["name"] = o.Name
		}
	} else {
		toSerialize["name"] = o.Name
	}
	if o.Order == nil {
		if o.isExplicitNullOrder {
			toSerialize["order"] = o.Order
		}
	} else {
		toSerialize["order"] = o.Order
	}
	if o.ParentId == nil {
		if o.isExplicitNullParentId {
			toSerialize["parentId"] = o.ParentId
		}
	} else {
		toSerialize["parentId"] = o.ParentId
	}
	if o.ReadOnly == nil {
		if o.isExplicitNullReadOnly {
			toSerialize["readOnly"] = o.ReadOnly
		}
	} else {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.Sealed == nil {
		if o.isExplicitNullSealed {
			toSerialize["sealed"] = o.Sealed
		}
	} else {
		toSerialize["sealed"] = o.Sealed
	}
	if o.ColumnLinks != nil {
		toSerialize["columnLinks"] = o.ColumnLinks
	}
	return json.Marshal(toSerialize)
}


