/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphScheduleInformation struct for MicrosoftGraphScheduleInformation
type MicrosoftGraphScheduleInformation struct {
	ScheduleId *string `json:"scheduleId,omitempty"`
	isExplicitNullScheduleId bool `json:"-"`
	ScheduleItems *[]AnyOfmicrosoftGraphScheduleItem `json:"scheduleItems,omitempty"`

	AvailabilityView *string `json:"availabilityView,omitempty"`
	isExplicitNullAvailabilityView bool `json:"-"`
	Error *AnyOfmicrosoftGraphFreeBusyError `json:"error,omitempty"`
	isExplicitNullError bool `json:"-"`
	WorkingHours *AnyOfmicrosoftGraphWorkingHours `json:"workingHours,omitempty"`
	isExplicitNullWorkingHours bool `json:"-"`
}

// GetScheduleId returns the ScheduleId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetScheduleId() string {
	if o == nil || o.ScheduleId == nil {
		var ret string
		return ret
	}
	return *o.ScheduleId
}

// GetScheduleIdOk returns a tuple with the ScheduleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetScheduleIdOk() (string, bool) {
	if o == nil || o.ScheduleId == nil {
		var ret string
		return ret, false
	}
	return *o.ScheduleId, true
}

// HasScheduleId returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasScheduleId() bool {
	if o != nil && o.ScheduleId != nil {
		return true
	}

	return false
}

// SetScheduleId gets a reference to the given string and assigns it to the ScheduleId field.
func (o *MicrosoftGraphScheduleInformation) SetScheduleId(v string) {
	o.ScheduleId = &v
}

// SetScheduleIdExplicitNull (un)sets ScheduleId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ScheduleId value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleInformation) SetScheduleIdExplicitNull(b bool) {
	o.ScheduleId = nil
	o.isExplicitNullScheduleId = b
}
// GetScheduleItems returns the ScheduleItems field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetScheduleItems() []AnyOfmicrosoftGraphScheduleItem {
	if o == nil || o.ScheduleItems == nil {
		var ret []AnyOfmicrosoftGraphScheduleItem
		return ret
	}
	return *o.ScheduleItems
}

// GetScheduleItemsOk returns a tuple with the ScheduleItems field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetScheduleItemsOk() ([]AnyOfmicrosoftGraphScheduleItem, bool) {
	if o == nil || o.ScheduleItems == nil {
		var ret []AnyOfmicrosoftGraphScheduleItem
		return ret, false
	}
	return *o.ScheduleItems, true
}

// HasScheduleItems returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasScheduleItems() bool {
	if o != nil && o.ScheduleItems != nil {
		return true
	}

	return false
}

// SetScheduleItems gets a reference to the given []AnyOfmicrosoftGraphScheduleItem and assigns it to the ScheduleItems field.
func (o *MicrosoftGraphScheduleInformation) SetScheduleItems(v []AnyOfmicrosoftGraphScheduleItem) {
	o.ScheduleItems = &v
}

// GetAvailabilityView returns the AvailabilityView field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetAvailabilityView() string {
	if o == nil || o.AvailabilityView == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityView
}

// GetAvailabilityViewOk returns a tuple with the AvailabilityView field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetAvailabilityViewOk() (string, bool) {
	if o == nil || o.AvailabilityView == nil {
		var ret string
		return ret, false
	}
	return *o.AvailabilityView, true
}

// HasAvailabilityView returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasAvailabilityView() bool {
	if o != nil && o.AvailabilityView != nil {
		return true
	}

	return false
}

// SetAvailabilityView gets a reference to the given string and assigns it to the AvailabilityView field.
func (o *MicrosoftGraphScheduleInformation) SetAvailabilityView(v string) {
	o.AvailabilityView = &v
}

// SetAvailabilityViewExplicitNull (un)sets AvailabilityView to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AvailabilityView value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleInformation) SetAvailabilityViewExplicitNull(b bool) {
	o.AvailabilityView = nil
	o.isExplicitNullAvailabilityView = b
}
// GetError returns the Error field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetError() AnyOfmicrosoftGraphFreeBusyError {
	if o == nil || o.Error == nil {
		var ret AnyOfmicrosoftGraphFreeBusyError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetErrorOk() (AnyOfmicrosoftGraphFreeBusyError, bool) {
	if o == nil || o.Error == nil {
		var ret AnyOfmicrosoftGraphFreeBusyError
		return ret, false
	}
	return *o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AnyOfmicrosoftGraphFreeBusyError and assigns it to the Error field.
func (o *MicrosoftGraphScheduleInformation) SetError(v AnyOfmicrosoftGraphFreeBusyError) {
	o.Error = &v
}

// SetErrorExplicitNull (un)sets Error to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Error value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleInformation) SetErrorExplicitNull(b bool) {
	o.Error = nil
	o.isExplicitNullError = b
}
// GetWorkingHours returns the WorkingHours field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleInformation) GetWorkingHours() AnyOfmicrosoftGraphWorkingHours {
	if o == nil || o.WorkingHours == nil {
		var ret AnyOfmicrosoftGraphWorkingHours
		return ret
	}
	return *o.WorkingHours
}

// GetWorkingHoursOk returns a tuple with the WorkingHours field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleInformation) GetWorkingHoursOk() (AnyOfmicrosoftGraphWorkingHours, bool) {
	if o == nil || o.WorkingHours == nil {
		var ret AnyOfmicrosoftGraphWorkingHours
		return ret, false
	}
	return *o.WorkingHours, true
}

// HasWorkingHours returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleInformation) HasWorkingHours() bool {
	if o != nil && o.WorkingHours != nil {
		return true
	}

	return false
}

// SetWorkingHours gets a reference to the given AnyOfmicrosoftGraphWorkingHours and assigns it to the WorkingHours field.
func (o *MicrosoftGraphScheduleInformation) SetWorkingHours(v AnyOfmicrosoftGraphWorkingHours) {
	o.WorkingHours = &v
}

// SetWorkingHoursExplicitNull (un)sets WorkingHours to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WorkingHours value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleInformation) SetWorkingHoursExplicitNull(b bool) {
	o.WorkingHours = nil
	o.isExplicitNullWorkingHours = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphScheduleInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScheduleId == nil {
		if o.isExplicitNullScheduleId {
			toSerialize["scheduleId"] = o.ScheduleId
		}
	} else {
		toSerialize["scheduleId"] = o.ScheduleId
	}
	if o.ScheduleItems != nil {
		toSerialize["scheduleItems"] = o.ScheduleItems
	}
	if o.AvailabilityView == nil {
		if o.isExplicitNullAvailabilityView {
			toSerialize["availabilityView"] = o.AvailabilityView
		}
	} else {
		toSerialize["availabilityView"] = o.AvailabilityView
	}
	if o.Error == nil {
		if o.isExplicitNullError {
			toSerialize["error"] = o.Error
		}
	} else {
		toSerialize["error"] = o.Error
	}
	if o.WorkingHours == nil {
		if o.isExplicitNullWorkingHours {
			toSerialize["workingHours"] = o.WorkingHours
		}
	} else {
		toSerialize["workingHours"] = o.WorkingHours
	}
	return json.Marshal(toSerialize)
}


