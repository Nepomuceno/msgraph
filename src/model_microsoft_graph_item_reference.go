/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphItemReference struct for MicrosoftGraphItemReference
type MicrosoftGraphItemReference struct {
	DriveId *string `json:"driveId,omitempty"`
	isExplicitNullDriveId bool `json:"-"`
	DriveType *string `json:"driveType,omitempty"`
	isExplicitNullDriveType bool `json:"-"`
	Id *string `json:"id,omitempty"`
	isExplicitNullId bool `json:"-"`
	Name *string `json:"name,omitempty"`
	isExplicitNullName bool `json:"-"`
	Path *string `json:"path,omitempty"`
	isExplicitNullPath bool `json:"-"`
	ShareId *string `json:"shareId,omitempty"`
	isExplicitNullShareId bool `json:"-"`
	SharepointIds *AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	isExplicitNullSharepointIds bool `json:"-"`
	SiteId *string `json:"siteId,omitempty"`
	isExplicitNullSiteId bool `json:"-"`
}

// GetDriveId returns the DriveId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetDriveId() string {
	if o == nil || o.DriveId == nil {
		var ret string
		return ret
	}
	return *o.DriveId
}

// GetDriveIdOk returns a tuple with the DriveId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetDriveIdOk() (string, bool) {
	if o == nil || o.DriveId == nil {
		var ret string
		return ret, false
	}
	return *o.DriveId, true
}

// HasDriveId returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasDriveId() bool {
	if o != nil && o.DriveId != nil {
		return true
	}

	return false
}

// SetDriveId gets a reference to the given string and assigns it to the DriveId field.
func (o *MicrosoftGraphItemReference) SetDriveId(v string) {
	o.DriveId = &v
}

// SetDriveIdExplicitNull (un)sets DriveId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DriveId value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetDriveIdExplicitNull(b bool) {
	o.DriveId = nil
	o.isExplicitNullDriveId = b
}
// GetDriveType returns the DriveType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetDriveType() string {
	if o == nil || o.DriveType == nil {
		var ret string
		return ret
	}
	return *o.DriveType
}

// GetDriveTypeOk returns a tuple with the DriveType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetDriveTypeOk() (string, bool) {
	if o == nil || o.DriveType == nil {
		var ret string
		return ret, false
	}
	return *o.DriveType, true
}

// HasDriveType returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasDriveType() bool {
	if o != nil && o.DriveType != nil {
		return true
	}

	return false
}

// SetDriveType gets a reference to the given string and assigns it to the DriveType field.
func (o *MicrosoftGraphItemReference) SetDriveType(v string) {
	o.DriveType = &v
}

// SetDriveTypeExplicitNull (un)sets DriveType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DriveType value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetDriveTypeExplicitNull(b bool) {
	o.DriveType = nil
	o.isExplicitNullDriveType = b
}
// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphItemReference) SetId(v string) {
	o.Id = &v
}

// SetIdExplicitNull (un)sets Id to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Id value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetIdExplicitNull(b bool) {
	o.Id = nil
	o.isExplicitNullId = b
}
// GetName returns the Name field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphItemReference) SetName(v string) {
	o.Name = &v
}

// SetNameExplicitNull (un)sets Name to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Name value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetNameExplicitNull(b bool) {
	o.Name = nil
	o.isExplicitNullName = b
}
// GetPath returns the Path field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetPathOk() (string, bool) {
	if o == nil || o.Path == nil {
		var ret string
		return ret, false
	}
	return *o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *MicrosoftGraphItemReference) SetPath(v string) {
	o.Path = &v
}

// SetPathExplicitNull (un)sets Path to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Path value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetPathExplicitNull(b bool) {
	o.Path = nil
	o.isExplicitNullPath = b
}
// GetShareId returns the ShareId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetShareId() string {
	if o == nil || o.ShareId == nil {
		var ret string
		return ret
	}
	return *o.ShareId
}

// GetShareIdOk returns a tuple with the ShareId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetShareIdOk() (string, bool) {
	if o == nil || o.ShareId == nil {
		var ret string
		return ret, false
	}
	return *o.ShareId, true
}

// HasShareId returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasShareId() bool {
	if o != nil && o.ShareId != nil {
		return true
	}

	return false
}

// SetShareId gets a reference to the given string and assigns it to the ShareId field.
func (o *MicrosoftGraphItemReference) SetShareId(v string) {
	o.ShareId = &v
}

// SetShareIdExplicitNull (un)sets ShareId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShareId value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetShareIdExplicitNull(b bool) {
	o.ShareId = nil
	o.isExplicitNullShareId = b
}
// GetSharepointIds returns the SharepointIds field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil || o.SharepointIds == nil {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return *o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetSharepointIdsOk() (AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret, false
	}
	return *o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *MicrosoftGraphItemReference) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = &v
}

// SetSharepointIdsExplicitNull (un)sets SharepointIds to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SharepointIds value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetSharepointIdsExplicitNull(b bool) {
	o.SharepointIds = nil
	o.isExplicitNullSharepointIds = b
}
// GetSiteId returns the SiteId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphItemReference) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphItemReference) GetSiteIdOk() (string, bool) {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret, false
	}
	return *o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MicrosoftGraphItemReference) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *MicrosoftGraphItemReference) SetSiteId(v string) {
	o.SiteId = &v
}

// SetSiteIdExplicitNull (un)sets SiteId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SiteId value is set to nil even if false is passed
func (o *MicrosoftGraphItemReference) SetSiteIdExplicitNull(b bool) {
	o.SiteId = nil
	o.isExplicitNullSiteId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphItemReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DriveId == nil {
		if o.isExplicitNullDriveId {
			toSerialize["driveId"] = o.DriveId
		}
	} else {
		toSerialize["driveId"] = o.DriveId
	}
	if o.DriveType == nil {
		if o.isExplicitNullDriveType {
			toSerialize["driveType"] = o.DriveType
		}
	} else {
		toSerialize["driveType"] = o.DriveType
	}
	if o.Id == nil {
		if o.isExplicitNullId {
			toSerialize["id"] = o.Id
		}
	} else {
		toSerialize["id"] = o.Id
	}
	if o.Name == nil {
		if o.isExplicitNullName {
			toSerialize["name"] = o.Name
		}
	} else {
		toSerialize["name"] = o.Name
	}
	if o.Path == nil {
		if o.isExplicitNullPath {
			toSerialize["path"] = o.Path
		}
	} else {
		toSerialize["path"] = o.Path
	}
	if o.ShareId == nil {
		if o.isExplicitNullShareId {
			toSerialize["shareId"] = o.ShareId
		}
	} else {
		toSerialize["shareId"] = o.ShareId
	}
	if o.SharepointIds == nil {
		if o.isExplicitNullSharepointIds {
			toSerialize["sharepointIds"] = o.SharepointIds
		}
	} else {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.SiteId == nil {
		if o.isExplicitNullSiteId {
			toSerialize["siteId"] = o.SiteId
		}
	} else {
		toSerialize["siteId"] = o.SiteId
	}
	return json.Marshal(toSerialize)
}


