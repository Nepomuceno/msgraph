/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphIosHomeScreenFolderPage struct for MicrosoftGraphIosHomeScreenFolderPage
type MicrosoftGraphIosHomeScreenFolderPage struct {
	// Name of the folder page
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	// A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements.
	Apps *[]MicrosoftGraphIosHomeScreenApp `json:"apps,omitempty"`

}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosHomeScreenFolderPage) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosHomeScreenFolderPage) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphIosHomeScreenFolderPage) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphIosHomeScreenFolderPage) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphIosHomeScreenFolderPage) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetApps returns the Apps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosHomeScreenFolderPage) GetApps() []MicrosoftGraphIosHomeScreenApp {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphIosHomeScreenApp
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosHomeScreenFolderPage) GetAppsOk() ([]MicrosoftGraphIosHomeScreenApp, bool) {
	if o == nil || o.Apps == nil {
		var ret []MicrosoftGraphIosHomeScreenApp
		return ret, false
	}
	return *o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *MicrosoftGraphIosHomeScreenFolderPage) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []MicrosoftGraphIosHomeScreenApp and assigns it to the Apps field.
func (o *MicrosoftGraphIosHomeScreenFolderPage) SetApps(v []MicrosoftGraphIosHomeScreenApp) {
	o.Apps = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphIosHomeScreenFolderPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	return json.Marshal(toSerialize)
}


