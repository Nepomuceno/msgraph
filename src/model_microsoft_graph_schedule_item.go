/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphScheduleItem struct for MicrosoftGraphScheduleItem
type MicrosoftGraphScheduleItem struct {
	Start *AnyOfmicrosoftGraphDateTimeTimeZone `json:"start,omitempty"`
	isExplicitNullStart bool `json:"-"`
	End *AnyOfmicrosoftGraphDateTimeTimeZone `json:"end,omitempty"`
	isExplicitNullEnd bool `json:"-"`
	IsPrivate *bool `json:"isPrivate,omitempty"`
	isExplicitNullIsPrivate bool `json:"-"`
	Status *AnyOfmicrosoftGraphFreeBusyStatus `json:"status,omitempty"`
	isExplicitNullStatus bool `json:"-"`
	Subject *string `json:"subject,omitempty"`
	isExplicitNullSubject bool `json:"-"`
	Location *string `json:"location,omitempty"`
	isExplicitNullLocation bool `json:"-"`
}

// GetStart returns the Start field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetStart() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.Start == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetStartOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.Start == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the Start field.
func (o *MicrosoftGraphScheduleItem) SetStart(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.Start = &v
}

// SetStartExplicitNull (un)sets Start to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Start value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetStartExplicitNull(b bool) {
	o.Start = nil
	o.isExplicitNullStart = b
}
// GetEnd returns the End field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetEnd() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.End == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetEndOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.End == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the End field.
func (o *MicrosoftGraphScheduleItem) SetEnd(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.End = &v
}

// SetEndExplicitNull (un)sets End to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The End value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetEndExplicitNull(b bool) {
	o.End = nil
	o.isExplicitNullEnd = b
}
// GetIsPrivate returns the IsPrivate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetIsPrivate() bool {
	if o == nil || o.IsPrivate == nil {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetIsPrivateOk() (bool, bool) {
	if o == nil || o.IsPrivate == nil {
		var ret bool
		return ret, false
	}
	return *o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasIsPrivate() bool {
	if o != nil && o.IsPrivate != nil {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *MicrosoftGraphScheduleItem) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

// SetIsPrivateExplicitNull (un)sets IsPrivate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsPrivate value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetIsPrivateExplicitNull(b bool) {
	o.IsPrivate = nil
	o.isExplicitNullIsPrivate = b
}
// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetStatus() AnyOfmicrosoftGraphFreeBusyStatus {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetStatusOk() (AnyOfmicrosoftGraphFreeBusyStatus, bool) {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphFreeBusyStatus and assigns it to the Status field.
func (o *MicrosoftGraphScheduleItem) SetStatus(v AnyOfmicrosoftGraphFreeBusyStatus) {
	o.Status = &v
}

// SetStatusExplicitNull (un)sets Status to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Status value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetStatusExplicitNull(b bool) {
	o.Status = nil
	o.isExplicitNullStatus = b
}
// GetSubject returns the Subject field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetSubjectOk() (string, bool) {
	if o == nil || o.Subject == nil {
		var ret string
		return ret, false
	}
	return *o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MicrosoftGraphScheduleItem) SetSubject(v string) {
	o.Subject = &v
}

// SetSubjectExplicitNull (un)sets Subject to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Subject value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetSubjectExplicitNull(b bool) {
	o.Subject = nil
	o.isExplicitNullSubject = b
}
// GetLocation returns the Location field if non-nil, zero value otherwise.
func (o *MicrosoftGraphScheduleItem) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphScheduleItem) GetLocationOk() (string, bool) {
	if o == nil || o.Location == nil {
		var ret string
		return ret, false
	}
	return *o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphScheduleItem) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *MicrosoftGraphScheduleItem) SetLocation(v string) {
	o.Location = &v
}

// SetLocationExplicitNull (un)sets Location to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Location value is set to nil even if false is passed
func (o *MicrosoftGraphScheduleItem) SetLocationExplicitNull(b bool) {
	o.Location = nil
	o.isExplicitNullLocation = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphScheduleItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Start == nil {
		if o.isExplicitNullStart {
			toSerialize["start"] = o.Start
		}
	} else {
		toSerialize["start"] = o.Start
	}
	if o.End == nil {
		if o.isExplicitNullEnd {
			toSerialize["end"] = o.End
		}
	} else {
		toSerialize["end"] = o.End
	}
	if o.IsPrivate == nil {
		if o.isExplicitNullIsPrivate {
			toSerialize["isPrivate"] = o.IsPrivate
		}
	} else {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	if o.Status == nil {
		if o.isExplicitNullStatus {
			toSerialize["status"] = o.Status
		}
	} else {
		toSerialize["status"] = o.Status
	}
	if o.Subject == nil {
		if o.isExplicitNullSubject {
			toSerialize["subject"] = o.Subject
		}
	} else {
		toSerialize["subject"] = o.Subject
	}
	if o.Location == nil {
		if o.isExplicitNullLocation {
			toSerialize["location"] = o.Location
		}
	} else {
		toSerialize["location"] = o.Location
	}
	return json.Marshal(toSerialize)
}


