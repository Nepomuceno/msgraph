/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphAlert struct for MicrosoftGraphAlert
type MicrosoftGraphAlert struct {
	Id *string `json:"id,omitempty"`

	ActivityGroupName *string `json:"activityGroupName,omitempty"`
	isExplicitNullActivityGroupName bool `json:"-"`
	AssignedTo *string `json:"assignedTo,omitempty"`
	isExplicitNullAssignedTo bool `json:"-"`
	AzureSubscriptionId *string `json:"azureSubscriptionId,omitempty"`
	isExplicitNullAzureSubscriptionId bool `json:"-"`
	AzureTenantId *string `json:"azureTenantId,omitempty"`

	Category *string `json:"category,omitempty"`
	isExplicitNullCategory bool `json:"-"`
	ClosedDateTime *time.Time `json:"closedDateTime,omitempty"`
	isExplicitNullClosedDateTime bool `json:"-"`
	CloudAppStates *[]AnyOfmicrosoftGraphCloudAppSecurityState `json:"cloudAppStates,omitempty"`

	Comments *[]string `json:"comments,omitempty"`

	Confidence *int32 `json:"confidence,omitempty"`
	isExplicitNullConfidence bool `json:"-"`
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	DetectionIds *[]string `json:"detectionIds,omitempty"`

	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
	isExplicitNullEventDateTime bool `json:"-"`
	Feedback *AnyOfmicrosoftGraphAlertFeedback `json:"feedback,omitempty"`
	isExplicitNullFeedback bool `json:"-"`
	FileStates *[]AnyOfmicrosoftGraphFileSecurityState `json:"fileStates,omitempty"`

	HistoryStates *[]AnyOfmicrosoftGraphAlertHistoryState `json:"historyStates,omitempty"`

	HostStates *[]AnyOfmicrosoftGraphHostSecurityState `json:"hostStates,omitempty"`

	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	isExplicitNullLastModifiedDateTime bool `json:"-"`
	MalwareStates *[]AnyOfmicrosoftGraphMalwareState `json:"malwareStates,omitempty"`

	NetworkConnections *[]AnyOfmicrosoftGraphNetworkConnection `json:"networkConnections,omitempty"`

	Processes *[]AnyOfmicrosoftGraphProcess `json:"processes,omitempty"`

	RecommendedActions *[]string `json:"recommendedActions,omitempty"`

	RegistryKeyStates *[]AnyOfmicrosoftGraphRegistryKeyState `json:"registryKeyStates,omitempty"`

	Severity *AnyOfmicrosoftGraphAlertSeverity `json:"severity,omitempty"`

	SourceMaterials *[]string `json:"sourceMaterials,omitempty"`

	Status *AnyOfmicrosoftGraphAlertStatus `json:"status,omitempty"`

	Tags *[]string `json:"tags,omitempty"`

	Title *string `json:"title,omitempty"`
	isExplicitNullTitle bool `json:"-"`
	Triggers *[]AnyOfmicrosoftGraphAlertTrigger `json:"triggers,omitempty"`

	UserStates *[]AnyOfmicrosoftGraphUserSecurityState `json:"userStates,omitempty"`

	VendorInformation *AnyOfmicrosoftGraphSecurityVendorInformation `json:"vendorInformation,omitempty"`
	isExplicitNullVendorInformation bool `json:"-"`
	VulnerabilityStates *[]AnyOfmicrosoftGraphVulnerabilityState `json:"vulnerabilityStates,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAlert) SetId(v string) {
	o.Id = &v
}

// GetActivityGroupName returns the ActivityGroupName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetActivityGroupName() string {
	if o == nil || o.ActivityGroupName == nil {
		var ret string
		return ret
	}
	return *o.ActivityGroupName
}

// GetActivityGroupNameOk returns a tuple with the ActivityGroupName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetActivityGroupNameOk() (string, bool) {
	if o == nil || o.ActivityGroupName == nil {
		var ret string
		return ret, false
	}
	return *o.ActivityGroupName, true
}

// HasActivityGroupName returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasActivityGroupName() bool {
	if o != nil && o.ActivityGroupName != nil {
		return true
	}

	return false
}

// SetActivityGroupName gets a reference to the given string and assigns it to the ActivityGroupName field.
func (o *MicrosoftGraphAlert) SetActivityGroupName(v string) {
	o.ActivityGroupName = &v
}

// SetActivityGroupNameExplicitNull (un)sets ActivityGroupName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ActivityGroupName value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetActivityGroupNameExplicitNull(b bool) {
	o.ActivityGroupName = nil
	o.isExplicitNullActivityGroupName = b
}
// GetAssignedTo returns the AssignedTo field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetAssignedTo() string {
	if o == nil || o.AssignedTo == nil {
		var ret string
		return ret
	}
	return *o.AssignedTo
}

// GetAssignedToOk returns a tuple with the AssignedTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetAssignedToOk() (string, bool) {
	if o == nil || o.AssignedTo == nil {
		var ret string
		return ret, false
	}
	return *o.AssignedTo, true
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAssignedTo() bool {
	if o != nil && o.AssignedTo != nil {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given string and assigns it to the AssignedTo field.
func (o *MicrosoftGraphAlert) SetAssignedTo(v string) {
	o.AssignedTo = &v
}

// SetAssignedToExplicitNull (un)sets AssignedTo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AssignedTo value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetAssignedToExplicitNull(b bool) {
	o.AssignedTo = nil
	o.isExplicitNullAssignedTo = b
}
// GetAzureSubscriptionId returns the AzureSubscriptionId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetAzureSubscriptionId() string {
	if o == nil || o.AzureSubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetAzureSubscriptionIdOk() (string, bool) {
	if o == nil || o.AzureSubscriptionId == nil {
		var ret string
		return ret, false
	}
	return *o.AzureSubscriptionId, true
}

// HasAzureSubscriptionId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAzureSubscriptionId() bool {
	if o != nil && o.AzureSubscriptionId != nil {
		return true
	}

	return false
}

// SetAzureSubscriptionId gets a reference to the given string and assigns it to the AzureSubscriptionId field.
func (o *MicrosoftGraphAlert) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = &v
}

// SetAzureSubscriptionIdExplicitNull (un)sets AzureSubscriptionId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AzureSubscriptionId value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetAzureSubscriptionIdExplicitNull(b bool) {
	o.AzureSubscriptionId = nil
	o.isExplicitNullAzureSubscriptionId = b
}
// GetAzureTenantId returns the AzureTenantId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetAzureTenantId() string {
	if o == nil || o.AzureTenantId == nil {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetAzureTenantIdOk() (string, bool) {
	if o == nil || o.AzureTenantId == nil {
		var ret string
		return ret, false
	}
	return *o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId != nil {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *MicrosoftGraphAlert) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetCategory returns the Category field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCategoryOk() (string, bool) {
	if o == nil || o.Category == nil {
		var ret string
		return ret, false
	}
	return *o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *MicrosoftGraphAlert) SetCategory(v string) {
	o.Category = &v
}

// SetCategoryExplicitNull (un)sets Category to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Category value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetCategoryExplicitNull(b bool) {
	o.Category = nil
	o.isExplicitNullCategory = b
}
// GetClosedDateTime returns the ClosedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetClosedDateTime() time.Time {
	if o == nil || o.ClosedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ClosedDateTime
}

// GetClosedDateTimeOk returns a tuple with the ClosedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetClosedDateTimeOk() (time.Time, bool) {
	if o == nil || o.ClosedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ClosedDateTime, true
}

// HasClosedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasClosedDateTime() bool {
	if o != nil && o.ClosedDateTime != nil {
		return true
	}

	return false
}

// SetClosedDateTime gets a reference to the given time.Time and assigns it to the ClosedDateTime field.
func (o *MicrosoftGraphAlert) SetClosedDateTime(v time.Time) {
	o.ClosedDateTime = &v
}

// SetClosedDateTimeExplicitNull (un)sets ClosedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ClosedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetClosedDateTimeExplicitNull(b bool) {
	o.ClosedDateTime = nil
	o.isExplicitNullClosedDateTime = b
}
// GetCloudAppStates returns the CloudAppStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetCloudAppStates() []AnyOfmicrosoftGraphCloudAppSecurityState {
	if o == nil || o.CloudAppStates == nil {
		var ret []AnyOfmicrosoftGraphCloudAppSecurityState
		return ret
	}
	return *o.CloudAppStates
}

// GetCloudAppStatesOk returns a tuple with the CloudAppStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCloudAppStatesOk() ([]AnyOfmicrosoftGraphCloudAppSecurityState, bool) {
	if o == nil || o.CloudAppStates == nil {
		var ret []AnyOfmicrosoftGraphCloudAppSecurityState
		return ret, false
	}
	return *o.CloudAppStates, true
}

// HasCloudAppStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCloudAppStates() bool {
	if o != nil && o.CloudAppStates != nil {
		return true
	}

	return false
}

// SetCloudAppStates gets a reference to the given []AnyOfmicrosoftGraphCloudAppSecurityState and assigns it to the CloudAppStates field.
func (o *MicrosoftGraphAlert) SetCloudAppStates(v []AnyOfmicrosoftGraphCloudAppSecurityState) {
	o.CloudAppStates = &v
}

// GetComments returns the Comments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetComments() []string {
	if o == nil || o.Comments == nil {
		var ret []string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCommentsOk() ([]string, bool) {
	if o == nil || o.Comments == nil {
		var ret []string
		return ret, false
	}
	return *o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given []string and assigns it to the Comments field.
func (o *MicrosoftGraphAlert) SetComments(v []string) {
	o.Comments = &v
}

// GetConfidence returns the Confidence field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetConfidence() int32 {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetConfidenceOk() (int32, bool) {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret, false
	}
	return *o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *MicrosoftGraphAlert) SetConfidence(v int32) {
	o.Confidence = &v
}

// SetConfidenceExplicitNull (un)sets Confidence to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Confidence value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetConfidenceExplicitNull(b bool) {
	o.Confidence = nil
	o.isExplicitNullConfidence = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphAlert) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphAlert) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetDetectionIds returns the DetectionIds field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetDetectionIds() []string {
	if o == nil || o.DetectionIds == nil {
		var ret []string
		return ret
	}
	return *o.DetectionIds
}

// GetDetectionIdsOk returns a tuple with the DetectionIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetDetectionIdsOk() ([]string, bool) {
	if o == nil || o.DetectionIds == nil {
		var ret []string
		return ret, false
	}
	return *o.DetectionIds, true
}

// HasDetectionIds returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasDetectionIds() bool {
	if o != nil && o.DetectionIds != nil {
		return true
	}

	return false
}

// SetDetectionIds gets a reference to the given []string and assigns it to the DetectionIds field.
func (o *MicrosoftGraphAlert) SetDetectionIds(v []string) {
	o.DetectionIds = &v
}

// GetEventDateTime returns the EventDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetEventDateTime() time.Time {
	if o == nil || o.EventDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EventDateTime
}

// GetEventDateTimeOk returns a tuple with the EventDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetEventDateTimeOk() (time.Time, bool) {
	if o == nil || o.EventDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.EventDateTime, true
}

// HasEventDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasEventDateTime() bool {
	if o != nil && o.EventDateTime != nil {
		return true
	}

	return false
}

// SetEventDateTime gets a reference to the given time.Time and assigns it to the EventDateTime field.
func (o *MicrosoftGraphAlert) SetEventDateTime(v time.Time) {
	o.EventDateTime = &v
}

// SetEventDateTimeExplicitNull (un)sets EventDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetEventDateTimeExplicitNull(b bool) {
	o.EventDateTime = nil
	o.isExplicitNullEventDateTime = b
}
// GetFeedback returns the Feedback field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetFeedback() AnyOfmicrosoftGraphAlertFeedback {
	if o == nil || o.Feedback == nil {
		var ret AnyOfmicrosoftGraphAlertFeedback
		return ret
	}
	return *o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetFeedbackOk() (AnyOfmicrosoftGraphAlertFeedback, bool) {
	if o == nil || o.Feedback == nil {
		var ret AnyOfmicrosoftGraphAlertFeedback
		return ret, false
	}
	return *o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasFeedback() bool {
	if o != nil && o.Feedback != nil {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given AnyOfmicrosoftGraphAlertFeedback and assigns it to the Feedback field.
func (o *MicrosoftGraphAlert) SetFeedback(v AnyOfmicrosoftGraphAlertFeedback) {
	o.Feedback = &v
}

// SetFeedbackExplicitNull (un)sets Feedback to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Feedback value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetFeedbackExplicitNull(b bool) {
	o.Feedback = nil
	o.isExplicitNullFeedback = b
}
// GetFileStates returns the FileStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetFileStates() []AnyOfmicrosoftGraphFileSecurityState {
	if o == nil || o.FileStates == nil {
		var ret []AnyOfmicrosoftGraphFileSecurityState
		return ret
	}
	return *o.FileStates
}

// GetFileStatesOk returns a tuple with the FileStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetFileStatesOk() ([]AnyOfmicrosoftGraphFileSecurityState, bool) {
	if o == nil || o.FileStates == nil {
		var ret []AnyOfmicrosoftGraphFileSecurityState
		return ret, false
	}
	return *o.FileStates, true
}

// HasFileStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasFileStates() bool {
	if o != nil && o.FileStates != nil {
		return true
	}

	return false
}

// SetFileStates gets a reference to the given []AnyOfmicrosoftGraphFileSecurityState and assigns it to the FileStates field.
func (o *MicrosoftGraphAlert) SetFileStates(v []AnyOfmicrosoftGraphFileSecurityState) {
	o.FileStates = &v
}

// GetHistoryStates returns the HistoryStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetHistoryStates() []AnyOfmicrosoftGraphAlertHistoryState {
	if o == nil || o.HistoryStates == nil {
		var ret []AnyOfmicrosoftGraphAlertHistoryState
		return ret
	}
	return *o.HistoryStates
}

// GetHistoryStatesOk returns a tuple with the HistoryStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetHistoryStatesOk() ([]AnyOfmicrosoftGraphAlertHistoryState, bool) {
	if o == nil || o.HistoryStates == nil {
		var ret []AnyOfmicrosoftGraphAlertHistoryState
		return ret, false
	}
	return *o.HistoryStates, true
}

// HasHistoryStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasHistoryStates() bool {
	if o != nil && o.HistoryStates != nil {
		return true
	}

	return false
}

// SetHistoryStates gets a reference to the given []AnyOfmicrosoftGraphAlertHistoryState and assigns it to the HistoryStates field.
func (o *MicrosoftGraphAlert) SetHistoryStates(v []AnyOfmicrosoftGraphAlertHistoryState) {
	o.HistoryStates = &v
}

// GetHostStates returns the HostStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetHostStates() []AnyOfmicrosoftGraphHostSecurityState {
	if o == nil || o.HostStates == nil {
		var ret []AnyOfmicrosoftGraphHostSecurityState
		return ret
	}
	return *o.HostStates
}

// GetHostStatesOk returns a tuple with the HostStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetHostStatesOk() ([]AnyOfmicrosoftGraphHostSecurityState, bool) {
	if o == nil || o.HostStates == nil {
		var ret []AnyOfmicrosoftGraphHostSecurityState
		return ret, false
	}
	return *o.HostStates, true
}

// HasHostStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasHostStates() bool {
	if o != nil && o.HostStates != nil {
		return true
	}

	return false
}

// SetHostStates gets a reference to the given []AnyOfmicrosoftGraphHostSecurityState and assigns it to the HostStates field.
func (o *MicrosoftGraphAlert) SetHostStates(v []AnyOfmicrosoftGraphHostSecurityState) {
	o.HostStates = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphAlert) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// SetLastModifiedDateTimeExplicitNull (un)sets LastModifiedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastModifiedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetLastModifiedDateTimeExplicitNull(b bool) {
	o.LastModifiedDateTime = nil
	o.isExplicitNullLastModifiedDateTime = b
}
// GetMalwareStates returns the MalwareStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetMalwareStates() []AnyOfmicrosoftGraphMalwareState {
	if o == nil || o.MalwareStates == nil {
		var ret []AnyOfmicrosoftGraphMalwareState
		return ret
	}
	return *o.MalwareStates
}

// GetMalwareStatesOk returns a tuple with the MalwareStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetMalwareStatesOk() ([]AnyOfmicrosoftGraphMalwareState, bool) {
	if o == nil || o.MalwareStates == nil {
		var ret []AnyOfmicrosoftGraphMalwareState
		return ret, false
	}
	return *o.MalwareStates, true
}

// HasMalwareStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasMalwareStates() bool {
	if o != nil && o.MalwareStates != nil {
		return true
	}

	return false
}

// SetMalwareStates gets a reference to the given []AnyOfmicrosoftGraphMalwareState and assigns it to the MalwareStates field.
func (o *MicrosoftGraphAlert) SetMalwareStates(v []AnyOfmicrosoftGraphMalwareState) {
	o.MalwareStates = &v
}

// GetNetworkConnections returns the NetworkConnections field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetNetworkConnections() []AnyOfmicrosoftGraphNetworkConnection {
	if o == nil || o.NetworkConnections == nil {
		var ret []AnyOfmicrosoftGraphNetworkConnection
		return ret
	}
	return *o.NetworkConnections
}

// GetNetworkConnectionsOk returns a tuple with the NetworkConnections field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetNetworkConnectionsOk() ([]AnyOfmicrosoftGraphNetworkConnection, bool) {
	if o == nil || o.NetworkConnections == nil {
		var ret []AnyOfmicrosoftGraphNetworkConnection
		return ret, false
	}
	return *o.NetworkConnections, true
}

// HasNetworkConnections returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasNetworkConnections() bool {
	if o != nil && o.NetworkConnections != nil {
		return true
	}

	return false
}

// SetNetworkConnections gets a reference to the given []AnyOfmicrosoftGraphNetworkConnection and assigns it to the NetworkConnections field.
func (o *MicrosoftGraphAlert) SetNetworkConnections(v []AnyOfmicrosoftGraphNetworkConnection) {
	o.NetworkConnections = &v
}

// GetProcesses returns the Processes field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetProcesses() []AnyOfmicrosoftGraphProcess {
	if o == nil || o.Processes == nil {
		var ret []AnyOfmicrosoftGraphProcess
		return ret
	}
	return *o.Processes
}

// GetProcessesOk returns a tuple with the Processes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetProcessesOk() ([]AnyOfmicrosoftGraphProcess, bool) {
	if o == nil || o.Processes == nil {
		var ret []AnyOfmicrosoftGraphProcess
		return ret, false
	}
	return *o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasProcesses() bool {
	if o != nil && o.Processes != nil {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []AnyOfmicrosoftGraphProcess and assigns it to the Processes field.
func (o *MicrosoftGraphAlert) SetProcesses(v []AnyOfmicrosoftGraphProcess) {
	o.Processes = &v
}

// GetRecommendedActions returns the RecommendedActions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetRecommendedActions() []string {
	if o == nil || o.RecommendedActions == nil {
		var ret []string
		return ret
	}
	return *o.RecommendedActions
}

// GetRecommendedActionsOk returns a tuple with the RecommendedActions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetRecommendedActionsOk() ([]string, bool) {
	if o == nil || o.RecommendedActions == nil {
		var ret []string
		return ret, false
	}
	return *o.RecommendedActions, true
}

// HasRecommendedActions returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasRecommendedActions() bool {
	if o != nil && o.RecommendedActions != nil {
		return true
	}

	return false
}

// SetRecommendedActions gets a reference to the given []string and assigns it to the RecommendedActions field.
func (o *MicrosoftGraphAlert) SetRecommendedActions(v []string) {
	o.RecommendedActions = &v
}

// GetRegistryKeyStates returns the RegistryKeyStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetRegistryKeyStates() []AnyOfmicrosoftGraphRegistryKeyState {
	if o == nil || o.RegistryKeyStates == nil {
		var ret []AnyOfmicrosoftGraphRegistryKeyState
		return ret
	}
	return *o.RegistryKeyStates
}

// GetRegistryKeyStatesOk returns a tuple with the RegistryKeyStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetRegistryKeyStatesOk() ([]AnyOfmicrosoftGraphRegistryKeyState, bool) {
	if o == nil || o.RegistryKeyStates == nil {
		var ret []AnyOfmicrosoftGraphRegistryKeyState
		return ret, false
	}
	return *o.RegistryKeyStates, true
}

// HasRegistryKeyStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasRegistryKeyStates() bool {
	if o != nil && o.RegistryKeyStates != nil {
		return true
	}

	return false
}

// SetRegistryKeyStates gets a reference to the given []AnyOfmicrosoftGraphRegistryKeyState and assigns it to the RegistryKeyStates field.
func (o *MicrosoftGraphAlert) SetRegistryKeyStates(v []AnyOfmicrosoftGraphRegistryKeyState) {
	o.RegistryKeyStates = &v
}

// GetSeverity returns the Severity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetSeverity() AnyOfmicrosoftGraphAlertSeverity {
	if o == nil || o.Severity == nil {
		var ret AnyOfmicrosoftGraphAlertSeverity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetSeverityOk() (AnyOfmicrosoftGraphAlertSeverity, bool) {
	if o == nil || o.Severity == nil {
		var ret AnyOfmicrosoftGraphAlertSeverity
		return ret, false
	}
	return *o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given AnyOfmicrosoftGraphAlertSeverity and assigns it to the Severity field.
func (o *MicrosoftGraphAlert) SetSeverity(v AnyOfmicrosoftGraphAlertSeverity) {
	o.Severity = &v
}

// GetSourceMaterials returns the SourceMaterials field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetSourceMaterials() []string {
	if o == nil || o.SourceMaterials == nil {
		var ret []string
		return ret
	}
	return *o.SourceMaterials
}

// GetSourceMaterialsOk returns a tuple with the SourceMaterials field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetSourceMaterialsOk() ([]string, bool) {
	if o == nil || o.SourceMaterials == nil {
		var ret []string
		return ret, false
	}
	return *o.SourceMaterials, true
}

// HasSourceMaterials returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasSourceMaterials() bool {
	if o != nil && o.SourceMaterials != nil {
		return true
	}

	return false
}

// SetSourceMaterials gets a reference to the given []string and assigns it to the SourceMaterials field.
func (o *MicrosoftGraphAlert) SetSourceMaterials(v []string) {
	o.SourceMaterials = &v
}

// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetStatus() AnyOfmicrosoftGraphAlertStatus {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphAlertStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetStatusOk() (AnyOfmicrosoftGraphAlertStatus, bool) {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphAlertStatus
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphAlertStatus and assigns it to the Status field.
func (o *MicrosoftGraphAlert) SetStatus(v AnyOfmicrosoftGraphAlertStatus) {
	o.Status = &v
}

// GetTags returns the Tags field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret, false
	}
	return *o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *MicrosoftGraphAlert) SetTags(v []string) {
	o.Tags = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetTitleOk() (string, bool) {
	if o == nil || o.Title == nil {
		var ret string
		return ret, false
	}
	return *o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MicrosoftGraphAlert) SetTitle(v string) {
	o.Title = &v
}

// SetTitleExplicitNull (un)sets Title to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Title value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetTitleExplicitNull(b bool) {
	o.Title = nil
	o.isExplicitNullTitle = b
}
// GetTriggers returns the Triggers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetTriggers() []AnyOfmicrosoftGraphAlertTrigger {
	if o == nil || o.Triggers == nil {
		var ret []AnyOfmicrosoftGraphAlertTrigger
		return ret
	}
	return *o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetTriggersOk() ([]AnyOfmicrosoftGraphAlertTrigger, bool) {
	if o == nil || o.Triggers == nil {
		var ret []AnyOfmicrosoftGraphAlertTrigger
		return ret, false
	}
	return *o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasTriggers() bool {
	if o != nil && o.Triggers != nil {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []AnyOfmicrosoftGraphAlertTrigger and assigns it to the Triggers field.
func (o *MicrosoftGraphAlert) SetTriggers(v []AnyOfmicrosoftGraphAlertTrigger) {
	o.Triggers = &v
}

// GetUserStates returns the UserStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetUserStates() []AnyOfmicrosoftGraphUserSecurityState {
	if o == nil || o.UserStates == nil {
		var ret []AnyOfmicrosoftGraphUserSecurityState
		return ret
	}
	return *o.UserStates
}

// GetUserStatesOk returns a tuple with the UserStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetUserStatesOk() ([]AnyOfmicrosoftGraphUserSecurityState, bool) {
	if o == nil || o.UserStates == nil {
		var ret []AnyOfmicrosoftGraphUserSecurityState
		return ret, false
	}
	return *o.UserStates, true
}

// HasUserStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasUserStates() bool {
	if o != nil && o.UserStates != nil {
		return true
	}

	return false
}

// SetUserStates gets a reference to the given []AnyOfmicrosoftGraphUserSecurityState and assigns it to the UserStates field.
func (o *MicrosoftGraphAlert) SetUserStates(v []AnyOfmicrosoftGraphUserSecurityState) {
	o.UserStates = &v
}

// GetVendorInformation returns the VendorInformation field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetVendorInformation() AnyOfmicrosoftGraphSecurityVendorInformation {
	if o == nil || o.VendorInformation == nil {
		var ret AnyOfmicrosoftGraphSecurityVendorInformation
		return ret
	}
	return *o.VendorInformation
}

// GetVendorInformationOk returns a tuple with the VendorInformation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetVendorInformationOk() (AnyOfmicrosoftGraphSecurityVendorInformation, bool) {
	if o == nil || o.VendorInformation == nil {
		var ret AnyOfmicrosoftGraphSecurityVendorInformation
		return ret, false
	}
	return *o.VendorInformation, true
}

// HasVendorInformation returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasVendorInformation() bool {
	if o != nil && o.VendorInformation != nil {
		return true
	}

	return false
}

// SetVendorInformation gets a reference to the given AnyOfmicrosoftGraphSecurityVendorInformation and assigns it to the VendorInformation field.
func (o *MicrosoftGraphAlert) SetVendorInformation(v AnyOfmicrosoftGraphSecurityVendorInformation) {
	o.VendorInformation = &v
}

// SetVendorInformationExplicitNull (un)sets VendorInformation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The VendorInformation value is set to nil even if false is passed
func (o *MicrosoftGraphAlert) SetVendorInformationExplicitNull(b bool) {
	o.VendorInformation = nil
	o.isExplicitNullVendorInformation = b
}
// GetVulnerabilityStates returns the VulnerabilityStates field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlert) GetVulnerabilityStates() []AnyOfmicrosoftGraphVulnerabilityState {
	if o == nil || o.VulnerabilityStates == nil {
		var ret []AnyOfmicrosoftGraphVulnerabilityState
		return ret
	}
	return *o.VulnerabilityStates
}

// GetVulnerabilityStatesOk returns a tuple with the VulnerabilityStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlert) GetVulnerabilityStatesOk() ([]AnyOfmicrosoftGraphVulnerabilityState, bool) {
	if o == nil || o.VulnerabilityStates == nil {
		var ret []AnyOfmicrosoftGraphVulnerabilityState
		return ret, false
	}
	return *o.VulnerabilityStates, true
}

// HasVulnerabilityStates returns a boolean if a field has been set.
func (o *MicrosoftGraphAlert) HasVulnerabilityStates() bool {
	if o != nil && o.VulnerabilityStates != nil {
		return true
	}

	return false
}

// SetVulnerabilityStates gets a reference to the given []AnyOfmicrosoftGraphVulnerabilityState and assigns it to the VulnerabilityStates field.
func (o *MicrosoftGraphAlert) SetVulnerabilityStates(v []AnyOfmicrosoftGraphVulnerabilityState) {
	o.VulnerabilityStates = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAlert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ActivityGroupName == nil {
		if o.isExplicitNullActivityGroupName {
			toSerialize["activityGroupName"] = o.ActivityGroupName
		}
	} else {
		toSerialize["activityGroupName"] = o.ActivityGroupName
	}
	if o.AssignedTo == nil {
		if o.isExplicitNullAssignedTo {
			toSerialize["assignedTo"] = o.AssignedTo
		}
	} else {
		toSerialize["assignedTo"] = o.AssignedTo
	}
	if o.AzureSubscriptionId == nil {
		if o.isExplicitNullAzureSubscriptionId {
			toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId
		}
	} else {
		toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId
	}
	if o.AzureTenantId != nil {
		toSerialize["azureTenantId"] = o.AzureTenantId
	}
	if o.Category == nil {
		if o.isExplicitNullCategory {
			toSerialize["category"] = o.Category
		}
	} else {
		toSerialize["category"] = o.Category
	}
	if o.ClosedDateTime == nil {
		if o.isExplicitNullClosedDateTime {
			toSerialize["closedDateTime"] = o.ClosedDateTime
		}
	} else {
		toSerialize["closedDateTime"] = o.ClosedDateTime
	}
	if o.CloudAppStates != nil {
		toSerialize["cloudAppStates"] = o.CloudAppStates
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Confidence == nil {
		if o.isExplicitNullConfidence {
			toSerialize["confidence"] = o.Confidence
		}
	} else {
		toSerialize["confidence"] = o.Confidence
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.DetectionIds != nil {
		toSerialize["detectionIds"] = o.DetectionIds
	}
	if o.EventDateTime == nil {
		if o.isExplicitNullEventDateTime {
			toSerialize["eventDateTime"] = o.EventDateTime
		}
	} else {
		toSerialize["eventDateTime"] = o.EventDateTime
	}
	if o.Feedback == nil {
		if o.isExplicitNullFeedback {
			toSerialize["feedback"] = o.Feedback
		}
	} else {
		toSerialize["feedback"] = o.Feedback
	}
	if o.FileStates != nil {
		toSerialize["fileStates"] = o.FileStates
	}
	if o.HistoryStates != nil {
		toSerialize["historyStates"] = o.HistoryStates
	}
	if o.HostStates != nil {
		toSerialize["hostStates"] = o.HostStates
	}
	if o.LastModifiedDateTime == nil {
		if o.isExplicitNullLastModifiedDateTime {
			toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
		}
	} else {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.MalwareStates != nil {
		toSerialize["malwareStates"] = o.MalwareStates
	}
	if o.NetworkConnections != nil {
		toSerialize["networkConnections"] = o.NetworkConnections
	}
	if o.Processes != nil {
		toSerialize["processes"] = o.Processes
	}
	if o.RecommendedActions != nil {
		toSerialize["recommendedActions"] = o.RecommendedActions
	}
	if o.RegistryKeyStates != nil {
		toSerialize["registryKeyStates"] = o.RegistryKeyStates
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.SourceMaterials != nil {
		toSerialize["sourceMaterials"] = o.SourceMaterials
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Title == nil {
		if o.isExplicitNullTitle {
			toSerialize["title"] = o.Title
		}
	} else {
		toSerialize["title"] = o.Title
	}
	if o.Triggers != nil {
		toSerialize["triggers"] = o.Triggers
	}
	if o.UserStates != nil {
		toSerialize["userStates"] = o.UserStates
	}
	if o.VendorInformation == nil {
		if o.isExplicitNullVendorInformation {
			toSerialize["vendorInformation"] = o.VendorInformation
		}
	} else {
		toSerialize["vendorInformation"] = o.VendorInformation
	}
	if o.VulnerabilityStates != nil {
		toSerialize["vulnerabilityStates"] = o.VulnerabilityStates
	}
	return json.Marshal(toSerialize)
}


