/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWindows10NetworkProxyServer struct for MicrosoftGraphWindows10NetworkProxyServer
type MicrosoftGraphWindows10NetworkProxyServer struct {
	// Address to the proxy server. Specify an address in the format <server>[“:”<port>]
	Address *string `json:"address,omitempty"`

	// Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node.
	Exceptions *[]string `json:"exceptions,omitempty"`

	// Specifies whether the proxy server should be used for local (intranet) addresses.
	UseForLocalAddresses *bool `json:"useForLocalAddresses,omitempty"`

}

// GetAddress returns the Address field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetAddressOk() (string, bool) {
	if o == nil || o.Address == nil {
		var ret string
		return ret, false
	}
	return *o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MicrosoftGraphWindows10NetworkProxyServer) SetAddress(v string) {
	o.Address = &v
}

// GetExceptions returns the Exceptions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetExceptions() []string {
	if o == nil || o.Exceptions == nil {
		var ret []string
		return ret
	}
	return *o.Exceptions
}

// GetExceptionsOk returns a tuple with the Exceptions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetExceptionsOk() ([]string, bool) {
	if o == nil || o.Exceptions == nil {
		var ret []string
		return ret, false
	}
	return *o.Exceptions, true
}

// HasExceptions returns a boolean if a field has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) HasExceptions() bool {
	if o != nil && o.Exceptions != nil {
		return true
	}

	return false
}

// SetExceptions gets a reference to the given []string and assigns it to the Exceptions field.
func (o *MicrosoftGraphWindows10NetworkProxyServer) SetExceptions(v []string) {
	o.Exceptions = &v
}

// GetUseForLocalAddresses returns the UseForLocalAddresses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetUseForLocalAddresses() bool {
	if o == nil || o.UseForLocalAddresses == nil {
		var ret bool
		return ret
	}
	return *o.UseForLocalAddresses
}

// GetUseForLocalAddressesOk returns a tuple with the UseForLocalAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) GetUseForLocalAddressesOk() (bool, bool) {
	if o == nil || o.UseForLocalAddresses == nil {
		var ret bool
		return ret, false
	}
	return *o.UseForLocalAddresses, true
}

// HasUseForLocalAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphWindows10NetworkProxyServer) HasUseForLocalAddresses() bool {
	if o != nil && o.UseForLocalAddresses != nil {
		return true
	}

	return false
}

// SetUseForLocalAddresses gets a reference to the given bool and assigns it to the UseForLocalAddresses field.
func (o *MicrosoftGraphWindows10NetworkProxyServer) SetUseForLocalAddresses(v bool) {
	o.UseForLocalAddresses = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWindows10NetworkProxyServer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Exceptions != nil {
		toSerialize["exceptions"] = o.Exceptions
	}
	if o.UseForLocalAddresses != nil {
		toSerialize["useForLocalAddresses"] = o.UseForLocalAddresses
	}
	return json.Marshal(toSerialize)
}


