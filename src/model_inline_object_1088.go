/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1088 struct for InlineObject1088
type InlineObject1088 struct {
	Cost *AnyOfobject `json:"cost,omitempty"`
	isExplicitNullCost bool `json:"-"`
	Salvage *AnyOfobject `json:"salvage,omitempty"`
	isExplicitNullSalvage bool `json:"-"`
	Life *AnyOfobject `json:"life,omitempty"`
	isExplicitNullLife bool `json:"-"`
	StartPeriod *AnyOfobject `json:"startPeriod,omitempty"`
	isExplicitNullStartPeriod bool `json:"-"`
	EndPeriod *AnyOfobject `json:"endPeriod,omitempty"`
	isExplicitNullEndPeriod bool `json:"-"`
	Factor *AnyOfobject `json:"factor,omitempty"`
	isExplicitNullFactor bool `json:"-"`
	NoSwitch *AnyOfobject `json:"noSwitch,omitempty"`
	isExplicitNullNoSwitch bool `json:"-"`
}

// GetCost returns the Cost field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetCost() AnyOfobject {
	if o == nil || o.Cost == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetCostOk() (AnyOfobject, bool) {
	if o == nil || o.Cost == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *InlineObject1088) HasCost() bool {
	if o != nil && o.Cost != nil {
		return true
	}

	return false
}

// SetCost gets a reference to the given AnyOfobject and assigns it to the Cost field.
func (o *InlineObject1088) SetCost(v AnyOfobject) {
	o.Cost = &v
}

// SetCostExplicitNull (un)sets Cost to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Cost value is set to nil even if false is passed
func (o *InlineObject1088) SetCostExplicitNull(b bool) {
	o.Cost = nil
	o.isExplicitNullCost = b
}
// GetSalvage returns the Salvage field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetSalvage() AnyOfobject {
	if o == nil || o.Salvage == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Salvage
}

// GetSalvageOk returns a tuple with the Salvage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetSalvageOk() (AnyOfobject, bool) {
	if o == nil || o.Salvage == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Salvage, true
}

// HasSalvage returns a boolean if a field has been set.
func (o *InlineObject1088) HasSalvage() bool {
	if o != nil && o.Salvage != nil {
		return true
	}

	return false
}

// SetSalvage gets a reference to the given AnyOfobject and assigns it to the Salvage field.
func (o *InlineObject1088) SetSalvage(v AnyOfobject) {
	o.Salvage = &v
}

// SetSalvageExplicitNull (un)sets Salvage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Salvage value is set to nil even if false is passed
func (o *InlineObject1088) SetSalvageExplicitNull(b bool) {
	o.Salvage = nil
	o.isExplicitNullSalvage = b
}
// GetLife returns the Life field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetLife() AnyOfobject {
	if o == nil || o.Life == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Life
}

// GetLifeOk returns a tuple with the Life field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetLifeOk() (AnyOfobject, bool) {
	if o == nil || o.Life == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Life, true
}

// HasLife returns a boolean if a field has been set.
func (o *InlineObject1088) HasLife() bool {
	if o != nil && o.Life != nil {
		return true
	}

	return false
}

// SetLife gets a reference to the given AnyOfobject and assigns it to the Life field.
func (o *InlineObject1088) SetLife(v AnyOfobject) {
	o.Life = &v
}

// SetLifeExplicitNull (un)sets Life to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Life value is set to nil even if false is passed
func (o *InlineObject1088) SetLifeExplicitNull(b bool) {
	o.Life = nil
	o.isExplicitNullLife = b
}
// GetStartPeriod returns the StartPeriod field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetStartPeriod() AnyOfobject {
	if o == nil || o.StartPeriod == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.StartPeriod
}

// GetStartPeriodOk returns a tuple with the StartPeriod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetStartPeriodOk() (AnyOfobject, bool) {
	if o == nil || o.StartPeriod == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.StartPeriod, true
}

// HasStartPeriod returns a boolean if a field has been set.
func (o *InlineObject1088) HasStartPeriod() bool {
	if o != nil && o.StartPeriod != nil {
		return true
	}

	return false
}

// SetStartPeriod gets a reference to the given AnyOfobject and assigns it to the StartPeriod field.
func (o *InlineObject1088) SetStartPeriod(v AnyOfobject) {
	o.StartPeriod = &v
}

// SetStartPeriodExplicitNull (un)sets StartPeriod to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartPeriod value is set to nil even if false is passed
func (o *InlineObject1088) SetStartPeriodExplicitNull(b bool) {
	o.StartPeriod = nil
	o.isExplicitNullStartPeriod = b
}
// GetEndPeriod returns the EndPeriod field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetEndPeriod() AnyOfobject {
	if o == nil || o.EndPeriod == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.EndPeriod
}

// GetEndPeriodOk returns a tuple with the EndPeriod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetEndPeriodOk() (AnyOfobject, bool) {
	if o == nil || o.EndPeriod == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.EndPeriod, true
}

// HasEndPeriod returns a boolean if a field has been set.
func (o *InlineObject1088) HasEndPeriod() bool {
	if o != nil && o.EndPeriod != nil {
		return true
	}

	return false
}

// SetEndPeriod gets a reference to the given AnyOfobject and assigns it to the EndPeriod field.
func (o *InlineObject1088) SetEndPeriod(v AnyOfobject) {
	o.EndPeriod = &v
}

// SetEndPeriodExplicitNull (un)sets EndPeriod to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EndPeriod value is set to nil even if false is passed
func (o *InlineObject1088) SetEndPeriodExplicitNull(b bool) {
	o.EndPeriod = nil
	o.isExplicitNullEndPeriod = b
}
// GetFactor returns the Factor field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetFactor() AnyOfobject {
	if o == nil || o.Factor == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Factor
}

// GetFactorOk returns a tuple with the Factor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetFactorOk() (AnyOfobject, bool) {
	if o == nil || o.Factor == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Factor, true
}

// HasFactor returns a boolean if a field has been set.
func (o *InlineObject1088) HasFactor() bool {
	if o != nil && o.Factor != nil {
		return true
	}

	return false
}

// SetFactor gets a reference to the given AnyOfobject and assigns it to the Factor field.
func (o *InlineObject1088) SetFactor(v AnyOfobject) {
	o.Factor = &v
}

// SetFactorExplicitNull (un)sets Factor to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Factor value is set to nil even if false is passed
func (o *InlineObject1088) SetFactorExplicitNull(b bool) {
	o.Factor = nil
	o.isExplicitNullFactor = b
}
// GetNoSwitch returns the NoSwitch field if non-nil, zero value otherwise.
func (o *InlineObject1088) GetNoSwitch() AnyOfobject {
	if o == nil || o.NoSwitch == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.NoSwitch
}

// GetNoSwitchOk returns a tuple with the NoSwitch field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1088) GetNoSwitchOk() (AnyOfobject, bool) {
	if o == nil || o.NoSwitch == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.NoSwitch, true
}

// HasNoSwitch returns a boolean if a field has been set.
func (o *InlineObject1088) HasNoSwitch() bool {
	if o != nil && o.NoSwitch != nil {
		return true
	}

	return false
}

// SetNoSwitch gets a reference to the given AnyOfobject and assigns it to the NoSwitch field.
func (o *InlineObject1088) SetNoSwitch(v AnyOfobject) {
	o.NoSwitch = &v
}

// SetNoSwitchExplicitNull (un)sets NoSwitch to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NoSwitch value is set to nil even if false is passed
func (o *InlineObject1088) SetNoSwitchExplicitNull(b bool) {
	o.NoSwitch = nil
	o.isExplicitNullNoSwitch = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1088) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cost == nil {
		if o.isExplicitNullCost {
			toSerialize["cost"] = o.Cost
		}
	} else {
		toSerialize["cost"] = o.Cost
	}
	if o.Salvage == nil {
		if o.isExplicitNullSalvage {
			toSerialize["salvage"] = o.Salvage
		}
	} else {
		toSerialize["salvage"] = o.Salvage
	}
	if o.Life == nil {
		if o.isExplicitNullLife {
			toSerialize["life"] = o.Life
		}
	} else {
		toSerialize["life"] = o.Life
	}
	if o.StartPeriod == nil {
		if o.isExplicitNullStartPeriod {
			toSerialize["startPeriod"] = o.StartPeriod
		}
	} else {
		toSerialize["startPeriod"] = o.StartPeriod
	}
	if o.EndPeriod == nil {
		if o.isExplicitNullEndPeriod {
			toSerialize["endPeriod"] = o.EndPeriod
		}
	} else {
		toSerialize["endPeriod"] = o.EndPeriod
	}
	if o.Factor == nil {
		if o.isExplicitNullFactor {
			toSerialize["factor"] = o.Factor
		}
	} else {
		toSerialize["factor"] = o.Factor
	}
	if o.NoSwitch == nil {
		if o.isExplicitNullNoSwitch {
			toSerialize["noSwitch"] = o.NoSwitch
		}
	} else {
		toSerialize["noSwitch"] = o.NoSwitch
	}
	return json.Marshal(toSerialize)
}


