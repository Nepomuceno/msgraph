/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject866 struct for InlineObject866
type InlineObject866 struct {
	Text1 *AnyOfobject `json:"text1,omitempty"`
	isExplicitNullText1 bool `json:"-"`
	Text2 *AnyOfobject `json:"text2,omitempty"`
	isExplicitNullText2 bool `json:"-"`
}

// GetText1 returns the Text1 field if non-nil, zero value otherwise.
func (o *InlineObject866) GetText1() AnyOfobject {
	if o == nil || o.Text1 == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Text1
}

// GetText1Ok returns a tuple with the Text1 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject866) GetText1Ok() (AnyOfobject, bool) {
	if o == nil || o.Text1 == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Text1, true
}

// HasText1 returns a boolean if a field has been set.
func (o *InlineObject866) HasText1() bool {
	if o != nil && o.Text1 != nil {
		return true
	}

	return false
}

// SetText1 gets a reference to the given AnyOfobject and assigns it to the Text1 field.
func (o *InlineObject866) SetText1(v AnyOfobject) {
	o.Text1 = &v
}

// SetText1ExplicitNull (un)sets Text1 to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Text1 value is set to nil even if false is passed
func (o *InlineObject866) SetText1ExplicitNull(b bool) {
	o.Text1 = nil
	o.isExplicitNullText1 = b
}
// GetText2 returns the Text2 field if non-nil, zero value otherwise.
func (o *InlineObject866) GetText2() AnyOfobject {
	if o == nil || o.Text2 == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Text2
}

// GetText2Ok returns a tuple with the Text2 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject866) GetText2Ok() (AnyOfobject, bool) {
	if o == nil || o.Text2 == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Text2, true
}

// HasText2 returns a boolean if a field has been set.
func (o *InlineObject866) HasText2() bool {
	if o != nil && o.Text2 != nil {
		return true
	}

	return false
}

// SetText2 gets a reference to the given AnyOfobject and assigns it to the Text2 field.
func (o *InlineObject866) SetText2(v AnyOfobject) {
	o.Text2 = &v
}

// SetText2ExplicitNull (un)sets Text2 to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Text2 value is set to nil even if false is passed
func (o *InlineObject866) SetText2ExplicitNull(b bool) {
	o.Text2 = nil
	o.isExplicitNullText2 = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject866) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Text1 == nil {
		if o.isExplicitNullText1 {
			toSerialize["text1"] = o.Text1
		}
	} else {
		toSerialize["text1"] = o.Text1
	}
	if o.Text2 == nil {
		if o.isExplicitNullText2 {
			toSerialize["text2"] = o.Text2
		}
	} else {
		toSerialize["text2"] = o.Text2
	}
	return json.Marshal(toSerialize)
}


