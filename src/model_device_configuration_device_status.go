/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// DeviceConfigurationDeviceStatus struct for DeviceConfigurationDeviceStatus
type DeviceConfigurationDeviceStatus struct {
	// Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	isExplicitNullDeviceDisplayName bool `json:"-"`
	// The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	isExplicitNullUserName bool `json:"-"`
	// The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	isExplicitNullDeviceModel bool `json:"-"`
	// The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`

	// Compliance status of the policy report.
	Status *AnyOfmicrosoftGraphComplianceStatus `json:"status,omitempty"`

	// Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`

	// UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	isExplicitNullUserPrincipalName bool `json:"-"`
}

// GetDeviceDisplayName returns the DeviceDisplayName field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetDeviceDisplayName() string {
	if o == nil || o.DeviceDisplayName == nil {
		var ret string
		return ret
	}
	return *o.DeviceDisplayName
}

// GetDeviceDisplayNameOk returns a tuple with the DeviceDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetDeviceDisplayNameOk() (string, bool) {
	if o == nil || o.DeviceDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceDisplayName, true
}

// HasDeviceDisplayName returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasDeviceDisplayName() bool {
	if o != nil && o.DeviceDisplayName != nil {
		return true
	}

	return false
}

// SetDeviceDisplayName gets a reference to the given string and assigns it to the DeviceDisplayName field.
func (o *DeviceConfigurationDeviceStatus) SetDeviceDisplayName(v string) {
	o.DeviceDisplayName = &v
}

// SetDeviceDisplayNameExplicitNull (un)sets DeviceDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceDisplayName value is set to nil even if false is passed
func (o *DeviceConfigurationDeviceStatus) SetDeviceDisplayNameExplicitNull(b bool) {
	o.DeviceDisplayName = nil
	o.isExplicitNullDeviceDisplayName = b
}
// GetUserName returns the UserName field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetUserNameOk() (string, bool) {
	if o == nil || o.UserName == nil {
		var ret string
		return ret, false
	}
	return *o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *DeviceConfigurationDeviceStatus) SetUserName(v string) {
	o.UserName = &v
}

// SetUserNameExplicitNull (un)sets UserName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserName value is set to nil even if false is passed
func (o *DeviceConfigurationDeviceStatus) SetUserNameExplicitNull(b bool) {
	o.UserName = nil
	o.isExplicitNullUserName = b
}
// GetDeviceModel returns the DeviceModel field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetDeviceModel() string {
	if o == nil || o.DeviceModel == nil {
		var ret string
		return ret
	}
	return *o.DeviceModel
}

// GetDeviceModelOk returns a tuple with the DeviceModel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetDeviceModelOk() (string, bool) {
	if o == nil || o.DeviceModel == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceModel, true
}

// HasDeviceModel returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasDeviceModel() bool {
	if o != nil && o.DeviceModel != nil {
		return true
	}

	return false
}

// SetDeviceModel gets a reference to the given string and assigns it to the DeviceModel field.
func (o *DeviceConfigurationDeviceStatus) SetDeviceModel(v string) {
	o.DeviceModel = &v
}

// SetDeviceModelExplicitNull (un)sets DeviceModel to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceModel value is set to nil even if false is passed
func (o *DeviceConfigurationDeviceStatus) SetDeviceModelExplicitNull(b bool) {
	o.DeviceModel = nil
	o.isExplicitNullDeviceModel = b
}
// GetComplianceGracePeriodExpirationDateTime returns the ComplianceGracePeriodExpirationDateTime field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetComplianceGracePeriodExpirationDateTime() time.Time {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ComplianceGracePeriodExpirationDateTime
}

// GetComplianceGracePeriodExpirationDateTimeOk returns a tuple with the ComplianceGracePeriodExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetComplianceGracePeriodExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ComplianceGracePeriodExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ComplianceGracePeriodExpirationDateTime, true
}

// HasComplianceGracePeriodExpirationDateTime returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasComplianceGracePeriodExpirationDateTime() bool {
	if o != nil && o.ComplianceGracePeriodExpirationDateTime != nil {
		return true
	}

	return false
}

// SetComplianceGracePeriodExpirationDateTime gets a reference to the given time.Time and assigns it to the ComplianceGracePeriodExpirationDateTime field.
func (o *DeviceConfigurationDeviceStatus) SetComplianceGracePeriodExpirationDateTime(v time.Time) {
	o.ComplianceGracePeriodExpirationDateTime = &v
}

// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetStatus() AnyOfmicrosoftGraphComplianceStatus {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphComplianceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetStatusOk() (AnyOfmicrosoftGraphComplianceStatus, bool) {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphComplianceStatus
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphComplianceStatus and assigns it to the Status field.
func (o *DeviceConfigurationDeviceStatus) SetStatus(v AnyOfmicrosoftGraphComplianceStatus) {
	o.Status = &v
}

// GetLastReportedDateTime returns the LastReportedDateTime field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetLastReportedDateTime() time.Time {
	if o == nil || o.LastReportedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastReportedDateTime
}

// GetLastReportedDateTimeOk returns a tuple with the LastReportedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetLastReportedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastReportedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastReportedDateTime, true
}

// HasLastReportedDateTime returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasLastReportedDateTime() bool {
	if o != nil && o.LastReportedDateTime != nil {
		return true
	}

	return false
}

// SetLastReportedDateTime gets a reference to the given time.Time and assigns it to the LastReportedDateTime field.
func (o *DeviceConfigurationDeviceStatus) SetLastReportedDateTime(v time.Time) {
	o.LastReportedDateTime = &v
}

// GetUserPrincipalName returns the UserPrincipalName field if non-nil, zero value otherwise.
func (o *DeviceConfigurationDeviceStatus) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceConfigurationDeviceStatus) GetUserPrincipalNameOk() (string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *DeviceConfigurationDeviceStatus) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *DeviceConfigurationDeviceStatus) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// SetUserPrincipalNameExplicitNull (un)sets UserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserPrincipalName value is set to nil even if false is passed
func (o *DeviceConfigurationDeviceStatus) SetUserPrincipalNameExplicitNull(b bool) {
	o.UserPrincipalName = nil
	o.isExplicitNullUserPrincipalName = b
}

// MarshalJSON returns the JSON representation of the model.
func (o DeviceConfigurationDeviceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceDisplayName == nil {
		if o.isExplicitNullDeviceDisplayName {
			toSerialize["deviceDisplayName"] = o.DeviceDisplayName
		}
	} else {
		toSerialize["deviceDisplayName"] = o.DeviceDisplayName
	}
	if o.UserName == nil {
		if o.isExplicitNullUserName {
			toSerialize["userName"] = o.UserName
		}
	} else {
		toSerialize["userName"] = o.UserName
	}
	if o.DeviceModel == nil {
		if o.isExplicitNullDeviceModel {
			toSerialize["deviceModel"] = o.DeviceModel
		}
	} else {
		toSerialize["deviceModel"] = o.DeviceModel
	}
	if o.ComplianceGracePeriodExpirationDateTime != nil {
		toSerialize["complianceGracePeriodExpirationDateTime"] = o.ComplianceGracePeriodExpirationDateTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.LastReportedDateTime != nil {
		toSerialize["lastReportedDateTime"] = o.LastReportedDateTime
	}
	if o.UserPrincipalName == nil {
		if o.isExplicitNullUserPrincipalName {
			toSerialize["userPrincipalName"] = o.UserPrincipalName
		}
	} else {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	return json.Marshal(toSerialize)
}


