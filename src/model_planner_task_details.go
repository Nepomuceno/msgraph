/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// PlannerTaskDetails struct for PlannerTaskDetails
type PlannerTaskDetails struct {
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	PreviewType *AnyOfmicrosoftGraphPlannerPreviewType `json:"previewType,omitempty"`
	isExplicitNullPreviewType bool `json:"-"`
	References *AnyOfobject `json:"references,omitempty"`
	isExplicitNullReferences bool `json:"-"`
	Checklist *AnyOfobject `json:"checklist,omitempty"`
	isExplicitNullChecklist bool `json:"-"`
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *PlannerTaskDetails) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerTaskDetails) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PlannerTaskDetails) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PlannerTaskDetails) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *PlannerTaskDetails) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetPreviewType returns the PreviewType field if non-nil, zero value otherwise.
func (o *PlannerTaskDetails) GetPreviewType() AnyOfmicrosoftGraphPlannerPreviewType {
	if o == nil || o.PreviewType == nil {
		var ret AnyOfmicrosoftGraphPlannerPreviewType
		return ret
	}
	return *o.PreviewType
}

// GetPreviewTypeOk returns a tuple with the PreviewType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerTaskDetails) GetPreviewTypeOk() (AnyOfmicrosoftGraphPlannerPreviewType, bool) {
	if o == nil || o.PreviewType == nil {
		var ret AnyOfmicrosoftGraphPlannerPreviewType
		return ret, false
	}
	return *o.PreviewType, true
}

// HasPreviewType returns a boolean if a field has been set.
func (o *PlannerTaskDetails) HasPreviewType() bool {
	if o != nil && o.PreviewType != nil {
		return true
	}

	return false
}

// SetPreviewType gets a reference to the given AnyOfmicrosoftGraphPlannerPreviewType and assigns it to the PreviewType field.
func (o *PlannerTaskDetails) SetPreviewType(v AnyOfmicrosoftGraphPlannerPreviewType) {
	o.PreviewType = &v
}

// SetPreviewTypeExplicitNull (un)sets PreviewType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreviewType value is set to nil even if false is passed
func (o *PlannerTaskDetails) SetPreviewTypeExplicitNull(b bool) {
	o.PreviewType = nil
	o.isExplicitNullPreviewType = b
}
// GetReferences returns the References field if non-nil, zero value otherwise.
func (o *PlannerTaskDetails) GetReferences() AnyOfobject {
	if o == nil || o.References == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerTaskDetails) GetReferencesOk() (AnyOfobject, bool) {
	if o == nil || o.References == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *PlannerTaskDetails) HasReferences() bool {
	if o != nil && o.References != nil {
		return true
	}

	return false
}

// SetReferences gets a reference to the given AnyOfobject and assigns it to the References field.
func (o *PlannerTaskDetails) SetReferences(v AnyOfobject) {
	o.References = &v
}

// SetReferencesExplicitNull (un)sets References to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The References value is set to nil even if false is passed
func (o *PlannerTaskDetails) SetReferencesExplicitNull(b bool) {
	o.References = nil
	o.isExplicitNullReferences = b
}
// GetChecklist returns the Checklist field if non-nil, zero value otherwise.
func (o *PlannerTaskDetails) GetChecklist() AnyOfobject {
	if o == nil || o.Checklist == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Checklist
}

// GetChecklistOk returns a tuple with the Checklist field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerTaskDetails) GetChecklistOk() (AnyOfobject, bool) {
	if o == nil || o.Checklist == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Checklist, true
}

// HasChecklist returns a boolean if a field has been set.
func (o *PlannerTaskDetails) HasChecklist() bool {
	if o != nil && o.Checklist != nil {
		return true
	}

	return false
}

// SetChecklist gets a reference to the given AnyOfobject and assigns it to the Checklist field.
func (o *PlannerTaskDetails) SetChecklist(v AnyOfobject) {
	o.Checklist = &v
}

// SetChecklistExplicitNull (un)sets Checklist to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Checklist value is set to nil even if false is passed
func (o *PlannerTaskDetails) SetChecklistExplicitNull(b bool) {
	o.Checklist = nil
	o.isExplicitNullChecklist = b
}

// MarshalJSON returns the JSON representation of the model.
func (o PlannerTaskDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.PreviewType == nil {
		if o.isExplicitNullPreviewType {
			toSerialize["previewType"] = o.PreviewType
		}
	} else {
		toSerialize["previewType"] = o.PreviewType
	}
	if o.References == nil {
		if o.isExplicitNullReferences {
			toSerialize["references"] = o.References
		}
	} else {
		toSerialize["references"] = o.References
	}
	if o.Checklist == nil {
		if o.isExplicitNullChecklist {
			toSerialize["checklist"] = o.Checklist
		}
	} else {
		toSerialize["checklist"] = o.Checklist
	}
	return json.Marshal(toSerialize)
}


