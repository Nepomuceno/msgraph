/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphLicenseUnitsDetail struct for MicrosoftGraphLicenseUnitsDetail
type MicrosoftGraphLicenseUnitsDetail struct {
	Enabled *int32 `json:"enabled,omitempty"`
	isExplicitNullEnabled bool `json:"-"`
	Suspended *int32 `json:"suspended,omitempty"`
	isExplicitNullSuspended bool `json:"-"`
	Warning *int32 `json:"warning,omitempty"`
	isExplicitNullWarning bool `json:"-"`
}

// GetEnabled returns the Enabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseUnitsDetail) GetEnabled() int32 {
	if o == nil || o.Enabled == nil {
		var ret int32
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) GetEnabledOk() (int32, bool) {
	if o == nil || o.Enabled == nil {
		var ret int32
		return ret, false
	}
	return *o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given int32 and assigns it to the Enabled field.
func (o *MicrosoftGraphLicenseUnitsDetail) SetEnabled(v int32) {
	o.Enabled = &v
}

// SetEnabledExplicitNull (un)sets Enabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Enabled value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseUnitsDetail) SetEnabledExplicitNull(b bool) {
	o.Enabled = nil
	o.isExplicitNullEnabled = b
}
// GetSuspended returns the Suspended field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseUnitsDetail) GetSuspended() int32 {
	if o == nil || o.Suspended == nil {
		var ret int32
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) GetSuspendedOk() (int32, bool) {
	if o == nil || o.Suspended == nil {
		var ret int32
		return ret, false
	}
	return *o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) HasSuspended() bool {
	if o != nil && o.Suspended != nil {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given int32 and assigns it to the Suspended field.
func (o *MicrosoftGraphLicenseUnitsDetail) SetSuspended(v int32) {
	o.Suspended = &v
}

// SetSuspendedExplicitNull (un)sets Suspended to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Suspended value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseUnitsDetail) SetSuspendedExplicitNull(b bool) {
	o.Suspended = nil
	o.isExplicitNullSuspended = b
}
// GetWarning returns the Warning field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseUnitsDetail) GetWarning() int32 {
	if o == nil || o.Warning == nil {
		var ret int32
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) GetWarningOk() (int32, bool) {
	if o == nil || o.Warning == nil {
		var ret int32
		return ret, false
	}
	return *o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseUnitsDetail) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given int32 and assigns it to the Warning field.
func (o *MicrosoftGraphLicenseUnitsDetail) SetWarning(v int32) {
	o.Warning = &v
}

// SetWarningExplicitNull (un)sets Warning to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Warning value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseUnitsDetail) SetWarningExplicitNull(b bool) {
	o.Warning = nil
	o.isExplicitNullWarning = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphLicenseUnitsDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled == nil {
		if o.isExplicitNullEnabled {
			toSerialize["enabled"] = o.Enabled
		}
	} else {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Suspended == nil {
		if o.isExplicitNullSuspended {
			toSerialize["suspended"] = o.Suspended
		}
	} else {
		toSerialize["suspended"] = o.Suspended
	}
	if o.Warning == nil {
		if o.isExplicitNullWarning {
			toSerialize["warning"] = o.Warning
		}
	} else {
		toSerialize["warning"] = o.Warning
	}
	return json.Marshal(toSerialize)
}


