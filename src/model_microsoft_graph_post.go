/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphPost struct for MicrosoftGraphPost
type MicrosoftGraphPost struct {
	Id *string `json:"id,omitempty"`

	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	isExplicitNullLastModifiedDateTime bool `json:"-"`
	ChangeKey *string `json:"changeKey,omitempty"`
	isExplicitNullChangeKey bool `json:"-"`
	Categories *[]string `json:"categories,omitempty"`

	Body *AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	isExplicitNullBody bool `json:"-"`
	ReceivedDateTime *time.Time `json:"receivedDateTime,omitempty"`

	HasAttachments *bool `json:"hasAttachments,omitempty"`

	From *MicrosoftGraphRecipient `json:"from,omitempty"`

	Sender *AnyOfmicrosoftGraphRecipient `json:"sender,omitempty"`
	isExplicitNullSender bool `json:"-"`
	ConversationThreadId *string `json:"conversationThreadId,omitempty"`
	isExplicitNullConversationThreadId bool `json:"-"`
	NewParticipants *[]MicrosoftGraphRecipient `json:"newParticipants,omitempty"`

	ConversationId *string `json:"conversationId,omitempty"`
	isExplicitNullConversationId bool `json:"-"`
	InReplyTo *AnyOfmicrosoftGraphPost `json:"inReplyTo,omitempty"`
	isExplicitNullInReplyTo bool `json:"-"`
	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`

	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPost) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphPost) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphPost) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// SetLastModifiedDateTimeExplicitNull (un)sets LastModifiedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastModifiedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetLastModifiedDateTimeExplicitNull(b bool) {
	o.LastModifiedDateTime = nil
	o.isExplicitNullLastModifiedDateTime = b
}
// GetChangeKey returns the ChangeKey field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetChangeKey() string {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey
}

// GetChangeKeyOk returns a tuple with the ChangeKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetChangeKeyOk() (string, bool) {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret, false
	}
	return *o.ChangeKey, true
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasChangeKey() bool {
	if o != nil && o.ChangeKey != nil {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given string and assigns it to the ChangeKey field.
func (o *MicrosoftGraphPost) SetChangeKey(v string) {
	o.ChangeKey = &v
}

// SetChangeKeyExplicitNull (un)sets ChangeKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChangeKey value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetChangeKeyExplicitNull(b bool) {
	o.ChangeKey = nil
	o.isExplicitNullChangeKey = b
}
// GetCategories returns the Categories field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetCategories() []string {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetCategoriesOk() ([]string, bool) {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret, false
	}
	return *o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *MicrosoftGraphPost) SetCategories(v []string) {
	o.Categories = &v
}

// GetBody returns the Body field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetBodyOk() (AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret, false
	}
	return *o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *MicrosoftGraphPost) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = &v
}

// SetBodyExplicitNull (un)sets Body to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Body value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetBodyExplicitNull(b bool) {
	o.Body = nil
	o.isExplicitNullBody = b
}
// GetReceivedDateTime returns the ReceivedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetReceivedDateTime() time.Time {
	if o == nil || o.ReceivedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ReceivedDateTime
}

// GetReceivedDateTimeOk returns a tuple with the ReceivedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetReceivedDateTimeOk() (time.Time, bool) {
	if o == nil || o.ReceivedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ReceivedDateTime, true
}

// HasReceivedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasReceivedDateTime() bool {
	if o != nil && o.ReceivedDateTime != nil {
		return true
	}

	return false
}

// SetReceivedDateTime gets a reference to the given time.Time and assigns it to the ReceivedDateTime field.
func (o *MicrosoftGraphPost) SetReceivedDateTime(v time.Time) {
	o.ReceivedDateTime = &v
}

// GetHasAttachments returns the HasAttachments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetHasAttachments() bool {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetHasAttachmentsOk() (bool, bool) {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret, false
	}
	return *o.HasAttachments, true
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasHasAttachments() bool {
	if o != nil && o.HasAttachments != nil {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given bool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphPost) SetHasAttachments(v bool) {
	o.HasAttachments = &v
}

// GetFrom returns the From field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetFrom() MicrosoftGraphRecipient {
	if o == nil || o.From == nil {
		var ret MicrosoftGraphRecipient
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetFromOk() (MicrosoftGraphRecipient, bool) {
	if o == nil || o.From == nil {
		var ret MicrosoftGraphRecipient
		return ret, false
	}
	return *o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given MicrosoftGraphRecipient and assigns it to the From field.
func (o *MicrosoftGraphPost) SetFrom(v MicrosoftGraphRecipient) {
	o.From = &v
}

// GetSender returns the Sender field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetSender() AnyOfmicrosoftGraphRecipient {
	if o == nil || o.Sender == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetSenderOk() (AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Sender == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Sender field.
func (o *MicrosoftGraphPost) SetSender(v AnyOfmicrosoftGraphRecipient) {
	o.Sender = &v
}

// SetSenderExplicitNull (un)sets Sender to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sender value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetSenderExplicitNull(b bool) {
	o.Sender = nil
	o.isExplicitNullSender = b
}
// GetConversationThreadId returns the ConversationThreadId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetConversationThreadId() string {
	if o == nil || o.ConversationThreadId == nil {
		var ret string
		return ret
	}
	return *o.ConversationThreadId
}

// GetConversationThreadIdOk returns a tuple with the ConversationThreadId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetConversationThreadIdOk() (string, bool) {
	if o == nil || o.ConversationThreadId == nil {
		var ret string
		return ret, false
	}
	return *o.ConversationThreadId, true
}

// HasConversationThreadId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasConversationThreadId() bool {
	if o != nil && o.ConversationThreadId != nil {
		return true
	}

	return false
}

// SetConversationThreadId gets a reference to the given string and assigns it to the ConversationThreadId field.
func (o *MicrosoftGraphPost) SetConversationThreadId(v string) {
	o.ConversationThreadId = &v
}

// SetConversationThreadIdExplicitNull (un)sets ConversationThreadId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConversationThreadId value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetConversationThreadIdExplicitNull(b bool) {
	o.ConversationThreadId = nil
	o.isExplicitNullConversationThreadId = b
}
// GetNewParticipants returns the NewParticipants field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetNewParticipants() []MicrosoftGraphRecipient {
	if o == nil || o.NewParticipants == nil {
		var ret []MicrosoftGraphRecipient
		return ret
	}
	return *o.NewParticipants
}

// GetNewParticipantsOk returns a tuple with the NewParticipants field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetNewParticipantsOk() ([]MicrosoftGraphRecipient, bool) {
	if o == nil || o.NewParticipants == nil {
		var ret []MicrosoftGraphRecipient
		return ret, false
	}
	return *o.NewParticipants, true
}

// HasNewParticipants returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasNewParticipants() bool {
	if o != nil && o.NewParticipants != nil {
		return true
	}

	return false
}

// SetNewParticipants gets a reference to the given []MicrosoftGraphRecipient and assigns it to the NewParticipants field.
func (o *MicrosoftGraphPost) SetNewParticipants(v []MicrosoftGraphRecipient) {
	o.NewParticipants = &v
}

// GetConversationId returns the ConversationId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetConversationId() string {
	if o == nil || o.ConversationId == nil {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetConversationIdOk() (string, bool) {
	if o == nil || o.ConversationId == nil {
		var ret string
		return ret, false
	}
	return *o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasConversationId() bool {
	if o != nil && o.ConversationId != nil {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *MicrosoftGraphPost) SetConversationId(v string) {
	o.ConversationId = &v
}

// SetConversationIdExplicitNull (un)sets ConversationId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConversationId value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetConversationIdExplicitNull(b bool) {
	o.ConversationId = nil
	o.isExplicitNullConversationId = b
}
// GetInReplyTo returns the InReplyTo field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetInReplyTo() AnyOfmicrosoftGraphPost {
	if o == nil || o.InReplyTo == nil {
		var ret AnyOfmicrosoftGraphPost
		return ret
	}
	return *o.InReplyTo
}

// GetInReplyToOk returns a tuple with the InReplyTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetInReplyToOk() (AnyOfmicrosoftGraphPost, bool) {
	if o == nil || o.InReplyTo == nil {
		var ret AnyOfmicrosoftGraphPost
		return ret, false
	}
	return *o.InReplyTo, true
}

// HasInReplyTo returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasInReplyTo() bool {
	if o != nil && o.InReplyTo != nil {
		return true
	}

	return false
}

// SetInReplyTo gets a reference to the given AnyOfmicrosoftGraphPost and assigns it to the InReplyTo field.
func (o *MicrosoftGraphPost) SetInReplyTo(v AnyOfmicrosoftGraphPost) {
	o.InReplyTo = &v
}

// SetInReplyToExplicitNull (un)sets InReplyTo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InReplyTo value is set to nil even if false is passed
func (o *MicrosoftGraphPost) SetInReplyToExplicitNull(b bool) {
	o.InReplyTo = nil
	o.isExplicitNullInReplyTo = b
}
// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetSingleValueExtendedPropertiesOk() ([]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret, false
	}
	return *o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *MicrosoftGraphPost) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetMultiValueExtendedPropertiesOk() ([]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret, false
	}
	return *o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *MicrosoftGraphPost) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphPost) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetAttachments returns the Attachments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPost) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPost) GetAttachmentsOk() ([]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret, false
	}
	return *o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphPost) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *MicrosoftGraphPost) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.LastModifiedDateTime == nil {
		if o.isExplicitNullLastModifiedDateTime {
			toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
		}
	} else {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.ChangeKey == nil {
		if o.isExplicitNullChangeKey {
			toSerialize["changeKey"] = o.ChangeKey
		}
	} else {
		toSerialize["changeKey"] = o.ChangeKey
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.Body == nil {
		if o.isExplicitNullBody {
			toSerialize["body"] = o.Body
		}
	} else {
		toSerialize["body"] = o.Body
	}
	if o.ReceivedDateTime != nil {
		toSerialize["receivedDateTime"] = o.ReceivedDateTime
	}
	if o.HasAttachments != nil {
		toSerialize["hasAttachments"] = o.HasAttachments
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Sender == nil {
		if o.isExplicitNullSender {
			toSerialize["sender"] = o.Sender
		}
	} else {
		toSerialize["sender"] = o.Sender
	}
	if o.ConversationThreadId == nil {
		if o.isExplicitNullConversationThreadId {
			toSerialize["conversationThreadId"] = o.ConversationThreadId
		}
	} else {
		toSerialize["conversationThreadId"] = o.ConversationThreadId
	}
	if o.NewParticipants != nil {
		toSerialize["newParticipants"] = o.NewParticipants
	}
	if o.ConversationId == nil {
		if o.isExplicitNullConversationId {
			toSerialize["conversationId"] = o.ConversationId
		}
	} else {
		toSerialize["conversationId"] = o.ConversationId
	}
	if o.InReplyTo == nil {
		if o.isExplicitNullInReplyTo {
			toSerialize["inReplyTo"] = o.InReplyTo
		}
	} else {
		toSerialize["inReplyTo"] = o.InReplyTo
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	return json.Marshal(toSerialize)
}


