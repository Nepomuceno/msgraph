/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphWindowsPhone81GeneralConfiguration struct for MicrosoftGraphWindowsPhone81GeneralConfiguration
type MicrosoftGraphWindowsPhone81GeneralConfiguration struct {
	Id *string `json:"id,omitempty"`

	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`

	// Version of the device configuration.
	Version *int32 `json:"version,omitempty"`

	Assignments *[]MicrosoftGraphDeviceConfigurationAssignment `json:"assignments,omitempty"`

	DeviceStatuses *[]MicrosoftGraphDeviceConfigurationDeviceStatus `json:"deviceStatuses,omitempty"`

	UserStatuses *[]MicrosoftGraphDeviceConfigurationUserStatus `json:"userStatuses,omitempty"`

	DeviceStatusOverview *AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview `json:"deviceStatusOverview,omitempty"`
	isExplicitNullDeviceStatusOverview bool `json:"-"`
	UserStatusOverview *AnyOfmicrosoftGraphDeviceConfigurationUserOverview `json:"userStatusOverview,omitempty"`
	isExplicitNullUserStatusOverview bool `json:"-"`
	DeviceSettingStateSummaries *[]MicrosoftGraphSettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`

	// Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only.
	ApplyOnlyToWindowsPhone81 *bool `json:"applyOnlyToWindowsPhone81,omitempty"`

	// Indicates whether or not to block copy paste.
	AppsBlockCopyPaste *bool `json:"appsBlockCopyPaste,omitempty"`

	// Indicates whether or not to block bluetooth.
	BluetoothBlocked *bool `json:"bluetoothBlocked,omitempty"`

	// Indicates whether or not to block camera.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`

	// Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked.
	CellularBlockWifiTethering *bool `json:"cellularBlockWifiTethering,omitempty"`

	// List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList *[]AnyOfmicrosoftGraphAppListItem `json:"compliantAppsList,omitempty"`

	// List that is in the AppComplianceList.
	CompliantAppListType *AnyOfmicrosoftGraphAppListType `json:"compliantAppListType,omitempty"`

	// Indicates whether or not to block diagnostic data submission.
	DiagnosticDataBlockSubmission *bool `json:"diagnosticDataBlockSubmission,omitempty"`

	// Indicates whether or not to block custom email accounts.
	EmailBlockAddingAccounts *bool `json:"emailBlockAddingAccounts,omitempty"`

	// Indicates whether or not to block location services.
	LocationServicesBlocked *bool `json:"locationServicesBlocked,omitempty"`

	// Indicates whether or not to block using a Microsoft Account.
	MicrosoftAccountBlocked *bool `json:"microsoftAccountBlocked,omitempty"`

	// Indicates whether or not to block Near-Field Communication.
	NfcBlocked *bool `json:"nfcBlocked,omitempty"`

	// Indicates whether or not to block syncing the calendar.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`

	// Number of days before the password expires.
	PasswordExpirationDays *int32 `json:"passwordExpirationDays,omitempty"`
	isExplicitNullPasswordExpirationDays bool `json:"-"`
	// Minimum length of passwords.
	PasswordMinimumLength *int32 `json:"passwordMinimumLength,omitempty"`
	isExplicitNullPasswordMinimumLength bool `json:"-"`
	// Minutes of inactivity before screen timeout.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int32 `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	isExplicitNullPasswordMinutesOfInactivityBeforeScreenTimeout bool `json:"-"`
	// Number of character sets a password must contain.
	PasswordMinimumCharacterSetCount *int32 `json:"passwordMinimumCharacterSetCount,omitempty"`
	isExplicitNullPasswordMinimumCharacterSetCount bool `json:"-"`
	// Number of previous passwords to block. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int32 `json:"passwordPreviousPasswordBlockCount,omitempty"`
	isExplicitNullPasswordPreviousPasswordBlockCount bool `json:"-"`
	// Number of sign in failures allowed before factory reset.
	PasswordSignInFailureCountBeforeFactoryReset *int32 `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	isExplicitNullPasswordSignInFailureCountBeforeFactoryReset bool `json:"-"`
	// Password type that is required.
	PasswordRequiredType *AnyOfmicrosoftGraphRequiredPasswordType `json:"passwordRequiredType,omitempty"`

	// Indicates whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`

	// Indicates whether or not to block screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`

	// Indicates whether or not to block removable storage.
	StorageBlockRemovableStorage *bool `json:"storageBlockRemovableStorage,omitempty"`

	// Indicates whether or not to require encryption.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`

	// Indicates whether or not to block the web browser.
	WebBrowserBlocked *bool `json:"webBrowserBlocked,omitempty"`

	// Indicates whether or not to block Wi-Fi.
	WifiBlocked *bool `json:"wifiBlocked,omitempty"`

	// Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.
	WifiBlockAutomaticConnectHotspots *bool `json:"wifiBlockAutomaticConnectHotspots,omitempty"`

	// Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked.
	WifiBlockHotspotReporting *bool `json:"wifiBlockHotspotReporting,omitempty"`

	// Indicates whether or not to block the Windows Store.
	WindowsStoreBlocked *bool `json:"windowsStoreBlocked,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetId(v string) {
	o.Id = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetVersionOk() (int32, bool) {
	if o == nil || o.Version == nil {
		var ret int32
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetVersion(v int32) {
	o.Version = &v
}

// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetAssignments() []MicrosoftGraphDeviceConfigurationAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceConfigurationAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetAssignmentsOk() ([]MicrosoftGraphDeviceConfigurationAssignment, bool) {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceConfigurationAssignment
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphDeviceConfigurationAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetAssignments(v []MicrosoftGraphDeviceConfigurationAssignment) {
	o.Assignments = &v
}

// GetDeviceStatuses returns the DeviceStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceStatuses() []MicrosoftGraphDeviceConfigurationDeviceStatus {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceConfigurationDeviceStatus
		return ret
	}
	return *o.DeviceStatuses
}

// GetDeviceStatusesOk returns a tuple with the DeviceStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceStatusesOk() ([]MicrosoftGraphDeviceConfigurationDeviceStatus, bool) {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceConfigurationDeviceStatus
		return ret, false
	}
	return *o.DeviceStatuses, true
}

// HasDeviceStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDeviceStatuses() bool {
	if o != nil && o.DeviceStatuses != nil {
		return true
	}

	return false
}

// SetDeviceStatuses gets a reference to the given []MicrosoftGraphDeviceConfigurationDeviceStatus and assigns it to the DeviceStatuses field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDeviceStatuses(v []MicrosoftGraphDeviceConfigurationDeviceStatus) {
	o.DeviceStatuses = &v
}

// GetUserStatuses returns the UserStatuses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetUserStatuses() []MicrosoftGraphDeviceConfigurationUserStatus {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceConfigurationUserStatus
		return ret
	}
	return *o.UserStatuses
}

// GetUserStatusesOk returns a tuple with the UserStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetUserStatusesOk() ([]MicrosoftGraphDeviceConfigurationUserStatus, bool) {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceConfigurationUserStatus
		return ret, false
	}
	return *o.UserStatuses, true
}

// HasUserStatuses returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasUserStatuses() bool {
	if o != nil && o.UserStatuses != nil {
		return true
	}

	return false
}

// SetUserStatuses gets a reference to the given []MicrosoftGraphDeviceConfigurationUserStatus and assigns it to the UserStatuses field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetUserStatuses(v []MicrosoftGraphDeviceConfigurationUserStatus) {
	o.UserStatuses = &v
}

// GetDeviceStatusOverview returns the DeviceStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceStatusOverview() AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview
		return ret
	}
	return *o.DeviceStatusOverview
}

// GetDeviceStatusOverviewOk returns a tuple with the DeviceStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceStatusOverviewOk() (AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview, bool) {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview
		return ret, false
	}
	return *o.DeviceStatusOverview, true
}

// HasDeviceStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDeviceStatusOverview() bool {
	if o != nil && o.DeviceStatusOverview != nil {
		return true
	}

	return false
}

// SetDeviceStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview and assigns it to the DeviceStatusOverview field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDeviceStatusOverview(v AnyOfmicrosoftGraphDeviceConfigurationDeviceOverview) {
	o.DeviceStatusOverview = &v
}

// SetDeviceStatusOverviewExplicitNull (un)sets DeviceStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDeviceStatusOverviewExplicitNull(b bool) {
	o.DeviceStatusOverview = nil
	o.isExplicitNullDeviceStatusOverview = b
}
// GetUserStatusOverview returns the UserStatusOverview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetUserStatusOverview() AnyOfmicrosoftGraphDeviceConfigurationUserOverview {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceConfigurationUserOverview
		return ret
	}
	return *o.UserStatusOverview
}

// GetUserStatusOverviewOk returns a tuple with the UserStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetUserStatusOverviewOk() (AnyOfmicrosoftGraphDeviceConfigurationUserOverview, bool) {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceConfigurationUserOverview
		return ret, false
	}
	return *o.UserStatusOverview, true
}

// HasUserStatusOverview returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasUserStatusOverview() bool {
	if o != nil && o.UserStatusOverview != nil {
		return true
	}

	return false
}

// SetUserStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceConfigurationUserOverview and assigns it to the UserStatusOverview field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetUserStatusOverview(v AnyOfmicrosoftGraphDeviceConfigurationUserOverview) {
	o.UserStatusOverview = &v
}

// SetUserStatusOverviewExplicitNull (un)sets UserStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserStatusOverview value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetUserStatusOverviewExplicitNull(b bool) {
	o.UserStatusOverview = nil
	o.isExplicitNullUserStatusOverview = b
}
// GetDeviceSettingStateSummaries returns the DeviceSettingStateSummaries field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceSettingStateSummaries() []MicrosoftGraphSettingStateDeviceSummary {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret
	}
	return *o.DeviceSettingStateSummaries
}

// GetDeviceSettingStateSummariesOk returns a tuple with the DeviceSettingStateSummaries field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDeviceSettingStateSummariesOk() ([]MicrosoftGraphSettingStateDeviceSummary, bool) {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret, false
	}
	return *o.DeviceSettingStateSummaries, true
}

// HasDeviceSettingStateSummaries returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDeviceSettingStateSummaries() bool {
	if o != nil && o.DeviceSettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceSettingStateSummaries gets a reference to the given []MicrosoftGraphSettingStateDeviceSummary and assigns it to the DeviceSettingStateSummaries field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDeviceSettingStateSummaries(v []MicrosoftGraphSettingStateDeviceSummary) {
	o.DeviceSettingStateSummaries = &v
}

// GetApplyOnlyToWindowsPhone81 returns the ApplyOnlyToWindowsPhone81 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetApplyOnlyToWindowsPhone81() bool {
	if o == nil || o.ApplyOnlyToWindowsPhone81 == nil {
		var ret bool
		return ret
	}
	return *o.ApplyOnlyToWindowsPhone81
}

// GetApplyOnlyToWindowsPhone81Ok returns a tuple with the ApplyOnlyToWindowsPhone81 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetApplyOnlyToWindowsPhone81Ok() (bool, bool) {
	if o == nil || o.ApplyOnlyToWindowsPhone81 == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplyOnlyToWindowsPhone81, true
}

// HasApplyOnlyToWindowsPhone81 returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasApplyOnlyToWindowsPhone81() bool {
	if o != nil && o.ApplyOnlyToWindowsPhone81 != nil {
		return true
	}

	return false
}

// SetApplyOnlyToWindowsPhone81 gets a reference to the given bool and assigns it to the ApplyOnlyToWindowsPhone81 field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetApplyOnlyToWindowsPhone81(v bool) {
	o.ApplyOnlyToWindowsPhone81 = &v
}

// GetAppsBlockCopyPaste returns the AppsBlockCopyPaste field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetAppsBlockCopyPaste() bool {
	if o == nil || o.AppsBlockCopyPaste == nil {
		var ret bool
		return ret
	}
	return *o.AppsBlockCopyPaste
}

// GetAppsBlockCopyPasteOk returns a tuple with the AppsBlockCopyPaste field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetAppsBlockCopyPasteOk() (bool, bool) {
	if o == nil || o.AppsBlockCopyPaste == nil {
		var ret bool
		return ret, false
	}
	return *o.AppsBlockCopyPaste, true
}

// HasAppsBlockCopyPaste returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasAppsBlockCopyPaste() bool {
	if o != nil && o.AppsBlockCopyPaste != nil {
		return true
	}

	return false
}

// SetAppsBlockCopyPaste gets a reference to the given bool and assigns it to the AppsBlockCopyPaste field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetAppsBlockCopyPaste(v bool) {
	o.AppsBlockCopyPaste = &v
}

// GetBluetoothBlocked returns the BluetoothBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetBluetoothBlocked() bool {
	if o == nil || o.BluetoothBlocked == nil {
		var ret bool
		return ret
	}
	return *o.BluetoothBlocked
}

// GetBluetoothBlockedOk returns a tuple with the BluetoothBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetBluetoothBlockedOk() (bool, bool) {
	if o == nil || o.BluetoothBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.BluetoothBlocked, true
}

// HasBluetoothBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasBluetoothBlocked() bool {
	if o != nil && o.BluetoothBlocked != nil {
		return true
	}

	return false
}

// SetBluetoothBlocked gets a reference to the given bool and assigns it to the BluetoothBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetBluetoothBlocked(v bool) {
	o.BluetoothBlocked = &v
}

// GetCameraBlocked returns the CameraBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCameraBlocked() bool {
	if o == nil || o.CameraBlocked == nil {
		var ret bool
		return ret
	}
	return *o.CameraBlocked
}

// GetCameraBlockedOk returns a tuple with the CameraBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCameraBlockedOk() (bool, bool) {
	if o == nil || o.CameraBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.CameraBlocked, true
}

// HasCameraBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasCameraBlocked() bool {
	if o != nil && o.CameraBlocked != nil {
		return true
	}

	return false
}

// SetCameraBlocked gets a reference to the given bool and assigns it to the CameraBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetCameraBlocked(v bool) {
	o.CameraBlocked = &v
}

// GetCellularBlockWifiTethering returns the CellularBlockWifiTethering field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCellularBlockWifiTethering() bool {
	if o == nil || o.CellularBlockWifiTethering == nil {
		var ret bool
		return ret
	}
	return *o.CellularBlockWifiTethering
}

// GetCellularBlockWifiTetheringOk returns a tuple with the CellularBlockWifiTethering field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCellularBlockWifiTetheringOk() (bool, bool) {
	if o == nil || o.CellularBlockWifiTethering == nil {
		var ret bool
		return ret, false
	}
	return *o.CellularBlockWifiTethering, true
}

// HasCellularBlockWifiTethering returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasCellularBlockWifiTethering() bool {
	if o != nil && o.CellularBlockWifiTethering != nil {
		return true
	}

	return false
}

// SetCellularBlockWifiTethering gets a reference to the given bool and assigns it to the CellularBlockWifiTethering field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetCellularBlockWifiTethering(v bool) {
	o.CellularBlockWifiTethering = &v
}

// GetCompliantAppsList returns the CompliantAppsList field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCompliantAppsList() []AnyOfmicrosoftGraphAppListItem {
	if o == nil || o.CompliantAppsList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret
	}
	return *o.CompliantAppsList
}

// GetCompliantAppsListOk returns a tuple with the CompliantAppsList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCompliantAppsListOk() ([]AnyOfmicrosoftGraphAppListItem, bool) {
	if o == nil || o.CompliantAppsList == nil {
		var ret []AnyOfmicrosoftGraphAppListItem
		return ret, false
	}
	return *o.CompliantAppsList, true
}

// HasCompliantAppsList returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasCompliantAppsList() bool {
	if o != nil && o.CompliantAppsList != nil {
		return true
	}

	return false
}

// SetCompliantAppsList gets a reference to the given []AnyOfmicrosoftGraphAppListItem and assigns it to the CompliantAppsList field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetCompliantAppsList(v []AnyOfmicrosoftGraphAppListItem) {
	o.CompliantAppsList = &v
}

// GetCompliantAppListType returns the CompliantAppListType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCompliantAppListType() AnyOfmicrosoftGraphAppListType {
	if o == nil || o.CompliantAppListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret
	}
	return *o.CompliantAppListType
}

// GetCompliantAppListTypeOk returns a tuple with the CompliantAppListType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetCompliantAppListTypeOk() (AnyOfmicrosoftGraphAppListType, bool) {
	if o == nil || o.CompliantAppListType == nil {
		var ret AnyOfmicrosoftGraphAppListType
		return ret, false
	}
	return *o.CompliantAppListType, true
}

// HasCompliantAppListType returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasCompliantAppListType() bool {
	if o != nil && o.CompliantAppListType != nil {
		return true
	}

	return false
}

// SetCompliantAppListType gets a reference to the given AnyOfmicrosoftGraphAppListType and assigns it to the CompliantAppListType field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetCompliantAppListType(v AnyOfmicrosoftGraphAppListType) {
	o.CompliantAppListType = &v
}

// GetDiagnosticDataBlockSubmission returns the DiagnosticDataBlockSubmission field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDiagnosticDataBlockSubmission() bool {
	if o == nil || o.DiagnosticDataBlockSubmission == nil {
		var ret bool
		return ret
	}
	return *o.DiagnosticDataBlockSubmission
}

// GetDiagnosticDataBlockSubmissionOk returns a tuple with the DiagnosticDataBlockSubmission field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetDiagnosticDataBlockSubmissionOk() (bool, bool) {
	if o == nil || o.DiagnosticDataBlockSubmission == nil {
		var ret bool
		return ret, false
	}
	return *o.DiagnosticDataBlockSubmission, true
}

// HasDiagnosticDataBlockSubmission returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasDiagnosticDataBlockSubmission() bool {
	if o != nil && o.DiagnosticDataBlockSubmission != nil {
		return true
	}

	return false
}

// SetDiagnosticDataBlockSubmission gets a reference to the given bool and assigns it to the DiagnosticDataBlockSubmission field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetDiagnosticDataBlockSubmission(v bool) {
	o.DiagnosticDataBlockSubmission = &v
}

// GetEmailBlockAddingAccounts returns the EmailBlockAddingAccounts field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetEmailBlockAddingAccounts() bool {
	if o == nil || o.EmailBlockAddingAccounts == nil {
		var ret bool
		return ret
	}
	return *o.EmailBlockAddingAccounts
}

// GetEmailBlockAddingAccountsOk returns a tuple with the EmailBlockAddingAccounts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetEmailBlockAddingAccountsOk() (bool, bool) {
	if o == nil || o.EmailBlockAddingAccounts == nil {
		var ret bool
		return ret, false
	}
	return *o.EmailBlockAddingAccounts, true
}

// HasEmailBlockAddingAccounts returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasEmailBlockAddingAccounts() bool {
	if o != nil && o.EmailBlockAddingAccounts != nil {
		return true
	}

	return false
}

// SetEmailBlockAddingAccounts gets a reference to the given bool and assigns it to the EmailBlockAddingAccounts field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetEmailBlockAddingAccounts(v bool) {
	o.EmailBlockAddingAccounts = &v
}

// GetLocationServicesBlocked returns the LocationServicesBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetLocationServicesBlocked() bool {
	if o == nil || o.LocationServicesBlocked == nil {
		var ret bool
		return ret
	}
	return *o.LocationServicesBlocked
}

// GetLocationServicesBlockedOk returns a tuple with the LocationServicesBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetLocationServicesBlockedOk() (bool, bool) {
	if o == nil || o.LocationServicesBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.LocationServicesBlocked, true
}

// HasLocationServicesBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasLocationServicesBlocked() bool {
	if o != nil && o.LocationServicesBlocked != nil {
		return true
	}

	return false
}

// SetLocationServicesBlocked gets a reference to the given bool and assigns it to the LocationServicesBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetLocationServicesBlocked(v bool) {
	o.LocationServicesBlocked = &v
}

// GetMicrosoftAccountBlocked returns the MicrosoftAccountBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetMicrosoftAccountBlocked() bool {
	if o == nil || o.MicrosoftAccountBlocked == nil {
		var ret bool
		return ret
	}
	return *o.MicrosoftAccountBlocked
}

// GetMicrosoftAccountBlockedOk returns a tuple with the MicrosoftAccountBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetMicrosoftAccountBlockedOk() (bool, bool) {
	if o == nil || o.MicrosoftAccountBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.MicrosoftAccountBlocked, true
}

// HasMicrosoftAccountBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasMicrosoftAccountBlocked() bool {
	if o != nil && o.MicrosoftAccountBlocked != nil {
		return true
	}

	return false
}

// SetMicrosoftAccountBlocked gets a reference to the given bool and assigns it to the MicrosoftAccountBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetMicrosoftAccountBlocked(v bool) {
	o.MicrosoftAccountBlocked = &v
}

// GetNfcBlocked returns the NfcBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetNfcBlocked() bool {
	if o == nil || o.NfcBlocked == nil {
		var ret bool
		return ret
	}
	return *o.NfcBlocked
}

// GetNfcBlockedOk returns a tuple with the NfcBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetNfcBlockedOk() (bool, bool) {
	if o == nil || o.NfcBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.NfcBlocked, true
}

// HasNfcBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasNfcBlocked() bool {
	if o != nil && o.NfcBlocked != nil {
		return true
	}

	return false
}

// SetNfcBlocked gets a reference to the given bool and assigns it to the NfcBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetNfcBlocked(v bool) {
	o.NfcBlocked = &v
}

// GetPasswordBlockSimple returns the PasswordBlockSimple field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordBlockSimple() bool {
	if o == nil || o.PasswordBlockSimple == nil {
		var ret bool
		return ret
	}
	return *o.PasswordBlockSimple
}

// GetPasswordBlockSimpleOk returns a tuple with the PasswordBlockSimple field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordBlockSimpleOk() (bool, bool) {
	if o == nil || o.PasswordBlockSimple == nil {
		var ret bool
		return ret, false
	}
	return *o.PasswordBlockSimple, true
}

// HasPasswordBlockSimple returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordBlockSimple() bool {
	if o != nil && o.PasswordBlockSimple != nil {
		return true
	}

	return false
}

// SetPasswordBlockSimple gets a reference to the given bool and assigns it to the PasswordBlockSimple field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordBlockSimple(v bool) {
	o.PasswordBlockSimple = &v
}

// GetPasswordExpirationDays returns the PasswordExpirationDays field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordExpirationDays() int32 {
	if o == nil || o.PasswordExpirationDays == nil {
		var ret int32
		return ret
	}
	return *o.PasswordExpirationDays
}

// GetPasswordExpirationDaysOk returns a tuple with the PasswordExpirationDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordExpirationDaysOk() (int32, bool) {
	if o == nil || o.PasswordExpirationDays == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordExpirationDays, true
}

// HasPasswordExpirationDays returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordExpirationDays() bool {
	if o != nil && o.PasswordExpirationDays != nil {
		return true
	}

	return false
}

// SetPasswordExpirationDays gets a reference to the given int32 and assigns it to the PasswordExpirationDays field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordExpirationDays(v int32) {
	o.PasswordExpirationDays = &v
}

// SetPasswordExpirationDaysExplicitNull (un)sets PasswordExpirationDays to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordExpirationDays value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordExpirationDaysExplicitNull(b bool) {
	o.PasswordExpirationDays = nil
	o.isExplicitNullPasswordExpirationDays = b
}
// GetPasswordMinimumLength returns the PasswordMinimumLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinimumLength() int32 {
	if o == nil || o.PasswordMinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.PasswordMinimumLength
}

// GetPasswordMinimumLengthOk returns a tuple with the PasswordMinimumLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinimumLengthOk() (int32, bool) {
	if o == nil || o.PasswordMinimumLength == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordMinimumLength, true
}

// HasPasswordMinimumLength returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordMinimumLength() bool {
	if o != nil && o.PasswordMinimumLength != nil {
		return true
	}

	return false
}

// SetPasswordMinimumLength gets a reference to the given int32 and assigns it to the PasswordMinimumLength field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinimumLength(v int32) {
	o.PasswordMinimumLength = &v
}

// SetPasswordMinimumLengthExplicitNull (un)sets PasswordMinimumLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordMinimumLength value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinimumLengthExplicitNull(b bool) {
	o.PasswordMinimumLength = nil
	o.isExplicitNullPasswordMinimumLength = b
}
// GetPasswordMinutesOfInactivityBeforeScreenTimeout returns the PasswordMinutesOfInactivityBeforeScreenTimeout field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinutesOfInactivityBeforeScreenTimeout() int32 {
	if o == nil || o.PasswordMinutesOfInactivityBeforeScreenTimeout == nil {
		var ret int32
		return ret
	}
	return *o.PasswordMinutesOfInactivityBeforeScreenTimeout
}

// GetPasswordMinutesOfInactivityBeforeScreenTimeoutOk returns a tuple with the PasswordMinutesOfInactivityBeforeScreenTimeout field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinutesOfInactivityBeforeScreenTimeoutOk() (int32, bool) {
	if o == nil || o.PasswordMinutesOfInactivityBeforeScreenTimeout == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordMinutesOfInactivityBeforeScreenTimeout, true
}

// HasPasswordMinutesOfInactivityBeforeScreenTimeout returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordMinutesOfInactivityBeforeScreenTimeout() bool {
	if o != nil && o.PasswordMinutesOfInactivityBeforeScreenTimeout != nil {
		return true
	}

	return false
}

// SetPasswordMinutesOfInactivityBeforeScreenTimeout gets a reference to the given int32 and assigns it to the PasswordMinutesOfInactivityBeforeScreenTimeout field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinutesOfInactivityBeforeScreenTimeout(v int32) {
	o.PasswordMinutesOfInactivityBeforeScreenTimeout = &v
}

// SetPasswordMinutesOfInactivityBeforeScreenTimeoutExplicitNull (un)sets PasswordMinutesOfInactivityBeforeScreenTimeout to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordMinutesOfInactivityBeforeScreenTimeout value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinutesOfInactivityBeforeScreenTimeoutExplicitNull(b bool) {
	o.PasswordMinutesOfInactivityBeforeScreenTimeout = nil
	o.isExplicitNullPasswordMinutesOfInactivityBeforeScreenTimeout = b
}
// GetPasswordMinimumCharacterSetCount returns the PasswordMinimumCharacterSetCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinimumCharacterSetCount() int32 {
	if o == nil || o.PasswordMinimumCharacterSetCount == nil {
		var ret int32
		return ret
	}
	return *o.PasswordMinimumCharacterSetCount
}

// GetPasswordMinimumCharacterSetCountOk returns a tuple with the PasswordMinimumCharacterSetCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordMinimumCharacterSetCountOk() (int32, bool) {
	if o == nil || o.PasswordMinimumCharacterSetCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordMinimumCharacterSetCount, true
}

// HasPasswordMinimumCharacterSetCount returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordMinimumCharacterSetCount() bool {
	if o != nil && o.PasswordMinimumCharacterSetCount != nil {
		return true
	}

	return false
}

// SetPasswordMinimumCharacterSetCount gets a reference to the given int32 and assigns it to the PasswordMinimumCharacterSetCount field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinimumCharacterSetCount(v int32) {
	o.PasswordMinimumCharacterSetCount = &v
}

// SetPasswordMinimumCharacterSetCountExplicitNull (un)sets PasswordMinimumCharacterSetCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordMinimumCharacterSetCount value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordMinimumCharacterSetCountExplicitNull(b bool) {
	o.PasswordMinimumCharacterSetCount = nil
	o.isExplicitNullPasswordMinimumCharacterSetCount = b
}
// GetPasswordPreviousPasswordBlockCount returns the PasswordPreviousPasswordBlockCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordPreviousPasswordBlockCount() int32 {
	if o == nil || o.PasswordPreviousPasswordBlockCount == nil {
		var ret int32
		return ret
	}
	return *o.PasswordPreviousPasswordBlockCount
}

// GetPasswordPreviousPasswordBlockCountOk returns a tuple with the PasswordPreviousPasswordBlockCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordPreviousPasswordBlockCountOk() (int32, bool) {
	if o == nil || o.PasswordPreviousPasswordBlockCount == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordPreviousPasswordBlockCount, true
}

// HasPasswordPreviousPasswordBlockCount returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordPreviousPasswordBlockCount() bool {
	if o != nil && o.PasswordPreviousPasswordBlockCount != nil {
		return true
	}

	return false
}

// SetPasswordPreviousPasswordBlockCount gets a reference to the given int32 and assigns it to the PasswordPreviousPasswordBlockCount field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordPreviousPasswordBlockCount(v int32) {
	o.PasswordPreviousPasswordBlockCount = &v
}

// SetPasswordPreviousPasswordBlockCountExplicitNull (un)sets PasswordPreviousPasswordBlockCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordPreviousPasswordBlockCount value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordPreviousPasswordBlockCountExplicitNull(b bool) {
	o.PasswordPreviousPasswordBlockCount = nil
	o.isExplicitNullPasswordPreviousPasswordBlockCount = b
}
// GetPasswordSignInFailureCountBeforeFactoryReset returns the PasswordSignInFailureCountBeforeFactoryReset field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordSignInFailureCountBeforeFactoryReset() int32 {
	if o == nil || o.PasswordSignInFailureCountBeforeFactoryReset == nil {
		var ret int32
		return ret
	}
	return *o.PasswordSignInFailureCountBeforeFactoryReset
}

// GetPasswordSignInFailureCountBeforeFactoryResetOk returns a tuple with the PasswordSignInFailureCountBeforeFactoryReset field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordSignInFailureCountBeforeFactoryResetOk() (int32, bool) {
	if o == nil || o.PasswordSignInFailureCountBeforeFactoryReset == nil {
		var ret int32
		return ret, false
	}
	return *o.PasswordSignInFailureCountBeforeFactoryReset, true
}

// HasPasswordSignInFailureCountBeforeFactoryReset returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordSignInFailureCountBeforeFactoryReset() bool {
	if o != nil && o.PasswordSignInFailureCountBeforeFactoryReset != nil {
		return true
	}

	return false
}

// SetPasswordSignInFailureCountBeforeFactoryReset gets a reference to the given int32 and assigns it to the PasswordSignInFailureCountBeforeFactoryReset field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordSignInFailureCountBeforeFactoryReset(v int32) {
	o.PasswordSignInFailureCountBeforeFactoryReset = &v
}

// SetPasswordSignInFailureCountBeforeFactoryResetExplicitNull (un)sets PasswordSignInFailureCountBeforeFactoryReset to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordSignInFailureCountBeforeFactoryReset value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordSignInFailureCountBeforeFactoryResetExplicitNull(b bool) {
	o.PasswordSignInFailureCountBeforeFactoryReset = nil
	o.isExplicitNullPasswordSignInFailureCountBeforeFactoryReset = b
}
// GetPasswordRequiredType returns the PasswordRequiredType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordRequiredType() AnyOfmicrosoftGraphRequiredPasswordType {
	if o == nil || o.PasswordRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret
	}
	return *o.PasswordRequiredType
}

// GetPasswordRequiredTypeOk returns a tuple with the PasswordRequiredType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordRequiredTypeOk() (AnyOfmicrosoftGraphRequiredPasswordType, bool) {
	if o == nil || o.PasswordRequiredType == nil {
		var ret AnyOfmicrosoftGraphRequiredPasswordType
		return ret, false
	}
	return *o.PasswordRequiredType, true
}

// HasPasswordRequiredType returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordRequiredType() bool {
	if o != nil && o.PasswordRequiredType != nil {
		return true
	}

	return false
}

// SetPasswordRequiredType gets a reference to the given AnyOfmicrosoftGraphRequiredPasswordType and assigns it to the PasswordRequiredType field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordRequiredType(v AnyOfmicrosoftGraphRequiredPasswordType) {
	o.PasswordRequiredType = &v
}

// GetPasswordRequired returns the PasswordRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordRequired() bool {
	if o == nil || o.PasswordRequired == nil {
		var ret bool
		return ret
	}
	return *o.PasswordRequired
}

// GetPasswordRequiredOk returns a tuple with the PasswordRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetPasswordRequiredOk() (bool, bool) {
	if o == nil || o.PasswordRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.PasswordRequired, true
}

// HasPasswordRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasPasswordRequired() bool {
	if o != nil && o.PasswordRequired != nil {
		return true
	}

	return false
}

// SetPasswordRequired gets a reference to the given bool and assigns it to the PasswordRequired field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetPasswordRequired(v bool) {
	o.PasswordRequired = &v
}

// GetScreenCaptureBlocked returns the ScreenCaptureBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetScreenCaptureBlocked() bool {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret
	}
	return *o.ScreenCaptureBlocked
}

// GetScreenCaptureBlockedOk returns a tuple with the ScreenCaptureBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetScreenCaptureBlockedOk() (bool, bool) {
	if o == nil || o.ScreenCaptureBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.ScreenCaptureBlocked, true
}

// HasScreenCaptureBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasScreenCaptureBlocked() bool {
	if o != nil && o.ScreenCaptureBlocked != nil {
		return true
	}

	return false
}

// SetScreenCaptureBlocked gets a reference to the given bool and assigns it to the ScreenCaptureBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetScreenCaptureBlocked(v bool) {
	o.ScreenCaptureBlocked = &v
}

// GetStorageBlockRemovableStorage returns the StorageBlockRemovableStorage field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetStorageBlockRemovableStorage() bool {
	if o == nil || o.StorageBlockRemovableStorage == nil {
		var ret bool
		return ret
	}
	return *o.StorageBlockRemovableStorage
}

// GetStorageBlockRemovableStorageOk returns a tuple with the StorageBlockRemovableStorage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetStorageBlockRemovableStorageOk() (bool, bool) {
	if o == nil || o.StorageBlockRemovableStorage == nil {
		var ret bool
		return ret, false
	}
	return *o.StorageBlockRemovableStorage, true
}

// HasStorageBlockRemovableStorage returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasStorageBlockRemovableStorage() bool {
	if o != nil && o.StorageBlockRemovableStorage != nil {
		return true
	}

	return false
}

// SetStorageBlockRemovableStorage gets a reference to the given bool and assigns it to the StorageBlockRemovableStorage field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetStorageBlockRemovableStorage(v bool) {
	o.StorageBlockRemovableStorage = &v
}

// GetStorageRequireEncryption returns the StorageRequireEncryption field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetStorageRequireEncryption() bool {
	if o == nil || o.StorageRequireEncryption == nil {
		var ret bool
		return ret
	}
	return *o.StorageRequireEncryption
}

// GetStorageRequireEncryptionOk returns a tuple with the StorageRequireEncryption field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetStorageRequireEncryptionOk() (bool, bool) {
	if o == nil || o.StorageRequireEncryption == nil {
		var ret bool
		return ret, false
	}
	return *o.StorageRequireEncryption, true
}

// HasStorageRequireEncryption returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasStorageRequireEncryption() bool {
	if o != nil && o.StorageRequireEncryption != nil {
		return true
	}

	return false
}

// SetStorageRequireEncryption gets a reference to the given bool and assigns it to the StorageRequireEncryption field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetStorageRequireEncryption(v bool) {
	o.StorageRequireEncryption = &v
}

// GetWebBrowserBlocked returns the WebBrowserBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWebBrowserBlocked() bool {
	if o == nil || o.WebBrowserBlocked == nil {
		var ret bool
		return ret
	}
	return *o.WebBrowserBlocked
}

// GetWebBrowserBlockedOk returns a tuple with the WebBrowserBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWebBrowserBlockedOk() (bool, bool) {
	if o == nil || o.WebBrowserBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.WebBrowserBlocked, true
}

// HasWebBrowserBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasWebBrowserBlocked() bool {
	if o != nil && o.WebBrowserBlocked != nil {
		return true
	}

	return false
}

// SetWebBrowserBlocked gets a reference to the given bool and assigns it to the WebBrowserBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetWebBrowserBlocked(v bool) {
	o.WebBrowserBlocked = &v
}

// GetWifiBlocked returns the WifiBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlocked() bool {
	if o == nil || o.WifiBlocked == nil {
		var ret bool
		return ret
	}
	return *o.WifiBlocked
}

// GetWifiBlockedOk returns a tuple with the WifiBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlockedOk() (bool, bool) {
	if o == nil || o.WifiBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.WifiBlocked, true
}

// HasWifiBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasWifiBlocked() bool {
	if o != nil && o.WifiBlocked != nil {
		return true
	}

	return false
}

// SetWifiBlocked gets a reference to the given bool and assigns it to the WifiBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetWifiBlocked(v bool) {
	o.WifiBlocked = &v
}

// GetWifiBlockAutomaticConnectHotspots returns the WifiBlockAutomaticConnectHotspots field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlockAutomaticConnectHotspots() bool {
	if o == nil || o.WifiBlockAutomaticConnectHotspots == nil {
		var ret bool
		return ret
	}
	return *o.WifiBlockAutomaticConnectHotspots
}

// GetWifiBlockAutomaticConnectHotspotsOk returns a tuple with the WifiBlockAutomaticConnectHotspots field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlockAutomaticConnectHotspotsOk() (bool, bool) {
	if o == nil || o.WifiBlockAutomaticConnectHotspots == nil {
		var ret bool
		return ret, false
	}
	return *o.WifiBlockAutomaticConnectHotspots, true
}

// HasWifiBlockAutomaticConnectHotspots returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasWifiBlockAutomaticConnectHotspots() bool {
	if o != nil && o.WifiBlockAutomaticConnectHotspots != nil {
		return true
	}

	return false
}

// SetWifiBlockAutomaticConnectHotspots gets a reference to the given bool and assigns it to the WifiBlockAutomaticConnectHotspots field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetWifiBlockAutomaticConnectHotspots(v bool) {
	o.WifiBlockAutomaticConnectHotspots = &v
}

// GetWifiBlockHotspotReporting returns the WifiBlockHotspotReporting field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlockHotspotReporting() bool {
	if o == nil || o.WifiBlockHotspotReporting == nil {
		var ret bool
		return ret
	}
	return *o.WifiBlockHotspotReporting
}

// GetWifiBlockHotspotReportingOk returns a tuple with the WifiBlockHotspotReporting field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWifiBlockHotspotReportingOk() (bool, bool) {
	if o == nil || o.WifiBlockHotspotReporting == nil {
		var ret bool
		return ret, false
	}
	return *o.WifiBlockHotspotReporting, true
}

// HasWifiBlockHotspotReporting returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasWifiBlockHotspotReporting() bool {
	if o != nil && o.WifiBlockHotspotReporting != nil {
		return true
	}

	return false
}

// SetWifiBlockHotspotReporting gets a reference to the given bool and assigns it to the WifiBlockHotspotReporting field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetWifiBlockHotspotReporting(v bool) {
	o.WifiBlockHotspotReporting = &v
}

// GetWindowsStoreBlocked returns the WindowsStoreBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWindowsStoreBlocked() bool {
	if o == nil || o.WindowsStoreBlocked == nil {
		var ret bool
		return ret
	}
	return *o.WindowsStoreBlocked
}

// GetWindowsStoreBlockedOk returns a tuple with the WindowsStoreBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) GetWindowsStoreBlockedOk() (bool, bool) {
	if o == nil || o.WindowsStoreBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.WindowsStoreBlocked, true
}

// HasWindowsStoreBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) HasWindowsStoreBlocked() bool {
	if o != nil && o.WindowsStoreBlocked != nil {
		return true
	}

	return false
}

// SetWindowsStoreBlocked gets a reference to the given bool and assigns it to the WindowsStoreBlocked field.
func (o *MicrosoftGraphWindowsPhone81GeneralConfiguration) SetWindowsStoreBlocked(v bool) {
	o.WindowsStoreBlocked = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWindowsPhone81GeneralConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.DeviceStatuses != nil {
		toSerialize["deviceStatuses"] = o.DeviceStatuses
	}
	if o.UserStatuses != nil {
		toSerialize["userStatuses"] = o.UserStatuses
	}
	if o.DeviceStatusOverview == nil {
		if o.isExplicitNullDeviceStatusOverview {
			toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
		}
	} else {
		toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
	}
	if o.UserStatusOverview == nil {
		if o.isExplicitNullUserStatusOverview {
			toSerialize["userStatusOverview"] = o.UserStatusOverview
		}
	} else {
		toSerialize["userStatusOverview"] = o.UserStatusOverview
	}
	if o.DeviceSettingStateSummaries != nil {
		toSerialize["deviceSettingStateSummaries"] = o.DeviceSettingStateSummaries
	}
	if o.ApplyOnlyToWindowsPhone81 != nil {
		toSerialize["applyOnlyToWindowsPhone81"] = o.ApplyOnlyToWindowsPhone81
	}
	if o.AppsBlockCopyPaste != nil {
		toSerialize["appsBlockCopyPaste"] = o.AppsBlockCopyPaste
	}
	if o.BluetoothBlocked != nil {
		toSerialize["bluetoothBlocked"] = o.BluetoothBlocked
	}
	if o.CameraBlocked != nil {
		toSerialize["cameraBlocked"] = o.CameraBlocked
	}
	if o.CellularBlockWifiTethering != nil {
		toSerialize["cellularBlockWifiTethering"] = o.CellularBlockWifiTethering
	}
	if o.CompliantAppsList != nil {
		toSerialize["compliantAppsList"] = o.CompliantAppsList
	}
	if o.CompliantAppListType != nil {
		toSerialize["compliantAppListType"] = o.CompliantAppListType
	}
	if o.DiagnosticDataBlockSubmission != nil {
		toSerialize["diagnosticDataBlockSubmission"] = o.DiagnosticDataBlockSubmission
	}
	if o.EmailBlockAddingAccounts != nil {
		toSerialize["emailBlockAddingAccounts"] = o.EmailBlockAddingAccounts
	}
	if o.LocationServicesBlocked != nil {
		toSerialize["locationServicesBlocked"] = o.LocationServicesBlocked
	}
	if o.MicrosoftAccountBlocked != nil {
		toSerialize["microsoftAccountBlocked"] = o.MicrosoftAccountBlocked
	}
	if o.NfcBlocked != nil {
		toSerialize["nfcBlocked"] = o.NfcBlocked
	}
	if o.PasswordBlockSimple != nil {
		toSerialize["passwordBlockSimple"] = o.PasswordBlockSimple
	}
	if o.PasswordExpirationDays == nil {
		if o.isExplicitNullPasswordExpirationDays {
			toSerialize["passwordExpirationDays"] = o.PasswordExpirationDays
		}
	} else {
		toSerialize["passwordExpirationDays"] = o.PasswordExpirationDays
	}
	if o.PasswordMinimumLength == nil {
		if o.isExplicitNullPasswordMinimumLength {
			toSerialize["passwordMinimumLength"] = o.PasswordMinimumLength
		}
	} else {
		toSerialize["passwordMinimumLength"] = o.PasswordMinimumLength
	}
	if o.PasswordMinutesOfInactivityBeforeScreenTimeout == nil {
		if o.isExplicitNullPasswordMinutesOfInactivityBeforeScreenTimeout {
			toSerialize["passwordMinutesOfInactivityBeforeScreenTimeout"] = o.PasswordMinutesOfInactivityBeforeScreenTimeout
		}
	} else {
		toSerialize["passwordMinutesOfInactivityBeforeScreenTimeout"] = o.PasswordMinutesOfInactivityBeforeScreenTimeout
	}
	if o.PasswordMinimumCharacterSetCount == nil {
		if o.isExplicitNullPasswordMinimumCharacterSetCount {
			toSerialize["passwordMinimumCharacterSetCount"] = o.PasswordMinimumCharacterSetCount
		}
	} else {
		toSerialize["passwordMinimumCharacterSetCount"] = o.PasswordMinimumCharacterSetCount
	}
	if o.PasswordPreviousPasswordBlockCount == nil {
		if o.isExplicitNullPasswordPreviousPasswordBlockCount {
			toSerialize["passwordPreviousPasswordBlockCount"] = o.PasswordPreviousPasswordBlockCount
		}
	} else {
		toSerialize["passwordPreviousPasswordBlockCount"] = o.PasswordPreviousPasswordBlockCount
	}
	if o.PasswordSignInFailureCountBeforeFactoryReset == nil {
		if o.isExplicitNullPasswordSignInFailureCountBeforeFactoryReset {
			toSerialize["passwordSignInFailureCountBeforeFactoryReset"] = o.PasswordSignInFailureCountBeforeFactoryReset
		}
	} else {
		toSerialize["passwordSignInFailureCountBeforeFactoryReset"] = o.PasswordSignInFailureCountBeforeFactoryReset
	}
	if o.PasswordRequiredType != nil {
		toSerialize["passwordRequiredType"] = o.PasswordRequiredType
	}
	if o.PasswordRequired != nil {
		toSerialize["passwordRequired"] = o.PasswordRequired
	}
	if o.ScreenCaptureBlocked != nil {
		toSerialize["screenCaptureBlocked"] = o.ScreenCaptureBlocked
	}
	if o.StorageBlockRemovableStorage != nil {
		toSerialize["storageBlockRemovableStorage"] = o.StorageBlockRemovableStorage
	}
	if o.StorageRequireEncryption != nil {
		toSerialize["storageRequireEncryption"] = o.StorageRequireEncryption
	}
	if o.WebBrowserBlocked != nil {
		toSerialize["webBrowserBlocked"] = o.WebBrowserBlocked
	}
	if o.WifiBlocked != nil {
		toSerialize["wifiBlocked"] = o.WifiBlocked
	}
	if o.WifiBlockAutomaticConnectHotspots != nil {
		toSerialize["wifiBlockAutomaticConnectHotspots"] = o.WifiBlockAutomaticConnectHotspots
	}
	if o.WifiBlockHotspotReporting != nil {
		toSerialize["wifiBlockHotspotReporting"] = o.WifiBlockHotspotReporting
	}
	if o.WindowsStoreBlocked != nil {
		toSerialize["windowsStoreBlocked"] = o.WindowsStoreBlocked
	}
	return json.Marshal(toSerialize)
}


