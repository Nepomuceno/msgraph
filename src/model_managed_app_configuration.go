/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// ManagedAppConfiguration Configuration used to deliver a set of custom settings as-is to apps for users to whom the configuration is scoped
type ManagedAppConfiguration struct {
	// A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
	CustomSettings *[]MicrosoftGraphKeyValuePair `json:"customSettings,omitempty"`

}

// GetCustomSettings returns the CustomSettings field if non-nil, zero value otherwise.
func (o *ManagedAppConfiguration) GetCustomSettings() []MicrosoftGraphKeyValuePair {
	if o == nil || o.CustomSettings == nil {
		var ret []MicrosoftGraphKeyValuePair
		return ret
	}
	return *o.CustomSettings
}

// GetCustomSettingsOk returns a tuple with the CustomSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedAppConfiguration) GetCustomSettingsOk() ([]MicrosoftGraphKeyValuePair, bool) {
	if o == nil || o.CustomSettings == nil {
		var ret []MicrosoftGraphKeyValuePair
		return ret, false
	}
	return *o.CustomSettings, true
}

// HasCustomSettings returns a boolean if a field has been set.
func (o *ManagedAppConfiguration) HasCustomSettings() bool {
	if o != nil && o.CustomSettings != nil {
		return true
	}

	return false
}

// SetCustomSettings gets a reference to the given []MicrosoftGraphKeyValuePair and assigns it to the CustomSettings field.
func (o *ManagedAppConfiguration) SetCustomSettings(v []MicrosoftGraphKeyValuePair) {
	o.CustomSettings = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o ManagedAppConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomSettings != nil {
		toSerialize["customSettings"] = o.CustomSettings
	}
	return json.Marshal(toSerialize)
}


