/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphApplePushNotificationCertificate struct for MicrosoftGraphApplePushNotificationCertificate
type MicrosoftGraphApplePushNotificationCertificate struct {
	Id *string `json:"id,omitempty"`

	// Apple Id of the account used to create the MDM push certificate.
	AppleIdentifier *string `json:"appleIdentifier,omitempty"`
	isExplicitNullAppleIdentifier bool `json:"-"`
	// Topic Id.
	TopicIdentifier *string `json:"topicIdentifier,omitempty"`
	isExplicitNullTopicIdentifier bool `json:"-"`
	// Last modified date and time for Apple push notification certificate.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// The expiration date and time for Apple push notification certificate.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`

	Certificate *string `json:"certificate,omitempty"`
	isExplicitNullCertificate bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetId(v string) {
	o.Id = &v
}

// GetAppleIdentifier returns the AppleIdentifier field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetAppleIdentifier() string {
	if o == nil || o.AppleIdentifier == nil {
		var ret string
		return ret
	}
	return *o.AppleIdentifier
}

// GetAppleIdentifierOk returns a tuple with the AppleIdentifier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetAppleIdentifierOk() (string, bool) {
	if o == nil || o.AppleIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.AppleIdentifier, true
}

// HasAppleIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasAppleIdentifier() bool {
	if o != nil && o.AppleIdentifier != nil {
		return true
	}

	return false
}

// SetAppleIdentifier gets a reference to the given string and assigns it to the AppleIdentifier field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetAppleIdentifier(v string) {
	o.AppleIdentifier = &v
}

// SetAppleIdentifierExplicitNull (un)sets AppleIdentifier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppleIdentifier value is set to nil even if false is passed
func (o *MicrosoftGraphApplePushNotificationCertificate) SetAppleIdentifierExplicitNull(b bool) {
	o.AppleIdentifier = nil
	o.isExplicitNullAppleIdentifier = b
}
// GetTopicIdentifier returns the TopicIdentifier field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetTopicIdentifier() string {
	if o == nil || o.TopicIdentifier == nil {
		var ret string
		return ret
	}
	return *o.TopicIdentifier
}

// GetTopicIdentifierOk returns a tuple with the TopicIdentifier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetTopicIdentifierOk() (string, bool) {
	if o == nil || o.TopicIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.TopicIdentifier, true
}

// HasTopicIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasTopicIdentifier() bool {
	if o != nil && o.TopicIdentifier != nil {
		return true
	}

	return false
}

// SetTopicIdentifier gets a reference to the given string and assigns it to the TopicIdentifier field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetTopicIdentifier(v string) {
	o.TopicIdentifier = &v
}

// SetTopicIdentifierExplicitNull (un)sets TopicIdentifier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TopicIdentifier value is set to nil even if false is passed
func (o *MicrosoftGraphApplePushNotificationCertificate) SetTopicIdentifierExplicitNull(b bool) {
	o.TopicIdentifier = nil
	o.isExplicitNullTopicIdentifier = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetExpirationDateTime returns the ExpirationDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetExpirationDateTime() time.Time {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasExpirationDateTime() bool {
	if o != nil && o.ExpirationDateTime != nil {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

// GetCertificate returns the Certificate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) GetCertificateOk() (string, bool) {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret, false
	}
	return *o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *MicrosoftGraphApplePushNotificationCertificate) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *MicrosoftGraphApplePushNotificationCertificate) SetCertificate(v string) {
	o.Certificate = &v
}

// SetCertificateExplicitNull (un)sets Certificate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Certificate value is set to nil even if false is passed
func (o *MicrosoftGraphApplePushNotificationCertificate) SetCertificateExplicitNull(b bool) {
	o.Certificate = nil
	o.isExplicitNullCertificate = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphApplePushNotificationCertificate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AppleIdentifier == nil {
		if o.isExplicitNullAppleIdentifier {
			toSerialize["appleIdentifier"] = o.AppleIdentifier
		}
	} else {
		toSerialize["appleIdentifier"] = o.AppleIdentifier
	}
	if o.TopicIdentifier == nil {
		if o.isExplicitNullTopicIdentifier {
			toSerialize["topicIdentifier"] = o.TopicIdentifier
		}
	} else {
		toSerialize["topicIdentifier"] = o.TopicIdentifier
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.ExpirationDateTime != nil {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if o.Certificate == nil {
		if o.isExplicitNullCertificate {
			toSerialize["certificate"] = o.Certificate
		}
	} else {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}


