/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphAlternativeSecurityId struct for MicrosoftGraphAlternativeSecurityId
type MicrosoftGraphAlternativeSecurityId struct {
	Type *int32 `json:"type,omitempty"`
	isExplicitNullType bool `json:"-"`
	IdentityProvider *string `json:"identityProvider,omitempty"`
	isExplicitNullIdentityProvider bool `json:"-"`
	Key *string `json:"key,omitempty"`
	isExplicitNullKey bool `json:"-"`
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlternativeSecurityId) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlternativeSecurityId) GetTypeOk() (int32, bool) {
	if o == nil || o.Type == nil {
		var ret int32
		return ret, false
	}
	return *o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphAlternativeSecurityId) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *MicrosoftGraphAlternativeSecurityId) SetType(v int32) {
	o.Type = &v
}

// SetTypeExplicitNull (un)sets Type to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Type value is set to nil even if false is passed
func (o *MicrosoftGraphAlternativeSecurityId) SetTypeExplicitNull(b bool) {
	o.Type = nil
	o.isExplicitNullType = b
}
// GetIdentityProvider returns the IdentityProvider field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlternativeSecurityId) GetIdentityProvider() string {
	if o == nil || o.IdentityProvider == nil {
		var ret string
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlternativeSecurityId) GetIdentityProviderOk() (string, bool) {
	if o == nil || o.IdentityProvider == nil {
		var ret string
		return ret, false
	}
	return *o.IdentityProvider, true
}

// HasIdentityProvider returns a boolean if a field has been set.
func (o *MicrosoftGraphAlternativeSecurityId) HasIdentityProvider() bool {
	if o != nil && o.IdentityProvider != nil {
		return true
	}

	return false
}

// SetIdentityProvider gets a reference to the given string and assigns it to the IdentityProvider field.
func (o *MicrosoftGraphAlternativeSecurityId) SetIdentityProvider(v string) {
	o.IdentityProvider = &v
}

// SetIdentityProviderExplicitNull (un)sets IdentityProvider to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IdentityProvider value is set to nil even if false is passed
func (o *MicrosoftGraphAlternativeSecurityId) SetIdentityProviderExplicitNull(b bool) {
	o.IdentityProvider = nil
	o.isExplicitNullIdentityProvider = b
}
// GetKey returns the Key field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAlternativeSecurityId) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAlternativeSecurityId) GetKeyOk() (string, bool) {
	if o == nil || o.Key == nil {
		var ret string
		return ret, false
	}
	return *o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MicrosoftGraphAlternativeSecurityId) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MicrosoftGraphAlternativeSecurityId) SetKey(v string) {
	o.Key = &v
}

// SetKeyExplicitNull (un)sets Key to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Key value is set to nil even if false is passed
func (o *MicrosoftGraphAlternativeSecurityId) SetKeyExplicitNull(b bool) {
	o.Key = nil
	o.isExplicitNullKey = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAlternativeSecurityId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type == nil {
		if o.isExplicitNullType {
			toSerialize["type"] = o.Type
		}
	} else {
		toSerialize["type"] = o.Type
	}
	if o.IdentityProvider == nil {
		if o.isExplicitNullIdentityProvider {
			toSerialize["identityProvider"] = o.IdentityProvider
		}
	} else {
		toSerialize["identityProvider"] = o.IdentityProvider
	}
	if o.Key == nil {
		if o.isExplicitNullKey {
			toSerialize["key"] = o.Key
		}
	} else {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}


