/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// PlannerPlan struct for PlannerPlan
type PlannerPlan struct {
	CreatedBy *AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	isExplicitNullCreatedBy bool `json:"-"`
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	Owner *string `json:"owner,omitempty"`
	isExplicitNullOwner bool `json:"-"`
	Title *string `json:"title,omitempty"`

	Tasks *[]MicrosoftGraphPlannerTask `json:"tasks,omitempty"`

	Buckets *[]MicrosoftGraphPlannerBucket `json:"buckets,omitempty"`

	Details *AnyOfmicrosoftGraphPlannerPlanDetails `json:"details,omitempty"`
	isExplicitNullDetails bool `json:"-"`
}

// GetCreatedBy returns the CreatedBy field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetCreatedByOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *PlannerPlan) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *PlannerPlan) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = &v
}

// SetCreatedByExplicitNull (un)sets CreatedBy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedBy value is set to nil even if false is passed
func (o *PlannerPlan) SetCreatedByExplicitNull(b bool) {
	o.CreatedBy = nil
	o.isExplicitNullCreatedBy = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *PlannerPlan) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *PlannerPlan) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *PlannerPlan) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetOwner returns the Owner field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetOwnerOk() (string, bool) {
	if o == nil || o.Owner == nil {
		var ret string
		return ret, false
	}
	return *o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PlannerPlan) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *PlannerPlan) SetOwner(v string) {
	o.Owner = &v
}

// SetOwnerExplicitNull (un)sets Owner to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Owner value is set to nil even if false is passed
func (o *PlannerPlan) SetOwnerExplicitNull(b bool) {
	o.Owner = nil
	o.isExplicitNullOwner = b
}
// GetTitle returns the Title field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetTitleOk() (string, bool) {
	if o == nil || o.Title == nil {
		var ret string
		return ret, false
	}
	return *o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PlannerPlan) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PlannerPlan) SetTitle(v string) {
	o.Title = &v
}

// GetTasks returns the Tasks field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetTasks() []MicrosoftGraphPlannerTask {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPlannerTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetTasksOk() ([]MicrosoftGraphPlannerTask, bool) {
	if o == nil || o.Tasks == nil {
		var ret []MicrosoftGraphPlannerTask
		return ret, false
	}
	return *o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *PlannerPlan) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []MicrosoftGraphPlannerTask and assigns it to the Tasks field.
func (o *PlannerPlan) SetTasks(v []MicrosoftGraphPlannerTask) {
	o.Tasks = &v
}

// GetBuckets returns the Buckets field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetBuckets() []MicrosoftGraphPlannerBucket {
	if o == nil || o.Buckets == nil {
		var ret []MicrosoftGraphPlannerBucket
		return ret
	}
	return *o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetBucketsOk() ([]MicrosoftGraphPlannerBucket, bool) {
	if o == nil || o.Buckets == nil {
		var ret []MicrosoftGraphPlannerBucket
		return ret, false
	}
	return *o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *PlannerPlan) HasBuckets() bool {
	if o != nil && o.Buckets != nil {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []MicrosoftGraphPlannerBucket and assigns it to the Buckets field.
func (o *PlannerPlan) SetBuckets(v []MicrosoftGraphPlannerBucket) {
	o.Buckets = &v
}

// GetDetails returns the Details field if non-nil, zero value otherwise.
func (o *PlannerPlan) GetDetails() AnyOfmicrosoftGraphPlannerPlanDetails {
	if o == nil || o.Details == nil {
		var ret AnyOfmicrosoftGraphPlannerPlanDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PlannerPlan) GetDetailsOk() (AnyOfmicrosoftGraphPlannerPlanDetails, bool) {
	if o == nil || o.Details == nil {
		var ret AnyOfmicrosoftGraphPlannerPlanDetails
		return ret, false
	}
	return *o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *PlannerPlan) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given AnyOfmicrosoftGraphPlannerPlanDetails and assigns it to the Details field.
func (o *PlannerPlan) SetDetails(v AnyOfmicrosoftGraphPlannerPlanDetails) {
	o.Details = &v
}

// SetDetailsExplicitNull (un)sets Details to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Details value is set to nil even if false is passed
func (o *PlannerPlan) SetDetailsExplicitNull(b bool) {
	o.Details = nil
	o.isExplicitNullDetails = b
}

// MarshalJSON returns the JSON representation of the model.
func (o PlannerPlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedBy == nil {
		if o.isExplicitNullCreatedBy {
			toSerialize["createdBy"] = o.CreatedBy
		}
	} else {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Owner == nil {
		if o.isExplicitNullOwner {
			toSerialize["owner"] = o.Owner
		}
	} else {
		toSerialize["owner"] = o.Owner
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Buckets != nil {
		toSerialize["buckets"] = o.Buckets
	}
	if o.Details == nil {
		if o.isExplicitNullDetails {
			toSerialize["details"] = o.Details
		}
	} else {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}


