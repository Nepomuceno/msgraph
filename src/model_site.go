/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Site struct for Site
type Site struct {
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	Root *AnyOfobject `json:"root,omitempty"`
	isExplicitNullRoot bool `json:"-"`
	SharepointIds *AnyOfmicrosoftGraphSharepointIds `json:"sharepointIds,omitempty"`
	isExplicitNullSharepointIds bool `json:"-"`
	SiteCollection *AnyOfmicrosoftGraphSiteCollection `json:"siteCollection,omitempty"`
	isExplicitNullSiteCollection bool `json:"-"`
	Analytics *AnyOfmicrosoftGraphItemAnalytics `json:"analytics,omitempty"`
	isExplicitNullAnalytics bool `json:"-"`
	Columns *[]MicrosoftGraphColumnDefinition `json:"columns,omitempty"`

	ContentTypes *[]MicrosoftGraphContentType `json:"contentTypes,omitempty"`

	Drive *AnyOfmicrosoftGraphDrive `json:"drive,omitempty"`
	isExplicitNullDrive bool `json:"-"`
	Drives *[]MicrosoftGraphDrive `json:"drives,omitempty"`

	Items *[]MicrosoftGraphBaseItem `json:"items,omitempty"`

	Lists *[]MicrosoftGraphList `json:"lists,omitempty"`

	Sites *[]MicrosoftGraphSite `json:"sites,omitempty"`

	Onenote *AnyOfmicrosoftGraphOnenote `json:"onenote,omitempty"`
	isExplicitNullOnenote bool `json:"-"`
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *Site) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Site) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Site) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *Site) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetRoot returns the Root field if non-nil, zero value otherwise.
func (o *Site) GetRoot() AnyOfobject {
	if o == nil || o.Root == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetRootOk() (AnyOfobject, bool) {
	if o == nil || o.Root == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *Site) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given AnyOfobject and assigns it to the Root field.
func (o *Site) SetRoot(v AnyOfobject) {
	o.Root = &v
}

// SetRootExplicitNull (un)sets Root to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Root value is set to nil even if false is passed
func (o *Site) SetRootExplicitNull(b bool) {
	o.Root = nil
	o.isExplicitNullRoot = b
}
// GetSharepointIds returns the SharepointIds field if non-nil, zero value otherwise.
func (o *Site) GetSharepointIds() AnyOfmicrosoftGraphSharepointIds {
	if o == nil || o.SharepointIds == nil {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret
	}
	return *o.SharepointIds
}

// GetSharepointIdsOk returns a tuple with the SharepointIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSharepointIdsOk() (AnyOfmicrosoftGraphSharepointIds, bool) {
	if o == nil || o.SharepointIds == nil {
		var ret AnyOfmicrosoftGraphSharepointIds
		return ret, false
	}
	return *o.SharepointIds, true
}

// HasSharepointIds returns a boolean if a field has been set.
func (o *Site) HasSharepointIds() bool {
	if o != nil && o.SharepointIds != nil {
		return true
	}

	return false
}

// SetSharepointIds gets a reference to the given AnyOfmicrosoftGraphSharepointIds and assigns it to the SharepointIds field.
func (o *Site) SetSharepointIds(v AnyOfmicrosoftGraphSharepointIds) {
	o.SharepointIds = &v
}

// SetSharepointIdsExplicitNull (un)sets SharepointIds to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SharepointIds value is set to nil even if false is passed
func (o *Site) SetSharepointIdsExplicitNull(b bool) {
	o.SharepointIds = nil
	o.isExplicitNullSharepointIds = b
}
// GetSiteCollection returns the SiteCollection field if non-nil, zero value otherwise.
func (o *Site) GetSiteCollection() AnyOfmicrosoftGraphSiteCollection {
	if o == nil || o.SiteCollection == nil {
		var ret AnyOfmicrosoftGraphSiteCollection
		return ret
	}
	return *o.SiteCollection
}

// GetSiteCollectionOk returns a tuple with the SiteCollection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSiteCollectionOk() (AnyOfmicrosoftGraphSiteCollection, bool) {
	if o == nil || o.SiteCollection == nil {
		var ret AnyOfmicrosoftGraphSiteCollection
		return ret, false
	}
	return *o.SiteCollection, true
}

// HasSiteCollection returns a boolean if a field has been set.
func (o *Site) HasSiteCollection() bool {
	if o != nil && o.SiteCollection != nil {
		return true
	}

	return false
}

// SetSiteCollection gets a reference to the given AnyOfmicrosoftGraphSiteCollection and assigns it to the SiteCollection field.
func (o *Site) SetSiteCollection(v AnyOfmicrosoftGraphSiteCollection) {
	o.SiteCollection = &v
}

// SetSiteCollectionExplicitNull (un)sets SiteCollection to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SiteCollection value is set to nil even if false is passed
func (o *Site) SetSiteCollectionExplicitNull(b bool) {
	o.SiteCollection = nil
	o.isExplicitNullSiteCollection = b
}
// GetAnalytics returns the Analytics field if non-nil, zero value otherwise.
func (o *Site) GetAnalytics() AnyOfmicrosoftGraphItemAnalytics {
	if o == nil || o.Analytics == nil {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret
	}
	return *o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetAnalyticsOk() (AnyOfmicrosoftGraphItemAnalytics, bool) {
	if o == nil || o.Analytics == nil {
		var ret AnyOfmicrosoftGraphItemAnalytics
		return ret, false
	}
	return *o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *Site) HasAnalytics() bool {
	if o != nil && o.Analytics != nil {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given AnyOfmicrosoftGraphItemAnalytics and assigns it to the Analytics field.
func (o *Site) SetAnalytics(v AnyOfmicrosoftGraphItemAnalytics) {
	o.Analytics = &v
}

// SetAnalyticsExplicitNull (un)sets Analytics to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Analytics value is set to nil even if false is passed
func (o *Site) SetAnalyticsExplicitNull(b bool) {
	o.Analytics = nil
	o.isExplicitNullAnalytics = b
}
// GetColumns returns the Columns field if non-nil, zero value otherwise.
func (o *Site) GetColumns() []MicrosoftGraphColumnDefinition {
	if o == nil || o.Columns == nil {
		var ret []MicrosoftGraphColumnDefinition
		return ret
	}
	return *o.Columns
}

// GetColumnsOk returns a tuple with the Columns field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetColumnsOk() ([]MicrosoftGraphColumnDefinition, bool) {
	if o == nil || o.Columns == nil {
		var ret []MicrosoftGraphColumnDefinition
		return ret, false
	}
	return *o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *Site) HasColumns() bool {
	if o != nil && o.Columns != nil {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []MicrosoftGraphColumnDefinition and assigns it to the Columns field.
func (o *Site) SetColumns(v []MicrosoftGraphColumnDefinition) {
	o.Columns = &v
}

// GetContentTypes returns the ContentTypes field if non-nil, zero value otherwise.
func (o *Site) GetContentTypes() []MicrosoftGraphContentType {
	if o == nil || o.ContentTypes == nil {
		var ret []MicrosoftGraphContentType
		return ret
	}
	return *o.ContentTypes
}

// GetContentTypesOk returns a tuple with the ContentTypes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetContentTypesOk() ([]MicrosoftGraphContentType, bool) {
	if o == nil || o.ContentTypes == nil {
		var ret []MicrosoftGraphContentType
		return ret, false
	}
	return *o.ContentTypes, true
}

// HasContentTypes returns a boolean if a field has been set.
func (o *Site) HasContentTypes() bool {
	if o != nil && o.ContentTypes != nil {
		return true
	}

	return false
}

// SetContentTypes gets a reference to the given []MicrosoftGraphContentType and assigns it to the ContentTypes field.
func (o *Site) SetContentTypes(v []MicrosoftGraphContentType) {
	o.ContentTypes = &v
}

// GetDrive returns the Drive field if non-nil, zero value otherwise.
func (o *Site) GetDrive() AnyOfmicrosoftGraphDrive {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret
	}
	return *o.Drive
}

// GetDriveOk returns a tuple with the Drive field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetDriveOk() (AnyOfmicrosoftGraphDrive, bool) {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret, false
	}
	return *o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *Site) HasDrive() bool {
	if o != nil && o.Drive != nil {
		return true
	}

	return false
}

// SetDrive gets a reference to the given AnyOfmicrosoftGraphDrive and assigns it to the Drive field.
func (o *Site) SetDrive(v AnyOfmicrosoftGraphDrive) {
	o.Drive = &v
}

// SetDriveExplicitNull (un)sets Drive to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Drive value is set to nil even if false is passed
func (o *Site) SetDriveExplicitNull(b bool) {
	o.Drive = nil
	o.isExplicitNullDrive = b
}
// GetDrives returns the Drives field if non-nil, zero value otherwise.
func (o *Site) GetDrives() []MicrosoftGraphDrive {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret
	}
	return *o.Drives
}

// GetDrivesOk returns a tuple with the Drives field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetDrivesOk() ([]MicrosoftGraphDrive, bool) {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret, false
	}
	return *o.Drives, true
}

// HasDrives returns a boolean if a field has been set.
func (o *Site) HasDrives() bool {
	if o != nil && o.Drives != nil {
		return true
	}

	return false
}

// SetDrives gets a reference to the given []MicrosoftGraphDrive and assigns it to the Drives field.
func (o *Site) SetDrives(v []MicrosoftGraphDrive) {
	o.Drives = &v
}

// GetItems returns the Items field if non-nil, zero value otherwise.
func (o *Site) GetItems() []MicrosoftGraphBaseItem {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphBaseItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetItemsOk() ([]MicrosoftGraphBaseItem, bool) {
	if o == nil || o.Items == nil {
		var ret []MicrosoftGraphBaseItem
		return ret, false
	}
	return *o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *Site) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MicrosoftGraphBaseItem and assigns it to the Items field.
func (o *Site) SetItems(v []MicrosoftGraphBaseItem) {
	o.Items = &v
}

// GetLists returns the Lists field if non-nil, zero value otherwise.
func (o *Site) GetLists() []MicrosoftGraphList {
	if o == nil || o.Lists == nil {
		var ret []MicrosoftGraphList
		return ret
	}
	return *o.Lists
}

// GetListsOk returns a tuple with the Lists field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetListsOk() ([]MicrosoftGraphList, bool) {
	if o == nil || o.Lists == nil {
		var ret []MicrosoftGraphList
		return ret, false
	}
	return *o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *Site) HasLists() bool {
	if o != nil && o.Lists != nil {
		return true
	}

	return false
}

// SetLists gets a reference to the given []MicrosoftGraphList and assigns it to the Lists field.
func (o *Site) SetLists(v []MicrosoftGraphList) {
	o.Lists = &v
}

// GetSites returns the Sites field if non-nil, zero value otherwise.
func (o *Site) GetSites() []MicrosoftGraphSite {
	if o == nil || o.Sites == nil {
		var ret []MicrosoftGraphSite
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSitesOk() ([]MicrosoftGraphSite, bool) {
	if o == nil || o.Sites == nil {
		var ret []MicrosoftGraphSite
		return ret, false
	}
	return *o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *Site) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []MicrosoftGraphSite and assigns it to the Sites field.
func (o *Site) SetSites(v []MicrosoftGraphSite) {
	o.Sites = &v
}

// GetOnenote returns the Onenote field if non-nil, zero value otherwise.
func (o *Site) GetOnenote() AnyOfmicrosoftGraphOnenote {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret
	}
	return *o.Onenote
}

// GetOnenoteOk returns a tuple with the Onenote field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetOnenoteOk() (AnyOfmicrosoftGraphOnenote, bool) {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret, false
	}
	return *o.Onenote, true
}

// HasOnenote returns a boolean if a field has been set.
func (o *Site) HasOnenote() bool {
	if o != nil && o.Onenote != nil {
		return true
	}

	return false
}

// SetOnenote gets a reference to the given AnyOfmicrosoftGraphOnenote and assigns it to the Onenote field.
func (o *Site) SetOnenote(v AnyOfmicrosoftGraphOnenote) {
	o.Onenote = &v
}

// SetOnenoteExplicitNull (un)sets Onenote to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Onenote value is set to nil even if false is passed
func (o *Site) SetOnenoteExplicitNull(b bool) {
	o.Onenote = nil
	o.isExplicitNullOnenote = b
}

// MarshalJSON returns the JSON representation of the model.
func (o Site) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Root == nil {
		if o.isExplicitNullRoot {
			toSerialize["root"] = o.Root
		}
	} else {
		toSerialize["root"] = o.Root
	}
	if o.SharepointIds == nil {
		if o.isExplicitNullSharepointIds {
			toSerialize["sharepointIds"] = o.SharepointIds
		}
	} else {
		toSerialize["sharepointIds"] = o.SharepointIds
	}
	if o.SiteCollection == nil {
		if o.isExplicitNullSiteCollection {
			toSerialize["siteCollection"] = o.SiteCollection
		}
	} else {
		toSerialize["siteCollection"] = o.SiteCollection
	}
	if o.Analytics == nil {
		if o.isExplicitNullAnalytics {
			toSerialize["analytics"] = o.Analytics
		}
	} else {
		toSerialize["analytics"] = o.Analytics
	}
	if o.Columns != nil {
		toSerialize["columns"] = o.Columns
	}
	if o.ContentTypes != nil {
		toSerialize["contentTypes"] = o.ContentTypes
	}
	if o.Drive == nil {
		if o.isExplicitNullDrive {
			toSerialize["drive"] = o.Drive
		}
	} else {
		toSerialize["drive"] = o.Drive
	}
	if o.Drives != nil {
		toSerialize["drives"] = o.Drives
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Lists != nil {
		toSerialize["lists"] = o.Lists
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.Onenote == nil {
		if o.isExplicitNullOnenote {
			toSerialize["onenote"] = o.Onenote
		}
	} else {
		toSerialize["onenote"] = o.Onenote
	}
	return json.Marshal(toSerialize)
}


