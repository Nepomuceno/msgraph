/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// LocateDeviceActionResult struct for LocateDeviceActionResult
type LocateDeviceActionResult struct {
	// device location
	DeviceLocation *AnyOfmicrosoftGraphDeviceGeoLocation `json:"deviceLocation,omitempty"`
	isExplicitNullDeviceLocation bool `json:"-"`
}

// GetDeviceLocation returns the DeviceLocation field if non-nil, zero value otherwise.
func (o *LocateDeviceActionResult) GetDeviceLocation() AnyOfmicrosoftGraphDeviceGeoLocation {
	if o == nil || o.DeviceLocation == nil {
		var ret AnyOfmicrosoftGraphDeviceGeoLocation
		return ret
	}
	return *o.DeviceLocation
}

// GetDeviceLocationOk returns a tuple with the DeviceLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LocateDeviceActionResult) GetDeviceLocationOk() (AnyOfmicrosoftGraphDeviceGeoLocation, bool) {
	if o == nil || o.DeviceLocation == nil {
		var ret AnyOfmicrosoftGraphDeviceGeoLocation
		return ret, false
	}
	return *o.DeviceLocation, true
}

// HasDeviceLocation returns a boolean if a field has been set.
func (o *LocateDeviceActionResult) HasDeviceLocation() bool {
	if o != nil && o.DeviceLocation != nil {
		return true
	}

	return false
}

// SetDeviceLocation gets a reference to the given AnyOfmicrosoftGraphDeviceGeoLocation and assigns it to the DeviceLocation field.
func (o *LocateDeviceActionResult) SetDeviceLocation(v AnyOfmicrosoftGraphDeviceGeoLocation) {
	o.DeviceLocation = &v
}

// SetDeviceLocationExplicitNull (un)sets DeviceLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceLocation value is set to nil even if false is passed
func (o *LocateDeviceActionResult) SetDeviceLocationExplicitNull(b bool) {
	o.DeviceLocation = nil
	o.isExplicitNullDeviceLocation = b
}

// MarshalJSON returns the JSON representation of the model.
func (o LocateDeviceActionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceLocation == nil {
		if o.isExplicitNullDeviceLocation {
			toSerialize["deviceLocation"] = o.DeviceLocation
		}
	} else {
		toSerialize["deviceLocation"] = o.DeviceLocation
	}
	return json.Marshal(toSerialize)
}


