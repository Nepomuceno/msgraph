/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// WindowsUpdateForBusinessConfiguration Windows Update for business configuration.
type WindowsUpdateForBusinessConfiguration struct {
	// Delivery Optimization Mode
	DeliveryOptimizationMode *AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode `json:"deliveryOptimizationMode,omitempty"`

	// The pre-release features.
	PrereleaseFeatures *AnyOfmicrosoftGraphPrereleaseFeatures `json:"prereleaseFeatures,omitempty"`

	// Automatic update mode.
	AutomaticUpdateMode *AnyOfmicrosoftGraphAutomaticUpdateMode `json:"automaticUpdateMode,omitempty"`

	// Allow Microsoft Update Service
	MicrosoftUpdateServiceAllowed *bool `json:"microsoftUpdateServiceAllowed,omitempty"`

	// Exclude Windows update Drivers
	DriversExcluded *bool `json:"driversExcluded,omitempty"`

	// Installation schedule
	InstallationSchedule *AnyOfobject `json:"installationSchedule,omitempty"`
	isExplicitNullInstallationSchedule bool `json:"-"`
	// Defer Quality Updates by these many days
	QualityUpdatesDeferralPeriodInDays *int32 `json:"qualityUpdatesDeferralPeriodInDays,omitempty"`

	// Defer Feature Updates by these many days
	FeatureUpdatesDeferralPeriodInDays *int32 `json:"featureUpdatesDeferralPeriodInDays,omitempty"`

	// Pause Quality Updates
	QualityUpdatesPaused *bool `json:"qualityUpdatesPaused,omitempty"`

	// Pause Feature Updates
	FeatureUpdatesPaused *bool `json:"featureUpdatesPaused,omitempty"`

	// Quality Updates Pause Expiry datetime
	QualityUpdatesPauseExpiryDateTime *time.Time `json:"qualityUpdatesPauseExpiryDateTime,omitempty"`

	// Feature Updates Pause Expiry datetime
	FeatureUpdatesPauseExpiryDateTime *time.Time `json:"featureUpdatesPauseExpiryDateTime,omitempty"`

	// Determines which branch devices will receive their updates from
	BusinessReadyUpdatesOnly *AnyOfmicrosoftGraphWindowsUpdateType `json:"businessReadyUpdatesOnly,omitempty"`

}

// GetDeliveryOptimizationMode returns the DeliveryOptimizationMode field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetDeliveryOptimizationMode() AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode {
	if o == nil || o.DeliveryOptimizationMode == nil {
		var ret AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode
		return ret
	}
	return *o.DeliveryOptimizationMode
}

// GetDeliveryOptimizationModeOk returns a tuple with the DeliveryOptimizationMode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetDeliveryOptimizationModeOk() (AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode, bool) {
	if o == nil || o.DeliveryOptimizationMode == nil {
		var ret AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode
		return ret, false
	}
	return *o.DeliveryOptimizationMode, true
}

// HasDeliveryOptimizationMode returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasDeliveryOptimizationMode() bool {
	if o != nil && o.DeliveryOptimizationMode != nil {
		return true
	}

	return false
}

// SetDeliveryOptimizationMode gets a reference to the given AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode and assigns it to the DeliveryOptimizationMode field.
func (o *WindowsUpdateForBusinessConfiguration) SetDeliveryOptimizationMode(v AnyOfmicrosoftGraphWindowsDeliveryOptimizationMode) {
	o.DeliveryOptimizationMode = &v
}

// GetPrereleaseFeatures returns the PrereleaseFeatures field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetPrereleaseFeatures() AnyOfmicrosoftGraphPrereleaseFeatures {
	if o == nil || o.PrereleaseFeatures == nil {
		var ret AnyOfmicrosoftGraphPrereleaseFeatures
		return ret
	}
	return *o.PrereleaseFeatures
}

// GetPrereleaseFeaturesOk returns a tuple with the PrereleaseFeatures field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetPrereleaseFeaturesOk() (AnyOfmicrosoftGraphPrereleaseFeatures, bool) {
	if o == nil || o.PrereleaseFeatures == nil {
		var ret AnyOfmicrosoftGraphPrereleaseFeatures
		return ret, false
	}
	return *o.PrereleaseFeatures, true
}

// HasPrereleaseFeatures returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasPrereleaseFeatures() bool {
	if o != nil && o.PrereleaseFeatures != nil {
		return true
	}

	return false
}

// SetPrereleaseFeatures gets a reference to the given AnyOfmicrosoftGraphPrereleaseFeatures and assigns it to the PrereleaseFeatures field.
func (o *WindowsUpdateForBusinessConfiguration) SetPrereleaseFeatures(v AnyOfmicrosoftGraphPrereleaseFeatures) {
	o.PrereleaseFeatures = &v
}

// GetAutomaticUpdateMode returns the AutomaticUpdateMode field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetAutomaticUpdateMode() AnyOfmicrosoftGraphAutomaticUpdateMode {
	if o == nil || o.AutomaticUpdateMode == nil {
		var ret AnyOfmicrosoftGraphAutomaticUpdateMode
		return ret
	}
	return *o.AutomaticUpdateMode
}

// GetAutomaticUpdateModeOk returns a tuple with the AutomaticUpdateMode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetAutomaticUpdateModeOk() (AnyOfmicrosoftGraphAutomaticUpdateMode, bool) {
	if o == nil || o.AutomaticUpdateMode == nil {
		var ret AnyOfmicrosoftGraphAutomaticUpdateMode
		return ret, false
	}
	return *o.AutomaticUpdateMode, true
}

// HasAutomaticUpdateMode returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasAutomaticUpdateMode() bool {
	if o != nil && o.AutomaticUpdateMode != nil {
		return true
	}

	return false
}

// SetAutomaticUpdateMode gets a reference to the given AnyOfmicrosoftGraphAutomaticUpdateMode and assigns it to the AutomaticUpdateMode field.
func (o *WindowsUpdateForBusinessConfiguration) SetAutomaticUpdateMode(v AnyOfmicrosoftGraphAutomaticUpdateMode) {
	o.AutomaticUpdateMode = &v
}

// GetMicrosoftUpdateServiceAllowed returns the MicrosoftUpdateServiceAllowed field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetMicrosoftUpdateServiceAllowed() bool {
	if o == nil || o.MicrosoftUpdateServiceAllowed == nil {
		var ret bool
		return ret
	}
	return *o.MicrosoftUpdateServiceAllowed
}

// GetMicrosoftUpdateServiceAllowedOk returns a tuple with the MicrosoftUpdateServiceAllowed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetMicrosoftUpdateServiceAllowedOk() (bool, bool) {
	if o == nil || o.MicrosoftUpdateServiceAllowed == nil {
		var ret bool
		return ret, false
	}
	return *o.MicrosoftUpdateServiceAllowed, true
}

// HasMicrosoftUpdateServiceAllowed returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasMicrosoftUpdateServiceAllowed() bool {
	if o != nil && o.MicrosoftUpdateServiceAllowed != nil {
		return true
	}

	return false
}

// SetMicrosoftUpdateServiceAllowed gets a reference to the given bool and assigns it to the MicrosoftUpdateServiceAllowed field.
func (o *WindowsUpdateForBusinessConfiguration) SetMicrosoftUpdateServiceAllowed(v bool) {
	o.MicrosoftUpdateServiceAllowed = &v
}

// GetDriversExcluded returns the DriversExcluded field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetDriversExcluded() bool {
	if o == nil || o.DriversExcluded == nil {
		var ret bool
		return ret
	}
	return *o.DriversExcluded
}

// GetDriversExcludedOk returns a tuple with the DriversExcluded field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetDriversExcludedOk() (bool, bool) {
	if o == nil || o.DriversExcluded == nil {
		var ret bool
		return ret, false
	}
	return *o.DriversExcluded, true
}

// HasDriversExcluded returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasDriversExcluded() bool {
	if o != nil && o.DriversExcluded != nil {
		return true
	}

	return false
}

// SetDriversExcluded gets a reference to the given bool and assigns it to the DriversExcluded field.
func (o *WindowsUpdateForBusinessConfiguration) SetDriversExcluded(v bool) {
	o.DriversExcluded = &v
}

// GetInstallationSchedule returns the InstallationSchedule field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetInstallationSchedule() AnyOfobject {
	if o == nil || o.InstallationSchedule == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.InstallationSchedule
}

// GetInstallationScheduleOk returns a tuple with the InstallationSchedule field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetInstallationScheduleOk() (AnyOfobject, bool) {
	if o == nil || o.InstallationSchedule == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.InstallationSchedule, true
}

// HasInstallationSchedule returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasInstallationSchedule() bool {
	if o != nil && o.InstallationSchedule != nil {
		return true
	}

	return false
}

// SetInstallationSchedule gets a reference to the given AnyOfobject and assigns it to the InstallationSchedule field.
func (o *WindowsUpdateForBusinessConfiguration) SetInstallationSchedule(v AnyOfobject) {
	o.InstallationSchedule = &v
}

// SetInstallationScheduleExplicitNull (un)sets InstallationSchedule to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InstallationSchedule value is set to nil even if false is passed
func (o *WindowsUpdateForBusinessConfiguration) SetInstallationScheduleExplicitNull(b bool) {
	o.InstallationSchedule = nil
	o.isExplicitNullInstallationSchedule = b
}
// GetQualityUpdatesDeferralPeriodInDays returns the QualityUpdatesDeferralPeriodInDays field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesDeferralPeriodInDays() int32 {
	if o == nil || o.QualityUpdatesDeferralPeriodInDays == nil {
		var ret int32
		return ret
	}
	return *o.QualityUpdatesDeferralPeriodInDays
}

// GetQualityUpdatesDeferralPeriodInDaysOk returns a tuple with the QualityUpdatesDeferralPeriodInDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesDeferralPeriodInDaysOk() (int32, bool) {
	if o == nil || o.QualityUpdatesDeferralPeriodInDays == nil {
		var ret int32
		return ret, false
	}
	return *o.QualityUpdatesDeferralPeriodInDays, true
}

// HasQualityUpdatesDeferralPeriodInDays returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasQualityUpdatesDeferralPeriodInDays() bool {
	if o != nil && o.QualityUpdatesDeferralPeriodInDays != nil {
		return true
	}

	return false
}

// SetQualityUpdatesDeferralPeriodInDays gets a reference to the given int32 and assigns it to the QualityUpdatesDeferralPeriodInDays field.
func (o *WindowsUpdateForBusinessConfiguration) SetQualityUpdatesDeferralPeriodInDays(v int32) {
	o.QualityUpdatesDeferralPeriodInDays = &v
}

// GetFeatureUpdatesDeferralPeriodInDays returns the FeatureUpdatesDeferralPeriodInDays field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesDeferralPeriodInDays() int32 {
	if o == nil || o.FeatureUpdatesDeferralPeriodInDays == nil {
		var ret int32
		return ret
	}
	return *o.FeatureUpdatesDeferralPeriodInDays
}

// GetFeatureUpdatesDeferralPeriodInDaysOk returns a tuple with the FeatureUpdatesDeferralPeriodInDays field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesDeferralPeriodInDaysOk() (int32, bool) {
	if o == nil || o.FeatureUpdatesDeferralPeriodInDays == nil {
		var ret int32
		return ret, false
	}
	return *o.FeatureUpdatesDeferralPeriodInDays, true
}

// HasFeatureUpdatesDeferralPeriodInDays returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasFeatureUpdatesDeferralPeriodInDays() bool {
	if o != nil && o.FeatureUpdatesDeferralPeriodInDays != nil {
		return true
	}

	return false
}

// SetFeatureUpdatesDeferralPeriodInDays gets a reference to the given int32 and assigns it to the FeatureUpdatesDeferralPeriodInDays field.
func (o *WindowsUpdateForBusinessConfiguration) SetFeatureUpdatesDeferralPeriodInDays(v int32) {
	o.FeatureUpdatesDeferralPeriodInDays = &v
}

// GetQualityUpdatesPaused returns the QualityUpdatesPaused field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesPaused() bool {
	if o == nil || o.QualityUpdatesPaused == nil {
		var ret bool
		return ret
	}
	return *o.QualityUpdatesPaused
}

// GetQualityUpdatesPausedOk returns a tuple with the QualityUpdatesPaused field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesPausedOk() (bool, bool) {
	if o == nil || o.QualityUpdatesPaused == nil {
		var ret bool
		return ret, false
	}
	return *o.QualityUpdatesPaused, true
}

// HasQualityUpdatesPaused returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasQualityUpdatesPaused() bool {
	if o != nil && o.QualityUpdatesPaused != nil {
		return true
	}

	return false
}

// SetQualityUpdatesPaused gets a reference to the given bool and assigns it to the QualityUpdatesPaused field.
func (o *WindowsUpdateForBusinessConfiguration) SetQualityUpdatesPaused(v bool) {
	o.QualityUpdatesPaused = &v
}

// GetFeatureUpdatesPaused returns the FeatureUpdatesPaused field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesPaused() bool {
	if o == nil || o.FeatureUpdatesPaused == nil {
		var ret bool
		return ret
	}
	return *o.FeatureUpdatesPaused
}

// GetFeatureUpdatesPausedOk returns a tuple with the FeatureUpdatesPaused field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesPausedOk() (bool, bool) {
	if o == nil || o.FeatureUpdatesPaused == nil {
		var ret bool
		return ret, false
	}
	return *o.FeatureUpdatesPaused, true
}

// HasFeatureUpdatesPaused returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasFeatureUpdatesPaused() bool {
	if o != nil && o.FeatureUpdatesPaused != nil {
		return true
	}

	return false
}

// SetFeatureUpdatesPaused gets a reference to the given bool and assigns it to the FeatureUpdatesPaused field.
func (o *WindowsUpdateForBusinessConfiguration) SetFeatureUpdatesPaused(v bool) {
	o.FeatureUpdatesPaused = &v
}

// GetQualityUpdatesPauseExpiryDateTime returns the QualityUpdatesPauseExpiryDateTime field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesPauseExpiryDateTime() time.Time {
	if o == nil || o.QualityUpdatesPauseExpiryDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.QualityUpdatesPauseExpiryDateTime
}

// GetQualityUpdatesPauseExpiryDateTimeOk returns a tuple with the QualityUpdatesPauseExpiryDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetQualityUpdatesPauseExpiryDateTimeOk() (time.Time, bool) {
	if o == nil || o.QualityUpdatesPauseExpiryDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.QualityUpdatesPauseExpiryDateTime, true
}

// HasQualityUpdatesPauseExpiryDateTime returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasQualityUpdatesPauseExpiryDateTime() bool {
	if o != nil && o.QualityUpdatesPauseExpiryDateTime != nil {
		return true
	}

	return false
}

// SetQualityUpdatesPauseExpiryDateTime gets a reference to the given time.Time and assigns it to the QualityUpdatesPauseExpiryDateTime field.
func (o *WindowsUpdateForBusinessConfiguration) SetQualityUpdatesPauseExpiryDateTime(v time.Time) {
	o.QualityUpdatesPauseExpiryDateTime = &v
}

// GetFeatureUpdatesPauseExpiryDateTime returns the FeatureUpdatesPauseExpiryDateTime field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesPauseExpiryDateTime() time.Time {
	if o == nil || o.FeatureUpdatesPauseExpiryDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.FeatureUpdatesPauseExpiryDateTime
}

// GetFeatureUpdatesPauseExpiryDateTimeOk returns a tuple with the FeatureUpdatesPauseExpiryDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetFeatureUpdatesPauseExpiryDateTimeOk() (time.Time, bool) {
	if o == nil || o.FeatureUpdatesPauseExpiryDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.FeatureUpdatesPauseExpiryDateTime, true
}

// HasFeatureUpdatesPauseExpiryDateTime returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasFeatureUpdatesPauseExpiryDateTime() bool {
	if o != nil && o.FeatureUpdatesPauseExpiryDateTime != nil {
		return true
	}

	return false
}

// SetFeatureUpdatesPauseExpiryDateTime gets a reference to the given time.Time and assigns it to the FeatureUpdatesPauseExpiryDateTime field.
func (o *WindowsUpdateForBusinessConfiguration) SetFeatureUpdatesPauseExpiryDateTime(v time.Time) {
	o.FeatureUpdatesPauseExpiryDateTime = &v
}

// GetBusinessReadyUpdatesOnly returns the BusinessReadyUpdatesOnly field if non-nil, zero value otherwise.
func (o *WindowsUpdateForBusinessConfiguration) GetBusinessReadyUpdatesOnly() AnyOfmicrosoftGraphWindowsUpdateType {
	if o == nil || o.BusinessReadyUpdatesOnly == nil {
		var ret AnyOfmicrosoftGraphWindowsUpdateType
		return ret
	}
	return *o.BusinessReadyUpdatesOnly
}

// GetBusinessReadyUpdatesOnlyOk returns a tuple with the BusinessReadyUpdatesOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsUpdateForBusinessConfiguration) GetBusinessReadyUpdatesOnlyOk() (AnyOfmicrosoftGraphWindowsUpdateType, bool) {
	if o == nil || o.BusinessReadyUpdatesOnly == nil {
		var ret AnyOfmicrosoftGraphWindowsUpdateType
		return ret, false
	}
	return *o.BusinessReadyUpdatesOnly, true
}

// HasBusinessReadyUpdatesOnly returns a boolean if a field has been set.
func (o *WindowsUpdateForBusinessConfiguration) HasBusinessReadyUpdatesOnly() bool {
	if o != nil && o.BusinessReadyUpdatesOnly != nil {
		return true
	}

	return false
}

// SetBusinessReadyUpdatesOnly gets a reference to the given AnyOfmicrosoftGraphWindowsUpdateType and assigns it to the BusinessReadyUpdatesOnly field.
func (o *WindowsUpdateForBusinessConfiguration) SetBusinessReadyUpdatesOnly(v AnyOfmicrosoftGraphWindowsUpdateType) {
	o.BusinessReadyUpdatesOnly = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o WindowsUpdateForBusinessConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeliveryOptimizationMode != nil {
		toSerialize["deliveryOptimizationMode"] = o.DeliveryOptimizationMode
	}
	if o.PrereleaseFeatures != nil {
		toSerialize["prereleaseFeatures"] = o.PrereleaseFeatures
	}
	if o.AutomaticUpdateMode != nil {
		toSerialize["automaticUpdateMode"] = o.AutomaticUpdateMode
	}
	if o.MicrosoftUpdateServiceAllowed != nil {
		toSerialize["microsoftUpdateServiceAllowed"] = o.MicrosoftUpdateServiceAllowed
	}
	if o.DriversExcluded != nil {
		toSerialize["driversExcluded"] = o.DriversExcluded
	}
	if o.InstallationSchedule == nil {
		if o.isExplicitNullInstallationSchedule {
			toSerialize["installationSchedule"] = o.InstallationSchedule
		}
	} else {
		toSerialize["installationSchedule"] = o.InstallationSchedule
	}
	if o.QualityUpdatesDeferralPeriodInDays != nil {
		toSerialize["qualityUpdatesDeferralPeriodInDays"] = o.QualityUpdatesDeferralPeriodInDays
	}
	if o.FeatureUpdatesDeferralPeriodInDays != nil {
		toSerialize["featureUpdatesDeferralPeriodInDays"] = o.FeatureUpdatesDeferralPeriodInDays
	}
	if o.QualityUpdatesPaused != nil {
		toSerialize["qualityUpdatesPaused"] = o.QualityUpdatesPaused
	}
	if o.FeatureUpdatesPaused != nil {
		toSerialize["featureUpdatesPaused"] = o.FeatureUpdatesPaused
	}
	if o.QualityUpdatesPauseExpiryDateTime != nil {
		toSerialize["qualityUpdatesPauseExpiryDateTime"] = o.QualityUpdatesPauseExpiryDateTime
	}
	if o.FeatureUpdatesPauseExpiryDateTime != nil {
		toSerialize["featureUpdatesPauseExpiryDateTime"] = o.FeatureUpdatesPauseExpiryDateTime
	}
	if o.BusinessReadyUpdatesOnly != nil {
		toSerialize["businessReadyUpdatesOnly"] = o.BusinessReadyUpdatesOnly
	}
	return json.Marshal(toSerialize)
}


