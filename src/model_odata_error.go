/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
	"errors"
)
// OdataError struct for OdataError
type OdataError struct {
	Error *OdataErrorMain `json:"error,omitempty"`

}

// GetError returns the Error field if non-nil, zero value otherwise.
func (o *OdataError) GetError() OdataErrorMain {
	if o == nil || o.Error == nil {
		var ret OdataErrorMain
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OdataError) GetErrorOk() (OdataErrorMain, bool) {
	if o == nil || o.Error == nil {
		var ret OdataErrorMain
		return ret, false
	}
	return *o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OdataError) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given OdataErrorMain and assigns it to the Error field.
func (o *OdataError) SetError(v OdataErrorMain) {
	o.Error = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o OdataError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error == nil {
		return nil, errors.New("Error is required and not nullable, but was not set on OdataError")
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}


