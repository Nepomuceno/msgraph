/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1020 struct for InlineObject1020
type InlineObject1020 struct {
	Number *AnyOfobject `json:"number,omitempty"`
	isExplicitNullNumber bool `json:"-"`
	Ref *AnyOfobject `json:"ref,omitempty"`
	isExplicitNullRef bool `json:"-"`
	Order *AnyOfobject `json:"order,omitempty"`
	isExplicitNullOrder bool `json:"-"`
}

// GetNumber returns the Number field if non-nil, zero value otherwise.
func (o *InlineObject1020) GetNumber() AnyOfobject {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1020) GetNumberOk() (AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject1020) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject1020) SetNumber(v AnyOfobject) {
	o.Number = &v
}

// SetNumberExplicitNull (un)sets Number to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Number value is set to nil even if false is passed
func (o *InlineObject1020) SetNumberExplicitNull(b bool) {
	o.Number = nil
	o.isExplicitNullNumber = b
}
// GetRef returns the Ref field if non-nil, zero value otherwise.
func (o *InlineObject1020) GetRef() AnyOfobject {
	if o == nil || o.Ref == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1020) GetRefOk() (AnyOfobject, bool) {
	if o == nil || o.Ref == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *InlineObject1020) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given AnyOfobject and assigns it to the Ref field.
func (o *InlineObject1020) SetRef(v AnyOfobject) {
	o.Ref = &v
}

// SetRefExplicitNull (un)sets Ref to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Ref value is set to nil even if false is passed
func (o *InlineObject1020) SetRefExplicitNull(b bool) {
	o.Ref = nil
	o.isExplicitNullRef = b
}
// GetOrder returns the Order field if non-nil, zero value otherwise.
func (o *InlineObject1020) GetOrder() AnyOfobject {
	if o == nil || o.Order == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1020) GetOrderOk() (AnyOfobject, bool) {
	if o == nil || o.Order == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *InlineObject1020) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AnyOfobject and assigns it to the Order field.
func (o *InlineObject1020) SetOrder(v AnyOfobject) {
	o.Order = &v
}

// SetOrderExplicitNull (un)sets Order to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Order value is set to nil even if false is passed
func (o *InlineObject1020) SetOrderExplicitNull(b bool) {
	o.Order = nil
	o.isExplicitNullOrder = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1020) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number == nil {
		if o.isExplicitNullNumber {
			toSerialize["number"] = o.Number
		}
	} else {
		toSerialize["number"] = o.Number
	}
	if o.Ref == nil {
		if o.isExplicitNullRef {
			toSerialize["ref"] = o.Ref
		}
	} else {
		toSerialize["ref"] = o.Ref
	}
	if o.Order == nil {
		if o.isExplicitNullOrder {
			toSerialize["order"] = o.Order
		}
	} else {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}


