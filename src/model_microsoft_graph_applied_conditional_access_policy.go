/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphAppliedConditionalAccessPolicy struct for MicrosoftGraphAppliedConditionalAccessPolicy
type MicrosoftGraphAppliedConditionalAccessPolicy struct {
	Id *string `json:"id,omitempty"`
	isExplicitNullId bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	EnforcedGrantControls *[]string `json:"enforcedGrantControls,omitempty"`

	EnforcedSessionControls *[]string `json:"enforcedSessionControls,omitempty"`

	Result *AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult `json:"result,omitempty"`
	isExplicitNullResult bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetId(v string) {
	o.Id = &v
}

// SetIdExplicitNull (un)sets Id to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Id value is set to nil even if false is passed
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetIdExplicitNull(b bool) {
	o.Id = nil
	o.isExplicitNullId = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetEnforcedGrantControls returns the EnforcedGrantControls field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedGrantControls() []string {
	if o == nil || o.EnforcedGrantControls == nil {
		var ret []string
		return ret
	}
	return *o.EnforcedGrantControls
}

// GetEnforcedGrantControlsOk returns a tuple with the EnforcedGrantControls field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedGrantControlsOk() ([]string, bool) {
	if o == nil || o.EnforcedGrantControls == nil {
		var ret []string
		return ret, false
	}
	return *o.EnforcedGrantControls, true
}

// HasEnforcedGrantControls returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasEnforcedGrantControls() bool {
	if o != nil && o.EnforcedGrantControls != nil {
		return true
	}

	return false
}

// SetEnforcedGrantControls gets a reference to the given []string and assigns it to the EnforcedGrantControls field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetEnforcedGrantControls(v []string) {
	o.EnforcedGrantControls = &v
}

// GetEnforcedSessionControls returns the EnforcedSessionControls field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedSessionControls() []string {
	if o == nil || o.EnforcedSessionControls == nil {
		var ret []string
		return ret
	}
	return *o.EnforcedSessionControls
}

// GetEnforcedSessionControlsOk returns a tuple with the EnforcedSessionControls field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetEnforcedSessionControlsOk() ([]string, bool) {
	if o == nil || o.EnforcedSessionControls == nil {
		var ret []string
		return ret, false
	}
	return *o.EnforcedSessionControls, true
}

// HasEnforcedSessionControls returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasEnforcedSessionControls() bool {
	if o != nil && o.EnforcedSessionControls != nil {
		return true
	}

	return false
}

// SetEnforcedSessionControls gets a reference to the given []string and assigns it to the EnforcedSessionControls field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetEnforcedSessionControls(v []string) {
	o.EnforcedSessionControls = &v
}

// GetResult returns the Result field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetResult() AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult {
	if o == nil || o.Result == nil {
		var ret AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) GetResultOk() (AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult, bool) {
	if o == nil || o.Result == nil {
		var ret AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult
		return ret, false
	}
	return *o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult and assigns it to the Result field.
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetResult(v AnyOfmicrosoftGraphAppliedConditionalAccessPolicyResult) {
	o.Result = &v
}

// SetResultExplicitNull (un)sets Result to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Result value is set to nil even if false is passed
func (o *MicrosoftGraphAppliedConditionalAccessPolicy) SetResultExplicitNull(b bool) {
	o.Result = nil
	o.isExplicitNullResult = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAppliedConditionalAccessPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id == nil {
		if o.isExplicitNullId {
			toSerialize["id"] = o.Id
		}
	} else {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.EnforcedGrantControls != nil {
		toSerialize["enforcedGrantControls"] = o.EnforcedGrantControls
	}
	if o.EnforcedSessionControls != nil {
		toSerialize["enforcedSessionControls"] = o.EnforcedSessionControls
	}
	if o.Result == nil {
		if o.isExplicitNullResult {
			toSerialize["result"] = o.Result
		}
	} else {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}


