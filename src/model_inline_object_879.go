/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject879 struct for InlineObject879
type InlineObject879 struct {
	Number *AnyOfobject `json:"number,omitempty"`
	isExplicitNullNumber bool `json:"-"`
	Decimals *AnyOfobject `json:"decimals,omitempty"`
	isExplicitNullDecimals bool `json:"-"`
	NoCommas *AnyOfobject `json:"noCommas,omitempty"`
	isExplicitNullNoCommas bool `json:"-"`
}

// GetNumber returns the Number field if non-nil, zero value otherwise.
func (o *InlineObject879) GetNumber() AnyOfobject {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject879) GetNumberOk() (AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject879) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject879) SetNumber(v AnyOfobject) {
	o.Number = &v
}

// SetNumberExplicitNull (un)sets Number to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Number value is set to nil even if false is passed
func (o *InlineObject879) SetNumberExplicitNull(b bool) {
	o.Number = nil
	o.isExplicitNullNumber = b
}
// GetDecimals returns the Decimals field if non-nil, zero value otherwise.
func (o *InlineObject879) GetDecimals() AnyOfobject {
	if o == nil || o.Decimals == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject879) GetDecimalsOk() (AnyOfobject, bool) {
	if o == nil || o.Decimals == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *InlineObject879) HasDecimals() bool {
	if o != nil && o.Decimals != nil {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given AnyOfobject and assigns it to the Decimals field.
func (o *InlineObject879) SetDecimals(v AnyOfobject) {
	o.Decimals = &v
}

// SetDecimalsExplicitNull (un)sets Decimals to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Decimals value is set to nil even if false is passed
func (o *InlineObject879) SetDecimalsExplicitNull(b bool) {
	o.Decimals = nil
	o.isExplicitNullDecimals = b
}
// GetNoCommas returns the NoCommas field if non-nil, zero value otherwise.
func (o *InlineObject879) GetNoCommas() AnyOfobject {
	if o == nil || o.NoCommas == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.NoCommas
}

// GetNoCommasOk returns a tuple with the NoCommas field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject879) GetNoCommasOk() (AnyOfobject, bool) {
	if o == nil || o.NoCommas == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.NoCommas, true
}

// HasNoCommas returns a boolean if a field has been set.
func (o *InlineObject879) HasNoCommas() bool {
	if o != nil && o.NoCommas != nil {
		return true
	}

	return false
}

// SetNoCommas gets a reference to the given AnyOfobject and assigns it to the NoCommas field.
func (o *InlineObject879) SetNoCommas(v AnyOfobject) {
	o.NoCommas = &v
}

// SetNoCommasExplicitNull (un)sets NoCommas to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NoCommas value is set to nil even if false is passed
func (o *InlineObject879) SetNoCommasExplicitNull(b bool) {
	o.NoCommas = nil
	o.isExplicitNullNoCommas = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject879) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number == nil {
		if o.isExplicitNullNumber {
			toSerialize["number"] = o.Number
		}
	} else {
		toSerialize["number"] = o.Number
	}
	if o.Decimals == nil {
		if o.isExplicitNullDecimals {
			toSerialize["decimals"] = o.Decimals
		}
	} else {
		toSerialize["decimals"] = o.Decimals
	}
	if o.NoCommas == nil {
		if o.isExplicitNullNoCommas {
			toSerialize["noCommas"] = o.NoCommas
		}
	} else {
		toSerialize["noCommas"] = o.NoCommas
	}
	return json.Marshal(toSerialize)
}


