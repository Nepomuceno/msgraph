/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject803 struct for InlineObject803
type InlineObject803 struct {
	Alpha *AnyOfobject `json:"alpha,omitempty"`
	isExplicitNullAlpha bool `json:"-"`
	StandardDev *AnyOfobject `json:"standardDev,omitempty"`
	isExplicitNullStandardDev bool `json:"-"`
	Size *AnyOfobject `json:"size,omitempty"`
	isExplicitNullSize bool `json:"-"`
}

// GetAlpha returns the Alpha field if non-nil, zero value otherwise.
func (o *InlineObject803) GetAlpha() AnyOfobject {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject803) GetAlphaOk() (AnyOfobject, bool) {
	if o == nil || o.Alpha == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineObject803) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given AnyOfobject and assigns it to the Alpha field.
func (o *InlineObject803) SetAlpha(v AnyOfobject) {
	o.Alpha = &v
}

// SetAlphaExplicitNull (un)sets Alpha to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Alpha value is set to nil even if false is passed
func (o *InlineObject803) SetAlphaExplicitNull(b bool) {
	o.Alpha = nil
	o.isExplicitNullAlpha = b
}
// GetStandardDev returns the StandardDev field if non-nil, zero value otherwise.
func (o *InlineObject803) GetStandardDev() AnyOfobject {
	if o == nil || o.StandardDev == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.StandardDev
}

// GetStandardDevOk returns a tuple with the StandardDev field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject803) GetStandardDevOk() (AnyOfobject, bool) {
	if o == nil || o.StandardDev == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.StandardDev, true
}

// HasStandardDev returns a boolean if a field has been set.
func (o *InlineObject803) HasStandardDev() bool {
	if o != nil && o.StandardDev != nil {
		return true
	}

	return false
}

// SetStandardDev gets a reference to the given AnyOfobject and assigns it to the StandardDev field.
func (o *InlineObject803) SetStandardDev(v AnyOfobject) {
	o.StandardDev = &v
}

// SetStandardDevExplicitNull (un)sets StandardDev to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StandardDev value is set to nil even if false is passed
func (o *InlineObject803) SetStandardDevExplicitNull(b bool) {
	o.StandardDev = nil
	o.isExplicitNullStandardDev = b
}
// GetSize returns the Size field if non-nil, zero value otherwise.
func (o *InlineObject803) GetSize() AnyOfobject {
	if o == nil || o.Size == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject803) GetSizeOk() (AnyOfobject, bool) {
	if o == nil || o.Size == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *InlineObject803) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given AnyOfobject and assigns it to the Size field.
func (o *InlineObject803) SetSize(v AnyOfobject) {
	o.Size = &v
}

// SetSizeExplicitNull (un)sets Size to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Size value is set to nil even if false is passed
func (o *InlineObject803) SetSizeExplicitNull(b bool) {
	o.Size = nil
	o.isExplicitNullSize = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject803) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alpha == nil {
		if o.isExplicitNullAlpha {
			toSerialize["alpha"] = o.Alpha
		}
	} else {
		toSerialize["alpha"] = o.Alpha
	}
	if o.StandardDev == nil {
		if o.isExplicitNullStandardDev {
			toSerialize["standardDev"] = o.StandardDev
		}
	} else {
		toSerialize["standardDev"] = o.StandardDev
	}
	if o.Size == nil {
		if o.isExplicitNullSize {
			toSerialize["size"] = o.Size
		}
	} else {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}


