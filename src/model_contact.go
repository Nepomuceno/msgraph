/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// Contact struct for Contact
type Contact struct {
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	isExplicitNullParentFolderId bool `json:"-"`
	Birthday *time.Time `json:"birthday,omitempty"`
	isExplicitNullBirthday bool `json:"-"`
	FileAs *string `json:"fileAs,omitempty"`
	isExplicitNullFileAs bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	GivenName *string `json:"givenName,omitempty"`
	isExplicitNullGivenName bool `json:"-"`
	Initials *string `json:"initials,omitempty"`
	isExplicitNullInitials bool `json:"-"`
	MiddleName *string `json:"middleName,omitempty"`
	isExplicitNullMiddleName bool `json:"-"`
	NickName *string `json:"nickName,omitempty"`
	isExplicitNullNickName bool `json:"-"`
	Surname *string `json:"surname,omitempty"`
	isExplicitNullSurname bool `json:"-"`
	Title *string `json:"title,omitempty"`
	isExplicitNullTitle bool `json:"-"`
	YomiGivenName *string `json:"yomiGivenName,omitempty"`
	isExplicitNullYomiGivenName bool `json:"-"`
	YomiSurname *string `json:"yomiSurname,omitempty"`
	isExplicitNullYomiSurname bool `json:"-"`
	YomiCompanyName *string `json:"yomiCompanyName,omitempty"`
	isExplicitNullYomiCompanyName bool `json:"-"`
	Generation *string `json:"generation,omitempty"`
	isExplicitNullGeneration bool `json:"-"`
	EmailAddresses *[]AnyOfmicrosoftGraphEmailAddress `json:"emailAddresses,omitempty"`

	ImAddresses *[]string `json:"imAddresses,omitempty"`

	JobTitle *string `json:"jobTitle,omitempty"`
	isExplicitNullJobTitle bool `json:"-"`
	CompanyName *string `json:"companyName,omitempty"`
	isExplicitNullCompanyName bool `json:"-"`
	Department *string `json:"department,omitempty"`
	isExplicitNullDepartment bool `json:"-"`
	OfficeLocation *string `json:"officeLocation,omitempty"`
	isExplicitNullOfficeLocation bool `json:"-"`
	Profession *string `json:"profession,omitempty"`
	isExplicitNullProfession bool `json:"-"`
	BusinessHomePage *string `json:"businessHomePage,omitempty"`
	isExplicitNullBusinessHomePage bool `json:"-"`
	AssistantName *string `json:"assistantName,omitempty"`
	isExplicitNullAssistantName bool `json:"-"`
	Manager *string `json:"manager,omitempty"`
	isExplicitNullManager bool `json:"-"`
	HomePhones *[]string `json:"homePhones,omitempty"`

	MobilePhone *string `json:"mobilePhone,omitempty"`
	isExplicitNullMobilePhone bool `json:"-"`
	BusinessPhones *[]string `json:"businessPhones,omitempty"`

	HomeAddress *AnyOfmicrosoftGraphPhysicalAddress `json:"homeAddress,omitempty"`
	isExplicitNullHomeAddress bool `json:"-"`
	BusinessAddress *AnyOfmicrosoftGraphPhysicalAddress `json:"businessAddress,omitempty"`
	isExplicitNullBusinessAddress bool `json:"-"`
	OtherAddress *AnyOfmicrosoftGraphPhysicalAddress `json:"otherAddress,omitempty"`
	isExplicitNullOtherAddress bool `json:"-"`
	SpouseName *string `json:"spouseName,omitempty"`
	isExplicitNullSpouseName bool `json:"-"`
	PersonalNotes *string `json:"personalNotes,omitempty"`
	isExplicitNullPersonalNotes bool `json:"-"`
	Children *[]string `json:"children,omitempty"`

	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`

	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`

	Photo *AnyOfmicrosoftGraphProfilePhoto `json:"photo,omitempty"`
	isExplicitNullPhoto bool `json:"-"`
	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

}

// GetParentFolderId returns the ParentFolderId field if non-nil, zero value otherwise.
func (o *Contact) GetParentFolderId() string {
	if o == nil || o.ParentFolderId == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetParentFolderIdOk() (string, bool) {
	if o == nil || o.ParentFolderId == nil {
		var ret string
		return ret, false
	}
	return *o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *Contact) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId != nil {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *Contact) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

// SetParentFolderIdExplicitNull (un)sets ParentFolderId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ParentFolderId value is set to nil even if false is passed
func (o *Contact) SetParentFolderIdExplicitNull(b bool) {
	o.ParentFolderId = nil
	o.isExplicitNullParentFolderId = b
}
// GetBirthday returns the Birthday field if non-nil, zero value otherwise.
func (o *Contact) GetBirthday() time.Time {
	if o == nil || o.Birthday == nil {
		var ret time.Time
		return ret
	}
	return *o.Birthday
}

// GetBirthdayOk returns a tuple with the Birthday field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBirthdayOk() (time.Time, bool) {
	if o == nil || o.Birthday == nil {
		var ret time.Time
		return ret, false
	}
	return *o.Birthday, true
}

// HasBirthday returns a boolean if a field has been set.
func (o *Contact) HasBirthday() bool {
	if o != nil && o.Birthday != nil {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given time.Time and assigns it to the Birthday field.
func (o *Contact) SetBirthday(v time.Time) {
	o.Birthday = &v
}

// SetBirthdayExplicitNull (un)sets Birthday to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Birthday value is set to nil even if false is passed
func (o *Contact) SetBirthdayExplicitNull(b bool) {
	o.Birthday = nil
	o.isExplicitNullBirthday = b
}
// GetFileAs returns the FileAs field if non-nil, zero value otherwise.
func (o *Contact) GetFileAs() string {
	if o == nil || o.FileAs == nil {
		var ret string
		return ret
	}
	return *o.FileAs
}

// GetFileAsOk returns a tuple with the FileAs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetFileAsOk() (string, bool) {
	if o == nil || o.FileAs == nil {
		var ret string
		return ret, false
	}
	return *o.FileAs, true
}

// HasFileAs returns a boolean if a field has been set.
func (o *Contact) HasFileAs() bool {
	if o != nil && o.FileAs != nil {
		return true
	}

	return false
}

// SetFileAs gets a reference to the given string and assigns it to the FileAs field.
func (o *Contact) SetFileAs(v string) {
	o.FileAs = &v
}

// SetFileAsExplicitNull (un)sets FileAs to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FileAs value is set to nil even if false is passed
func (o *Contact) SetFileAsExplicitNull(b bool) {
	o.FileAs = nil
	o.isExplicitNullFileAs = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *Contact) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Contact) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Contact) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *Contact) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetGivenName returns the GivenName field if non-nil, zero value otherwise.
func (o *Contact) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetGivenNameOk() (string, bool) {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret, false
	}
	return *o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *Contact) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *Contact) SetGivenName(v string) {
	o.GivenName = &v
}

// SetGivenNameExplicitNull (un)sets GivenName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GivenName value is set to nil even if false is passed
func (o *Contact) SetGivenNameExplicitNull(b bool) {
	o.GivenName = nil
	o.isExplicitNullGivenName = b
}
// GetInitials returns the Initials field if non-nil, zero value otherwise.
func (o *Contact) GetInitials() string {
	if o == nil || o.Initials == nil {
		var ret string
		return ret
	}
	return *o.Initials
}

// GetInitialsOk returns a tuple with the Initials field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetInitialsOk() (string, bool) {
	if o == nil || o.Initials == nil {
		var ret string
		return ret, false
	}
	return *o.Initials, true
}

// HasInitials returns a boolean if a field has been set.
func (o *Contact) HasInitials() bool {
	if o != nil && o.Initials != nil {
		return true
	}

	return false
}

// SetInitials gets a reference to the given string and assigns it to the Initials field.
func (o *Contact) SetInitials(v string) {
	o.Initials = &v
}

// SetInitialsExplicitNull (un)sets Initials to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Initials value is set to nil even if false is passed
func (o *Contact) SetInitialsExplicitNull(b bool) {
	o.Initials = nil
	o.isExplicitNullInitials = b
}
// GetMiddleName returns the MiddleName field if non-nil, zero value otherwise.
func (o *Contact) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetMiddleNameOk() (string, bool) {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret, false
	}
	return *o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *Contact) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *Contact) SetMiddleName(v string) {
	o.MiddleName = &v
}

// SetMiddleNameExplicitNull (un)sets MiddleName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MiddleName value is set to nil even if false is passed
func (o *Contact) SetMiddleNameExplicitNull(b bool) {
	o.MiddleName = nil
	o.isExplicitNullMiddleName = b
}
// GetNickName returns the NickName field if non-nil, zero value otherwise.
func (o *Contact) GetNickName() string {
	if o == nil || o.NickName == nil {
		var ret string
		return ret
	}
	return *o.NickName
}

// GetNickNameOk returns a tuple with the NickName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetNickNameOk() (string, bool) {
	if o == nil || o.NickName == nil {
		var ret string
		return ret, false
	}
	return *o.NickName, true
}

// HasNickName returns a boolean if a field has been set.
func (o *Contact) HasNickName() bool {
	if o != nil && o.NickName != nil {
		return true
	}

	return false
}

// SetNickName gets a reference to the given string and assigns it to the NickName field.
func (o *Contact) SetNickName(v string) {
	o.NickName = &v
}

// SetNickNameExplicitNull (un)sets NickName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NickName value is set to nil even if false is passed
func (o *Contact) SetNickNameExplicitNull(b bool) {
	o.NickName = nil
	o.isExplicitNullNickName = b
}
// GetSurname returns the Surname field if non-nil, zero value otherwise.
func (o *Contact) GetSurname() string {
	if o == nil || o.Surname == nil {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSurnameOk() (string, bool) {
	if o == nil || o.Surname == nil {
		var ret string
		return ret, false
	}
	return *o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *Contact) HasSurname() bool {
	if o != nil && o.Surname != nil {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *Contact) SetSurname(v string) {
	o.Surname = &v
}

// SetSurnameExplicitNull (un)sets Surname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Surname value is set to nil even if false is passed
func (o *Contact) SetSurnameExplicitNull(b bool) {
	o.Surname = nil
	o.isExplicitNullSurname = b
}
// GetTitle returns the Title field if non-nil, zero value otherwise.
func (o *Contact) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTitleOk() (string, bool) {
	if o == nil || o.Title == nil {
		var ret string
		return ret, false
	}
	return *o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Contact) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Contact) SetTitle(v string) {
	o.Title = &v
}

// SetTitleExplicitNull (un)sets Title to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Title value is set to nil even if false is passed
func (o *Contact) SetTitleExplicitNull(b bool) {
	o.Title = nil
	o.isExplicitNullTitle = b
}
// GetYomiGivenName returns the YomiGivenName field if non-nil, zero value otherwise.
func (o *Contact) GetYomiGivenName() string {
	if o == nil || o.YomiGivenName == nil {
		var ret string
		return ret
	}
	return *o.YomiGivenName
}

// GetYomiGivenNameOk returns a tuple with the YomiGivenName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetYomiGivenNameOk() (string, bool) {
	if o == nil || o.YomiGivenName == nil {
		var ret string
		return ret, false
	}
	return *o.YomiGivenName, true
}

// HasYomiGivenName returns a boolean if a field has been set.
func (o *Contact) HasYomiGivenName() bool {
	if o != nil && o.YomiGivenName != nil {
		return true
	}

	return false
}

// SetYomiGivenName gets a reference to the given string and assigns it to the YomiGivenName field.
func (o *Contact) SetYomiGivenName(v string) {
	o.YomiGivenName = &v
}

// SetYomiGivenNameExplicitNull (un)sets YomiGivenName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The YomiGivenName value is set to nil even if false is passed
func (o *Contact) SetYomiGivenNameExplicitNull(b bool) {
	o.YomiGivenName = nil
	o.isExplicitNullYomiGivenName = b
}
// GetYomiSurname returns the YomiSurname field if non-nil, zero value otherwise.
func (o *Contact) GetYomiSurname() string {
	if o == nil || o.YomiSurname == nil {
		var ret string
		return ret
	}
	return *o.YomiSurname
}

// GetYomiSurnameOk returns a tuple with the YomiSurname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetYomiSurnameOk() (string, bool) {
	if o == nil || o.YomiSurname == nil {
		var ret string
		return ret, false
	}
	return *o.YomiSurname, true
}

// HasYomiSurname returns a boolean if a field has been set.
func (o *Contact) HasYomiSurname() bool {
	if o != nil && o.YomiSurname != nil {
		return true
	}

	return false
}

// SetYomiSurname gets a reference to the given string and assigns it to the YomiSurname field.
func (o *Contact) SetYomiSurname(v string) {
	o.YomiSurname = &v
}

// SetYomiSurnameExplicitNull (un)sets YomiSurname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The YomiSurname value is set to nil even if false is passed
func (o *Contact) SetYomiSurnameExplicitNull(b bool) {
	o.YomiSurname = nil
	o.isExplicitNullYomiSurname = b
}
// GetYomiCompanyName returns the YomiCompanyName field if non-nil, zero value otherwise.
func (o *Contact) GetYomiCompanyName() string {
	if o == nil || o.YomiCompanyName == nil {
		var ret string
		return ret
	}
	return *o.YomiCompanyName
}

// GetYomiCompanyNameOk returns a tuple with the YomiCompanyName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetYomiCompanyNameOk() (string, bool) {
	if o == nil || o.YomiCompanyName == nil {
		var ret string
		return ret, false
	}
	return *o.YomiCompanyName, true
}

// HasYomiCompanyName returns a boolean if a field has been set.
func (o *Contact) HasYomiCompanyName() bool {
	if o != nil && o.YomiCompanyName != nil {
		return true
	}

	return false
}

// SetYomiCompanyName gets a reference to the given string and assigns it to the YomiCompanyName field.
func (o *Contact) SetYomiCompanyName(v string) {
	o.YomiCompanyName = &v
}

// SetYomiCompanyNameExplicitNull (un)sets YomiCompanyName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The YomiCompanyName value is set to nil even if false is passed
func (o *Contact) SetYomiCompanyNameExplicitNull(b bool) {
	o.YomiCompanyName = nil
	o.isExplicitNullYomiCompanyName = b
}
// GetGeneration returns the Generation field if non-nil, zero value otherwise.
func (o *Contact) GetGeneration() string {
	if o == nil || o.Generation == nil {
		var ret string
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetGenerationOk() (string, bool) {
	if o == nil || o.Generation == nil {
		var ret string
		return ret, false
	}
	return *o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *Contact) HasGeneration() bool {
	if o != nil && o.Generation != nil {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given string and assigns it to the Generation field.
func (o *Contact) SetGeneration(v string) {
	o.Generation = &v
}

// SetGenerationExplicitNull (un)sets Generation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Generation value is set to nil even if false is passed
func (o *Contact) SetGenerationExplicitNull(b bool) {
	o.Generation = nil
	o.isExplicitNullGeneration = b
}
// GetEmailAddresses returns the EmailAddresses field if non-nil, zero value otherwise.
func (o *Contact) GetEmailAddresses() []AnyOfmicrosoftGraphEmailAddress {
	if o == nil || o.EmailAddresses == nil {
		var ret []AnyOfmicrosoftGraphEmailAddress
		return ret
	}
	return *o.EmailAddresses
}

// GetEmailAddressesOk returns a tuple with the EmailAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetEmailAddressesOk() ([]AnyOfmicrosoftGraphEmailAddress, bool) {
	if o == nil || o.EmailAddresses == nil {
		var ret []AnyOfmicrosoftGraphEmailAddress
		return ret, false
	}
	return *o.EmailAddresses, true
}

// HasEmailAddresses returns a boolean if a field has been set.
func (o *Contact) HasEmailAddresses() bool {
	if o != nil && o.EmailAddresses != nil {
		return true
	}

	return false
}

// SetEmailAddresses gets a reference to the given []AnyOfmicrosoftGraphEmailAddress and assigns it to the EmailAddresses field.
func (o *Contact) SetEmailAddresses(v []AnyOfmicrosoftGraphEmailAddress) {
	o.EmailAddresses = &v
}

// GetImAddresses returns the ImAddresses field if non-nil, zero value otherwise.
func (o *Contact) GetImAddresses() []string {
	if o == nil || o.ImAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ImAddresses
}

// GetImAddressesOk returns a tuple with the ImAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetImAddressesOk() ([]string, bool) {
	if o == nil || o.ImAddresses == nil {
		var ret []string
		return ret, false
	}
	return *o.ImAddresses, true
}

// HasImAddresses returns a boolean if a field has been set.
func (o *Contact) HasImAddresses() bool {
	if o != nil && o.ImAddresses != nil {
		return true
	}

	return false
}

// SetImAddresses gets a reference to the given []string and assigns it to the ImAddresses field.
func (o *Contact) SetImAddresses(v []string) {
	o.ImAddresses = &v
}

// GetJobTitle returns the JobTitle field if non-nil, zero value otherwise.
func (o *Contact) GetJobTitle() string {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetJobTitleOk() (string, bool) {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret, false
	}
	return *o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *Contact) HasJobTitle() bool {
	if o != nil && o.JobTitle != nil {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *Contact) SetJobTitle(v string) {
	o.JobTitle = &v
}

// SetJobTitleExplicitNull (un)sets JobTitle to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The JobTitle value is set to nil even if false is passed
func (o *Contact) SetJobTitleExplicitNull(b bool) {
	o.JobTitle = nil
	o.isExplicitNullJobTitle = b
}
// GetCompanyName returns the CompanyName field if non-nil, zero value otherwise.
func (o *Contact) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCompanyNameOk() (string, bool) {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret, false
	}
	return *o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Contact) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *Contact) SetCompanyName(v string) {
	o.CompanyName = &v
}

// SetCompanyNameExplicitNull (un)sets CompanyName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CompanyName value is set to nil even if false is passed
func (o *Contact) SetCompanyNameExplicitNull(b bool) {
	o.CompanyName = nil
	o.isExplicitNullCompanyName = b
}
// GetDepartment returns the Department field if non-nil, zero value otherwise.
func (o *Contact) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDepartmentOk() (string, bool) {
	if o == nil || o.Department == nil {
		var ret string
		return ret, false
	}
	return *o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *Contact) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *Contact) SetDepartment(v string) {
	o.Department = &v
}

// SetDepartmentExplicitNull (un)sets Department to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Department value is set to nil even if false is passed
func (o *Contact) SetDepartmentExplicitNull(b bool) {
	o.Department = nil
	o.isExplicitNullDepartment = b
}
// GetOfficeLocation returns the OfficeLocation field if non-nil, zero value otherwise.
func (o *Contact) GetOfficeLocation() string {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret
	}
	return *o.OfficeLocation
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetOfficeLocationOk() (string, bool) {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret, false
	}
	return *o.OfficeLocation, true
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *Contact) HasOfficeLocation() bool {
	if o != nil && o.OfficeLocation != nil {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given string and assigns it to the OfficeLocation field.
func (o *Contact) SetOfficeLocation(v string) {
	o.OfficeLocation = &v
}

// SetOfficeLocationExplicitNull (un)sets OfficeLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OfficeLocation value is set to nil even if false is passed
func (o *Contact) SetOfficeLocationExplicitNull(b bool) {
	o.OfficeLocation = nil
	o.isExplicitNullOfficeLocation = b
}
// GetProfession returns the Profession field if non-nil, zero value otherwise.
func (o *Contact) GetProfession() string {
	if o == nil || o.Profession == nil {
		var ret string
		return ret
	}
	return *o.Profession
}

// GetProfessionOk returns a tuple with the Profession field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetProfessionOk() (string, bool) {
	if o == nil || o.Profession == nil {
		var ret string
		return ret, false
	}
	return *o.Profession, true
}

// HasProfession returns a boolean if a field has been set.
func (o *Contact) HasProfession() bool {
	if o != nil && o.Profession != nil {
		return true
	}

	return false
}

// SetProfession gets a reference to the given string and assigns it to the Profession field.
func (o *Contact) SetProfession(v string) {
	o.Profession = &v
}

// SetProfessionExplicitNull (un)sets Profession to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Profession value is set to nil even if false is passed
func (o *Contact) SetProfessionExplicitNull(b bool) {
	o.Profession = nil
	o.isExplicitNullProfession = b
}
// GetBusinessHomePage returns the BusinessHomePage field if non-nil, zero value otherwise.
func (o *Contact) GetBusinessHomePage() string {
	if o == nil || o.BusinessHomePage == nil {
		var ret string
		return ret
	}
	return *o.BusinessHomePage
}

// GetBusinessHomePageOk returns a tuple with the BusinessHomePage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBusinessHomePageOk() (string, bool) {
	if o == nil || o.BusinessHomePage == nil {
		var ret string
		return ret, false
	}
	return *o.BusinessHomePage, true
}

// HasBusinessHomePage returns a boolean if a field has been set.
func (o *Contact) HasBusinessHomePage() bool {
	if o != nil && o.BusinessHomePage != nil {
		return true
	}

	return false
}

// SetBusinessHomePage gets a reference to the given string and assigns it to the BusinessHomePage field.
func (o *Contact) SetBusinessHomePage(v string) {
	o.BusinessHomePage = &v
}

// SetBusinessHomePageExplicitNull (un)sets BusinessHomePage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BusinessHomePage value is set to nil even if false is passed
func (o *Contact) SetBusinessHomePageExplicitNull(b bool) {
	o.BusinessHomePage = nil
	o.isExplicitNullBusinessHomePage = b
}
// GetAssistantName returns the AssistantName field if non-nil, zero value otherwise.
func (o *Contact) GetAssistantName() string {
	if o == nil || o.AssistantName == nil {
		var ret string
		return ret
	}
	return *o.AssistantName
}

// GetAssistantNameOk returns a tuple with the AssistantName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAssistantNameOk() (string, bool) {
	if o == nil || o.AssistantName == nil {
		var ret string
		return ret, false
	}
	return *o.AssistantName, true
}

// HasAssistantName returns a boolean if a field has been set.
func (o *Contact) HasAssistantName() bool {
	if o != nil && o.AssistantName != nil {
		return true
	}

	return false
}

// SetAssistantName gets a reference to the given string and assigns it to the AssistantName field.
func (o *Contact) SetAssistantName(v string) {
	o.AssistantName = &v
}

// SetAssistantNameExplicitNull (un)sets AssistantName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AssistantName value is set to nil even if false is passed
func (o *Contact) SetAssistantNameExplicitNull(b bool) {
	o.AssistantName = nil
	o.isExplicitNullAssistantName = b
}
// GetManager returns the Manager field if non-nil, zero value otherwise.
func (o *Contact) GetManager() string {
	if o == nil || o.Manager == nil {
		var ret string
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetManagerOk() (string, bool) {
	if o == nil || o.Manager == nil {
		var ret string
		return ret, false
	}
	return *o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *Contact) HasManager() bool {
	if o != nil && o.Manager != nil {
		return true
	}

	return false
}

// SetManager gets a reference to the given string and assigns it to the Manager field.
func (o *Contact) SetManager(v string) {
	o.Manager = &v
}

// SetManagerExplicitNull (un)sets Manager to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Manager value is set to nil even if false is passed
func (o *Contact) SetManagerExplicitNull(b bool) {
	o.Manager = nil
	o.isExplicitNullManager = b
}
// GetHomePhones returns the HomePhones field if non-nil, zero value otherwise.
func (o *Contact) GetHomePhones() []string {
	if o == nil || o.HomePhones == nil {
		var ret []string
		return ret
	}
	return *o.HomePhones
}

// GetHomePhonesOk returns a tuple with the HomePhones field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetHomePhonesOk() ([]string, bool) {
	if o == nil || o.HomePhones == nil {
		var ret []string
		return ret, false
	}
	return *o.HomePhones, true
}

// HasHomePhones returns a boolean if a field has been set.
func (o *Contact) HasHomePhones() bool {
	if o != nil && o.HomePhones != nil {
		return true
	}

	return false
}

// SetHomePhones gets a reference to the given []string and assigns it to the HomePhones field.
func (o *Contact) SetHomePhones(v []string) {
	o.HomePhones = &v
}

// GetMobilePhone returns the MobilePhone field if non-nil, zero value otherwise.
func (o *Contact) GetMobilePhone() string {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetMobilePhoneOk() (string, bool) {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret, false
	}
	return *o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *Contact) HasMobilePhone() bool {
	if o != nil && o.MobilePhone != nil {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *Contact) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// SetMobilePhoneExplicitNull (un)sets MobilePhone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MobilePhone value is set to nil even if false is passed
func (o *Contact) SetMobilePhoneExplicitNull(b bool) {
	o.MobilePhone = nil
	o.isExplicitNullMobilePhone = b
}
// GetBusinessPhones returns the BusinessPhones field if non-nil, zero value otherwise.
func (o *Contact) GetBusinessPhones() []string {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBusinessPhonesOk() ([]string, bool) {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret, false
	}
	return *o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *Contact) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []string and assigns it to the BusinessPhones field.
func (o *Contact) SetBusinessPhones(v []string) {
	o.BusinessPhones = &v
}

// GetHomeAddress returns the HomeAddress field if non-nil, zero value otherwise.
func (o *Contact) GetHomeAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.HomeAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.HomeAddress
}

// GetHomeAddressOk returns a tuple with the HomeAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetHomeAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.HomeAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.HomeAddress, true
}

// HasHomeAddress returns a boolean if a field has been set.
func (o *Contact) HasHomeAddress() bool {
	if o != nil && o.HomeAddress != nil {
		return true
	}

	return false
}

// SetHomeAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the HomeAddress field.
func (o *Contact) SetHomeAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.HomeAddress = &v
}

// SetHomeAddressExplicitNull (un)sets HomeAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HomeAddress value is set to nil even if false is passed
func (o *Contact) SetHomeAddressExplicitNull(b bool) {
	o.HomeAddress = nil
	o.isExplicitNullHomeAddress = b
}
// GetBusinessAddress returns the BusinessAddress field if non-nil, zero value otherwise.
func (o *Contact) GetBusinessAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.BusinessAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.BusinessAddress
}

// GetBusinessAddressOk returns a tuple with the BusinessAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBusinessAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.BusinessAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.BusinessAddress, true
}

// HasBusinessAddress returns a boolean if a field has been set.
func (o *Contact) HasBusinessAddress() bool {
	if o != nil && o.BusinessAddress != nil {
		return true
	}

	return false
}

// SetBusinessAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the BusinessAddress field.
func (o *Contact) SetBusinessAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.BusinessAddress = &v
}

// SetBusinessAddressExplicitNull (un)sets BusinessAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BusinessAddress value is set to nil even if false is passed
func (o *Contact) SetBusinessAddressExplicitNull(b bool) {
	o.BusinessAddress = nil
	o.isExplicitNullBusinessAddress = b
}
// GetOtherAddress returns the OtherAddress field if non-nil, zero value otherwise.
func (o *Contact) GetOtherAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.OtherAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.OtherAddress
}

// GetOtherAddressOk returns a tuple with the OtherAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetOtherAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.OtherAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.OtherAddress, true
}

// HasOtherAddress returns a boolean if a field has been set.
func (o *Contact) HasOtherAddress() bool {
	if o != nil && o.OtherAddress != nil {
		return true
	}

	return false
}

// SetOtherAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the OtherAddress field.
func (o *Contact) SetOtherAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.OtherAddress = &v
}

// SetOtherAddressExplicitNull (un)sets OtherAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OtherAddress value is set to nil even if false is passed
func (o *Contact) SetOtherAddressExplicitNull(b bool) {
	o.OtherAddress = nil
	o.isExplicitNullOtherAddress = b
}
// GetSpouseName returns the SpouseName field if non-nil, zero value otherwise.
func (o *Contact) GetSpouseName() string {
	if o == nil || o.SpouseName == nil {
		var ret string
		return ret
	}
	return *o.SpouseName
}

// GetSpouseNameOk returns a tuple with the SpouseName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSpouseNameOk() (string, bool) {
	if o == nil || o.SpouseName == nil {
		var ret string
		return ret, false
	}
	return *o.SpouseName, true
}

// HasSpouseName returns a boolean if a field has been set.
func (o *Contact) HasSpouseName() bool {
	if o != nil && o.SpouseName != nil {
		return true
	}

	return false
}

// SetSpouseName gets a reference to the given string and assigns it to the SpouseName field.
func (o *Contact) SetSpouseName(v string) {
	o.SpouseName = &v
}

// SetSpouseNameExplicitNull (un)sets SpouseName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SpouseName value is set to nil even if false is passed
func (o *Contact) SetSpouseNameExplicitNull(b bool) {
	o.SpouseName = nil
	o.isExplicitNullSpouseName = b
}
// GetPersonalNotes returns the PersonalNotes field if non-nil, zero value otherwise.
func (o *Contact) GetPersonalNotes() string {
	if o == nil || o.PersonalNotes == nil {
		var ret string
		return ret
	}
	return *o.PersonalNotes
}

// GetPersonalNotesOk returns a tuple with the PersonalNotes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPersonalNotesOk() (string, bool) {
	if o == nil || o.PersonalNotes == nil {
		var ret string
		return ret, false
	}
	return *o.PersonalNotes, true
}

// HasPersonalNotes returns a boolean if a field has been set.
func (o *Contact) HasPersonalNotes() bool {
	if o != nil && o.PersonalNotes != nil {
		return true
	}

	return false
}

// SetPersonalNotes gets a reference to the given string and assigns it to the PersonalNotes field.
func (o *Contact) SetPersonalNotes(v string) {
	o.PersonalNotes = &v
}

// SetPersonalNotesExplicitNull (un)sets PersonalNotes to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PersonalNotes value is set to nil even if false is passed
func (o *Contact) SetPersonalNotesExplicitNull(b bool) {
	o.PersonalNotes = nil
	o.isExplicitNullPersonalNotes = b
}
// GetChildren returns the Children field if non-nil, zero value otherwise.
func (o *Contact) GetChildren() []string {
	if o == nil || o.Children == nil {
		var ret []string
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetChildrenOk() ([]string, bool) {
	if o == nil || o.Children == nil {
		var ret []string
		return ret, false
	}
	return *o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *Contact) HasChildren() bool {
	if o != nil && o.Children != nil {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []string and assigns it to the Children field.
func (o *Contact) SetChildren(v []string) {
	o.Children = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field if non-nil, zero value otherwise.
func (o *Contact) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSingleValueExtendedPropertiesOk() ([]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret, false
	}
	return *o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *Contact) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *Contact) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field if non-nil, zero value otherwise.
func (o *Contact) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetMultiValueExtendedPropertiesOk() ([]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret, false
	}
	return *o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *Contact) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *Contact) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetPhoto returns the Photo field if non-nil, zero value otherwise.
func (o *Contact) GetPhoto() AnyOfmicrosoftGraphProfilePhoto {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPhotoOk() (AnyOfmicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret, false
	}
	return *o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *Contact) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphProfilePhoto and assigns it to the Photo field.
func (o *Contact) SetPhoto(v AnyOfmicrosoftGraphProfilePhoto) {
	o.Photo = &v
}

// SetPhotoExplicitNull (un)sets Photo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Photo value is set to nil even if false is passed
func (o *Contact) SetPhotoExplicitNull(b bool) {
	o.Photo = nil
	o.isExplicitNullPhoto = b
}
// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *Contact) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Contact) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *Contact) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentFolderId == nil {
		if o.isExplicitNullParentFolderId {
			toSerialize["parentFolderId"] = o.ParentFolderId
		}
	} else {
		toSerialize["parentFolderId"] = o.ParentFolderId
	}
	if o.Birthday == nil {
		if o.isExplicitNullBirthday {
			toSerialize["birthday"] = o.Birthday
		}
	} else {
		toSerialize["birthday"] = o.Birthday
	}
	if o.FileAs == nil {
		if o.isExplicitNullFileAs {
			toSerialize["fileAs"] = o.FileAs
		}
	} else {
		toSerialize["fileAs"] = o.FileAs
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.GivenName == nil {
		if o.isExplicitNullGivenName {
			toSerialize["givenName"] = o.GivenName
		}
	} else {
		toSerialize["givenName"] = o.GivenName
	}
	if o.Initials == nil {
		if o.isExplicitNullInitials {
			toSerialize["initials"] = o.Initials
		}
	} else {
		toSerialize["initials"] = o.Initials
	}
	if o.MiddleName == nil {
		if o.isExplicitNullMiddleName {
			toSerialize["middleName"] = o.MiddleName
		}
	} else {
		toSerialize["middleName"] = o.MiddleName
	}
	if o.NickName == nil {
		if o.isExplicitNullNickName {
			toSerialize["nickName"] = o.NickName
		}
	} else {
		toSerialize["nickName"] = o.NickName
	}
	if o.Surname == nil {
		if o.isExplicitNullSurname {
			toSerialize["surname"] = o.Surname
		}
	} else {
		toSerialize["surname"] = o.Surname
	}
	if o.Title == nil {
		if o.isExplicitNullTitle {
			toSerialize["title"] = o.Title
		}
	} else {
		toSerialize["title"] = o.Title
	}
	if o.YomiGivenName == nil {
		if o.isExplicitNullYomiGivenName {
			toSerialize["yomiGivenName"] = o.YomiGivenName
		}
	} else {
		toSerialize["yomiGivenName"] = o.YomiGivenName
	}
	if o.YomiSurname == nil {
		if o.isExplicitNullYomiSurname {
			toSerialize["yomiSurname"] = o.YomiSurname
		}
	} else {
		toSerialize["yomiSurname"] = o.YomiSurname
	}
	if o.YomiCompanyName == nil {
		if o.isExplicitNullYomiCompanyName {
			toSerialize["yomiCompanyName"] = o.YomiCompanyName
		}
	} else {
		toSerialize["yomiCompanyName"] = o.YomiCompanyName
	}
	if o.Generation == nil {
		if o.isExplicitNullGeneration {
			toSerialize["generation"] = o.Generation
		}
	} else {
		toSerialize["generation"] = o.Generation
	}
	if o.EmailAddresses != nil {
		toSerialize["emailAddresses"] = o.EmailAddresses
	}
	if o.ImAddresses != nil {
		toSerialize["imAddresses"] = o.ImAddresses
	}
	if o.JobTitle == nil {
		if o.isExplicitNullJobTitle {
			toSerialize["jobTitle"] = o.JobTitle
		}
	} else {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if o.CompanyName == nil {
		if o.isExplicitNullCompanyName {
			toSerialize["companyName"] = o.CompanyName
		}
	} else {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.Department == nil {
		if o.isExplicitNullDepartment {
			toSerialize["department"] = o.Department
		}
	} else {
		toSerialize["department"] = o.Department
	}
	if o.OfficeLocation == nil {
		if o.isExplicitNullOfficeLocation {
			toSerialize["officeLocation"] = o.OfficeLocation
		}
	} else {
		toSerialize["officeLocation"] = o.OfficeLocation
	}
	if o.Profession == nil {
		if o.isExplicitNullProfession {
			toSerialize["profession"] = o.Profession
		}
	} else {
		toSerialize["profession"] = o.Profession
	}
	if o.BusinessHomePage == nil {
		if o.isExplicitNullBusinessHomePage {
			toSerialize["businessHomePage"] = o.BusinessHomePage
		}
	} else {
		toSerialize["businessHomePage"] = o.BusinessHomePage
	}
	if o.AssistantName == nil {
		if o.isExplicitNullAssistantName {
			toSerialize["assistantName"] = o.AssistantName
		}
	} else {
		toSerialize["assistantName"] = o.AssistantName
	}
	if o.Manager == nil {
		if o.isExplicitNullManager {
			toSerialize["manager"] = o.Manager
		}
	} else {
		toSerialize["manager"] = o.Manager
	}
	if o.HomePhones != nil {
		toSerialize["homePhones"] = o.HomePhones
	}
	if o.MobilePhone == nil {
		if o.isExplicitNullMobilePhone {
			toSerialize["mobilePhone"] = o.MobilePhone
		}
	} else {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.HomeAddress == nil {
		if o.isExplicitNullHomeAddress {
			toSerialize["homeAddress"] = o.HomeAddress
		}
	} else {
		toSerialize["homeAddress"] = o.HomeAddress
	}
	if o.BusinessAddress == nil {
		if o.isExplicitNullBusinessAddress {
			toSerialize["businessAddress"] = o.BusinessAddress
		}
	} else {
		toSerialize["businessAddress"] = o.BusinessAddress
	}
	if o.OtherAddress == nil {
		if o.isExplicitNullOtherAddress {
			toSerialize["otherAddress"] = o.OtherAddress
		}
	} else {
		toSerialize["otherAddress"] = o.OtherAddress
	}
	if o.SpouseName == nil {
		if o.isExplicitNullSpouseName {
			toSerialize["spouseName"] = o.SpouseName
		}
	} else {
		toSerialize["spouseName"] = o.SpouseName
	}
	if o.PersonalNotes == nil {
		if o.isExplicitNullPersonalNotes {
			toSerialize["personalNotes"] = o.PersonalNotes
		}
	} else {
		toSerialize["personalNotes"] = o.PersonalNotes
	}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.Photo == nil {
		if o.isExplicitNullPhoto {
			toSerialize["photo"] = o.Photo
		}
	} else {
		toSerialize["photo"] = o.Photo
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	return json.Marshal(toSerialize)
}


