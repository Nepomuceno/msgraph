/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// IosMobileAppConfiguration Contains properties, inherited properties and actions for iOS mobile app configurations.
type IosMobileAppConfiguration struct {
	// mdm app configuration Base64 binary.
	EncodedSettingXml *string `json:"encodedSettingXml,omitempty"`
	isExplicitNullEncodedSettingXml bool `json:"-"`
	// app configuration setting items.
	Settings *[]AnyOfmicrosoftGraphAppConfigurationSettingItem `json:"settings,omitempty"`

}

// GetEncodedSettingXml returns the EncodedSettingXml field if non-nil, zero value otherwise.
func (o *IosMobileAppConfiguration) GetEncodedSettingXml() string {
	if o == nil || o.EncodedSettingXml == nil {
		var ret string
		return ret
	}
	return *o.EncodedSettingXml
}

// GetEncodedSettingXmlOk returns a tuple with the EncodedSettingXml field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosMobileAppConfiguration) GetEncodedSettingXmlOk() (string, bool) {
	if o == nil || o.EncodedSettingXml == nil {
		var ret string
		return ret, false
	}
	return *o.EncodedSettingXml, true
}

// HasEncodedSettingXml returns a boolean if a field has been set.
func (o *IosMobileAppConfiguration) HasEncodedSettingXml() bool {
	if o != nil && o.EncodedSettingXml != nil {
		return true
	}

	return false
}

// SetEncodedSettingXml gets a reference to the given string and assigns it to the EncodedSettingXml field.
func (o *IosMobileAppConfiguration) SetEncodedSettingXml(v string) {
	o.EncodedSettingXml = &v
}

// SetEncodedSettingXmlExplicitNull (un)sets EncodedSettingXml to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EncodedSettingXml value is set to nil even if false is passed
func (o *IosMobileAppConfiguration) SetEncodedSettingXmlExplicitNull(b bool) {
	o.EncodedSettingXml = nil
	o.isExplicitNullEncodedSettingXml = b
}
// GetSettings returns the Settings field if non-nil, zero value otherwise.
func (o *IosMobileAppConfiguration) GetSettings() []AnyOfmicrosoftGraphAppConfigurationSettingItem {
	if o == nil || o.Settings == nil {
		var ret []AnyOfmicrosoftGraphAppConfigurationSettingItem
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosMobileAppConfiguration) GetSettingsOk() ([]AnyOfmicrosoftGraphAppConfigurationSettingItem, bool) {
	if o == nil || o.Settings == nil {
		var ret []AnyOfmicrosoftGraphAppConfigurationSettingItem
		return ret, false
	}
	return *o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *IosMobileAppConfiguration) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []AnyOfmicrosoftGraphAppConfigurationSettingItem and assigns it to the Settings field.
func (o *IosMobileAppConfiguration) SetSettings(v []AnyOfmicrosoftGraphAppConfigurationSettingItem) {
	o.Settings = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o IosMobileAppConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EncodedSettingXml == nil {
		if o.isExplicitNullEncodedSettingXml {
			toSerialize["encodedSettingXml"] = o.EncodedSettingXml
		}
	} else {
		toSerialize["encodedSettingXml"] = o.EncodedSettingXml
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	return json.Marshal(toSerialize)
}


