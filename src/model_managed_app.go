/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// ManagedApp Abstract class that contains properties and inherited properties for apps that you can manage with an Intune app protection policy.
type ManagedApp struct {
	// The Application's availability.
	AppAvailability *AnyOfmicrosoftGraphManagedAppAvailability `json:"appAvailability,omitempty"`

	// The Application's version.
	Version *string `json:"version,omitempty"`
	isExplicitNullVersion bool `json:"-"`
}

// GetAppAvailability returns the AppAvailability field if non-nil, zero value otherwise.
func (o *ManagedApp) GetAppAvailability() AnyOfmicrosoftGraphManagedAppAvailability {
	if o == nil || o.AppAvailability == nil {
		var ret AnyOfmicrosoftGraphManagedAppAvailability
		return ret
	}
	return *o.AppAvailability
}

// GetAppAvailabilityOk returns a tuple with the AppAvailability field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedApp) GetAppAvailabilityOk() (AnyOfmicrosoftGraphManagedAppAvailability, bool) {
	if o == nil || o.AppAvailability == nil {
		var ret AnyOfmicrosoftGraphManagedAppAvailability
		return ret, false
	}
	return *o.AppAvailability, true
}

// HasAppAvailability returns a boolean if a field has been set.
func (o *ManagedApp) HasAppAvailability() bool {
	if o != nil && o.AppAvailability != nil {
		return true
	}

	return false
}

// SetAppAvailability gets a reference to the given AnyOfmicrosoftGraphManagedAppAvailability and assigns it to the AppAvailability field.
func (o *ManagedApp) SetAppAvailability(v AnyOfmicrosoftGraphManagedAppAvailability) {
	o.AppAvailability = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *ManagedApp) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ManagedApp) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ManagedApp) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ManagedApp) SetVersion(v string) {
	o.Version = &v
}

// SetVersionExplicitNull (un)sets Version to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Version value is set to nil even if false is passed
func (o *ManagedApp) SetVersionExplicitNull(b bool) {
	o.Version = nil
	o.isExplicitNullVersion = b
}

// MarshalJSON returns the JSON representation of the model.
func (o ManagedApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppAvailability != nil {
		toSerialize["appAvailability"] = o.AppAvailability
	}
	if o.Version == nil {
		if o.isExplicitNullVersion {
			toSerialize["version"] = o.Version
		}
	} else {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}


