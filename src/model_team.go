/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Team struct for Team
type Team struct {
	WebUrl *string `json:"webUrl,omitempty"`
	isExplicitNullWebUrl bool `json:"-"`
	MemberSettings *AnyOfmicrosoftGraphTeamMemberSettings `json:"memberSettings,omitempty"`
	isExplicitNullMemberSettings bool `json:"-"`
	GuestSettings *AnyOfmicrosoftGraphTeamGuestSettings `json:"guestSettings,omitempty"`
	isExplicitNullGuestSettings bool `json:"-"`
	MessagingSettings *AnyOfmicrosoftGraphTeamMessagingSettings `json:"messagingSettings,omitempty"`
	isExplicitNullMessagingSettings bool `json:"-"`
	FunSettings *AnyOfmicrosoftGraphTeamFunSettings `json:"funSettings,omitempty"`
	isExplicitNullFunSettings bool `json:"-"`
	IsArchived *bool `json:"isArchived,omitempty"`
	isExplicitNullIsArchived bool `json:"-"`
	Channels *[]MicrosoftGraphChannel `json:"channels,omitempty"`

	InstalledApps *[]MicrosoftGraphTeamsAppInstallation `json:"installedApps,omitempty"`

	Operations *[]MicrosoftGraphTeamsAsyncOperation `json:"operations,omitempty"`

}

// GetWebUrl returns the WebUrl field if non-nil, zero value otherwise.
func (o *Team) GetWebUrl() string {
	if o == nil || o.WebUrl == nil {
		var ret string
		return ret
	}
	return *o.WebUrl
}

// GetWebUrlOk returns a tuple with the WebUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetWebUrlOk() (string, bool) {
	if o == nil || o.WebUrl == nil {
		var ret string
		return ret, false
	}
	return *o.WebUrl, true
}

// HasWebUrl returns a boolean if a field has been set.
func (o *Team) HasWebUrl() bool {
	if o != nil && o.WebUrl != nil {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given string and assigns it to the WebUrl field.
func (o *Team) SetWebUrl(v string) {
	o.WebUrl = &v
}

// SetWebUrlExplicitNull (un)sets WebUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WebUrl value is set to nil even if false is passed
func (o *Team) SetWebUrlExplicitNull(b bool) {
	o.WebUrl = nil
	o.isExplicitNullWebUrl = b
}
// GetMemberSettings returns the MemberSettings field if non-nil, zero value otherwise.
func (o *Team) GetMemberSettings() AnyOfmicrosoftGraphTeamMemberSettings {
	if o == nil || o.MemberSettings == nil {
		var ret AnyOfmicrosoftGraphTeamMemberSettings
		return ret
	}
	return *o.MemberSettings
}

// GetMemberSettingsOk returns a tuple with the MemberSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetMemberSettingsOk() (AnyOfmicrosoftGraphTeamMemberSettings, bool) {
	if o == nil || o.MemberSettings == nil {
		var ret AnyOfmicrosoftGraphTeamMemberSettings
		return ret, false
	}
	return *o.MemberSettings, true
}

// HasMemberSettings returns a boolean if a field has been set.
func (o *Team) HasMemberSettings() bool {
	if o != nil && o.MemberSettings != nil {
		return true
	}

	return false
}

// SetMemberSettings gets a reference to the given AnyOfmicrosoftGraphTeamMemberSettings and assigns it to the MemberSettings field.
func (o *Team) SetMemberSettings(v AnyOfmicrosoftGraphTeamMemberSettings) {
	o.MemberSettings = &v
}

// SetMemberSettingsExplicitNull (un)sets MemberSettings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MemberSettings value is set to nil even if false is passed
func (o *Team) SetMemberSettingsExplicitNull(b bool) {
	o.MemberSettings = nil
	o.isExplicitNullMemberSettings = b
}
// GetGuestSettings returns the GuestSettings field if non-nil, zero value otherwise.
func (o *Team) GetGuestSettings() AnyOfmicrosoftGraphTeamGuestSettings {
	if o == nil || o.GuestSettings == nil {
		var ret AnyOfmicrosoftGraphTeamGuestSettings
		return ret
	}
	return *o.GuestSettings
}

// GetGuestSettingsOk returns a tuple with the GuestSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetGuestSettingsOk() (AnyOfmicrosoftGraphTeamGuestSettings, bool) {
	if o == nil || o.GuestSettings == nil {
		var ret AnyOfmicrosoftGraphTeamGuestSettings
		return ret, false
	}
	return *o.GuestSettings, true
}

// HasGuestSettings returns a boolean if a field has been set.
func (o *Team) HasGuestSettings() bool {
	if o != nil && o.GuestSettings != nil {
		return true
	}

	return false
}

// SetGuestSettings gets a reference to the given AnyOfmicrosoftGraphTeamGuestSettings and assigns it to the GuestSettings field.
func (o *Team) SetGuestSettings(v AnyOfmicrosoftGraphTeamGuestSettings) {
	o.GuestSettings = &v
}

// SetGuestSettingsExplicitNull (un)sets GuestSettings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GuestSettings value is set to nil even if false is passed
func (o *Team) SetGuestSettingsExplicitNull(b bool) {
	o.GuestSettings = nil
	o.isExplicitNullGuestSettings = b
}
// GetMessagingSettings returns the MessagingSettings field if non-nil, zero value otherwise.
func (o *Team) GetMessagingSettings() AnyOfmicrosoftGraphTeamMessagingSettings {
	if o == nil || o.MessagingSettings == nil {
		var ret AnyOfmicrosoftGraphTeamMessagingSettings
		return ret
	}
	return *o.MessagingSettings
}

// GetMessagingSettingsOk returns a tuple with the MessagingSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetMessagingSettingsOk() (AnyOfmicrosoftGraphTeamMessagingSettings, bool) {
	if o == nil || o.MessagingSettings == nil {
		var ret AnyOfmicrosoftGraphTeamMessagingSettings
		return ret, false
	}
	return *o.MessagingSettings, true
}

// HasMessagingSettings returns a boolean if a field has been set.
func (o *Team) HasMessagingSettings() bool {
	if o != nil && o.MessagingSettings != nil {
		return true
	}

	return false
}

// SetMessagingSettings gets a reference to the given AnyOfmicrosoftGraphTeamMessagingSettings and assigns it to the MessagingSettings field.
func (o *Team) SetMessagingSettings(v AnyOfmicrosoftGraphTeamMessagingSettings) {
	o.MessagingSettings = &v
}

// SetMessagingSettingsExplicitNull (un)sets MessagingSettings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MessagingSettings value is set to nil even if false is passed
func (o *Team) SetMessagingSettingsExplicitNull(b bool) {
	o.MessagingSettings = nil
	o.isExplicitNullMessagingSettings = b
}
// GetFunSettings returns the FunSettings field if non-nil, zero value otherwise.
func (o *Team) GetFunSettings() AnyOfmicrosoftGraphTeamFunSettings {
	if o == nil || o.FunSettings == nil {
		var ret AnyOfmicrosoftGraphTeamFunSettings
		return ret
	}
	return *o.FunSettings
}

// GetFunSettingsOk returns a tuple with the FunSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetFunSettingsOk() (AnyOfmicrosoftGraphTeamFunSettings, bool) {
	if o == nil || o.FunSettings == nil {
		var ret AnyOfmicrosoftGraphTeamFunSettings
		return ret, false
	}
	return *o.FunSettings, true
}

// HasFunSettings returns a boolean if a field has been set.
func (o *Team) HasFunSettings() bool {
	if o != nil && o.FunSettings != nil {
		return true
	}

	return false
}

// SetFunSettings gets a reference to the given AnyOfmicrosoftGraphTeamFunSettings and assigns it to the FunSettings field.
func (o *Team) SetFunSettings(v AnyOfmicrosoftGraphTeamFunSettings) {
	o.FunSettings = &v
}

// SetFunSettingsExplicitNull (un)sets FunSettings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FunSettings value is set to nil even if false is passed
func (o *Team) SetFunSettingsExplicitNull(b bool) {
	o.FunSettings = nil
	o.isExplicitNullFunSettings = b
}
// GetIsArchived returns the IsArchived field if non-nil, zero value otherwise.
func (o *Team) GetIsArchived() bool {
	if o == nil || o.IsArchived == nil {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetIsArchivedOk() (bool, bool) {
	if o == nil || o.IsArchived == nil {
		var ret bool
		return ret, false
	}
	return *o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *Team) HasIsArchived() bool {
	if o != nil && o.IsArchived != nil {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *Team) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// SetIsArchivedExplicitNull (un)sets IsArchived to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsArchived value is set to nil even if false is passed
func (o *Team) SetIsArchivedExplicitNull(b bool) {
	o.IsArchived = nil
	o.isExplicitNullIsArchived = b
}
// GetChannels returns the Channels field if non-nil, zero value otherwise.
func (o *Team) GetChannels() []MicrosoftGraphChannel {
	if o == nil || o.Channels == nil {
		var ret []MicrosoftGraphChannel
		return ret
	}
	return *o.Channels
}

// GetChannelsOk returns a tuple with the Channels field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetChannelsOk() ([]MicrosoftGraphChannel, bool) {
	if o == nil || o.Channels == nil {
		var ret []MicrosoftGraphChannel
		return ret, false
	}
	return *o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *Team) HasChannels() bool {
	if o != nil && o.Channels != nil {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []MicrosoftGraphChannel and assigns it to the Channels field.
func (o *Team) SetChannels(v []MicrosoftGraphChannel) {
	o.Channels = &v
}

// GetInstalledApps returns the InstalledApps field if non-nil, zero value otherwise.
func (o *Team) GetInstalledApps() []MicrosoftGraphTeamsAppInstallation {
	if o == nil || o.InstalledApps == nil {
		var ret []MicrosoftGraphTeamsAppInstallation
		return ret
	}
	return *o.InstalledApps
}

// GetInstalledAppsOk returns a tuple with the InstalledApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetInstalledAppsOk() ([]MicrosoftGraphTeamsAppInstallation, bool) {
	if o == nil || o.InstalledApps == nil {
		var ret []MicrosoftGraphTeamsAppInstallation
		return ret, false
	}
	return *o.InstalledApps, true
}

// HasInstalledApps returns a boolean if a field has been set.
func (o *Team) HasInstalledApps() bool {
	if o != nil && o.InstalledApps != nil {
		return true
	}

	return false
}

// SetInstalledApps gets a reference to the given []MicrosoftGraphTeamsAppInstallation and assigns it to the InstalledApps field.
func (o *Team) SetInstalledApps(v []MicrosoftGraphTeamsAppInstallation) {
	o.InstalledApps = &v
}

// GetOperations returns the Operations field if non-nil, zero value otherwise.
func (o *Team) GetOperations() []MicrosoftGraphTeamsAsyncOperation {
	if o == nil || o.Operations == nil {
		var ret []MicrosoftGraphTeamsAsyncOperation
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Team) GetOperationsOk() ([]MicrosoftGraphTeamsAsyncOperation, bool) {
	if o == nil || o.Operations == nil {
		var ret []MicrosoftGraphTeamsAsyncOperation
		return ret, false
	}
	return *o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *Team) HasOperations() bool {
	if o != nil && o.Operations != nil {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []MicrosoftGraphTeamsAsyncOperation and assigns it to the Operations field.
func (o *Team) SetOperations(v []MicrosoftGraphTeamsAsyncOperation) {
	o.Operations = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Team) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebUrl == nil {
		if o.isExplicitNullWebUrl {
			toSerialize["webUrl"] = o.WebUrl
		}
	} else {
		toSerialize["webUrl"] = o.WebUrl
	}
	if o.MemberSettings == nil {
		if o.isExplicitNullMemberSettings {
			toSerialize["memberSettings"] = o.MemberSettings
		}
	} else {
		toSerialize["memberSettings"] = o.MemberSettings
	}
	if o.GuestSettings == nil {
		if o.isExplicitNullGuestSettings {
			toSerialize["guestSettings"] = o.GuestSettings
		}
	} else {
		toSerialize["guestSettings"] = o.GuestSettings
	}
	if o.MessagingSettings == nil {
		if o.isExplicitNullMessagingSettings {
			toSerialize["messagingSettings"] = o.MessagingSettings
		}
	} else {
		toSerialize["messagingSettings"] = o.MessagingSettings
	}
	if o.FunSettings == nil {
		if o.isExplicitNullFunSettings {
			toSerialize["funSettings"] = o.FunSettings
		}
	} else {
		toSerialize["funSettings"] = o.FunSettings
	}
	if o.IsArchived == nil {
		if o.isExplicitNullIsArchived {
			toSerialize["isArchived"] = o.IsArchived
		}
	} else {
		toSerialize["isArchived"] = o.IsArchived
	}
	if o.Channels != nil {
		toSerialize["channels"] = o.Channels
	}
	if o.InstalledApps != nil {
		toSerialize["installedApps"] = o.InstalledApps
	}
	if o.Operations != nil {
		toSerialize["operations"] = o.Operations
	}
	return json.Marshal(toSerialize)
}


