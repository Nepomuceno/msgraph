/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphGroup struct for MicrosoftGraphGroup
type MicrosoftGraphGroup struct {
	Id *string `json:"id,omitempty"`

	DeletedDateTime *time.Time `json:"deletedDateTime,omitempty"`
	isExplicitNullDeletedDateTime bool `json:"-"`
	AssignedLicenses *[]AnyOfmicrosoftGraphAssignedLicense `json:"assignedLicenses,omitempty"`

	Classification *string `json:"classification,omitempty"`
	isExplicitNullClassification bool `json:"-"`
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	HasMembersWithLicenseErrors *bool `json:"hasMembersWithLicenseErrors,omitempty"`
	isExplicitNullHasMembersWithLicenseErrors bool `json:"-"`
	GroupTypes *[]string `json:"groupTypes,omitempty"`

	LicenseProcessingState *AnyOfmicrosoftGraphLicenseProcessingState `json:"licenseProcessingState,omitempty"`
	isExplicitNullLicenseProcessingState bool `json:"-"`
	Mail *string `json:"mail,omitempty"`
	isExplicitNullMail bool `json:"-"`
	MailEnabled *bool `json:"mailEnabled,omitempty"`
	isExplicitNullMailEnabled bool `json:"-"`
	MailNickname *string `json:"mailNickname,omitempty"`
	isExplicitNullMailNickname bool `json:"-"`
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	isExplicitNullOnPremisesLastSyncDateTime bool `json:"-"`
	OnPremisesProvisioningErrors *[]AnyOfmicrosoftGraphOnPremisesProvisioningError `json:"onPremisesProvisioningErrors,omitempty"`

	OnPremisesSecurityIdentifier *string `json:"onPremisesSecurityIdentifier,omitempty"`
	isExplicitNullOnPremisesSecurityIdentifier bool `json:"-"`
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	isExplicitNullOnPremisesSyncEnabled bool `json:"-"`
	PreferredDataLocation *string `json:"preferredDataLocation,omitempty"`
	isExplicitNullPreferredDataLocation bool `json:"-"`
	ProxyAddresses *[]string `json:"proxyAddresses,omitempty"`

	RenewedDateTime *time.Time `json:"renewedDateTime,omitempty"`
	isExplicitNullRenewedDateTime bool `json:"-"`
	SecurityEnabled *bool `json:"securityEnabled,omitempty"`
	isExplicitNullSecurityEnabled bool `json:"-"`
	Visibility *string `json:"visibility,omitempty"`
	isExplicitNullVisibility bool `json:"-"`
	AllowExternalSenders *bool `json:"allowExternalSenders,omitempty"`
	isExplicitNullAllowExternalSenders bool `json:"-"`
	AutoSubscribeNewMembers *bool `json:"autoSubscribeNewMembers,omitempty"`
	isExplicitNullAutoSubscribeNewMembers bool `json:"-"`
	IsSubscribedByMail *bool `json:"isSubscribedByMail,omitempty"`
	isExplicitNullIsSubscribedByMail bool `json:"-"`
	UnseenCount *int32 `json:"unseenCount,omitempty"`
	isExplicitNullUnseenCount bool `json:"-"`
	IsArchived *bool `json:"isArchived,omitempty"`
	isExplicitNullIsArchived bool `json:"-"`
	Members *[]MicrosoftGraphDirectoryObject `json:"members,omitempty"`

	MemberOf *[]MicrosoftGraphDirectoryObject `json:"memberOf,omitempty"`

	MembersWithLicenseErrors *[]MicrosoftGraphDirectoryObject `json:"membersWithLicenseErrors,omitempty"`

	TransitiveMembers *[]MicrosoftGraphDirectoryObject `json:"transitiveMembers,omitempty"`

	TransitiveMemberOf *[]MicrosoftGraphDirectoryObject `json:"transitiveMemberOf,omitempty"`

	CreatedOnBehalfOf *AnyOfmicrosoftGraphDirectoryObject `json:"createdOnBehalfOf,omitempty"`
	isExplicitNullCreatedOnBehalfOf bool `json:"-"`
	Owners *[]MicrosoftGraphDirectoryObject `json:"owners,omitempty"`

	Settings *[]MicrosoftGraphGroupSetting `json:"settings,omitempty"`

	Conversations *[]MicrosoftGraphConversation `json:"conversations,omitempty"`

	Photos *[]MicrosoftGraphProfilePhoto `json:"photos,omitempty"`

	AcceptedSenders *[]MicrosoftGraphDirectoryObject `json:"acceptedSenders,omitempty"`

	RejectedSenders *[]MicrosoftGraphDirectoryObject `json:"rejectedSenders,omitempty"`

	Threads *[]MicrosoftGraphConversationThread `json:"threads,omitempty"`

	Calendar *AnyOfmicrosoftGraphCalendar `json:"calendar,omitempty"`
	isExplicitNullCalendar bool `json:"-"`
	CalendarView *[]MicrosoftGraphEvent `json:"calendarView,omitempty"`

	Events *[]MicrosoftGraphEvent `json:"events,omitempty"`

	Photo *AnyOfmicrosoftGraphProfilePhoto `json:"photo,omitempty"`
	isExplicitNullPhoto bool `json:"-"`
	Drive *AnyOfmicrosoftGraphDrive `json:"drive,omitempty"`
	isExplicitNullDrive bool `json:"-"`
	Drives *[]MicrosoftGraphDrive `json:"drives,omitempty"`

	Sites *[]MicrosoftGraphSite `json:"sites,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

	GroupLifecyclePolicies *[]MicrosoftGraphGroupLifecyclePolicy `json:"groupLifecyclePolicies,omitempty"`

	Planner *AnyOfmicrosoftGraphPlannerGroup `json:"planner,omitempty"`
	isExplicitNullPlanner bool `json:"-"`
	Onenote *AnyOfmicrosoftGraphOnenote `json:"onenote,omitempty"`
	isExplicitNullOnenote bool `json:"-"`
	Team *AnyOfmicrosoftGraphTeam `json:"team,omitempty"`
	isExplicitNullTeam bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphGroup) SetId(v string) {
	o.Id = &v
}

// GetDeletedDateTime returns the DeletedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetDeletedDateTimeOk() (time.Time, bool) {
	if o == nil || o.DeletedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DeletedDateTime, true
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime != nil {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given time.Time and assigns it to the DeletedDateTime field.
func (o *MicrosoftGraphGroup) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime = &v
}

// SetDeletedDateTimeExplicitNull (un)sets DeletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeletedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetDeletedDateTimeExplicitNull(b bool) {
	o.DeletedDateTime = nil
	o.isExplicitNullDeletedDateTime = b
}
// GetAssignedLicenses returns the AssignedLicenses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetAssignedLicenses() []AnyOfmicrosoftGraphAssignedLicense {
	if o == nil || o.AssignedLicenses == nil {
		var ret []AnyOfmicrosoftGraphAssignedLicense
		return ret
	}
	return *o.AssignedLicenses
}

// GetAssignedLicensesOk returns a tuple with the AssignedLicenses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetAssignedLicensesOk() ([]AnyOfmicrosoftGraphAssignedLicense, bool) {
	if o == nil || o.AssignedLicenses == nil {
		var ret []AnyOfmicrosoftGraphAssignedLicense
		return ret, false
	}
	return *o.AssignedLicenses, true
}

// HasAssignedLicenses returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasAssignedLicenses() bool {
	if o != nil && o.AssignedLicenses != nil {
		return true
	}

	return false
}

// SetAssignedLicenses gets a reference to the given []AnyOfmicrosoftGraphAssignedLicense and assigns it to the AssignedLicenses field.
func (o *MicrosoftGraphGroup) SetAssignedLicenses(v []AnyOfmicrosoftGraphAssignedLicense) {
	o.AssignedLicenses = &v
}

// GetClassification returns the Classification field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetClassification() string {
	if o == nil || o.Classification == nil {
		var ret string
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetClassificationOk() (string, bool) {
	if o == nil || o.Classification == nil {
		var ret string
		return ret, false
	}
	return *o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasClassification() bool {
	if o != nil && o.Classification != nil {
		return true
	}

	return false
}

// SetClassification gets a reference to the given string and assigns it to the Classification field.
func (o *MicrosoftGraphGroup) SetClassification(v string) {
	o.Classification = &v
}

// SetClassificationExplicitNull (un)sets Classification to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Classification value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetClassificationExplicitNull(b bool) {
	o.Classification = nil
	o.isExplicitNullClassification = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphGroup) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphGroup) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphGroup) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetHasMembersWithLicenseErrors returns the HasMembersWithLicenseErrors field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetHasMembersWithLicenseErrors() bool {
	if o == nil || o.HasMembersWithLicenseErrors == nil {
		var ret bool
		return ret
	}
	return *o.HasMembersWithLicenseErrors
}

// GetHasMembersWithLicenseErrorsOk returns a tuple with the HasMembersWithLicenseErrors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetHasMembersWithLicenseErrorsOk() (bool, bool) {
	if o == nil || o.HasMembersWithLicenseErrors == nil {
		var ret bool
		return ret, false
	}
	return *o.HasMembersWithLicenseErrors, true
}

// HasHasMembersWithLicenseErrors returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasHasMembersWithLicenseErrors() bool {
	if o != nil && o.HasMembersWithLicenseErrors != nil {
		return true
	}

	return false
}

// SetHasMembersWithLicenseErrors gets a reference to the given bool and assigns it to the HasMembersWithLicenseErrors field.
func (o *MicrosoftGraphGroup) SetHasMembersWithLicenseErrors(v bool) {
	o.HasMembersWithLicenseErrors = &v
}

// SetHasMembersWithLicenseErrorsExplicitNull (un)sets HasMembersWithLicenseErrors to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasMembersWithLicenseErrors value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetHasMembersWithLicenseErrorsExplicitNull(b bool) {
	o.HasMembersWithLicenseErrors = nil
	o.isExplicitNullHasMembersWithLicenseErrors = b
}
// GetGroupTypes returns the GroupTypes field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetGroupTypes() []string {
	if o == nil || o.GroupTypes == nil {
		var ret []string
		return ret
	}
	return *o.GroupTypes
}

// GetGroupTypesOk returns a tuple with the GroupTypes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetGroupTypesOk() ([]string, bool) {
	if o == nil || o.GroupTypes == nil {
		var ret []string
		return ret, false
	}
	return *o.GroupTypes, true
}

// HasGroupTypes returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasGroupTypes() bool {
	if o != nil && o.GroupTypes != nil {
		return true
	}

	return false
}

// SetGroupTypes gets a reference to the given []string and assigns it to the GroupTypes field.
func (o *MicrosoftGraphGroup) SetGroupTypes(v []string) {
	o.GroupTypes = &v
}

// GetLicenseProcessingState returns the LicenseProcessingState field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetLicenseProcessingState() AnyOfmicrosoftGraphLicenseProcessingState {
	if o == nil || o.LicenseProcessingState == nil {
		var ret AnyOfmicrosoftGraphLicenseProcessingState
		return ret
	}
	return *o.LicenseProcessingState
}

// GetLicenseProcessingStateOk returns a tuple with the LicenseProcessingState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetLicenseProcessingStateOk() (AnyOfmicrosoftGraphLicenseProcessingState, bool) {
	if o == nil || o.LicenseProcessingState == nil {
		var ret AnyOfmicrosoftGraphLicenseProcessingState
		return ret, false
	}
	return *o.LicenseProcessingState, true
}

// HasLicenseProcessingState returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasLicenseProcessingState() bool {
	if o != nil && o.LicenseProcessingState != nil {
		return true
	}

	return false
}

// SetLicenseProcessingState gets a reference to the given AnyOfmicrosoftGraphLicenseProcessingState and assigns it to the LicenseProcessingState field.
func (o *MicrosoftGraphGroup) SetLicenseProcessingState(v AnyOfmicrosoftGraphLicenseProcessingState) {
	o.LicenseProcessingState = &v
}

// SetLicenseProcessingStateExplicitNull (un)sets LicenseProcessingState to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LicenseProcessingState value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetLicenseProcessingStateExplicitNull(b bool) {
	o.LicenseProcessingState = nil
	o.isExplicitNullLicenseProcessingState = b
}
// GetMail returns the Mail field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMail() string {
	if o == nil || o.Mail == nil {
		var ret string
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMailOk() (string, bool) {
	if o == nil || o.Mail == nil {
		var ret string
		return ret, false
	}
	return *o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMail() bool {
	if o != nil && o.Mail != nil {
		return true
	}

	return false
}

// SetMail gets a reference to the given string and assigns it to the Mail field.
func (o *MicrosoftGraphGroup) SetMail(v string) {
	o.Mail = &v
}

// SetMailExplicitNull (un)sets Mail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Mail value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetMailExplicitNull(b bool) {
	o.Mail = nil
	o.isExplicitNullMail = b
}
// GetMailEnabled returns the MailEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMailEnabled() bool {
	if o == nil || o.MailEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MailEnabled
}

// GetMailEnabledOk returns a tuple with the MailEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMailEnabledOk() (bool, bool) {
	if o == nil || o.MailEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.MailEnabled, true
}

// HasMailEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMailEnabled() bool {
	if o != nil && o.MailEnabled != nil {
		return true
	}

	return false
}

// SetMailEnabled gets a reference to the given bool and assigns it to the MailEnabled field.
func (o *MicrosoftGraphGroup) SetMailEnabled(v bool) {
	o.MailEnabled = &v
}

// SetMailEnabledExplicitNull (un)sets MailEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetMailEnabledExplicitNull(b bool) {
	o.MailEnabled = nil
	o.isExplicitNullMailEnabled = b
}
// GetMailNickname returns the MailNickname field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMailNickname() string {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret
	}
	return *o.MailNickname
}

// GetMailNicknameOk returns a tuple with the MailNickname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMailNicknameOk() (string, bool) {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret, false
	}
	return *o.MailNickname, true
}

// HasMailNickname returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMailNickname() bool {
	if o != nil && o.MailNickname != nil {
		return true
	}

	return false
}

// SetMailNickname gets a reference to the given string and assigns it to the MailNickname field.
func (o *MicrosoftGraphGroup) SetMailNickname(v string) {
	o.MailNickname = &v
}

// SetMailNicknameExplicitNull (un)sets MailNickname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailNickname value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetMailNicknameExplicitNull(b bool) {
	o.MailNickname = nil
	o.isExplicitNullMailNickname = b
}
// GetOnPremisesLastSyncDateTime returns the OnPremisesLastSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOnPremisesLastSyncDateTime() time.Time {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.OnPremisesLastSyncDateTime
}

// GetOnPremisesLastSyncDateTimeOk returns a tuple with the OnPremisesLastSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOnPremisesLastSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.OnPremisesLastSyncDateTime, true
}

// HasOnPremisesLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOnPremisesLastSyncDateTime() bool {
	if o != nil && o.OnPremisesLastSyncDateTime != nil {
		return true
	}

	return false
}

// SetOnPremisesLastSyncDateTime gets a reference to the given time.Time and assigns it to the OnPremisesLastSyncDateTime field.
func (o *MicrosoftGraphGroup) SetOnPremisesLastSyncDateTime(v time.Time) {
	o.OnPremisesLastSyncDateTime = &v
}

// SetOnPremisesLastSyncDateTimeExplicitNull (un)sets OnPremisesLastSyncDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesLastSyncDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetOnPremisesLastSyncDateTimeExplicitNull(b bool) {
	o.OnPremisesLastSyncDateTime = nil
	o.isExplicitNullOnPremisesLastSyncDateTime = b
}
// GetOnPremisesProvisioningErrors returns the OnPremisesProvisioningErrors field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOnPremisesProvisioningErrors() []AnyOfmicrosoftGraphOnPremisesProvisioningError {
	if o == nil || o.OnPremisesProvisioningErrors == nil {
		var ret []AnyOfmicrosoftGraphOnPremisesProvisioningError
		return ret
	}
	return *o.OnPremisesProvisioningErrors
}

// GetOnPremisesProvisioningErrorsOk returns a tuple with the OnPremisesProvisioningErrors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOnPremisesProvisioningErrorsOk() ([]AnyOfmicrosoftGraphOnPremisesProvisioningError, bool) {
	if o == nil || o.OnPremisesProvisioningErrors == nil {
		var ret []AnyOfmicrosoftGraphOnPremisesProvisioningError
		return ret, false
	}
	return *o.OnPremisesProvisioningErrors, true
}

// HasOnPremisesProvisioningErrors returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOnPremisesProvisioningErrors() bool {
	if o != nil && o.OnPremisesProvisioningErrors != nil {
		return true
	}

	return false
}

// SetOnPremisesProvisioningErrors gets a reference to the given []AnyOfmicrosoftGraphOnPremisesProvisioningError and assigns it to the OnPremisesProvisioningErrors field.
func (o *MicrosoftGraphGroup) SetOnPremisesProvisioningErrors(v []AnyOfmicrosoftGraphOnPremisesProvisioningError) {
	o.OnPremisesProvisioningErrors = &v
}

// GetOnPremisesSecurityIdentifier returns the OnPremisesSecurityIdentifier field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOnPremisesSecurityIdentifier() string {
	if o == nil || o.OnPremisesSecurityIdentifier == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesSecurityIdentifier
}

// GetOnPremisesSecurityIdentifierOk returns a tuple with the OnPremisesSecurityIdentifier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOnPremisesSecurityIdentifierOk() (string, bool) {
	if o == nil || o.OnPremisesSecurityIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesSecurityIdentifier, true
}

// HasOnPremisesSecurityIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOnPremisesSecurityIdentifier() bool {
	if o != nil && o.OnPremisesSecurityIdentifier != nil {
		return true
	}

	return false
}

// SetOnPremisesSecurityIdentifier gets a reference to the given string and assigns it to the OnPremisesSecurityIdentifier field.
func (o *MicrosoftGraphGroup) SetOnPremisesSecurityIdentifier(v string) {
	o.OnPremisesSecurityIdentifier = &v
}

// SetOnPremisesSecurityIdentifierExplicitNull (un)sets OnPremisesSecurityIdentifier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSecurityIdentifier value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetOnPremisesSecurityIdentifierExplicitNull(b bool) {
	o.OnPremisesSecurityIdentifier = nil
	o.isExplicitNullOnPremisesSecurityIdentifier = b
}
// GetOnPremisesSyncEnabled returns the OnPremisesSyncEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOnPremisesSyncEnabled() bool {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret
	}
	return *o.OnPremisesSyncEnabled
}

// GetOnPremisesSyncEnabledOk returns a tuple with the OnPremisesSyncEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOnPremisesSyncEnabledOk() (bool, bool) {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.OnPremisesSyncEnabled, true
}

// HasOnPremisesSyncEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOnPremisesSyncEnabled() bool {
	if o != nil && o.OnPremisesSyncEnabled != nil {
		return true
	}

	return false
}

// SetOnPremisesSyncEnabled gets a reference to the given bool and assigns it to the OnPremisesSyncEnabled field.
func (o *MicrosoftGraphGroup) SetOnPremisesSyncEnabled(v bool) {
	o.OnPremisesSyncEnabled = &v
}

// SetOnPremisesSyncEnabledExplicitNull (un)sets OnPremisesSyncEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSyncEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetOnPremisesSyncEnabledExplicitNull(b bool) {
	o.OnPremisesSyncEnabled = nil
	o.isExplicitNullOnPremisesSyncEnabled = b
}
// GetPreferredDataLocation returns the PreferredDataLocation field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetPreferredDataLocation() string {
	if o == nil || o.PreferredDataLocation == nil {
		var ret string
		return ret
	}
	return *o.PreferredDataLocation
}

// GetPreferredDataLocationOk returns a tuple with the PreferredDataLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetPreferredDataLocationOk() (string, bool) {
	if o == nil || o.PreferredDataLocation == nil {
		var ret string
		return ret, false
	}
	return *o.PreferredDataLocation, true
}

// HasPreferredDataLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasPreferredDataLocation() bool {
	if o != nil && o.PreferredDataLocation != nil {
		return true
	}

	return false
}

// SetPreferredDataLocation gets a reference to the given string and assigns it to the PreferredDataLocation field.
func (o *MicrosoftGraphGroup) SetPreferredDataLocation(v string) {
	o.PreferredDataLocation = &v
}

// SetPreferredDataLocationExplicitNull (un)sets PreferredDataLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreferredDataLocation value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetPreferredDataLocationExplicitNull(b bool) {
	o.PreferredDataLocation = nil
	o.isExplicitNullPreferredDataLocation = b
}
// GetProxyAddresses returns the ProxyAddresses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetProxyAddresses() []string {
	if o == nil || o.ProxyAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ProxyAddresses
}

// GetProxyAddressesOk returns a tuple with the ProxyAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetProxyAddressesOk() ([]string, bool) {
	if o == nil || o.ProxyAddresses == nil {
		var ret []string
		return ret, false
	}
	return *o.ProxyAddresses, true
}

// HasProxyAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasProxyAddresses() bool {
	if o != nil && o.ProxyAddresses != nil {
		return true
	}

	return false
}

// SetProxyAddresses gets a reference to the given []string and assigns it to the ProxyAddresses field.
func (o *MicrosoftGraphGroup) SetProxyAddresses(v []string) {
	o.ProxyAddresses = &v
}

// GetRenewedDateTime returns the RenewedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetRenewedDateTime() time.Time {
	if o == nil || o.RenewedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RenewedDateTime
}

// GetRenewedDateTimeOk returns a tuple with the RenewedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetRenewedDateTimeOk() (time.Time, bool) {
	if o == nil || o.RenewedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.RenewedDateTime, true
}

// HasRenewedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasRenewedDateTime() bool {
	if o != nil && o.RenewedDateTime != nil {
		return true
	}

	return false
}

// SetRenewedDateTime gets a reference to the given time.Time and assigns it to the RenewedDateTime field.
func (o *MicrosoftGraphGroup) SetRenewedDateTime(v time.Time) {
	o.RenewedDateTime = &v
}

// SetRenewedDateTimeExplicitNull (un)sets RenewedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RenewedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetRenewedDateTimeExplicitNull(b bool) {
	o.RenewedDateTime = nil
	o.isExplicitNullRenewedDateTime = b
}
// GetSecurityEnabled returns the SecurityEnabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetSecurityEnabled() bool {
	if o == nil || o.SecurityEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SecurityEnabled
}

// GetSecurityEnabledOk returns a tuple with the SecurityEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetSecurityEnabledOk() (bool, bool) {
	if o == nil || o.SecurityEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.SecurityEnabled, true
}

// HasSecurityEnabled returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasSecurityEnabled() bool {
	if o != nil && o.SecurityEnabled != nil {
		return true
	}

	return false
}

// SetSecurityEnabled gets a reference to the given bool and assigns it to the SecurityEnabled field.
func (o *MicrosoftGraphGroup) SetSecurityEnabled(v bool) {
	o.SecurityEnabled = &v
}

// SetSecurityEnabledExplicitNull (un)sets SecurityEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SecurityEnabled value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetSecurityEnabledExplicitNull(b bool) {
	o.SecurityEnabled = nil
	o.isExplicitNullSecurityEnabled = b
}
// GetVisibility returns the Visibility field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetVisibilityOk() (string, bool) {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret, false
	}
	return *o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *MicrosoftGraphGroup) SetVisibility(v string) {
	o.Visibility = &v
}

// SetVisibilityExplicitNull (un)sets Visibility to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Visibility value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetVisibilityExplicitNull(b bool) {
	o.Visibility = nil
	o.isExplicitNullVisibility = b
}
// GetAllowExternalSenders returns the AllowExternalSenders field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetAllowExternalSenders() bool {
	if o == nil || o.AllowExternalSenders == nil {
		var ret bool
		return ret
	}
	return *o.AllowExternalSenders
}

// GetAllowExternalSendersOk returns a tuple with the AllowExternalSenders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetAllowExternalSendersOk() (bool, bool) {
	if o == nil || o.AllowExternalSenders == nil {
		var ret bool
		return ret, false
	}
	return *o.AllowExternalSenders, true
}

// HasAllowExternalSenders returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasAllowExternalSenders() bool {
	if o != nil && o.AllowExternalSenders != nil {
		return true
	}

	return false
}

// SetAllowExternalSenders gets a reference to the given bool and assigns it to the AllowExternalSenders field.
func (o *MicrosoftGraphGroup) SetAllowExternalSenders(v bool) {
	o.AllowExternalSenders = &v
}

// SetAllowExternalSendersExplicitNull (un)sets AllowExternalSenders to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AllowExternalSenders value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetAllowExternalSendersExplicitNull(b bool) {
	o.AllowExternalSenders = nil
	o.isExplicitNullAllowExternalSenders = b
}
// GetAutoSubscribeNewMembers returns the AutoSubscribeNewMembers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetAutoSubscribeNewMembers() bool {
	if o == nil || o.AutoSubscribeNewMembers == nil {
		var ret bool
		return ret
	}
	return *o.AutoSubscribeNewMembers
}

// GetAutoSubscribeNewMembersOk returns a tuple with the AutoSubscribeNewMembers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetAutoSubscribeNewMembersOk() (bool, bool) {
	if o == nil || o.AutoSubscribeNewMembers == nil {
		var ret bool
		return ret, false
	}
	return *o.AutoSubscribeNewMembers, true
}

// HasAutoSubscribeNewMembers returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasAutoSubscribeNewMembers() bool {
	if o != nil && o.AutoSubscribeNewMembers != nil {
		return true
	}

	return false
}

// SetAutoSubscribeNewMembers gets a reference to the given bool and assigns it to the AutoSubscribeNewMembers field.
func (o *MicrosoftGraphGroup) SetAutoSubscribeNewMembers(v bool) {
	o.AutoSubscribeNewMembers = &v
}

// SetAutoSubscribeNewMembersExplicitNull (un)sets AutoSubscribeNewMembers to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AutoSubscribeNewMembers value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetAutoSubscribeNewMembersExplicitNull(b bool) {
	o.AutoSubscribeNewMembers = nil
	o.isExplicitNullAutoSubscribeNewMembers = b
}
// GetIsSubscribedByMail returns the IsSubscribedByMail field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetIsSubscribedByMail() bool {
	if o == nil || o.IsSubscribedByMail == nil {
		var ret bool
		return ret
	}
	return *o.IsSubscribedByMail
}

// GetIsSubscribedByMailOk returns a tuple with the IsSubscribedByMail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetIsSubscribedByMailOk() (bool, bool) {
	if o == nil || o.IsSubscribedByMail == nil {
		var ret bool
		return ret, false
	}
	return *o.IsSubscribedByMail, true
}

// HasIsSubscribedByMail returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasIsSubscribedByMail() bool {
	if o != nil && o.IsSubscribedByMail != nil {
		return true
	}

	return false
}

// SetIsSubscribedByMail gets a reference to the given bool and assigns it to the IsSubscribedByMail field.
func (o *MicrosoftGraphGroup) SetIsSubscribedByMail(v bool) {
	o.IsSubscribedByMail = &v
}

// SetIsSubscribedByMailExplicitNull (un)sets IsSubscribedByMail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsSubscribedByMail value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetIsSubscribedByMailExplicitNull(b bool) {
	o.IsSubscribedByMail = nil
	o.isExplicitNullIsSubscribedByMail = b
}
// GetUnseenCount returns the UnseenCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetUnseenCount() int32 {
	if o == nil || o.UnseenCount == nil {
		var ret int32
		return ret
	}
	return *o.UnseenCount
}

// GetUnseenCountOk returns a tuple with the UnseenCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetUnseenCountOk() (int32, bool) {
	if o == nil || o.UnseenCount == nil {
		var ret int32
		return ret, false
	}
	return *o.UnseenCount, true
}

// HasUnseenCount returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasUnseenCount() bool {
	if o != nil && o.UnseenCount != nil {
		return true
	}

	return false
}

// SetUnseenCount gets a reference to the given int32 and assigns it to the UnseenCount field.
func (o *MicrosoftGraphGroup) SetUnseenCount(v int32) {
	o.UnseenCount = &v
}

// SetUnseenCountExplicitNull (un)sets UnseenCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UnseenCount value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetUnseenCountExplicitNull(b bool) {
	o.UnseenCount = nil
	o.isExplicitNullUnseenCount = b
}
// GetIsArchived returns the IsArchived field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetIsArchived() bool {
	if o == nil || o.IsArchived == nil {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetIsArchivedOk() (bool, bool) {
	if o == nil || o.IsArchived == nil {
		var ret bool
		return ret, false
	}
	return *o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasIsArchived() bool {
	if o != nil && o.IsArchived != nil {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *MicrosoftGraphGroup) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// SetIsArchivedExplicitNull (un)sets IsArchived to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsArchived value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetIsArchivedExplicitNull(b bool) {
	o.IsArchived = nil
	o.isExplicitNullIsArchived = b
}
// GetMembers returns the Members field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMembers() []MicrosoftGraphDirectoryObject {
	if o == nil || o.Members == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMembersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.Members == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the Members field.
func (o *MicrosoftGraphGroup) SetMembers(v []MicrosoftGraphDirectoryObject) {
	o.Members = &v
}

// GetMemberOf returns the MemberOf field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.MemberOf
}

// GetMemberOfOk returns a tuple with the MemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.MemberOf, true
}

// HasMemberOf returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMemberOf() bool {
	if o != nil && o.MemberOf != nil {
		return true
	}

	return false
}

// SetMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the MemberOf field.
func (o *MicrosoftGraphGroup) SetMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.MemberOf = &v
}

// GetMembersWithLicenseErrors returns the MembersWithLicenseErrors field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetMembersWithLicenseErrors() []MicrosoftGraphDirectoryObject {
	if o == nil || o.MembersWithLicenseErrors == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.MembersWithLicenseErrors
}

// GetMembersWithLicenseErrorsOk returns a tuple with the MembersWithLicenseErrors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetMembersWithLicenseErrorsOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.MembersWithLicenseErrors == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.MembersWithLicenseErrors, true
}

// HasMembersWithLicenseErrors returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasMembersWithLicenseErrors() bool {
	if o != nil && o.MembersWithLicenseErrors != nil {
		return true
	}

	return false
}

// SetMembersWithLicenseErrors gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the MembersWithLicenseErrors field.
func (o *MicrosoftGraphGroup) SetMembersWithLicenseErrors(v []MicrosoftGraphDirectoryObject) {
	o.MembersWithLicenseErrors = &v
}

// GetTransitiveMembers returns the TransitiveMembers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetTransitiveMembers() []MicrosoftGraphDirectoryObject {
	if o == nil || o.TransitiveMembers == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.TransitiveMembers
}

// GetTransitiveMembersOk returns a tuple with the TransitiveMembers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetTransitiveMembersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.TransitiveMembers == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.TransitiveMembers, true
}

// HasTransitiveMembers returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasTransitiveMembers() bool {
	if o != nil && o.TransitiveMembers != nil {
		return true
	}

	return false
}

// SetTransitiveMembers gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the TransitiveMembers field.
func (o *MicrosoftGraphGroup) SetTransitiveMembers(v []MicrosoftGraphDirectoryObject) {
	o.TransitiveMembers = &v
}

// GetTransitiveMemberOf returns the TransitiveMemberOf field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetTransitiveMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.TransitiveMemberOf
}

// GetTransitiveMemberOfOk returns a tuple with the TransitiveMemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetTransitiveMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.TransitiveMemberOf, true
}

// HasTransitiveMemberOf returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasTransitiveMemberOf() bool {
	if o != nil && o.TransitiveMemberOf != nil {
		return true
	}

	return false
}

// SetTransitiveMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the TransitiveMemberOf field.
func (o *MicrosoftGraphGroup) SetTransitiveMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.TransitiveMemberOf = &v
}

// GetCreatedOnBehalfOf returns the CreatedOnBehalfOf field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetCreatedOnBehalfOf() AnyOfmicrosoftGraphDirectoryObject {
	if o == nil || o.CreatedOnBehalfOf == nil {
		var ret AnyOfmicrosoftGraphDirectoryObject
		return ret
	}
	return *o.CreatedOnBehalfOf
}

// GetCreatedOnBehalfOfOk returns a tuple with the CreatedOnBehalfOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetCreatedOnBehalfOfOk() (AnyOfmicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.CreatedOnBehalfOf == nil {
		var ret AnyOfmicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.CreatedOnBehalfOf, true
}

// HasCreatedOnBehalfOf returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasCreatedOnBehalfOf() bool {
	if o != nil && o.CreatedOnBehalfOf != nil {
		return true
	}

	return false
}

// SetCreatedOnBehalfOf gets a reference to the given AnyOfmicrosoftGraphDirectoryObject and assigns it to the CreatedOnBehalfOf field.
func (o *MicrosoftGraphGroup) SetCreatedOnBehalfOf(v AnyOfmicrosoftGraphDirectoryObject) {
	o.CreatedOnBehalfOf = &v
}

// SetCreatedOnBehalfOfExplicitNull (un)sets CreatedOnBehalfOf to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedOnBehalfOf value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetCreatedOnBehalfOfExplicitNull(b bool) {
	o.CreatedOnBehalfOf = nil
	o.isExplicitNullCreatedOnBehalfOf = b
}
// GetOwners returns the Owners field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOwners() []MicrosoftGraphDirectoryObject {
	if o == nil || o.Owners == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOwnersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.Owners == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOwners() bool {
	if o != nil && o.Owners != nil {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the Owners field.
func (o *MicrosoftGraphGroup) SetOwners(v []MicrosoftGraphDirectoryObject) {
	o.Owners = &v
}

// GetSettings returns the Settings field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetSettings() []MicrosoftGraphGroupSetting {
	if o == nil || o.Settings == nil {
		var ret []MicrosoftGraphGroupSetting
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetSettingsOk() ([]MicrosoftGraphGroupSetting, bool) {
	if o == nil || o.Settings == nil {
		var ret []MicrosoftGraphGroupSetting
		return ret, false
	}
	return *o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []MicrosoftGraphGroupSetting and assigns it to the Settings field.
func (o *MicrosoftGraphGroup) SetSettings(v []MicrosoftGraphGroupSetting) {
	o.Settings = &v
}

// GetConversations returns the Conversations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetConversations() []MicrosoftGraphConversation {
	if o == nil || o.Conversations == nil {
		var ret []MicrosoftGraphConversation
		return ret
	}
	return *o.Conversations
}

// GetConversationsOk returns a tuple with the Conversations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetConversationsOk() ([]MicrosoftGraphConversation, bool) {
	if o == nil || o.Conversations == nil {
		var ret []MicrosoftGraphConversation
		return ret, false
	}
	return *o.Conversations, true
}

// HasConversations returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasConversations() bool {
	if o != nil && o.Conversations != nil {
		return true
	}

	return false
}

// SetConversations gets a reference to the given []MicrosoftGraphConversation and assigns it to the Conversations field.
func (o *MicrosoftGraphGroup) SetConversations(v []MicrosoftGraphConversation) {
	o.Conversations = &v
}

// GetPhotos returns the Photos field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetPhotos() []MicrosoftGraphProfilePhoto {
	if o == nil || o.Photos == nil {
		var ret []MicrosoftGraphProfilePhoto
		return ret
	}
	return *o.Photos
}

// GetPhotosOk returns a tuple with the Photos field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetPhotosOk() ([]MicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photos == nil {
		var ret []MicrosoftGraphProfilePhoto
		return ret, false
	}
	return *o.Photos, true
}

// HasPhotos returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasPhotos() bool {
	if o != nil && o.Photos != nil {
		return true
	}

	return false
}

// SetPhotos gets a reference to the given []MicrosoftGraphProfilePhoto and assigns it to the Photos field.
func (o *MicrosoftGraphGroup) SetPhotos(v []MicrosoftGraphProfilePhoto) {
	o.Photos = &v
}

// GetAcceptedSenders returns the AcceptedSenders field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetAcceptedSenders() []MicrosoftGraphDirectoryObject {
	if o == nil || o.AcceptedSenders == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.AcceptedSenders
}

// GetAcceptedSendersOk returns a tuple with the AcceptedSenders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetAcceptedSendersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.AcceptedSenders == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.AcceptedSenders, true
}

// HasAcceptedSenders returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasAcceptedSenders() bool {
	if o != nil && o.AcceptedSenders != nil {
		return true
	}

	return false
}

// SetAcceptedSenders gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the AcceptedSenders field.
func (o *MicrosoftGraphGroup) SetAcceptedSenders(v []MicrosoftGraphDirectoryObject) {
	o.AcceptedSenders = &v
}

// GetRejectedSenders returns the RejectedSenders field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetRejectedSenders() []MicrosoftGraphDirectoryObject {
	if o == nil || o.RejectedSenders == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.RejectedSenders
}

// GetRejectedSendersOk returns a tuple with the RejectedSenders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetRejectedSendersOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.RejectedSenders == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.RejectedSenders, true
}

// HasRejectedSenders returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasRejectedSenders() bool {
	if o != nil && o.RejectedSenders != nil {
		return true
	}

	return false
}

// SetRejectedSenders gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the RejectedSenders field.
func (o *MicrosoftGraphGroup) SetRejectedSenders(v []MicrosoftGraphDirectoryObject) {
	o.RejectedSenders = &v
}

// GetThreads returns the Threads field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetThreads() []MicrosoftGraphConversationThread {
	if o == nil || o.Threads == nil {
		var ret []MicrosoftGraphConversationThread
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetThreadsOk() ([]MicrosoftGraphConversationThread, bool) {
	if o == nil || o.Threads == nil {
		var ret []MicrosoftGraphConversationThread
		return ret, false
	}
	return *o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasThreads() bool {
	if o != nil && o.Threads != nil {
		return true
	}

	return false
}

// SetThreads gets a reference to the given []MicrosoftGraphConversationThread and assigns it to the Threads field.
func (o *MicrosoftGraphGroup) SetThreads(v []MicrosoftGraphConversationThread) {
	o.Threads = &v
}

// GetCalendar returns the Calendar field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetCalendar() AnyOfmicrosoftGraphCalendar {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetCalendarOk() (AnyOfmicrosoftGraphCalendar, bool) {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret, false
	}
	return *o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasCalendar() bool {
	if o != nil && o.Calendar != nil {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given AnyOfmicrosoftGraphCalendar and assigns it to the Calendar field.
func (o *MicrosoftGraphGroup) SetCalendar(v AnyOfmicrosoftGraphCalendar) {
	o.Calendar = &v
}

// SetCalendarExplicitNull (un)sets Calendar to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Calendar value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetCalendarExplicitNull(b bool) {
	o.Calendar = nil
	o.isExplicitNullCalendar = b
}
// GetCalendarView returns the CalendarView field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetCalendarView() []MicrosoftGraphEvent {
	if o == nil || o.CalendarView == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.CalendarView
}

// GetCalendarViewOk returns a tuple with the CalendarView field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetCalendarViewOk() ([]MicrosoftGraphEvent, bool) {
	if o == nil || o.CalendarView == nil {
		var ret []MicrosoftGraphEvent
		return ret, false
	}
	return *o.CalendarView, true
}

// HasCalendarView returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasCalendarView() bool {
	if o != nil && o.CalendarView != nil {
		return true
	}

	return false
}

// SetCalendarView gets a reference to the given []MicrosoftGraphEvent and assigns it to the CalendarView field.
func (o *MicrosoftGraphGroup) SetCalendarView(v []MicrosoftGraphEvent) {
	o.CalendarView = &v
}

// GetEvents returns the Events field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetEvents() []MicrosoftGraphEvent {
	if o == nil || o.Events == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetEventsOk() ([]MicrosoftGraphEvent, bool) {
	if o == nil || o.Events == nil {
		var ret []MicrosoftGraphEvent
		return ret, false
	}
	return *o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []MicrosoftGraphEvent and assigns it to the Events field.
func (o *MicrosoftGraphGroup) SetEvents(v []MicrosoftGraphEvent) {
	o.Events = &v
}

// GetPhoto returns the Photo field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetPhoto() AnyOfmicrosoftGraphProfilePhoto {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetPhotoOk() (AnyOfmicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret, false
	}
	return *o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphProfilePhoto and assigns it to the Photo field.
func (o *MicrosoftGraphGroup) SetPhoto(v AnyOfmicrosoftGraphProfilePhoto) {
	o.Photo = &v
}

// SetPhotoExplicitNull (un)sets Photo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Photo value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetPhotoExplicitNull(b bool) {
	o.Photo = nil
	o.isExplicitNullPhoto = b
}
// GetDrive returns the Drive field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetDrive() AnyOfmicrosoftGraphDrive {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret
	}
	return *o.Drive
}

// GetDriveOk returns a tuple with the Drive field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetDriveOk() (AnyOfmicrosoftGraphDrive, bool) {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret, false
	}
	return *o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasDrive() bool {
	if o != nil && o.Drive != nil {
		return true
	}

	return false
}

// SetDrive gets a reference to the given AnyOfmicrosoftGraphDrive and assigns it to the Drive field.
func (o *MicrosoftGraphGroup) SetDrive(v AnyOfmicrosoftGraphDrive) {
	o.Drive = &v
}

// SetDriveExplicitNull (un)sets Drive to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Drive value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetDriveExplicitNull(b bool) {
	o.Drive = nil
	o.isExplicitNullDrive = b
}
// GetDrives returns the Drives field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetDrives() []MicrosoftGraphDrive {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret
	}
	return *o.Drives
}

// GetDrivesOk returns a tuple with the Drives field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetDrivesOk() ([]MicrosoftGraphDrive, bool) {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret, false
	}
	return *o.Drives, true
}

// HasDrives returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasDrives() bool {
	if o != nil && o.Drives != nil {
		return true
	}

	return false
}

// SetDrives gets a reference to the given []MicrosoftGraphDrive and assigns it to the Drives field.
func (o *MicrosoftGraphGroup) SetDrives(v []MicrosoftGraphDrive) {
	o.Drives = &v
}

// GetSites returns the Sites field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetSites() []MicrosoftGraphSite {
	if o == nil || o.Sites == nil {
		var ret []MicrosoftGraphSite
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetSitesOk() ([]MicrosoftGraphSite, bool) {
	if o == nil || o.Sites == nil {
		var ret []MicrosoftGraphSite
		return ret, false
	}
	return *o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []MicrosoftGraphSite and assigns it to the Sites field.
func (o *MicrosoftGraphGroup) SetSites(v []MicrosoftGraphSite) {
	o.Sites = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphGroup) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetGroupLifecyclePolicies returns the GroupLifecyclePolicies field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetGroupLifecyclePolicies() []MicrosoftGraphGroupLifecyclePolicy {
	if o == nil || o.GroupLifecyclePolicies == nil {
		var ret []MicrosoftGraphGroupLifecyclePolicy
		return ret
	}
	return *o.GroupLifecyclePolicies
}

// GetGroupLifecyclePoliciesOk returns a tuple with the GroupLifecyclePolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetGroupLifecyclePoliciesOk() ([]MicrosoftGraphGroupLifecyclePolicy, bool) {
	if o == nil || o.GroupLifecyclePolicies == nil {
		var ret []MicrosoftGraphGroupLifecyclePolicy
		return ret, false
	}
	return *o.GroupLifecyclePolicies, true
}

// HasGroupLifecyclePolicies returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasGroupLifecyclePolicies() bool {
	if o != nil && o.GroupLifecyclePolicies != nil {
		return true
	}

	return false
}

// SetGroupLifecyclePolicies gets a reference to the given []MicrosoftGraphGroupLifecyclePolicy and assigns it to the GroupLifecyclePolicies field.
func (o *MicrosoftGraphGroup) SetGroupLifecyclePolicies(v []MicrosoftGraphGroupLifecyclePolicy) {
	o.GroupLifecyclePolicies = &v
}

// GetPlanner returns the Planner field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetPlanner() AnyOfmicrosoftGraphPlannerGroup {
	if o == nil || o.Planner == nil {
		var ret AnyOfmicrosoftGraphPlannerGroup
		return ret
	}
	return *o.Planner
}

// GetPlannerOk returns a tuple with the Planner field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetPlannerOk() (AnyOfmicrosoftGraphPlannerGroup, bool) {
	if o == nil || o.Planner == nil {
		var ret AnyOfmicrosoftGraphPlannerGroup
		return ret, false
	}
	return *o.Planner, true
}

// HasPlanner returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasPlanner() bool {
	if o != nil && o.Planner != nil {
		return true
	}

	return false
}

// SetPlanner gets a reference to the given AnyOfmicrosoftGraphPlannerGroup and assigns it to the Planner field.
func (o *MicrosoftGraphGroup) SetPlanner(v AnyOfmicrosoftGraphPlannerGroup) {
	o.Planner = &v
}

// SetPlannerExplicitNull (un)sets Planner to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Planner value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetPlannerExplicitNull(b bool) {
	o.Planner = nil
	o.isExplicitNullPlanner = b
}
// GetOnenote returns the Onenote field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetOnenote() AnyOfmicrosoftGraphOnenote {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret
	}
	return *o.Onenote
}

// GetOnenoteOk returns a tuple with the Onenote field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetOnenoteOk() (AnyOfmicrosoftGraphOnenote, bool) {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret, false
	}
	return *o.Onenote, true
}

// HasOnenote returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasOnenote() bool {
	if o != nil && o.Onenote != nil {
		return true
	}

	return false
}

// SetOnenote gets a reference to the given AnyOfmicrosoftGraphOnenote and assigns it to the Onenote field.
func (o *MicrosoftGraphGroup) SetOnenote(v AnyOfmicrosoftGraphOnenote) {
	o.Onenote = &v
}

// SetOnenoteExplicitNull (un)sets Onenote to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Onenote value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetOnenoteExplicitNull(b bool) {
	o.Onenote = nil
	o.isExplicitNullOnenote = b
}
// GetTeam returns the Team field if non-nil, zero value otherwise.
func (o *MicrosoftGraphGroup) GetTeam() AnyOfmicrosoftGraphTeam {
	if o == nil || o.Team == nil {
		var ret AnyOfmicrosoftGraphTeam
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphGroup) GetTeamOk() (AnyOfmicrosoftGraphTeam, bool) {
	if o == nil || o.Team == nil {
		var ret AnyOfmicrosoftGraphTeam
		return ret, false
	}
	return *o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *MicrosoftGraphGroup) HasTeam() bool {
	if o != nil && o.Team != nil {
		return true
	}

	return false
}

// SetTeam gets a reference to the given AnyOfmicrosoftGraphTeam and assigns it to the Team field.
func (o *MicrosoftGraphGroup) SetTeam(v AnyOfmicrosoftGraphTeam) {
	o.Team = &v
}

// SetTeamExplicitNull (un)sets Team to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Team value is set to nil even if false is passed
func (o *MicrosoftGraphGroup) SetTeamExplicitNull(b bool) {
	o.Team = nil
	o.isExplicitNullTeam = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DeletedDateTime == nil {
		if o.isExplicitNullDeletedDateTime {
			toSerialize["deletedDateTime"] = o.DeletedDateTime
		}
	} else {
		toSerialize["deletedDateTime"] = o.DeletedDateTime
	}
	if o.AssignedLicenses != nil {
		toSerialize["assignedLicenses"] = o.AssignedLicenses
	}
	if o.Classification == nil {
		if o.isExplicitNullClassification {
			toSerialize["classification"] = o.Classification
		}
	} else {
		toSerialize["classification"] = o.Classification
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.HasMembersWithLicenseErrors == nil {
		if o.isExplicitNullHasMembersWithLicenseErrors {
			toSerialize["hasMembersWithLicenseErrors"] = o.HasMembersWithLicenseErrors
		}
	} else {
		toSerialize["hasMembersWithLicenseErrors"] = o.HasMembersWithLicenseErrors
	}
	if o.GroupTypes != nil {
		toSerialize["groupTypes"] = o.GroupTypes
	}
	if o.LicenseProcessingState == nil {
		if o.isExplicitNullLicenseProcessingState {
			toSerialize["licenseProcessingState"] = o.LicenseProcessingState
		}
	} else {
		toSerialize["licenseProcessingState"] = o.LicenseProcessingState
	}
	if o.Mail == nil {
		if o.isExplicitNullMail {
			toSerialize["mail"] = o.Mail
		}
	} else {
		toSerialize["mail"] = o.Mail
	}
	if o.MailEnabled == nil {
		if o.isExplicitNullMailEnabled {
			toSerialize["mailEnabled"] = o.MailEnabled
		}
	} else {
		toSerialize["mailEnabled"] = o.MailEnabled
	}
	if o.MailNickname == nil {
		if o.isExplicitNullMailNickname {
			toSerialize["mailNickname"] = o.MailNickname
		}
	} else {
		toSerialize["mailNickname"] = o.MailNickname
	}
	if o.OnPremisesLastSyncDateTime == nil {
		if o.isExplicitNullOnPremisesLastSyncDateTime {
			toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
		}
	} else {
		toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
	}
	if o.OnPremisesProvisioningErrors != nil {
		toSerialize["onPremisesProvisioningErrors"] = o.OnPremisesProvisioningErrors
	}
	if o.OnPremisesSecurityIdentifier == nil {
		if o.isExplicitNullOnPremisesSecurityIdentifier {
			toSerialize["onPremisesSecurityIdentifier"] = o.OnPremisesSecurityIdentifier
		}
	} else {
		toSerialize["onPremisesSecurityIdentifier"] = o.OnPremisesSecurityIdentifier
	}
	if o.OnPremisesSyncEnabled == nil {
		if o.isExplicitNullOnPremisesSyncEnabled {
			toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
		}
	} else {
		toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
	}
	if o.PreferredDataLocation == nil {
		if o.isExplicitNullPreferredDataLocation {
			toSerialize["preferredDataLocation"] = o.PreferredDataLocation
		}
	} else {
		toSerialize["preferredDataLocation"] = o.PreferredDataLocation
	}
	if o.ProxyAddresses != nil {
		toSerialize["proxyAddresses"] = o.ProxyAddresses
	}
	if o.RenewedDateTime == nil {
		if o.isExplicitNullRenewedDateTime {
			toSerialize["renewedDateTime"] = o.RenewedDateTime
		}
	} else {
		toSerialize["renewedDateTime"] = o.RenewedDateTime
	}
	if o.SecurityEnabled == nil {
		if o.isExplicitNullSecurityEnabled {
			toSerialize["securityEnabled"] = o.SecurityEnabled
		}
	} else {
		toSerialize["securityEnabled"] = o.SecurityEnabled
	}
	if o.Visibility == nil {
		if o.isExplicitNullVisibility {
			toSerialize["visibility"] = o.Visibility
		}
	} else {
		toSerialize["visibility"] = o.Visibility
	}
	if o.AllowExternalSenders == nil {
		if o.isExplicitNullAllowExternalSenders {
			toSerialize["allowExternalSenders"] = o.AllowExternalSenders
		}
	} else {
		toSerialize["allowExternalSenders"] = o.AllowExternalSenders
	}
	if o.AutoSubscribeNewMembers == nil {
		if o.isExplicitNullAutoSubscribeNewMembers {
			toSerialize["autoSubscribeNewMembers"] = o.AutoSubscribeNewMembers
		}
	} else {
		toSerialize["autoSubscribeNewMembers"] = o.AutoSubscribeNewMembers
	}
	if o.IsSubscribedByMail == nil {
		if o.isExplicitNullIsSubscribedByMail {
			toSerialize["isSubscribedByMail"] = o.IsSubscribedByMail
		}
	} else {
		toSerialize["isSubscribedByMail"] = o.IsSubscribedByMail
	}
	if o.UnseenCount == nil {
		if o.isExplicitNullUnseenCount {
			toSerialize["unseenCount"] = o.UnseenCount
		}
	} else {
		toSerialize["unseenCount"] = o.UnseenCount
	}
	if o.IsArchived == nil {
		if o.isExplicitNullIsArchived {
			toSerialize["isArchived"] = o.IsArchived
		}
	} else {
		toSerialize["isArchived"] = o.IsArchived
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.MemberOf != nil {
		toSerialize["memberOf"] = o.MemberOf
	}
	if o.MembersWithLicenseErrors != nil {
		toSerialize["membersWithLicenseErrors"] = o.MembersWithLicenseErrors
	}
	if o.TransitiveMembers != nil {
		toSerialize["transitiveMembers"] = o.TransitiveMembers
	}
	if o.TransitiveMemberOf != nil {
		toSerialize["transitiveMemberOf"] = o.TransitiveMemberOf
	}
	if o.CreatedOnBehalfOf == nil {
		if o.isExplicitNullCreatedOnBehalfOf {
			toSerialize["createdOnBehalfOf"] = o.CreatedOnBehalfOf
		}
	} else {
		toSerialize["createdOnBehalfOf"] = o.CreatedOnBehalfOf
	}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.Conversations != nil {
		toSerialize["conversations"] = o.Conversations
	}
	if o.Photos != nil {
		toSerialize["photos"] = o.Photos
	}
	if o.AcceptedSenders != nil {
		toSerialize["acceptedSenders"] = o.AcceptedSenders
	}
	if o.RejectedSenders != nil {
		toSerialize["rejectedSenders"] = o.RejectedSenders
	}
	if o.Threads != nil {
		toSerialize["threads"] = o.Threads
	}
	if o.Calendar == nil {
		if o.isExplicitNullCalendar {
			toSerialize["calendar"] = o.Calendar
		}
	} else {
		toSerialize["calendar"] = o.Calendar
	}
	if o.CalendarView != nil {
		toSerialize["calendarView"] = o.CalendarView
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.Photo == nil {
		if o.isExplicitNullPhoto {
			toSerialize["photo"] = o.Photo
		}
	} else {
		toSerialize["photo"] = o.Photo
	}
	if o.Drive == nil {
		if o.isExplicitNullDrive {
			toSerialize["drive"] = o.Drive
		}
	} else {
		toSerialize["drive"] = o.Drive
	}
	if o.Drives != nil {
		toSerialize["drives"] = o.Drives
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.GroupLifecyclePolicies != nil {
		toSerialize["groupLifecyclePolicies"] = o.GroupLifecyclePolicies
	}
	if o.Planner == nil {
		if o.isExplicitNullPlanner {
			toSerialize["planner"] = o.Planner
		}
	} else {
		toSerialize["planner"] = o.Planner
	}
	if o.Onenote == nil {
		if o.isExplicitNullOnenote {
			toSerialize["onenote"] = o.Onenote
		}
	} else {
		toSerialize["onenote"] = o.Onenote
	}
	if o.Team == nil {
		if o.isExplicitNullTeam {
			toSerialize["team"] = o.Team
		}
	} else {
		toSerialize["team"] = o.Team
	}
	return json.Marshal(toSerialize)
}


