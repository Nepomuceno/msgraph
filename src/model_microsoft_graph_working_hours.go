/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphWorkingHours struct for MicrosoftGraphWorkingHours
type MicrosoftGraphWorkingHours struct {
	DaysOfWeek *[]AnyOfmicrosoftGraphDayOfWeek `json:"daysOfWeek,omitempty"`

	StartTime *string `json:"startTime,omitempty"`
	isExplicitNullStartTime bool `json:"-"`
	EndTime *string `json:"endTime,omitempty"`
	isExplicitNullEndTime bool `json:"-"`
	TimeZone *AnyOfmicrosoftGraphTimeZoneBase `json:"timeZone,omitempty"`
	isExplicitNullTimeZone bool `json:"-"`
}

// GetDaysOfWeek returns the DaysOfWeek field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkingHours) GetDaysOfWeek() []AnyOfmicrosoftGraphDayOfWeek {
	if o == nil || o.DaysOfWeek == nil {
		var ret []AnyOfmicrosoftGraphDayOfWeek
		return ret
	}
	return *o.DaysOfWeek
}

// GetDaysOfWeekOk returns a tuple with the DaysOfWeek field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkingHours) GetDaysOfWeekOk() ([]AnyOfmicrosoftGraphDayOfWeek, bool) {
	if o == nil || o.DaysOfWeek == nil {
		var ret []AnyOfmicrosoftGraphDayOfWeek
		return ret, false
	}
	return *o.DaysOfWeek, true
}

// HasDaysOfWeek returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkingHours) HasDaysOfWeek() bool {
	if o != nil && o.DaysOfWeek != nil {
		return true
	}

	return false
}

// SetDaysOfWeek gets a reference to the given []AnyOfmicrosoftGraphDayOfWeek and assigns it to the DaysOfWeek field.
func (o *MicrosoftGraphWorkingHours) SetDaysOfWeek(v []AnyOfmicrosoftGraphDayOfWeek) {
	o.DaysOfWeek = &v
}

// GetStartTime returns the StartTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkingHours) GetStartTime() string {
	if o == nil || o.StartTime == nil {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkingHours) GetStartTimeOk() (string, bool) {
	if o == nil || o.StartTime == nil {
		var ret string
		return ret, false
	}
	return *o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkingHours) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *MicrosoftGraphWorkingHours) SetStartTime(v string) {
	o.StartTime = &v
}

// SetStartTimeExplicitNull (un)sets StartTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartTime value is set to nil even if false is passed
func (o *MicrosoftGraphWorkingHours) SetStartTimeExplicitNull(b bool) {
	o.StartTime = nil
	o.isExplicitNullStartTime = b
}
// GetEndTime returns the EndTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkingHours) GetEndTime() string {
	if o == nil || o.EndTime == nil {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkingHours) GetEndTimeOk() (string, bool) {
	if o == nil || o.EndTime == nil {
		var ret string
		return ret, false
	}
	return *o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkingHours) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *MicrosoftGraphWorkingHours) SetEndTime(v string) {
	o.EndTime = &v
}

// SetEndTimeExplicitNull (un)sets EndTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EndTime value is set to nil even if false is passed
func (o *MicrosoftGraphWorkingHours) SetEndTimeExplicitNull(b bool) {
	o.EndTime = nil
	o.isExplicitNullEndTime = b
}
// GetTimeZone returns the TimeZone field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWorkingHours) GetTimeZone() AnyOfmicrosoftGraphTimeZoneBase {
	if o == nil || o.TimeZone == nil {
		var ret AnyOfmicrosoftGraphTimeZoneBase
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWorkingHours) GetTimeZoneOk() (AnyOfmicrosoftGraphTimeZoneBase, bool) {
	if o == nil || o.TimeZone == nil {
		var ret AnyOfmicrosoftGraphTimeZoneBase
		return ret, false
	}
	return *o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphWorkingHours) HasTimeZone() bool {
	if o != nil && o.TimeZone != nil {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given AnyOfmicrosoftGraphTimeZoneBase and assigns it to the TimeZone field.
func (o *MicrosoftGraphWorkingHours) SetTimeZone(v AnyOfmicrosoftGraphTimeZoneBase) {
	o.TimeZone = &v
}

// SetTimeZoneExplicitNull (un)sets TimeZone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TimeZone value is set to nil even if false is passed
func (o *MicrosoftGraphWorkingHours) SetTimeZoneExplicitNull(b bool) {
	o.TimeZone = nil
	o.isExplicitNullTimeZone = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWorkingHours) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DaysOfWeek != nil {
		toSerialize["daysOfWeek"] = o.DaysOfWeek
	}
	if o.StartTime == nil {
		if o.isExplicitNullStartTime {
			toSerialize["startTime"] = o.StartTime
		}
	} else {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTime == nil {
		if o.isExplicitNullEndTime {
			toSerialize["endTime"] = o.EndTime
		}
	} else {
		toSerialize["endTime"] = o.EndTime
	}
	if o.TimeZone == nil {
		if o.isExplicitNullTimeZone {
			toSerialize["timeZone"] = o.TimeZone
		}
	} else {
		toSerialize["timeZone"] = o.TimeZone
	}
	return json.Marshal(toSerialize)
}


