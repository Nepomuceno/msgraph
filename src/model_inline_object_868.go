/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject868 struct for InlineObject868
type InlineObject868 struct {
	X *AnyOfobject `json:"x,omitempty"`
	isExplicitNullX bool `json:"-"`
	Lambda *AnyOfobject `json:"lambda,omitempty"`
	isExplicitNullLambda bool `json:"-"`
	Cumulative *AnyOfobject `json:"cumulative,omitempty"`
	isExplicitNullCumulative bool `json:"-"`
}

// GetX returns the X field if non-nil, zero value otherwise.
func (o *InlineObject868) GetX() AnyOfobject {
	if o == nil || o.X == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject868) GetXOk() (AnyOfobject, bool) {
	if o == nil || o.X == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InlineObject868) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given AnyOfobject and assigns it to the X field.
func (o *InlineObject868) SetX(v AnyOfobject) {
	o.X = &v
}

// SetXExplicitNull (un)sets X to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The X value is set to nil even if false is passed
func (o *InlineObject868) SetXExplicitNull(b bool) {
	o.X = nil
	o.isExplicitNullX = b
}
// GetLambda returns the Lambda field if non-nil, zero value otherwise.
func (o *InlineObject868) GetLambda() AnyOfobject {
	if o == nil || o.Lambda == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Lambda
}

// GetLambdaOk returns a tuple with the Lambda field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject868) GetLambdaOk() (AnyOfobject, bool) {
	if o == nil || o.Lambda == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Lambda, true
}

// HasLambda returns a boolean if a field has been set.
func (o *InlineObject868) HasLambda() bool {
	if o != nil && o.Lambda != nil {
		return true
	}

	return false
}

// SetLambda gets a reference to the given AnyOfobject and assigns it to the Lambda field.
func (o *InlineObject868) SetLambda(v AnyOfobject) {
	o.Lambda = &v
}

// SetLambdaExplicitNull (un)sets Lambda to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Lambda value is set to nil even if false is passed
func (o *InlineObject868) SetLambdaExplicitNull(b bool) {
	o.Lambda = nil
	o.isExplicitNullLambda = b
}
// GetCumulative returns the Cumulative field if non-nil, zero value otherwise.
func (o *InlineObject868) GetCumulative() AnyOfobject {
	if o == nil || o.Cumulative == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Cumulative
}

// GetCumulativeOk returns a tuple with the Cumulative field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject868) GetCumulativeOk() (AnyOfobject, bool) {
	if o == nil || o.Cumulative == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Cumulative, true
}

// HasCumulative returns a boolean if a field has been set.
func (o *InlineObject868) HasCumulative() bool {
	if o != nil && o.Cumulative != nil {
		return true
	}

	return false
}

// SetCumulative gets a reference to the given AnyOfobject and assigns it to the Cumulative field.
func (o *InlineObject868) SetCumulative(v AnyOfobject) {
	o.Cumulative = &v
}

// SetCumulativeExplicitNull (un)sets Cumulative to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Cumulative value is set to nil even if false is passed
func (o *InlineObject868) SetCumulativeExplicitNull(b bool) {
	o.Cumulative = nil
	o.isExplicitNullCumulative = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject868) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X == nil {
		if o.isExplicitNullX {
			toSerialize["x"] = o.X
		}
	} else {
		toSerialize["x"] = o.X
	}
	if o.Lambda == nil {
		if o.isExplicitNullLambda {
			toSerialize["lambda"] = o.Lambda
		}
	} else {
		toSerialize["lambda"] = o.Lambda
	}
	if o.Cumulative == nil {
		if o.isExplicitNullCumulative {
			toSerialize["cumulative"] = o.Cumulative
		}
	} else {
		toSerialize["cumulative"] = o.Cumulative
	}
	return json.Marshal(toSerialize)
}


