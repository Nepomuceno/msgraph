/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Permission struct for Permission
type Permission struct {
	GrantedTo *AnyOfmicrosoftGraphIdentitySet `json:"grantedTo,omitempty"`
	isExplicitNullGrantedTo bool `json:"-"`
	InheritedFrom *AnyOfmicrosoftGraphItemReference `json:"inheritedFrom,omitempty"`
	isExplicitNullInheritedFrom bool `json:"-"`
	Invitation *AnyOfmicrosoftGraphSharingInvitation `json:"invitation,omitempty"`
	isExplicitNullInvitation bool `json:"-"`
	Link *AnyOfmicrosoftGraphSharingLink `json:"link,omitempty"`
	isExplicitNullLink bool `json:"-"`
	Roles *[]string `json:"roles,omitempty"`

	ShareId *string `json:"shareId,omitempty"`
	isExplicitNullShareId bool `json:"-"`
}

// GetGrantedTo returns the GrantedTo field if non-nil, zero value otherwise.
func (o *Permission) GetGrantedTo() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.GrantedTo == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.GrantedTo
}

// GetGrantedToOk returns a tuple with the GrantedTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetGrantedToOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.GrantedTo == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.GrantedTo, true
}

// HasGrantedTo returns a boolean if a field has been set.
func (o *Permission) HasGrantedTo() bool {
	if o != nil && o.GrantedTo != nil {
		return true
	}

	return false
}

// SetGrantedTo gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the GrantedTo field.
func (o *Permission) SetGrantedTo(v AnyOfmicrosoftGraphIdentitySet) {
	o.GrantedTo = &v
}

// SetGrantedToExplicitNull (un)sets GrantedTo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GrantedTo value is set to nil even if false is passed
func (o *Permission) SetGrantedToExplicitNull(b bool) {
	o.GrantedTo = nil
	o.isExplicitNullGrantedTo = b
}
// GetInheritedFrom returns the InheritedFrom field if non-nil, zero value otherwise.
func (o *Permission) GetInheritedFrom() AnyOfmicrosoftGraphItemReference {
	if o == nil || o.InheritedFrom == nil {
		var ret AnyOfmicrosoftGraphItemReference
		return ret
	}
	return *o.InheritedFrom
}

// GetInheritedFromOk returns a tuple with the InheritedFrom field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetInheritedFromOk() (AnyOfmicrosoftGraphItemReference, bool) {
	if o == nil || o.InheritedFrom == nil {
		var ret AnyOfmicrosoftGraphItemReference
		return ret, false
	}
	return *o.InheritedFrom, true
}

// HasInheritedFrom returns a boolean if a field has been set.
func (o *Permission) HasInheritedFrom() bool {
	if o != nil && o.InheritedFrom != nil {
		return true
	}

	return false
}

// SetInheritedFrom gets a reference to the given AnyOfmicrosoftGraphItemReference and assigns it to the InheritedFrom field.
func (o *Permission) SetInheritedFrom(v AnyOfmicrosoftGraphItemReference) {
	o.InheritedFrom = &v
}

// SetInheritedFromExplicitNull (un)sets InheritedFrom to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InheritedFrom value is set to nil even if false is passed
func (o *Permission) SetInheritedFromExplicitNull(b bool) {
	o.InheritedFrom = nil
	o.isExplicitNullInheritedFrom = b
}
// GetInvitation returns the Invitation field if non-nil, zero value otherwise.
func (o *Permission) GetInvitation() AnyOfmicrosoftGraphSharingInvitation {
	if o == nil || o.Invitation == nil {
		var ret AnyOfmicrosoftGraphSharingInvitation
		return ret
	}
	return *o.Invitation
}

// GetInvitationOk returns a tuple with the Invitation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetInvitationOk() (AnyOfmicrosoftGraphSharingInvitation, bool) {
	if o == nil || o.Invitation == nil {
		var ret AnyOfmicrosoftGraphSharingInvitation
		return ret, false
	}
	return *o.Invitation, true
}

// HasInvitation returns a boolean if a field has been set.
func (o *Permission) HasInvitation() bool {
	if o != nil && o.Invitation != nil {
		return true
	}

	return false
}

// SetInvitation gets a reference to the given AnyOfmicrosoftGraphSharingInvitation and assigns it to the Invitation field.
func (o *Permission) SetInvitation(v AnyOfmicrosoftGraphSharingInvitation) {
	o.Invitation = &v
}

// SetInvitationExplicitNull (un)sets Invitation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Invitation value is set to nil even if false is passed
func (o *Permission) SetInvitationExplicitNull(b bool) {
	o.Invitation = nil
	o.isExplicitNullInvitation = b
}
// GetLink returns the Link field if non-nil, zero value otherwise.
func (o *Permission) GetLink() AnyOfmicrosoftGraphSharingLink {
	if o == nil || o.Link == nil {
		var ret AnyOfmicrosoftGraphSharingLink
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetLinkOk() (AnyOfmicrosoftGraphSharingLink, bool) {
	if o == nil || o.Link == nil {
		var ret AnyOfmicrosoftGraphSharingLink
		return ret, false
	}
	return *o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *Permission) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given AnyOfmicrosoftGraphSharingLink and assigns it to the Link field.
func (o *Permission) SetLink(v AnyOfmicrosoftGraphSharingLink) {
	o.Link = &v
}

// SetLinkExplicitNull (un)sets Link to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Link value is set to nil even if false is passed
func (o *Permission) SetLinkExplicitNull(b bool) {
	o.Link = nil
	o.isExplicitNullLink = b
}
// GetRoles returns the Roles field if non-nil, zero value otherwise.
func (o *Permission) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetRolesOk() ([]string, bool) {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret, false
	}
	return *o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *Permission) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *Permission) SetRoles(v []string) {
	o.Roles = &v
}

// GetShareId returns the ShareId field if non-nil, zero value otherwise.
func (o *Permission) GetShareId() string {
	if o == nil || o.ShareId == nil {
		var ret string
		return ret
	}
	return *o.ShareId
}

// GetShareIdOk returns a tuple with the ShareId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetShareIdOk() (string, bool) {
	if o == nil || o.ShareId == nil {
		var ret string
		return ret, false
	}
	return *o.ShareId, true
}

// HasShareId returns a boolean if a field has been set.
func (o *Permission) HasShareId() bool {
	if o != nil && o.ShareId != nil {
		return true
	}

	return false
}

// SetShareId gets a reference to the given string and assigns it to the ShareId field.
func (o *Permission) SetShareId(v string) {
	o.ShareId = &v
}

// SetShareIdExplicitNull (un)sets ShareId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShareId value is set to nil even if false is passed
func (o *Permission) SetShareIdExplicitNull(b bool) {
	o.ShareId = nil
	o.isExplicitNullShareId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o Permission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GrantedTo == nil {
		if o.isExplicitNullGrantedTo {
			toSerialize["grantedTo"] = o.GrantedTo
		}
	} else {
		toSerialize["grantedTo"] = o.GrantedTo
	}
	if o.InheritedFrom == nil {
		if o.isExplicitNullInheritedFrom {
			toSerialize["inheritedFrom"] = o.InheritedFrom
		}
	} else {
		toSerialize["inheritedFrom"] = o.InheritedFrom
	}
	if o.Invitation == nil {
		if o.isExplicitNullInvitation {
			toSerialize["invitation"] = o.Invitation
		}
	} else {
		toSerialize["invitation"] = o.Invitation
	}
	if o.Link == nil {
		if o.isExplicitNullLink {
			toSerialize["link"] = o.Link
		}
	} else {
		toSerialize["link"] = o.Link
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.ShareId == nil {
		if o.isExplicitNullShareId {
			toSerialize["shareId"] = o.ShareId
		}
	} else {
		toSerialize["shareId"] = o.ShareId
	}
	return json.Marshal(toSerialize)
}


