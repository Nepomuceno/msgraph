/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphReminder struct for MicrosoftGraphReminder
type MicrosoftGraphReminder struct {
	EventId *string `json:"eventId,omitempty"`
	isExplicitNullEventId bool `json:"-"`
	EventStartTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"eventStartTime,omitempty"`
	isExplicitNullEventStartTime bool `json:"-"`
	EventEndTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"eventEndTime,omitempty"`
	isExplicitNullEventEndTime bool `json:"-"`
	ChangeKey *string `json:"changeKey,omitempty"`
	isExplicitNullChangeKey bool `json:"-"`
	EventSubject *string `json:"eventSubject,omitempty"`
	isExplicitNullEventSubject bool `json:"-"`
	EventLocation *AnyOfmicrosoftGraphLocation `json:"eventLocation,omitempty"`
	isExplicitNullEventLocation bool `json:"-"`
	EventWebLink *string `json:"eventWebLink,omitempty"`
	isExplicitNullEventWebLink bool `json:"-"`
	ReminderFireTime *AnyOfmicrosoftGraphDateTimeTimeZone `json:"reminderFireTime,omitempty"`
	isExplicitNullReminderFireTime bool `json:"-"`
}

// GetEventId returns the EventId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventId() string {
	if o == nil || o.EventId == nil {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventIdOk() (string, bool) {
	if o == nil || o.EventId == nil {
		var ret string
		return ret, false
	}
	return *o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventId() bool {
	if o != nil && o.EventId != nil {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *MicrosoftGraphReminder) SetEventId(v string) {
	o.EventId = &v
}

// SetEventIdExplicitNull (un)sets EventId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventId value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventIdExplicitNull(b bool) {
	o.EventId = nil
	o.isExplicitNullEventId = b
}
// GetEventStartTime returns the EventStartTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventStartTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.EventStartTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.EventStartTime
}

// GetEventStartTimeOk returns a tuple with the EventStartTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventStartTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.EventStartTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.EventStartTime, true
}

// HasEventStartTime returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventStartTime() bool {
	if o != nil && o.EventStartTime != nil {
		return true
	}

	return false
}

// SetEventStartTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the EventStartTime field.
func (o *MicrosoftGraphReminder) SetEventStartTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.EventStartTime = &v
}

// SetEventStartTimeExplicitNull (un)sets EventStartTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventStartTime value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventStartTimeExplicitNull(b bool) {
	o.EventStartTime = nil
	o.isExplicitNullEventStartTime = b
}
// GetEventEndTime returns the EventEndTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventEndTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.EventEndTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.EventEndTime
}

// GetEventEndTimeOk returns a tuple with the EventEndTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventEndTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.EventEndTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.EventEndTime, true
}

// HasEventEndTime returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventEndTime() bool {
	if o != nil && o.EventEndTime != nil {
		return true
	}

	return false
}

// SetEventEndTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the EventEndTime field.
func (o *MicrosoftGraphReminder) SetEventEndTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.EventEndTime = &v
}

// SetEventEndTimeExplicitNull (un)sets EventEndTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventEndTime value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventEndTimeExplicitNull(b bool) {
	o.EventEndTime = nil
	o.isExplicitNullEventEndTime = b
}
// GetChangeKey returns the ChangeKey field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetChangeKey() string {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey
}

// GetChangeKeyOk returns a tuple with the ChangeKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetChangeKeyOk() (string, bool) {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret, false
	}
	return *o.ChangeKey, true
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasChangeKey() bool {
	if o != nil && o.ChangeKey != nil {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given string and assigns it to the ChangeKey field.
func (o *MicrosoftGraphReminder) SetChangeKey(v string) {
	o.ChangeKey = &v
}

// SetChangeKeyExplicitNull (un)sets ChangeKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChangeKey value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetChangeKeyExplicitNull(b bool) {
	o.ChangeKey = nil
	o.isExplicitNullChangeKey = b
}
// GetEventSubject returns the EventSubject field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventSubject() string {
	if o == nil || o.EventSubject == nil {
		var ret string
		return ret
	}
	return *o.EventSubject
}

// GetEventSubjectOk returns a tuple with the EventSubject field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventSubjectOk() (string, bool) {
	if o == nil || o.EventSubject == nil {
		var ret string
		return ret, false
	}
	return *o.EventSubject, true
}

// HasEventSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventSubject() bool {
	if o != nil && o.EventSubject != nil {
		return true
	}

	return false
}

// SetEventSubject gets a reference to the given string and assigns it to the EventSubject field.
func (o *MicrosoftGraphReminder) SetEventSubject(v string) {
	o.EventSubject = &v
}

// SetEventSubjectExplicitNull (un)sets EventSubject to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventSubject value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventSubjectExplicitNull(b bool) {
	o.EventSubject = nil
	o.isExplicitNullEventSubject = b
}
// GetEventLocation returns the EventLocation field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventLocation() AnyOfmicrosoftGraphLocation {
	if o == nil || o.EventLocation == nil {
		var ret AnyOfmicrosoftGraphLocation
		return ret
	}
	return *o.EventLocation
}

// GetEventLocationOk returns a tuple with the EventLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventLocationOk() (AnyOfmicrosoftGraphLocation, bool) {
	if o == nil || o.EventLocation == nil {
		var ret AnyOfmicrosoftGraphLocation
		return ret, false
	}
	return *o.EventLocation, true
}

// HasEventLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventLocation() bool {
	if o != nil && o.EventLocation != nil {
		return true
	}

	return false
}

// SetEventLocation gets a reference to the given AnyOfmicrosoftGraphLocation and assigns it to the EventLocation field.
func (o *MicrosoftGraphReminder) SetEventLocation(v AnyOfmicrosoftGraphLocation) {
	o.EventLocation = &v
}

// SetEventLocationExplicitNull (un)sets EventLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventLocation value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventLocationExplicitNull(b bool) {
	o.EventLocation = nil
	o.isExplicitNullEventLocation = b
}
// GetEventWebLink returns the EventWebLink field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetEventWebLink() string {
	if o == nil || o.EventWebLink == nil {
		var ret string
		return ret
	}
	return *o.EventWebLink
}

// GetEventWebLinkOk returns a tuple with the EventWebLink field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetEventWebLinkOk() (string, bool) {
	if o == nil || o.EventWebLink == nil {
		var ret string
		return ret, false
	}
	return *o.EventWebLink, true
}

// HasEventWebLink returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasEventWebLink() bool {
	if o != nil && o.EventWebLink != nil {
		return true
	}

	return false
}

// SetEventWebLink gets a reference to the given string and assigns it to the EventWebLink field.
func (o *MicrosoftGraphReminder) SetEventWebLink(v string) {
	o.EventWebLink = &v
}

// SetEventWebLinkExplicitNull (un)sets EventWebLink to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EventWebLink value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetEventWebLinkExplicitNull(b bool) {
	o.EventWebLink = nil
	o.isExplicitNullEventWebLink = b
}
// GetReminderFireTime returns the ReminderFireTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphReminder) GetReminderFireTime() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.ReminderFireTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.ReminderFireTime
}

// GetReminderFireTimeOk returns a tuple with the ReminderFireTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphReminder) GetReminderFireTimeOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.ReminderFireTime == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.ReminderFireTime, true
}

// HasReminderFireTime returns a boolean if a field has been set.
func (o *MicrosoftGraphReminder) HasReminderFireTime() bool {
	if o != nil && o.ReminderFireTime != nil {
		return true
	}

	return false
}

// SetReminderFireTime gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the ReminderFireTime field.
func (o *MicrosoftGraphReminder) SetReminderFireTime(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.ReminderFireTime = &v
}

// SetReminderFireTimeExplicitNull (un)sets ReminderFireTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ReminderFireTime value is set to nil even if false is passed
func (o *MicrosoftGraphReminder) SetReminderFireTimeExplicitNull(b bool) {
	o.ReminderFireTime = nil
	o.isExplicitNullReminderFireTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphReminder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EventId == nil {
		if o.isExplicitNullEventId {
			toSerialize["eventId"] = o.EventId
		}
	} else {
		toSerialize["eventId"] = o.EventId
	}
	if o.EventStartTime == nil {
		if o.isExplicitNullEventStartTime {
			toSerialize["eventStartTime"] = o.EventStartTime
		}
	} else {
		toSerialize["eventStartTime"] = o.EventStartTime
	}
	if o.EventEndTime == nil {
		if o.isExplicitNullEventEndTime {
			toSerialize["eventEndTime"] = o.EventEndTime
		}
	} else {
		toSerialize["eventEndTime"] = o.EventEndTime
	}
	if o.ChangeKey == nil {
		if o.isExplicitNullChangeKey {
			toSerialize["changeKey"] = o.ChangeKey
		}
	} else {
		toSerialize["changeKey"] = o.ChangeKey
	}
	if o.EventSubject == nil {
		if o.isExplicitNullEventSubject {
			toSerialize["eventSubject"] = o.EventSubject
		}
	} else {
		toSerialize["eventSubject"] = o.EventSubject
	}
	if o.EventLocation == nil {
		if o.isExplicitNullEventLocation {
			toSerialize["eventLocation"] = o.EventLocation
		}
	} else {
		toSerialize["eventLocation"] = o.EventLocation
	}
	if o.EventWebLink == nil {
		if o.isExplicitNullEventWebLink {
			toSerialize["eventWebLink"] = o.EventWebLink
		}
	} else {
		toSerialize["eventWebLink"] = o.EventWebLink
	}
	if o.ReminderFireTime == nil {
		if o.isExplicitNullReminderFireTime {
			toSerialize["reminderFireTime"] = o.ReminderFireTime
		}
	} else {
		toSerialize["reminderFireTime"] = o.ReminderFireTime
	}
	return json.Marshal(toSerialize)
}


