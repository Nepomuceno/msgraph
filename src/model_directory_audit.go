/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// DirectoryAudit struct for DirectoryAudit
type DirectoryAudit struct {
	Category *string `json:"category,omitempty"`

	CorrelationId *string `json:"correlationId,omitempty"`
	isExplicitNullCorrelationId bool `json:"-"`
	Result *AnyOfmicrosoftGraphOperationResult `json:"result,omitempty"`
	isExplicitNullResult bool `json:"-"`
	ResultReason *string `json:"resultReason,omitempty"`
	isExplicitNullResultReason bool `json:"-"`
	ActivityDisplayName *string `json:"activityDisplayName,omitempty"`

	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`

	LoggedByService *string `json:"loggedByService,omitempty"`
	isExplicitNullLoggedByService bool `json:"-"`
	OperationType *string `json:"operationType,omitempty"`
	isExplicitNullOperationType bool `json:"-"`
	InitiatedBy *MicrosoftGraphAuditActivityInitiator `json:"initiatedBy,omitempty"`

	TargetResources *[]AnyOfmicrosoftGraphTargetResource `json:"targetResources,omitempty"`

	AdditionalDetails *[]AnyOfmicrosoftGraphKeyValue `json:"additionalDetails,omitempty"`

}

// GetCategory returns the Category field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetCategoryOk() (string, bool) {
	if o == nil || o.Category == nil {
		var ret string
		return ret, false
	}
	return *o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *DirectoryAudit) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *DirectoryAudit) SetCategory(v string) {
	o.Category = &v
}

// GetCorrelationId returns the CorrelationId field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetCorrelationId() string {
	if o == nil || o.CorrelationId == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetCorrelationIdOk() (string, bool) {
	if o == nil || o.CorrelationId == nil {
		var ret string
		return ret, false
	}
	return *o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *DirectoryAudit) HasCorrelationId() bool {
	if o != nil && o.CorrelationId != nil {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *DirectoryAudit) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// SetCorrelationIdExplicitNull (un)sets CorrelationId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CorrelationId value is set to nil even if false is passed
func (o *DirectoryAudit) SetCorrelationIdExplicitNull(b bool) {
	o.CorrelationId = nil
	o.isExplicitNullCorrelationId = b
}
// GetResult returns the Result field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetResult() AnyOfmicrosoftGraphOperationResult {
	if o == nil || o.Result == nil {
		var ret AnyOfmicrosoftGraphOperationResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetResultOk() (AnyOfmicrosoftGraphOperationResult, bool) {
	if o == nil || o.Result == nil {
		var ret AnyOfmicrosoftGraphOperationResult
		return ret, false
	}
	return *o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DirectoryAudit) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given AnyOfmicrosoftGraphOperationResult and assigns it to the Result field.
func (o *DirectoryAudit) SetResult(v AnyOfmicrosoftGraphOperationResult) {
	o.Result = &v
}

// SetResultExplicitNull (un)sets Result to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Result value is set to nil even if false is passed
func (o *DirectoryAudit) SetResultExplicitNull(b bool) {
	o.Result = nil
	o.isExplicitNullResult = b
}
// GetResultReason returns the ResultReason field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetResultReason() string {
	if o == nil || o.ResultReason == nil {
		var ret string
		return ret
	}
	return *o.ResultReason
}

// GetResultReasonOk returns a tuple with the ResultReason field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetResultReasonOk() (string, bool) {
	if o == nil || o.ResultReason == nil {
		var ret string
		return ret, false
	}
	return *o.ResultReason, true
}

// HasResultReason returns a boolean if a field has been set.
func (o *DirectoryAudit) HasResultReason() bool {
	if o != nil && o.ResultReason != nil {
		return true
	}

	return false
}

// SetResultReason gets a reference to the given string and assigns it to the ResultReason field.
func (o *DirectoryAudit) SetResultReason(v string) {
	o.ResultReason = &v
}

// SetResultReasonExplicitNull (un)sets ResultReason to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResultReason value is set to nil even if false is passed
func (o *DirectoryAudit) SetResultReasonExplicitNull(b bool) {
	o.ResultReason = nil
	o.isExplicitNullResultReason = b
}
// GetActivityDisplayName returns the ActivityDisplayName field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetActivityDisplayName() string {
	if o == nil || o.ActivityDisplayName == nil {
		var ret string
		return ret
	}
	return *o.ActivityDisplayName
}

// GetActivityDisplayNameOk returns a tuple with the ActivityDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetActivityDisplayNameOk() (string, bool) {
	if o == nil || o.ActivityDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.ActivityDisplayName, true
}

// HasActivityDisplayName returns a boolean if a field has been set.
func (o *DirectoryAudit) HasActivityDisplayName() bool {
	if o != nil && o.ActivityDisplayName != nil {
		return true
	}

	return false
}

// SetActivityDisplayName gets a reference to the given string and assigns it to the ActivityDisplayName field.
func (o *DirectoryAudit) SetActivityDisplayName(v string) {
	o.ActivityDisplayName = &v
}

// GetActivityDateTime returns the ActivityDateTime field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetActivityDateTime() time.Time {
	if o == nil || o.ActivityDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivityDateTime
}

// GetActivityDateTimeOk returns a tuple with the ActivityDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetActivityDateTimeOk() (time.Time, bool) {
	if o == nil || o.ActivityDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ActivityDateTime, true
}

// HasActivityDateTime returns a boolean if a field has been set.
func (o *DirectoryAudit) HasActivityDateTime() bool {
	if o != nil && o.ActivityDateTime != nil {
		return true
	}

	return false
}

// SetActivityDateTime gets a reference to the given time.Time and assigns it to the ActivityDateTime field.
func (o *DirectoryAudit) SetActivityDateTime(v time.Time) {
	o.ActivityDateTime = &v
}

// GetLoggedByService returns the LoggedByService field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetLoggedByService() string {
	if o == nil || o.LoggedByService == nil {
		var ret string
		return ret
	}
	return *o.LoggedByService
}

// GetLoggedByServiceOk returns a tuple with the LoggedByService field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetLoggedByServiceOk() (string, bool) {
	if o == nil || o.LoggedByService == nil {
		var ret string
		return ret, false
	}
	return *o.LoggedByService, true
}

// HasLoggedByService returns a boolean if a field has been set.
func (o *DirectoryAudit) HasLoggedByService() bool {
	if o != nil && o.LoggedByService != nil {
		return true
	}

	return false
}

// SetLoggedByService gets a reference to the given string and assigns it to the LoggedByService field.
func (o *DirectoryAudit) SetLoggedByService(v string) {
	o.LoggedByService = &v
}

// SetLoggedByServiceExplicitNull (un)sets LoggedByService to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LoggedByService value is set to nil even if false is passed
func (o *DirectoryAudit) SetLoggedByServiceExplicitNull(b bool) {
	o.LoggedByService = nil
	o.isExplicitNullLoggedByService = b
}
// GetOperationType returns the OperationType field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetOperationType() string {
	if o == nil || o.OperationType == nil {
		var ret string
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetOperationTypeOk() (string, bool) {
	if o == nil || o.OperationType == nil {
		var ret string
		return ret, false
	}
	return *o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *DirectoryAudit) HasOperationType() bool {
	if o != nil && o.OperationType != nil {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given string and assigns it to the OperationType field.
func (o *DirectoryAudit) SetOperationType(v string) {
	o.OperationType = &v
}

// SetOperationTypeExplicitNull (un)sets OperationType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OperationType value is set to nil even if false is passed
func (o *DirectoryAudit) SetOperationTypeExplicitNull(b bool) {
	o.OperationType = nil
	o.isExplicitNullOperationType = b
}
// GetInitiatedBy returns the InitiatedBy field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetInitiatedBy() MicrosoftGraphAuditActivityInitiator {
	if o == nil || o.InitiatedBy == nil {
		var ret MicrosoftGraphAuditActivityInitiator
		return ret
	}
	return *o.InitiatedBy
}

// GetInitiatedByOk returns a tuple with the InitiatedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetInitiatedByOk() (MicrosoftGraphAuditActivityInitiator, bool) {
	if o == nil || o.InitiatedBy == nil {
		var ret MicrosoftGraphAuditActivityInitiator
		return ret, false
	}
	return *o.InitiatedBy, true
}

// HasInitiatedBy returns a boolean if a field has been set.
func (o *DirectoryAudit) HasInitiatedBy() bool {
	if o != nil && o.InitiatedBy != nil {
		return true
	}

	return false
}

// SetInitiatedBy gets a reference to the given MicrosoftGraphAuditActivityInitiator and assigns it to the InitiatedBy field.
func (o *DirectoryAudit) SetInitiatedBy(v MicrosoftGraphAuditActivityInitiator) {
	o.InitiatedBy = &v
}

// GetTargetResources returns the TargetResources field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetTargetResources() []AnyOfmicrosoftGraphTargetResource {
	if o == nil || o.TargetResources == nil {
		var ret []AnyOfmicrosoftGraphTargetResource
		return ret
	}
	return *o.TargetResources
}

// GetTargetResourcesOk returns a tuple with the TargetResources field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetTargetResourcesOk() ([]AnyOfmicrosoftGraphTargetResource, bool) {
	if o == nil || o.TargetResources == nil {
		var ret []AnyOfmicrosoftGraphTargetResource
		return ret, false
	}
	return *o.TargetResources, true
}

// HasTargetResources returns a boolean if a field has been set.
func (o *DirectoryAudit) HasTargetResources() bool {
	if o != nil && o.TargetResources != nil {
		return true
	}

	return false
}

// SetTargetResources gets a reference to the given []AnyOfmicrosoftGraphTargetResource and assigns it to the TargetResources field.
func (o *DirectoryAudit) SetTargetResources(v []AnyOfmicrosoftGraphTargetResource) {
	o.TargetResources = &v
}

// GetAdditionalDetails returns the AdditionalDetails field if non-nil, zero value otherwise.
func (o *DirectoryAudit) GetAdditionalDetails() []AnyOfmicrosoftGraphKeyValue {
	if o == nil || o.AdditionalDetails == nil {
		var ret []AnyOfmicrosoftGraphKeyValue
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryAudit) GetAdditionalDetailsOk() ([]AnyOfmicrosoftGraphKeyValue, bool) {
	if o == nil || o.AdditionalDetails == nil {
		var ret []AnyOfmicrosoftGraphKeyValue
		return ret, false
	}
	return *o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *DirectoryAudit) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given []AnyOfmicrosoftGraphKeyValue and assigns it to the AdditionalDetails field.
func (o *DirectoryAudit) SetAdditionalDetails(v []AnyOfmicrosoftGraphKeyValue) {
	o.AdditionalDetails = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o DirectoryAudit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CorrelationId == nil {
		if o.isExplicitNullCorrelationId {
			toSerialize["correlationId"] = o.CorrelationId
		}
	} else {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if o.Result == nil {
		if o.isExplicitNullResult {
			toSerialize["result"] = o.Result
		}
	} else {
		toSerialize["result"] = o.Result
	}
	if o.ResultReason == nil {
		if o.isExplicitNullResultReason {
			toSerialize["resultReason"] = o.ResultReason
		}
	} else {
		toSerialize["resultReason"] = o.ResultReason
	}
	if o.ActivityDisplayName != nil {
		toSerialize["activityDisplayName"] = o.ActivityDisplayName
	}
	if o.ActivityDateTime != nil {
		toSerialize["activityDateTime"] = o.ActivityDateTime
	}
	if o.LoggedByService == nil {
		if o.isExplicitNullLoggedByService {
			toSerialize["loggedByService"] = o.LoggedByService
		}
	} else {
		toSerialize["loggedByService"] = o.LoggedByService
	}
	if o.OperationType == nil {
		if o.isExplicitNullOperationType {
			toSerialize["operationType"] = o.OperationType
		}
	} else {
		toSerialize["operationType"] = o.OperationType
	}
	if o.InitiatedBy != nil {
		toSerialize["initiatedBy"] = o.InitiatedBy
	}
	if o.TargetResources != nil {
		toSerialize["targetResources"] = o.TargetResources
	}
	if o.AdditionalDetails != nil {
		toSerialize["additionalDetails"] = o.AdditionalDetails
	}
	return json.Marshal(toSerialize)
}


