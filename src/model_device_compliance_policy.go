/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// DeviceCompliancePolicy This is the base class for Compliance policy. Compliance policies are platform specific and individual per-platform compliance policies inherit from here. 
type DeviceCompliancePolicy struct {
	// DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`

	// Version of the device configuration.
	Version *int32 `json:"version,omitempty"`

	ScheduledActionsForRule *[]MicrosoftGraphDeviceComplianceScheduledActionForRule `json:"scheduledActionsForRule,omitempty"`

	DeviceStatuses *[]MicrosoftGraphDeviceComplianceDeviceStatus `json:"deviceStatuses,omitempty"`

	UserStatuses *[]MicrosoftGraphDeviceComplianceUserStatus `json:"userStatuses,omitempty"`

	DeviceStatusOverview *AnyOfmicrosoftGraphDeviceComplianceDeviceOverview `json:"deviceStatusOverview,omitempty"`
	isExplicitNullDeviceStatusOverview bool `json:"-"`
	UserStatusOverview *AnyOfmicrosoftGraphDeviceComplianceUserOverview `json:"userStatusOverview,omitempty"`
	isExplicitNullUserStatusOverview bool `json:"-"`
	DeviceSettingStateSummaries *[]MicrosoftGraphSettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`

	Assignments *[]MicrosoftGraphDeviceCompliancePolicyAssignment `json:"assignments,omitempty"`

}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *DeviceCompliancePolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DeviceCompliancePolicy) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *DeviceCompliancePolicy) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *DeviceCompliancePolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DeviceCompliancePolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetVersionOk() (int32, bool) {
	if o == nil || o.Version == nil {
		var ret int32
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *DeviceCompliancePolicy) SetVersion(v int32) {
	o.Version = &v
}

// GetScheduledActionsForRule returns the ScheduledActionsForRule field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetScheduledActionsForRule() []MicrosoftGraphDeviceComplianceScheduledActionForRule {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret
	}
	return *o.ScheduledActionsForRule
}

// GetScheduledActionsForRuleOk returns a tuple with the ScheduledActionsForRule field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetScheduledActionsForRuleOk() ([]MicrosoftGraphDeviceComplianceScheduledActionForRule, bool) {
	if o == nil || o.ScheduledActionsForRule == nil {
		var ret []MicrosoftGraphDeviceComplianceScheduledActionForRule
		return ret, false
	}
	return *o.ScheduledActionsForRule, true
}

// HasScheduledActionsForRule returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasScheduledActionsForRule() bool {
	if o != nil && o.ScheduledActionsForRule != nil {
		return true
	}

	return false
}

// SetScheduledActionsForRule gets a reference to the given []MicrosoftGraphDeviceComplianceScheduledActionForRule and assigns it to the ScheduledActionsForRule field.
func (o *DeviceCompliancePolicy) SetScheduledActionsForRule(v []MicrosoftGraphDeviceComplianceScheduledActionForRule) {
	o.ScheduledActionsForRule = &v
}

// GetDeviceStatuses returns the DeviceStatuses field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetDeviceStatuses() []MicrosoftGraphDeviceComplianceDeviceStatus {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret
	}
	return *o.DeviceStatuses
}

// GetDeviceStatusesOk returns a tuple with the DeviceStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetDeviceStatusesOk() ([]MicrosoftGraphDeviceComplianceDeviceStatus, bool) {
	if o == nil || o.DeviceStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceDeviceStatus
		return ret, false
	}
	return *o.DeviceStatuses, true
}

// HasDeviceStatuses returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasDeviceStatuses() bool {
	if o != nil && o.DeviceStatuses != nil {
		return true
	}

	return false
}

// SetDeviceStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceDeviceStatus and assigns it to the DeviceStatuses field.
func (o *DeviceCompliancePolicy) SetDeviceStatuses(v []MicrosoftGraphDeviceComplianceDeviceStatus) {
	o.DeviceStatuses = &v
}

// GetUserStatuses returns the UserStatuses field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetUserStatuses() []MicrosoftGraphDeviceComplianceUserStatus {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret
	}
	return *o.UserStatuses
}

// GetUserStatusesOk returns a tuple with the UserStatuses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetUserStatusesOk() ([]MicrosoftGraphDeviceComplianceUserStatus, bool) {
	if o == nil || o.UserStatuses == nil {
		var ret []MicrosoftGraphDeviceComplianceUserStatus
		return ret, false
	}
	return *o.UserStatuses, true
}

// HasUserStatuses returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasUserStatuses() bool {
	if o != nil && o.UserStatuses != nil {
		return true
	}

	return false
}

// SetUserStatuses gets a reference to the given []MicrosoftGraphDeviceComplianceUserStatus and assigns it to the UserStatuses field.
func (o *DeviceCompliancePolicy) SetUserStatuses(v []MicrosoftGraphDeviceComplianceUserStatus) {
	o.UserStatuses = &v
}

// GetDeviceStatusOverview returns the DeviceStatusOverview field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetDeviceStatusOverview() AnyOfmicrosoftGraphDeviceComplianceDeviceOverview {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret
	}
	return *o.DeviceStatusOverview
}

// GetDeviceStatusOverviewOk returns a tuple with the DeviceStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetDeviceStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceDeviceOverview, bool) {
	if o == nil || o.DeviceStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceDeviceOverview
		return ret, false
	}
	return *o.DeviceStatusOverview, true
}

// HasDeviceStatusOverview returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasDeviceStatusOverview() bool {
	if o != nil && o.DeviceStatusOverview != nil {
		return true
	}

	return false
}

// SetDeviceStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceDeviceOverview and assigns it to the DeviceStatusOverview field.
func (o *DeviceCompliancePolicy) SetDeviceStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceDeviceOverview) {
	o.DeviceStatusOverview = &v
}

// SetDeviceStatusOverviewExplicitNull (un)sets DeviceStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceStatusOverview value is set to nil even if false is passed
func (o *DeviceCompliancePolicy) SetDeviceStatusOverviewExplicitNull(b bool) {
	o.DeviceStatusOverview = nil
	o.isExplicitNullDeviceStatusOverview = b
}
// GetUserStatusOverview returns the UserStatusOverview field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetUserStatusOverview() AnyOfmicrosoftGraphDeviceComplianceUserOverview {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret
	}
	return *o.UserStatusOverview
}

// GetUserStatusOverviewOk returns a tuple with the UserStatusOverview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetUserStatusOverviewOk() (AnyOfmicrosoftGraphDeviceComplianceUserOverview, bool) {
	if o == nil || o.UserStatusOverview == nil {
		var ret AnyOfmicrosoftGraphDeviceComplianceUserOverview
		return ret, false
	}
	return *o.UserStatusOverview, true
}

// HasUserStatusOverview returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasUserStatusOverview() bool {
	if o != nil && o.UserStatusOverview != nil {
		return true
	}

	return false
}

// SetUserStatusOverview gets a reference to the given AnyOfmicrosoftGraphDeviceComplianceUserOverview and assigns it to the UserStatusOverview field.
func (o *DeviceCompliancePolicy) SetUserStatusOverview(v AnyOfmicrosoftGraphDeviceComplianceUserOverview) {
	o.UserStatusOverview = &v
}

// SetUserStatusOverviewExplicitNull (un)sets UserStatusOverview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserStatusOverview value is set to nil even if false is passed
func (o *DeviceCompliancePolicy) SetUserStatusOverviewExplicitNull(b bool) {
	o.UserStatusOverview = nil
	o.isExplicitNullUserStatusOverview = b
}
// GetDeviceSettingStateSummaries returns the DeviceSettingStateSummaries field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetDeviceSettingStateSummaries() []MicrosoftGraphSettingStateDeviceSummary {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret
	}
	return *o.DeviceSettingStateSummaries
}

// GetDeviceSettingStateSummariesOk returns a tuple with the DeviceSettingStateSummaries field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetDeviceSettingStateSummariesOk() ([]MicrosoftGraphSettingStateDeviceSummary, bool) {
	if o == nil || o.DeviceSettingStateSummaries == nil {
		var ret []MicrosoftGraphSettingStateDeviceSummary
		return ret, false
	}
	return *o.DeviceSettingStateSummaries, true
}

// HasDeviceSettingStateSummaries returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasDeviceSettingStateSummaries() bool {
	if o != nil && o.DeviceSettingStateSummaries != nil {
		return true
	}

	return false
}

// SetDeviceSettingStateSummaries gets a reference to the given []MicrosoftGraphSettingStateDeviceSummary and assigns it to the DeviceSettingStateSummaries field.
func (o *DeviceCompliancePolicy) SetDeviceSettingStateSummaries(v []MicrosoftGraphSettingStateDeviceSummary) {
	o.DeviceSettingStateSummaries = &v
}

// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *DeviceCompliancePolicy) GetAssignments() []MicrosoftGraphDeviceCompliancePolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompliancePolicy) GetAssignmentsOk() ([]MicrosoftGraphDeviceCompliancePolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphDeviceCompliancePolicyAssignment
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *DeviceCompliancePolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphDeviceCompliancePolicyAssignment and assigns it to the Assignments field.
func (o *DeviceCompliancePolicy) SetAssignments(v []MicrosoftGraphDeviceCompliancePolicyAssignment) {
	o.Assignments = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o DeviceCompliancePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.ScheduledActionsForRule != nil {
		toSerialize["scheduledActionsForRule"] = o.ScheduledActionsForRule
	}
	if o.DeviceStatuses != nil {
		toSerialize["deviceStatuses"] = o.DeviceStatuses
	}
	if o.UserStatuses != nil {
		toSerialize["userStatuses"] = o.UserStatuses
	}
	if o.DeviceStatusOverview == nil {
		if o.isExplicitNullDeviceStatusOverview {
			toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
		}
	} else {
		toSerialize["deviceStatusOverview"] = o.DeviceStatusOverview
	}
	if o.UserStatusOverview == nil {
		if o.isExplicitNullUserStatusOverview {
			toSerialize["userStatusOverview"] = o.UserStatusOverview
		}
	} else {
		toSerialize["userStatusOverview"] = o.UserStatusOverview
	}
	if o.DeviceSettingStateSummaries != nil {
		toSerialize["deviceSettingStateSummaries"] = o.DeviceSettingStateSummaries
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	return json.Marshal(toSerialize)
}


