/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject899 struct for InlineObject899
type InlineObject899 struct {
	LinkLocation *AnyOfobject `json:"linkLocation,omitempty"`
	isExplicitNullLinkLocation bool `json:"-"`
	FriendlyName *AnyOfobject `json:"friendlyName,omitempty"`
	isExplicitNullFriendlyName bool `json:"-"`
}

// GetLinkLocation returns the LinkLocation field if non-nil, zero value otherwise.
func (o *InlineObject899) GetLinkLocation() AnyOfobject {
	if o == nil || o.LinkLocation == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.LinkLocation
}

// GetLinkLocationOk returns a tuple with the LinkLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject899) GetLinkLocationOk() (AnyOfobject, bool) {
	if o == nil || o.LinkLocation == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.LinkLocation, true
}

// HasLinkLocation returns a boolean if a field has been set.
func (o *InlineObject899) HasLinkLocation() bool {
	if o != nil && o.LinkLocation != nil {
		return true
	}

	return false
}

// SetLinkLocation gets a reference to the given AnyOfobject and assigns it to the LinkLocation field.
func (o *InlineObject899) SetLinkLocation(v AnyOfobject) {
	o.LinkLocation = &v
}

// SetLinkLocationExplicitNull (un)sets LinkLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LinkLocation value is set to nil even if false is passed
func (o *InlineObject899) SetLinkLocationExplicitNull(b bool) {
	o.LinkLocation = nil
	o.isExplicitNullLinkLocation = b
}
// GetFriendlyName returns the FriendlyName field if non-nil, zero value otherwise.
func (o *InlineObject899) GetFriendlyName() AnyOfobject {
	if o == nil || o.FriendlyName == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject899) GetFriendlyNameOk() (AnyOfobject, bool) {
	if o == nil || o.FriendlyName == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *InlineObject899) HasFriendlyName() bool {
	if o != nil && o.FriendlyName != nil {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given AnyOfobject and assigns it to the FriendlyName field.
func (o *InlineObject899) SetFriendlyName(v AnyOfobject) {
	o.FriendlyName = &v
}

// SetFriendlyNameExplicitNull (un)sets FriendlyName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FriendlyName value is set to nil even if false is passed
func (o *InlineObject899) SetFriendlyNameExplicitNull(b bool) {
	o.FriendlyName = nil
	o.isExplicitNullFriendlyName = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject899) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkLocation == nil {
		if o.isExplicitNullLinkLocation {
			toSerialize["linkLocation"] = o.LinkLocation
		}
	} else {
		toSerialize["linkLocation"] = o.LinkLocation
	}
	if o.FriendlyName == nil {
		if o.isExplicitNullFriendlyName {
			toSerialize["friendlyName"] = o.FriendlyName
		}
	} else {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	return json.Marshal(toSerialize)
}


