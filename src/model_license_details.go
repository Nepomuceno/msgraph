/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// LicenseDetails struct for LicenseDetails
type LicenseDetails struct {
	ServicePlans *[]MicrosoftGraphServicePlanInfo `json:"servicePlans,omitempty"`

	SkuId *string `json:"skuId,omitempty"`
	isExplicitNullSkuId bool `json:"-"`
	SkuPartNumber *string `json:"skuPartNumber,omitempty"`
	isExplicitNullSkuPartNumber bool `json:"-"`
}

// GetServicePlans returns the ServicePlans field if non-nil, zero value otherwise.
func (o *LicenseDetails) GetServicePlans() []MicrosoftGraphServicePlanInfo {
	if o == nil || o.ServicePlans == nil {
		var ret []MicrosoftGraphServicePlanInfo
		return ret
	}
	return *o.ServicePlans
}

// GetServicePlansOk returns a tuple with the ServicePlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LicenseDetails) GetServicePlansOk() ([]MicrosoftGraphServicePlanInfo, bool) {
	if o == nil || o.ServicePlans == nil {
		var ret []MicrosoftGraphServicePlanInfo
		return ret, false
	}
	return *o.ServicePlans, true
}

// HasServicePlans returns a boolean if a field has been set.
func (o *LicenseDetails) HasServicePlans() bool {
	if o != nil && o.ServicePlans != nil {
		return true
	}

	return false
}

// SetServicePlans gets a reference to the given []MicrosoftGraphServicePlanInfo and assigns it to the ServicePlans field.
func (o *LicenseDetails) SetServicePlans(v []MicrosoftGraphServicePlanInfo) {
	o.ServicePlans = &v
}

// GetSkuId returns the SkuId field if non-nil, zero value otherwise.
func (o *LicenseDetails) GetSkuId() string {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LicenseDetails) GetSkuIdOk() (string, bool) {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret, false
	}
	return *o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *LicenseDetails) HasSkuId() bool {
	if o != nil && o.SkuId != nil {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *LicenseDetails) SetSkuId(v string) {
	o.SkuId = &v
}

// SetSkuIdExplicitNull (un)sets SkuId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SkuId value is set to nil even if false is passed
func (o *LicenseDetails) SetSkuIdExplicitNull(b bool) {
	o.SkuId = nil
	o.isExplicitNullSkuId = b
}
// GetSkuPartNumber returns the SkuPartNumber field if non-nil, zero value otherwise.
func (o *LicenseDetails) GetSkuPartNumber() string {
	if o == nil || o.SkuPartNumber == nil {
		var ret string
		return ret
	}
	return *o.SkuPartNumber
}

// GetSkuPartNumberOk returns a tuple with the SkuPartNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LicenseDetails) GetSkuPartNumberOk() (string, bool) {
	if o == nil || o.SkuPartNumber == nil {
		var ret string
		return ret, false
	}
	return *o.SkuPartNumber, true
}

// HasSkuPartNumber returns a boolean if a field has been set.
func (o *LicenseDetails) HasSkuPartNumber() bool {
	if o != nil && o.SkuPartNumber != nil {
		return true
	}

	return false
}

// SetSkuPartNumber gets a reference to the given string and assigns it to the SkuPartNumber field.
func (o *LicenseDetails) SetSkuPartNumber(v string) {
	o.SkuPartNumber = &v
}

// SetSkuPartNumberExplicitNull (un)sets SkuPartNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SkuPartNumber value is set to nil even if false is passed
func (o *LicenseDetails) SetSkuPartNumberExplicitNull(b bool) {
	o.SkuPartNumber = nil
	o.isExplicitNullSkuPartNumber = b
}

// MarshalJSON returns the JSON representation of the model.
func (o LicenseDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServicePlans != nil {
		toSerialize["servicePlans"] = o.ServicePlans
	}
	if o.SkuId == nil {
		if o.isExplicitNullSkuId {
			toSerialize["skuId"] = o.SkuId
		}
	} else {
		toSerialize["skuId"] = o.SkuId
	}
	if o.SkuPartNumber == nil {
		if o.isExplicitNullSkuPartNumber {
			toSerialize["skuPartNumber"] = o.SkuPartNumber
		}
	} else {
		toSerialize["skuPartNumber"] = o.SkuPartNumber
	}
	return json.Marshal(toSerialize)
}


