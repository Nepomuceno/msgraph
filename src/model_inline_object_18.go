/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject18 struct for InlineObject18
type InlineObject18 struct {
	SyncType *AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType `json:"syncType,omitempty"`

}

// GetSyncType returns the SyncType field if non-nil, zero value otherwise.
func (o *InlineObject18) GetSyncType() AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType {
	if o == nil || o.SyncType == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType
		return ret
	}
	return *o.SyncType
}

// GetSyncTypeOk returns a tuple with the SyncType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject18) GetSyncTypeOk() (AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType, bool) {
	if o == nil || o.SyncType == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType
		return ret, false
	}
	return *o.SyncType, true
}

// HasSyncType returns a boolean if a field has been set.
func (o *InlineObject18) HasSyncType() bool {
	if o != nil && o.SyncType != nil {
		return true
	}

	return false
}

// SetSyncType gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType and assigns it to the SyncType field.
func (o *InlineObject18) SetSyncType(v AnyOfmicrosoftGraphDeviceManagementExchangeConnectorSyncType) {
	o.SyncType = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o InlineObject18) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SyncType != nil {
		toSerialize["syncType"] = o.SyncType
	}
	return json.Marshal(toSerialize)
}


