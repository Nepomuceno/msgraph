/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject800 struct for InlineObject800
type InlineObject800 struct {
	RealNum *AnyOfobject `json:"realNum,omitempty"`
	isExplicitNullRealNum bool `json:"-"`
	INum *AnyOfobject `json:"iNum,omitempty"`
	isExplicitNullINum bool `json:"-"`
	Suffix *AnyOfobject `json:"suffix,omitempty"`
	isExplicitNullSuffix bool `json:"-"`
}

// GetRealNum returns the RealNum field if non-nil, zero value otherwise.
func (o *InlineObject800) GetRealNum() AnyOfobject {
	if o == nil || o.RealNum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.RealNum
}

// GetRealNumOk returns a tuple with the RealNum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject800) GetRealNumOk() (AnyOfobject, bool) {
	if o == nil || o.RealNum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.RealNum, true
}

// HasRealNum returns a boolean if a field has been set.
func (o *InlineObject800) HasRealNum() bool {
	if o != nil && o.RealNum != nil {
		return true
	}

	return false
}

// SetRealNum gets a reference to the given AnyOfobject and assigns it to the RealNum field.
func (o *InlineObject800) SetRealNum(v AnyOfobject) {
	o.RealNum = &v
}

// SetRealNumExplicitNull (un)sets RealNum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RealNum value is set to nil even if false is passed
func (o *InlineObject800) SetRealNumExplicitNull(b bool) {
	o.RealNum = nil
	o.isExplicitNullRealNum = b
}
// GetINum returns the INum field if non-nil, zero value otherwise.
func (o *InlineObject800) GetINum() AnyOfobject {
	if o == nil || o.INum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.INum
}

// GetINumOk returns a tuple with the INum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject800) GetINumOk() (AnyOfobject, bool) {
	if o == nil || o.INum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.INum, true
}

// HasINum returns a boolean if a field has been set.
func (o *InlineObject800) HasINum() bool {
	if o != nil && o.INum != nil {
		return true
	}

	return false
}

// SetINum gets a reference to the given AnyOfobject and assigns it to the INum field.
func (o *InlineObject800) SetINum(v AnyOfobject) {
	o.INum = &v
}

// SetINumExplicitNull (un)sets INum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The INum value is set to nil even if false is passed
func (o *InlineObject800) SetINumExplicitNull(b bool) {
	o.INum = nil
	o.isExplicitNullINum = b
}
// GetSuffix returns the Suffix field if non-nil, zero value otherwise.
func (o *InlineObject800) GetSuffix() AnyOfobject {
	if o == nil || o.Suffix == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject800) GetSuffixOk() (AnyOfobject, bool) {
	if o == nil || o.Suffix == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *InlineObject800) HasSuffix() bool {
	if o != nil && o.Suffix != nil {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given AnyOfobject and assigns it to the Suffix field.
func (o *InlineObject800) SetSuffix(v AnyOfobject) {
	o.Suffix = &v
}

// SetSuffixExplicitNull (un)sets Suffix to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Suffix value is set to nil even if false is passed
func (o *InlineObject800) SetSuffixExplicitNull(b bool) {
	o.Suffix = nil
	o.isExplicitNullSuffix = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject800) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RealNum == nil {
		if o.isExplicitNullRealNum {
			toSerialize["realNum"] = o.RealNum
		}
	} else {
		toSerialize["realNum"] = o.RealNum
	}
	if o.INum == nil {
		if o.isExplicitNullINum {
			toSerialize["iNum"] = o.INum
		}
	} else {
		toSerialize["iNum"] = o.INum
	}
	if o.Suffix == nil {
		if o.isExplicitNullSuffix {
			toSerialize["suffix"] = o.Suffix
		}
	} else {
		toSerialize["suffix"] = o.Suffix
	}
	return json.Marshal(toSerialize)
}


