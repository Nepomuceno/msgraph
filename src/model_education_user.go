/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// EducationUser struct for EducationUser
type EducationUser struct {
	PrimaryRole *AnyOfmicrosoftGraphEducationUserRole `json:"primaryRole,omitempty"`

	MiddleName *string `json:"middleName,omitempty"`
	isExplicitNullMiddleName bool `json:"-"`
	ExternalSource *AnyOfmicrosoftGraphEducationExternalSource `json:"externalSource,omitempty"`
	isExplicitNullExternalSource bool `json:"-"`
	ResidenceAddress *AnyOfmicrosoftGraphPhysicalAddress `json:"residenceAddress,omitempty"`
	isExplicitNullResidenceAddress bool `json:"-"`
	MailingAddress *AnyOfmicrosoftGraphPhysicalAddress `json:"mailingAddress,omitempty"`
	isExplicitNullMailingAddress bool `json:"-"`
	Student *AnyOfmicrosoftGraphEducationStudent `json:"student,omitempty"`
	isExplicitNullStudent bool `json:"-"`
	Teacher *AnyOfmicrosoftGraphEducationTeacher `json:"teacher,omitempty"`
	isExplicitNullTeacher bool `json:"-"`
	CreatedBy *AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	isExplicitNullCreatedBy bool `json:"-"`
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	isExplicitNullAccountEnabled bool `json:"-"`
	AssignedLicenses *[]MicrosoftGraphAssignedLicense `json:"assignedLicenses,omitempty"`

	AssignedPlans *[]MicrosoftGraphAssignedPlan `json:"assignedPlans,omitempty"`

	BusinessPhones *[]string `json:"businessPhones,omitempty"`

	Department *string `json:"department,omitempty"`
	isExplicitNullDepartment bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	GivenName *string `json:"givenName,omitempty"`
	isExplicitNullGivenName bool `json:"-"`
	Mail *string `json:"mail,omitempty"`
	isExplicitNullMail bool `json:"-"`
	MailNickname *string `json:"mailNickname,omitempty"`
	isExplicitNullMailNickname bool `json:"-"`
	MobilePhone *string `json:"mobilePhone,omitempty"`
	isExplicitNullMobilePhone bool `json:"-"`
	PasswordPolicies *string `json:"passwordPolicies,omitempty"`
	isExplicitNullPasswordPolicies bool `json:"-"`
	PasswordProfile *AnyOfmicrosoftGraphPasswordProfile `json:"passwordProfile,omitempty"`
	isExplicitNullPasswordProfile bool `json:"-"`
	OfficeLocation *string `json:"officeLocation,omitempty"`
	isExplicitNullOfficeLocation bool `json:"-"`
	PreferredLanguage *string `json:"preferredLanguage,omitempty"`
	isExplicitNullPreferredLanguage bool `json:"-"`
	ProvisionedPlans *[]MicrosoftGraphProvisionedPlan `json:"provisionedPlans,omitempty"`

	RefreshTokensValidFromDateTime *time.Time `json:"refreshTokensValidFromDateTime,omitempty"`
	isExplicitNullRefreshTokensValidFromDateTime bool `json:"-"`
	ShowInAddressList *bool `json:"showInAddressList,omitempty"`
	isExplicitNullShowInAddressList bool `json:"-"`
	Surname *string `json:"surname,omitempty"`
	isExplicitNullSurname bool `json:"-"`
	UsageLocation *string `json:"usageLocation,omitempty"`
	isExplicitNullUsageLocation bool `json:"-"`
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	isExplicitNullUserPrincipalName bool `json:"-"`
	UserType *string `json:"userType,omitempty"`
	isExplicitNullUserType bool `json:"-"`
	Schools *[]MicrosoftGraphEducationSchool `json:"schools,omitempty"`

	Classes *[]MicrosoftGraphEducationClass `json:"classes,omitempty"`

	User *AnyOfmicrosoftGraphUser `json:"user,omitempty"`
	isExplicitNullUser bool `json:"-"`
}

// GetPrimaryRole returns the PrimaryRole field if non-nil, zero value otherwise.
func (o *EducationUser) GetPrimaryRole() AnyOfmicrosoftGraphEducationUserRole {
	if o == nil || o.PrimaryRole == nil {
		var ret AnyOfmicrosoftGraphEducationUserRole
		return ret
	}
	return *o.PrimaryRole
}

// GetPrimaryRoleOk returns a tuple with the PrimaryRole field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetPrimaryRoleOk() (AnyOfmicrosoftGraphEducationUserRole, bool) {
	if o == nil || o.PrimaryRole == nil {
		var ret AnyOfmicrosoftGraphEducationUserRole
		return ret, false
	}
	return *o.PrimaryRole, true
}

// HasPrimaryRole returns a boolean if a field has been set.
func (o *EducationUser) HasPrimaryRole() bool {
	if o != nil && o.PrimaryRole != nil {
		return true
	}

	return false
}

// SetPrimaryRole gets a reference to the given AnyOfmicrosoftGraphEducationUserRole and assigns it to the PrimaryRole field.
func (o *EducationUser) SetPrimaryRole(v AnyOfmicrosoftGraphEducationUserRole) {
	o.PrimaryRole = &v
}

// GetMiddleName returns the MiddleName field if non-nil, zero value otherwise.
func (o *EducationUser) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetMiddleNameOk() (string, bool) {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret, false
	}
	return *o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *EducationUser) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *EducationUser) SetMiddleName(v string) {
	o.MiddleName = &v
}

// SetMiddleNameExplicitNull (un)sets MiddleName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MiddleName value is set to nil even if false is passed
func (o *EducationUser) SetMiddleNameExplicitNull(b bool) {
	o.MiddleName = nil
	o.isExplicitNullMiddleName = b
}
// GetExternalSource returns the ExternalSource field if non-nil, zero value otherwise.
func (o *EducationUser) GetExternalSource() AnyOfmicrosoftGraphEducationExternalSource {
	if o == nil || o.ExternalSource == nil {
		var ret AnyOfmicrosoftGraphEducationExternalSource
		return ret
	}
	return *o.ExternalSource
}

// GetExternalSourceOk returns a tuple with the ExternalSource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetExternalSourceOk() (AnyOfmicrosoftGraphEducationExternalSource, bool) {
	if o == nil || o.ExternalSource == nil {
		var ret AnyOfmicrosoftGraphEducationExternalSource
		return ret, false
	}
	return *o.ExternalSource, true
}

// HasExternalSource returns a boolean if a field has been set.
func (o *EducationUser) HasExternalSource() bool {
	if o != nil && o.ExternalSource != nil {
		return true
	}

	return false
}

// SetExternalSource gets a reference to the given AnyOfmicrosoftGraphEducationExternalSource and assigns it to the ExternalSource field.
func (o *EducationUser) SetExternalSource(v AnyOfmicrosoftGraphEducationExternalSource) {
	o.ExternalSource = &v
}

// SetExternalSourceExplicitNull (un)sets ExternalSource to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExternalSource value is set to nil even if false is passed
func (o *EducationUser) SetExternalSourceExplicitNull(b bool) {
	o.ExternalSource = nil
	o.isExplicitNullExternalSource = b
}
// GetResidenceAddress returns the ResidenceAddress field if non-nil, zero value otherwise.
func (o *EducationUser) GetResidenceAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.ResidenceAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.ResidenceAddress
}

// GetResidenceAddressOk returns a tuple with the ResidenceAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetResidenceAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.ResidenceAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.ResidenceAddress, true
}

// HasResidenceAddress returns a boolean if a field has been set.
func (o *EducationUser) HasResidenceAddress() bool {
	if o != nil && o.ResidenceAddress != nil {
		return true
	}

	return false
}

// SetResidenceAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the ResidenceAddress field.
func (o *EducationUser) SetResidenceAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.ResidenceAddress = &v
}

// SetResidenceAddressExplicitNull (un)sets ResidenceAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResidenceAddress value is set to nil even if false is passed
func (o *EducationUser) SetResidenceAddressExplicitNull(b bool) {
	o.ResidenceAddress = nil
	o.isExplicitNullResidenceAddress = b
}
// GetMailingAddress returns the MailingAddress field if non-nil, zero value otherwise.
func (o *EducationUser) GetMailingAddress() AnyOfmicrosoftGraphPhysicalAddress {
	if o == nil || o.MailingAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret
	}
	return *o.MailingAddress
}

// GetMailingAddressOk returns a tuple with the MailingAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetMailingAddressOk() (AnyOfmicrosoftGraphPhysicalAddress, bool) {
	if o == nil || o.MailingAddress == nil {
		var ret AnyOfmicrosoftGraphPhysicalAddress
		return ret, false
	}
	return *o.MailingAddress, true
}

// HasMailingAddress returns a boolean if a field has been set.
func (o *EducationUser) HasMailingAddress() bool {
	if o != nil && o.MailingAddress != nil {
		return true
	}

	return false
}

// SetMailingAddress gets a reference to the given AnyOfmicrosoftGraphPhysicalAddress and assigns it to the MailingAddress field.
func (o *EducationUser) SetMailingAddress(v AnyOfmicrosoftGraphPhysicalAddress) {
	o.MailingAddress = &v
}

// SetMailingAddressExplicitNull (un)sets MailingAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailingAddress value is set to nil even if false is passed
func (o *EducationUser) SetMailingAddressExplicitNull(b bool) {
	o.MailingAddress = nil
	o.isExplicitNullMailingAddress = b
}
// GetStudent returns the Student field if non-nil, zero value otherwise.
func (o *EducationUser) GetStudent() AnyOfmicrosoftGraphEducationStudent {
	if o == nil || o.Student == nil {
		var ret AnyOfmicrosoftGraphEducationStudent
		return ret
	}
	return *o.Student
}

// GetStudentOk returns a tuple with the Student field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetStudentOk() (AnyOfmicrosoftGraphEducationStudent, bool) {
	if o == nil || o.Student == nil {
		var ret AnyOfmicrosoftGraphEducationStudent
		return ret, false
	}
	return *o.Student, true
}

// HasStudent returns a boolean if a field has been set.
func (o *EducationUser) HasStudent() bool {
	if o != nil && o.Student != nil {
		return true
	}

	return false
}

// SetStudent gets a reference to the given AnyOfmicrosoftGraphEducationStudent and assigns it to the Student field.
func (o *EducationUser) SetStudent(v AnyOfmicrosoftGraphEducationStudent) {
	o.Student = &v
}

// SetStudentExplicitNull (un)sets Student to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Student value is set to nil even if false is passed
func (o *EducationUser) SetStudentExplicitNull(b bool) {
	o.Student = nil
	o.isExplicitNullStudent = b
}
// GetTeacher returns the Teacher field if non-nil, zero value otherwise.
func (o *EducationUser) GetTeacher() AnyOfmicrosoftGraphEducationTeacher {
	if o == nil || o.Teacher == nil {
		var ret AnyOfmicrosoftGraphEducationTeacher
		return ret
	}
	return *o.Teacher
}

// GetTeacherOk returns a tuple with the Teacher field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetTeacherOk() (AnyOfmicrosoftGraphEducationTeacher, bool) {
	if o == nil || o.Teacher == nil {
		var ret AnyOfmicrosoftGraphEducationTeacher
		return ret, false
	}
	return *o.Teacher, true
}

// HasTeacher returns a boolean if a field has been set.
func (o *EducationUser) HasTeacher() bool {
	if o != nil && o.Teacher != nil {
		return true
	}

	return false
}

// SetTeacher gets a reference to the given AnyOfmicrosoftGraphEducationTeacher and assigns it to the Teacher field.
func (o *EducationUser) SetTeacher(v AnyOfmicrosoftGraphEducationTeacher) {
	o.Teacher = &v
}

// SetTeacherExplicitNull (un)sets Teacher to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Teacher value is set to nil even if false is passed
func (o *EducationUser) SetTeacherExplicitNull(b bool) {
	o.Teacher = nil
	o.isExplicitNullTeacher = b
}
// GetCreatedBy returns the CreatedBy field if non-nil, zero value otherwise.
func (o *EducationUser) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetCreatedByOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EducationUser) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *EducationUser) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = &v
}

// SetCreatedByExplicitNull (un)sets CreatedBy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedBy value is set to nil even if false is passed
func (o *EducationUser) SetCreatedByExplicitNull(b bool) {
	o.CreatedBy = nil
	o.isExplicitNullCreatedBy = b
}
// GetAccountEnabled returns the AccountEnabled field if non-nil, zero value otherwise.
func (o *EducationUser) GetAccountEnabled() bool {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AccountEnabled
}

// GetAccountEnabledOk returns a tuple with the AccountEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetAccountEnabledOk() (bool, bool) {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.AccountEnabled, true
}

// HasAccountEnabled returns a boolean if a field has been set.
func (o *EducationUser) HasAccountEnabled() bool {
	if o != nil && o.AccountEnabled != nil {
		return true
	}

	return false
}

// SetAccountEnabled gets a reference to the given bool and assigns it to the AccountEnabled field.
func (o *EducationUser) SetAccountEnabled(v bool) {
	o.AccountEnabled = &v
}

// SetAccountEnabledExplicitNull (un)sets AccountEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AccountEnabled value is set to nil even if false is passed
func (o *EducationUser) SetAccountEnabledExplicitNull(b bool) {
	o.AccountEnabled = nil
	o.isExplicitNullAccountEnabled = b
}
// GetAssignedLicenses returns the AssignedLicenses field if non-nil, zero value otherwise.
func (o *EducationUser) GetAssignedLicenses() []MicrosoftGraphAssignedLicense {
	if o == nil || o.AssignedLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret
	}
	return *o.AssignedLicenses
}

// GetAssignedLicensesOk returns a tuple with the AssignedLicenses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetAssignedLicensesOk() ([]MicrosoftGraphAssignedLicense, bool) {
	if o == nil || o.AssignedLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret, false
	}
	return *o.AssignedLicenses, true
}

// HasAssignedLicenses returns a boolean if a field has been set.
func (o *EducationUser) HasAssignedLicenses() bool {
	if o != nil && o.AssignedLicenses != nil {
		return true
	}

	return false
}

// SetAssignedLicenses gets a reference to the given []MicrosoftGraphAssignedLicense and assigns it to the AssignedLicenses field.
func (o *EducationUser) SetAssignedLicenses(v []MicrosoftGraphAssignedLicense) {
	o.AssignedLicenses = &v
}

// GetAssignedPlans returns the AssignedPlans field if non-nil, zero value otherwise.
func (o *EducationUser) GetAssignedPlans() []MicrosoftGraphAssignedPlan {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret
	}
	return *o.AssignedPlans
}

// GetAssignedPlansOk returns a tuple with the AssignedPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetAssignedPlansOk() ([]MicrosoftGraphAssignedPlan, bool) {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret, false
	}
	return *o.AssignedPlans, true
}

// HasAssignedPlans returns a boolean if a field has been set.
func (o *EducationUser) HasAssignedPlans() bool {
	if o != nil && o.AssignedPlans != nil {
		return true
	}

	return false
}

// SetAssignedPlans gets a reference to the given []MicrosoftGraphAssignedPlan and assigns it to the AssignedPlans field.
func (o *EducationUser) SetAssignedPlans(v []MicrosoftGraphAssignedPlan) {
	o.AssignedPlans = &v
}

// GetBusinessPhones returns the BusinessPhones field if non-nil, zero value otherwise.
func (o *EducationUser) GetBusinessPhones() []string {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetBusinessPhonesOk() ([]string, bool) {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret, false
	}
	return *o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *EducationUser) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []string and assigns it to the BusinessPhones field.
func (o *EducationUser) SetBusinessPhones(v []string) {
	o.BusinessPhones = &v
}

// GetDepartment returns the Department field if non-nil, zero value otherwise.
func (o *EducationUser) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetDepartmentOk() (string, bool) {
	if o == nil || o.Department == nil {
		var ret string
		return ret, false
	}
	return *o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *EducationUser) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *EducationUser) SetDepartment(v string) {
	o.Department = &v
}

// SetDepartmentExplicitNull (un)sets Department to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Department value is set to nil even if false is passed
func (o *EducationUser) SetDepartmentExplicitNull(b bool) {
	o.Department = nil
	o.isExplicitNullDepartment = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *EducationUser) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EducationUser) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EducationUser) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *EducationUser) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetGivenName returns the GivenName field if non-nil, zero value otherwise.
func (o *EducationUser) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetGivenNameOk() (string, bool) {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret, false
	}
	return *o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *EducationUser) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *EducationUser) SetGivenName(v string) {
	o.GivenName = &v
}

// SetGivenNameExplicitNull (un)sets GivenName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GivenName value is set to nil even if false is passed
func (o *EducationUser) SetGivenNameExplicitNull(b bool) {
	o.GivenName = nil
	o.isExplicitNullGivenName = b
}
// GetMail returns the Mail field if non-nil, zero value otherwise.
func (o *EducationUser) GetMail() string {
	if o == nil || o.Mail == nil {
		var ret string
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetMailOk() (string, bool) {
	if o == nil || o.Mail == nil {
		var ret string
		return ret, false
	}
	return *o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *EducationUser) HasMail() bool {
	if o != nil && o.Mail != nil {
		return true
	}

	return false
}

// SetMail gets a reference to the given string and assigns it to the Mail field.
func (o *EducationUser) SetMail(v string) {
	o.Mail = &v
}

// SetMailExplicitNull (un)sets Mail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Mail value is set to nil even if false is passed
func (o *EducationUser) SetMailExplicitNull(b bool) {
	o.Mail = nil
	o.isExplicitNullMail = b
}
// GetMailNickname returns the MailNickname field if non-nil, zero value otherwise.
func (o *EducationUser) GetMailNickname() string {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret
	}
	return *o.MailNickname
}

// GetMailNicknameOk returns a tuple with the MailNickname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetMailNicknameOk() (string, bool) {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret, false
	}
	return *o.MailNickname, true
}

// HasMailNickname returns a boolean if a field has been set.
func (o *EducationUser) HasMailNickname() bool {
	if o != nil && o.MailNickname != nil {
		return true
	}

	return false
}

// SetMailNickname gets a reference to the given string and assigns it to the MailNickname field.
func (o *EducationUser) SetMailNickname(v string) {
	o.MailNickname = &v
}

// SetMailNicknameExplicitNull (un)sets MailNickname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailNickname value is set to nil even if false is passed
func (o *EducationUser) SetMailNicknameExplicitNull(b bool) {
	o.MailNickname = nil
	o.isExplicitNullMailNickname = b
}
// GetMobilePhone returns the MobilePhone field if non-nil, zero value otherwise.
func (o *EducationUser) GetMobilePhone() string {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetMobilePhoneOk() (string, bool) {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret, false
	}
	return *o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *EducationUser) HasMobilePhone() bool {
	if o != nil && o.MobilePhone != nil {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *EducationUser) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// SetMobilePhoneExplicitNull (un)sets MobilePhone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MobilePhone value is set to nil even if false is passed
func (o *EducationUser) SetMobilePhoneExplicitNull(b bool) {
	o.MobilePhone = nil
	o.isExplicitNullMobilePhone = b
}
// GetPasswordPolicies returns the PasswordPolicies field if non-nil, zero value otherwise.
func (o *EducationUser) GetPasswordPolicies() string {
	if o == nil || o.PasswordPolicies == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicies
}

// GetPasswordPoliciesOk returns a tuple with the PasswordPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetPasswordPoliciesOk() (string, bool) {
	if o == nil || o.PasswordPolicies == nil {
		var ret string
		return ret, false
	}
	return *o.PasswordPolicies, true
}

// HasPasswordPolicies returns a boolean if a field has been set.
func (o *EducationUser) HasPasswordPolicies() bool {
	if o != nil && o.PasswordPolicies != nil {
		return true
	}

	return false
}

// SetPasswordPolicies gets a reference to the given string and assigns it to the PasswordPolicies field.
func (o *EducationUser) SetPasswordPolicies(v string) {
	o.PasswordPolicies = &v
}

// SetPasswordPoliciesExplicitNull (un)sets PasswordPolicies to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordPolicies value is set to nil even if false is passed
func (o *EducationUser) SetPasswordPoliciesExplicitNull(b bool) {
	o.PasswordPolicies = nil
	o.isExplicitNullPasswordPolicies = b
}
// GetPasswordProfile returns the PasswordProfile field if non-nil, zero value otherwise.
func (o *EducationUser) GetPasswordProfile() AnyOfmicrosoftGraphPasswordProfile {
	if o == nil || o.PasswordProfile == nil {
		var ret AnyOfmicrosoftGraphPasswordProfile
		return ret
	}
	return *o.PasswordProfile
}

// GetPasswordProfileOk returns a tuple with the PasswordProfile field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetPasswordProfileOk() (AnyOfmicrosoftGraphPasswordProfile, bool) {
	if o == nil || o.PasswordProfile == nil {
		var ret AnyOfmicrosoftGraphPasswordProfile
		return ret, false
	}
	return *o.PasswordProfile, true
}

// HasPasswordProfile returns a boolean if a field has been set.
func (o *EducationUser) HasPasswordProfile() bool {
	if o != nil && o.PasswordProfile != nil {
		return true
	}

	return false
}

// SetPasswordProfile gets a reference to the given AnyOfmicrosoftGraphPasswordProfile and assigns it to the PasswordProfile field.
func (o *EducationUser) SetPasswordProfile(v AnyOfmicrosoftGraphPasswordProfile) {
	o.PasswordProfile = &v
}

// SetPasswordProfileExplicitNull (un)sets PasswordProfile to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordProfile value is set to nil even if false is passed
func (o *EducationUser) SetPasswordProfileExplicitNull(b bool) {
	o.PasswordProfile = nil
	o.isExplicitNullPasswordProfile = b
}
// GetOfficeLocation returns the OfficeLocation field if non-nil, zero value otherwise.
func (o *EducationUser) GetOfficeLocation() string {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret
	}
	return *o.OfficeLocation
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetOfficeLocationOk() (string, bool) {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret, false
	}
	return *o.OfficeLocation, true
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *EducationUser) HasOfficeLocation() bool {
	if o != nil && o.OfficeLocation != nil {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given string and assigns it to the OfficeLocation field.
func (o *EducationUser) SetOfficeLocation(v string) {
	o.OfficeLocation = &v
}

// SetOfficeLocationExplicitNull (un)sets OfficeLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OfficeLocation value is set to nil even if false is passed
func (o *EducationUser) SetOfficeLocationExplicitNull(b bool) {
	o.OfficeLocation = nil
	o.isExplicitNullOfficeLocation = b
}
// GetPreferredLanguage returns the PreferredLanguage field if non-nil, zero value otherwise.
func (o *EducationUser) GetPreferredLanguage() string {
	if o == nil || o.PreferredLanguage == nil {
		var ret string
		return ret
	}
	return *o.PreferredLanguage
}

// GetPreferredLanguageOk returns a tuple with the PreferredLanguage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetPreferredLanguageOk() (string, bool) {
	if o == nil || o.PreferredLanguage == nil {
		var ret string
		return ret, false
	}
	return *o.PreferredLanguage, true
}

// HasPreferredLanguage returns a boolean if a field has been set.
func (o *EducationUser) HasPreferredLanguage() bool {
	if o != nil && o.PreferredLanguage != nil {
		return true
	}

	return false
}

// SetPreferredLanguage gets a reference to the given string and assigns it to the PreferredLanguage field.
func (o *EducationUser) SetPreferredLanguage(v string) {
	o.PreferredLanguage = &v
}

// SetPreferredLanguageExplicitNull (un)sets PreferredLanguage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreferredLanguage value is set to nil even if false is passed
func (o *EducationUser) SetPreferredLanguageExplicitNull(b bool) {
	o.PreferredLanguage = nil
	o.isExplicitNullPreferredLanguage = b
}
// GetProvisionedPlans returns the ProvisionedPlans field if non-nil, zero value otherwise.
func (o *EducationUser) GetProvisionedPlans() []MicrosoftGraphProvisionedPlan {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret
	}
	return *o.ProvisionedPlans
}

// GetProvisionedPlansOk returns a tuple with the ProvisionedPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetProvisionedPlansOk() ([]MicrosoftGraphProvisionedPlan, bool) {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret, false
	}
	return *o.ProvisionedPlans, true
}

// HasProvisionedPlans returns a boolean if a field has been set.
func (o *EducationUser) HasProvisionedPlans() bool {
	if o != nil && o.ProvisionedPlans != nil {
		return true
	}

	return false
}

// SetProvisionedPlans gets a reference to the given []MicrosoftGraphProvisionedPlan and assigns it to the ProvisionedPlans field.
func (o *EducationUser) SetProvisionedPlans(v []MicrosoftGraphProvisionedPlan) {
	o.ProvisionedPlans = &v
}

// GetRefreshTokensValidFromDateTime returns the RefreshTokensValidFromDateTime field if non-nil, zero value otherwise.
func (o *EducationUser) GetRefreshTokensValidFromDateTime() time.Time {
	if o == nil || o.RefreshTokensValidFromDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RefreshTokensValidFromDateTime
}

// GetRefreshTokensValidFromDateTimeOk returns a tuple with the RefreshTokensValidFromDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetRefreshTokensValidFromDateTimeOk() (time.Time, bool) {
	if o == nil || o.RefreshTokensValidFromDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.RefreshTokensValidFromDateTime, true
}

// HasRefreshTokensValidFromDateTime returns a boolean if a field has been set.
func (o *EducationUser) HasRefreshTokensValidFromDateTime() bool {
	if o != nil && o.RefreshTokensValidFromDateTime != nil {
		return true
	}

	return false
}

// SetRefreshTokensValidFromDateTime gets a reference to the given time.Time and assigns it to the RefreshTokensValidFromDateTime field.
func (o *EducationUser) SetRefreshTokensValidFromDateTime(v time.Time) {
	o.RefreshTokensValidFromDateTime = &v
}

// SetRefreshTokensValidFromDateTimeExplicitNull (un)sets RefreshTokensValidFromDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RefreshTokensValidFromDateTime value is set to nil even if false is passed
func (o *EducationUser) SetRefreshTokensValidFromDateTimeExplicitNull(b bool) {
	o.RefreshTokensValidFromDateTime = nil
	o.isExplicitNullRefreshTokensValidFromDateTime = b
}
// GetShowInAddressList returns the ShowInAddressList field if non-nil, zero value otherwise.
func (o *EducationUser) GetShowInAddressList() bool {
	if o == nil || o.ShowInAddressList == nil {
		var ret bool
		return ret
	}
	return *o.ShowInAddressList
}

// GetShowInAddressListOk returns a tuple with the ShowInAddressList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetShowInAddressListOk() (bool, bool) {
	if o == nil || o.ShowInAddressList == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowInAddressList, true
}

// HasShowInAddressList returns a boolean if a field has been set.
func (o *EducationUser) HasShowInAddressList() bool {
	if o != nil && o.ShowInAddressList != nil {
		return true
	}

	return false
}

// SetShowInAddressList gets a reference to the given bool and assigns it to the ShowInAddressList field.
func (o *EducationUser) SetShowInAddressList(v bool) {
	o.ShowInAddressList = &v
}

// SetShowInAddressListExplicitNull (un)sets ShowInAddressList to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowInAddressList value is set to nil even if false is passed
func (o *EducationUser) SetShowInAddressListExplicitNull(b bool) {
	o.ShowInAddressList = nil
	o.isExplicitNullShowInAddressList = b
}
// GetSurname returns the Surname field if non-nil, zero value otherwise.
func (o *EducationUser) GetSurname() string {
	if o == nil || o.Surname == nil {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetSurnameOk() (string, bool) {
	if o == nil || o.Surname == nil {
		var ret string
		return ret, false
	}
	return *o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *EducationUser) HasSurname() bool {
	if o != nil && o.Surname != nil {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *EducationUser) SetSurname(v string) {
	o.Surname = &v
}

// SetSurnameExplicitNull (un)sets Surname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Surname value is set to nil even if false is passed
func (o *EducationUser) SetSurnameExplicitNull(b bool) {
	o.Surname = nil
	o.isExplicitNullSurname = b
}
// GetUsageLocation returns the UsageLocation field if non-nil, zero value otherwise.
func (o *EducationUser) GetUsageLocation() string {
	if o == nil || o.UsageLocation == nil {
		var ret string
		return ret
	}
	return *o.UsageLocation
}

// GetUsageLocationOk returns a tuple with the UsageLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetUsageLocationOk() (string, bool) {
	if o == nil || o.UsageLocation == nil {
		var ret string
		return ret, false
	}
	return *o.UsageLocation, true
}

// HasUsageLocation returns a boolean if a field has been set.
func (o *EducationUser) HasUsageLocation() bool {
	if o != nil && o.UsageLocation != nil {
		return true
	}

	return false
}

// SetUsageLocation gets a reference to the given string and assigns it to the UsageLocation field.
func (o *EducationUser) SetUsageLocation(v string) {
	o.UsageLocation = &v
}

// SetUsageLocationExplicitNull (un)sets UsageLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UsageLocation value is set to nil even if false is passed
func (o *EducationUser) SetUsageLocationExplicitNull(b bool) {
	o.UsageLocation = nil
	o.isExplicitNullUsageLocation = b
}
// GetUserPrincipalName returns the UserPrincipalName field if non-nil, zero value otherwise.
func (o *EducationUser) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetUserPrincipalNameOk() (string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *EducationUser) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *EducationUser) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// SetUserPrincipalNameExplicitNull (un)sets UserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserPrincipalName value is set to nil even if false is passed
func (o *EducationUser) SetUserPrincipalNameExplicitNull(b bool) {
	o.UserPrincipalName = nil
	o.isExplicitNullUserPrincipalName = b
}
// GetUserType returns the UserType field if non-nil, zero value otherwise.
func (o *EducationUser) GetUserType() string {
	if o == nil || o.UserType == nil {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetUserTypeOk() (string, bool) {
	if o == nil || o.UserType == nil {
		var ret string
		return ret, false
	}
	return *o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *EducationUser) HasUserType() bool {
	if o != nil && o.UserType != nil {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *EducationUser) SetUserType(v string) {
	o.UserType = &v
}

// SetUserTypeExplicitNull (un)sets UserType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserType value is set to nil even if false is passed
func (o *EducationUser) SetUserTypeExplicitNull(b bool) {
	o.UserType = nil
	o.isExplicitNullUserType = b
}
// GetSchools returns the Schools field if non-nil, zero value otherwise.
func (o *EducationUser) GetSchools() []MicrosoftGraphEducationSchool {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret
	}
	return *o.Schools
}

// GetSchoolsOk returns a tuple with the Schools field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetSchoolsOk() ([]MicrosoftGraphEducationSchool, bool) {
	if o == nil || o.Schools == nil {
		var ret []MicrosoftGraphEducationSchool
		return ret, false
	}
	return *o.Schools, true
}

// HasSchools returns a boolean if a field has been set.
func (o *EducationUser) HasSchools() bool {
	if o != nil && o.Schools != nil {
		return true
	}

	return false
}

// SetSchools gets a reference to the given []MicrosoftGraphEducationSchool and assigns it to the Schools field.
func (o *EducationUser) SetSchools(v []MicrosoftGraphEducationSchool) {
	o.Schools = &v
}

// GetClasses returns the Classes field if non-nil, zero value otherwise.
func (o *EducationUser) GetClasses() []MicrosoftGraphEducationClass {
	if o == nil || o.Classes == nil {
		var ret []MicrosoftGraphEducationClass
		return ret
	}
	return *o.Classes
}

// GetClassesOk returns a tuple with the Classes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetClassesOk() ([]MicrosoftGraphEducationClass, bool) {
	if o == nil || o.Classes == nil {
		var ret []MicrosoftGraphEducationClass
		return ret, false
	}
	return *o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *EducationUser) HasClasses() bool {
	if o != nil && o.Classes != nil {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []MicrosoftGraphEducationClass and assigns it to the Classes field.
func (o *EducationUser) SetClasses(v []MicrosoftGraphEducationClass) {
	o.Classes = &v
}

// GetUser returns the User field if non-nil, zero value otherwise.
func (o *EducationUser) GetUser() AnyOfmicrosoftGraphUser {
	if o == nil || o.User == nil {
		var ret AnyOfmicrosoftGraphUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *EducationUser) GetUserOk() (AnyOfmicrosoftGraphUser, bool) {
	if o == nil || o.User == nil {
		var ret AnyOfmicrosoftGraphUser
		return ret, false
	}
	return *o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *EducationUser) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given AnyOfmicrosoftGraphUser and assigns it to the User field.
func (o *EducationUser) SetUser(v AnyOfmicrosoftGraphUser) {
	o.User = &v
}

// SetUserExplicitNull (un)sets User to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The User value is set to nil even if false is passed
func (o *EducationUser) SetUserExplicitNull(b bool) {
	o.User = nil
	o.isExplicitNullUser = b
}

// MarshalJSON returns the JSON representation of the model.
func (o EducationUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrimaryRole != nil {
		toSerialize["primaryRole"] = o.PrimaryRole
	}
	if o.MiddleName == nil {
		if o.isExplicitNullMiddleName {
			toSerialize["middleName"] = o.MiddleName
		}
	} else {
		toSerialize["middleName"] = o.MiddleName
	}
	if o.ExternalSource == nil {
		if o.isExplicitNullExternalSource {
			toSerialize["externalSource"] = o.ExternalSource
		}
	} else {
		toSerialize["externalSource"] = o.ExternalSource
	}
	if o.ResidenceAddress == nil {
		if o.isExplicitNullResidenceAddress {
			toSerialize["residenceAddress"] = o.ResidenceAddress
		}
	} else {
		toSerialize["residenceAddress"] = o.ResidenceAddress
	}
	if o.MailingAddress == nil {
		if o.isExplicitNullMailingAddress {
			toSerialize["mailingAddress"] = o.MailingAddress
		}
	} else {
		toSerialize["mailingAddress"] = o.MailingAddress
	}
	if o.Student == nil {
		if o.isExplicitNullStudent {
			toSerialize["student"] = o.Student
		}
	} else {
		toSerialize["student"] = o.Student
	}
	if o.Teacher == nil {
		if o.isExplicitNullTeacher {
			toSerialize["teacher"] = o.Teacher
		}
	} else {
		toSerialize["teacher"] = o.Teacher
	}
	if o.CreatedBy == nil {
		if o.isExplicitNullCreatedBy {
			toSerialize["createdBy"] = o.CreatedBy
		}
	} else {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.AccountEnabled == nil {
		if o.isExplicitNullAccountEnabled {
			toSerialize["accountEnabled"] = o.AccountEnabled
		}
	} else {
		toSerialize["accountEnabled"] = o.AccountEnabled
	}
	if o.AssignedLicenses != nil {
		toSerialize["assignedLicenses"] = o.AssignedLicenses
	}
	if o.AssignedPlans != nil {
		toSerialize["assignedPlans"] = o.AssignedPlans
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.Department == nil {
		if o.isExplicitNullDepartment {
			toSerialize["department"] = o.Department
		}
	} else {
		toSerialize["department"] = o.Department
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.GivenName == nil {
		if o.isExplicitNullGivenName {
			toSerialize["givenName"] = o.GivenName
		}
	} else {
		toSerialize["givenName"] = o.GivenName
	}
	if o.Mail == nil {
		if o.isExplicitNullMail {
			toSerialize["mail"] = o.Mail
		}
	} else {
		toSerialize["mail"] = o.Mail
	}
	if o.MailNickname == nil {
		if o.isExplicitNullMailNickname {
			toSerialize["mailNickname"] = o.MailNickname
		}
	} else {
		toSerialize["mailNickname"] = o.MailNickname
	}
	if o.MobilePhone == nil {
		if o.isExplicitNullMobilePhone {
			toSerialize["mobilePhone"] = o.MobilePhone
		}
	} else {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if o.PasswordPolicies == nil {
		if o.isExplicitNullPasswordPolicies {
			toSerialize["passwordPolicies"] = o.PasswordPolicies
		}
	} else {
		toSerialize["passwordPolicies"] = o.PasswordPolicies
	}
	if o.PasswordProfile == nil {
		if o.isExplicitNullPasswordProfile {
			toSerialize["passwordProfile"] = o.PasswordProfile
		}
	} else {
		toSerialize["passwordProfile"] = o.PasswordProfile
	}
	if o.OfficeLocation == nil {
		if o.isExplicitNullOfficeLocation {
			toSerialize["officeLocation"] = o.OfficeLocation
		}
	} else {
		toSerialize["officeLocation"] = o.OfficeLocation
	}
	if o.PreferredLanguage == nil {
		if o.isExplicitNullPreferredLanguage {
			toSerialize["preferredLanguage"] = o.PreferredLanguage
		}
	} else {
		toSerialize["preferredLanguage"] = o.PreferredLanguage
	}
	if o.ProvisionedPlans != nil {
		toSerialize["provisionedPlans"] = o.ProvisionedPlans
	}
	if o.RefreshTokensValidFromDateTime == nil {
		if o.isExplicitNullRefreshTokensValidFromDateTime {
			toSerialize["refreshTokensValidFromDateTime"] = o.RefreshTokensValidFromDateTime
		}
	} else {
		toSerialize["refreshTokensValidFromDateTime"] = o.RefreshTokensValidFromDateTime
	}
	if o.ShowInAddressList == nil {
		if o.isExplicitNullShowInAddressList {
			toSerialize["showInAddressList"] = o.ShowInAddressList
		}
	} else {
		toSerialize["showInAddressList"] = o.ShowInAddressList
	}
	if o.Surname == nil {
		if o.isExplicitNullSurname {
			toSerialize["surname"] = o.Surname
		}
	} else {
		toSerialize["surname"] = o.Surname
	}
	if o.UsageLocation == nil {
		if o.isExplicitNullUsageLocation {
			toSerialize["usageLocation"] = o.UsageLocation
		}
	} else {
		toSerialize["usageLocation"] = o.UsageLocation
	}
	if o.UserPrincipalName == nil {
		if o.isExplicitNullUserPrincipalName {
			toSerialize["userPrincipalName"] = o.UserPrincipalName
		}
	} else {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	if o.UserType == nil {
		if o.isExplicitNullUserType {
			toSerialize["userType"] = o.UserType
		}
	} else {
		toSerialize["userType"] = o.UserType
	}
	if o.Schools != nil {
		toSerialize["schools"] = o.Schools
	}
	if o.Classes != nil {
		toSerialize["classes"] = o.Classes
	}
	if o.User == nil {
		if o.isExplicitNullUser {
			toSerialize["user"] = o.User
		}
	} else {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}


