/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject875 struct for InlineObject875
type InlineObject875 struct {
	FindText *AnyOfobject `json:"findText,omitempty"`
	isExplicitNullFindText bool `json:"-"`
	WithinText *AnyOfobject `json:"withinText,omitempty"`
	isExplicitNullWithinText bool `json:"-"`
	StartNum *AnyOfobject `json:"startNum,omitempty"`
	isExplicitNullStartNum bool `json:"-"`
}

// GetFindText returns the FindText field if non-nil, zero value otherwise.
func (o *InlineObject875) GetFindText() AnyOfobject {
	if o == nil || o.FindText == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.FindText
}

// GetFindTextOk returns a tuple with the FindText field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject875) GetFindTextOk() (AnyOfobject, bool) {
	if o == nil || o.FindText == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.FindText, true
}

// HasFindText returns a boolean if a field has been set.
func (o *InlineObject875) HasFindText() bool {
	if o != nil && o.FindText != nil {
		return true
	}

	return false
}

// SetFindText gets a reference to the given AnyOfobject and assigns it to the FindText field.
func (o *InlineObject875) SetFindText(v AnyOfobject) {
	o.FindText = &v
}

// SetFindTextExplicitNull (un)sets FindText to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FindText value is set to nil even if false is passed
func (o *InlineObject875) SetFindTextExplicitNull(b bool) {
	o.FindText = nil
	o.isExplicitNullFindText = b
}
// GetWithinText returns the WithinText field if non-nil, zero value otherwise.
func (o *InlineObject875) GetWithinText() AnyOfobject {
	if o == nil || o.WithinText == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.WithinText
}

// GetWithinTextOk returns a tuple with the WithinText field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject875) GetWithinTextOk() (AnyOfobject, bool) {
	if o == nil || o.WithinText == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.WithinText, true
}

// HasWithinText returns a boolean if a field has been set.
func (o *InlineObject875) HasWithinText() bool {
	if o != nil && o.WithinText != nil {
		return true
	}

	return false
}

// SetWithinText gets a reference to the given AnyOfobject and assigns it to the WithinText field.
func (o *InlineObject875) SetWithinText(v AnyOfobject) {
	o.WithinText = &v
}

// SetWithinTextExplicitNull (un)sets WithinText to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WithinText value is set to nil even if false is passed
func (o *InlineObject875) SetWithinTextExplicitNull(b bool) {
	o.WithinText = nil
	o.isExplicitNullWithinText = b
}
// GetStartNum returns the StartNum field if non-nil, zero value otherwise.
func (o *InlineObject875) GetStartNum() AnyOfobject {
	if o == nil || o.StartNum == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.StartNum
}

// GetStartNumOk returns a tuple with the StartNum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject875) GetStartNumOk() (AnyOfobject, bool) {
	if o == nil || o.StartNum == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.StartNum, true
}

// HasStartNum returns a boolean if a field has been set.
func (o *InlineObject875) HasStartNum() bool {
	if o != nil && o.StartNum != nil {
		return true
	}

	return false
}

// SetStartNum gets a reference to the given AnyOfobject and assigns it to the StartNum field.
func (o *InlineObject875) SetStartNum(v AnyOfobject) {
	o.StartNum = &v
}

// SetStartNumExplicitNull (un)sets StartNum to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartNum value is set to nil even if false is passed
func (o *InlineObject875) SetStartNumExplicitNull(b bool) {
	o.StartNum = nil
	o.isExplicitNullStartNum = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject875) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FindText == nil {
		if o.isExplicitNullFindText {
			toSerialize["findText"] = o.FindText
		}
	} else {
		toSerialize["findText"] = o.FindText
	}
	if o.WithinText == nil {
		if o.isExplicitNullWithinText {
			toSerialize["withinText"] = o.WithinText
		}
	} else {
		toSerialize["withinText"] = o.WithinText
	}
	if o.StartNum == nil {
		if o.isExplicitNullStartNum {
			toSerialize["startNum"] = o.StartNum
		}
	} else {
		toSerialize["startNum"] = o.StartNum
	}
	return json.Marshal(toSerialize)
}


