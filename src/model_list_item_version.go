/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// ListItemVersion struct for ListItemVersion
type ListItemVersion struct {
	Fields *AnyOfmicrosoftGraphFieldValueSet `json:"fields,omitempty"`
	isExplicitNullFields bool `json:"-"`
}

// GetFields returns the Fields field if non-nil, zero value otherwise.
func (o *ListItemVersion) GetFields() AnyOfmicrosoftGraphFieldValueSet {
	if o == nil || o.Fields == nil {
		var ret AnyOfmicrosoftGraphFieldValueSet
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListItemVersion) GetFieldsOk() (AnyOfmicrosoftGraphFieldValueSet, bool) {
	if o == nil || o.Fields == nil {
		var ret AnyOfmicrosoftGraphFieldValueSet
		return ret, false
	}
	return *o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ListItemVersion) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given AnyOfmicrosoftGraphFieldValueSet and assigns it to the Fields field.
func (o *ListItemVersion) SetFields(v AnyOfmicrosoftGraphFieldValueSet) {
	o.Fields = &v
}

// SetFieldsExplicitNull (un)sets Fields to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Fields value is set to nil even if false is passed
func (o *ListItemVersion) SetFieldsExplicitNull(b bool) {
	o.Fields = nil
	o.isExplicitNullFields = b
}

// MarshalJSON returns the JSON representation of the model.
func (o ListItemVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Fields == nil {
		if o.isExplicitNullFields {
			toSerialize["fields"] = o.Fields
		}
	} else {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}


