/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// IosVppEBook A class containing the properties for iOS Vpp eBook.
type IosVppEBook struct {
	// The Vpp token ID.
	VppTokenId *string `json:"vppTokenId,omitempty"`

	// The Apple ID associated with Vpp token.
	AppleId *string `json:"appleId,omitempty"`
	isExplicitNullAppleId bool `json:"-"`
	// The Vpp token's organization name.
	VppOrganizationName *string `json:"vppOrganizationName,omitempty"`
	isExplicitNullVppOrganizationName bool `json:"-"`
	// Genres.
	Genres *[]string `json:"genres,omitempty"`

	// Language.
	Language *string `json:"language,omitempty"`
	isExplicitNullLanguage bool `json:"-"`
	// Seller.
	Seller *string `json:"seller,omitempty"`
	isExplicitNullSeller bool `json:"-"`
	// Total license count.
	TotalLicenseCount *int32 `json:"totalLicenseCount,omitempty"`

	// Used license count.
	UsedLicenseCount *int32 `json:"usedLicenseCount,omitempty"`

}

// GetVppTokenId returns the VppTokenId field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetVppTokenId() string {
	if o == nil || o.VppTokenId == nil {
		var ret string
		return ret
	}
	return *o.VppTokenId
}

// GetVppTokenIdOk returns a tuple with the VppTokenId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetVppTokenIdOk() (string, bool) {
	if o == nil || o.VppTokenId == nil {
		var ret string
		return ret, false
	}
	return *o.VppTokenId, true
}

// HasVppTokenId returns a boolean if a field has been set.
func (o *IosVppEBook) HasVppTokenId() bool {
	if o != nil && o.VppTokenId != nil {
		return true
	}

	return false
}

// SetVppTokenId gets a reference to the given string and assigns it to the VppTokenId field.
func (o *IosVppEBook) SetVppTokenId(v string) {
	o.VppTokenId = &v
}

// GetAppleId returns the AppleId field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetAppleId() string {
	if o == nil || o.AppleId == nil {
		var ret string
		return ret
	}
	return *o.AppleId
}

// GetAppleIdOk returns a tuple with the AppleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetAppleIdOk() (string, bool) {
	if o == nil || o.AppleId == nil {
		var ret string
		return ret, false
	}
	return *o.AppleId, true
}

// HasAppleId returns a boolean if a field has been set.
func (o *IosVppEBook) HasAppleId() bool {
	if o != nil && o.AppleId != nil {
		return true
	}

	return false
}

// SetAppleId gets a reference to the given string and assigns it to the AppleId field.
func (o *IosVppEBook) SetAppleId(v string) {
	o.AppleId = &v
}

// SetAppleIdExplicitNull (un)sets AppleId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppleId value is set to nil even if false is passed
func (o *IosVppEBook) SetAppleIdExplicitNull(b bool) {
	o.AppleId = nil
	o.isExplicitNullAppleId = b
}
// GetVppOrganizationName returns the VppOrganizationName field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetVppOrganizationName() string {
	if o == nil || o.VppOrganizationName == nil {
		var ret string
		return ret
	}
	return *o.VppOrganizationName
}

// GetVppOrganizationNameOk returns a tuple with the VppOrganizationName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetVppOrganizationNameOk() (string, bool) {
	if o == nil || o.VppOrganizationName == nil {
		var ret string
		return ret, false
	}
	return *o.VppOrganizationName, true
}

// HasVppOrganizationName returns a boolean if a field has been set.
func (o *IosVppEBook) HasVppOrganizationName() bool {
	if o != nil && o.VppOrganizationName != nil {
		return true
	}

	return false
}

// SetVppOrganizationName gets a reference to the given string and assigns it to the VppOrganizationName field.
func (o *IosVppEBook) SetVppOrganizationName(v string) {
	o.VppOrganizationName = &v
}

// SetVppOrganizationNameExplicitNull (un)sets VppOrganizationName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The VppOrganizationName value is set to nil even if false is passed
func (o *IosVppEBook) SetVppOrganizationNameExplicitNull(b bool) {
	o.VppOrganizationName = nil
	o.isExplicitNullVppOrganizationName = b
}
// GetGenres returns the Genres field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetGenres() []string {
	if o == nil || o.Genres == nil {
		var ret []string
		return ret
	}
	return *o.Genres
}

// GetGenresOk returns a tuple with the Genres field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetGenresOk() ([]string, bool) {
	if o == nil || o.Genres == nil {
		var ret []string
		return ret, false
	}
	return *o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *IosVppEBook) HasGenres() bool {
	if o != nil && o.Genres != nil {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *IosVppEBook) SetGenres(v []string) {
	o.Genres = &v
}

// GetLanguage returns the Language field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetLanguageOk() (string, bool) {
	if o == nil || o.Language == nil {
		var ret string
		return ret, false
	}
	return *o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *IosVppEBook) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *IosVppEBook) SetLanguage(v string) {
	o.Language = &v
}

// SetLanguageExplicitNull (un)sets Language to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Language value is set to nil even if false is passed
func (o *IosVppEBook) SetLanguageExplicitNull(b bool) {
	o.Language = nil
	o.isExplicitNullLanguage = b
}
// GetSeller returns the Seller field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetSeller() string {
	if o == nil || o.Seller == nil {
		var ret string
		return ret
	}
	return *o.Seller
}

// GetSellerOk returns a tuple with the Seller field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetSellerOk() (string, bool) {
	if o == nil || o.Seller == nil {
		var ret string
		return ret, false
	}
	return *o.Seller, true
}

// HasSeller returns a boolean if a field has been set.
func (o *IosVppEBook) HasSeller() bool {
	if o != nil && o.Seller != nil {
		return true
	}

	return false
}

// SetSeller gets a reference to the given string and assigns it to the Seller field.
func (o *IosVppEBook) SetSeller(v string) {
	o.Seller = &v
}

// SetSellerExplicitNull (un)sets Seller to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Seller value is set to nil even if false is passed
func (o *IosVppEBook) SetSellerExplicitNull(b bool) {
	o.Seller = nil
	o.isExplicitNullSeller = b
}
// GetTotalLicenseCount returns the TotalLicenseCount field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetTotalLicenseCount() int32 {
	if o == nil || o.TotalLicenseCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalLicenseCount
}

// GetTotalLicenseCountOk returns a tuple with the TotalLicenseCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetTotalLicenseCountOk() (int32, bool) {
	if o == nil || o.TotalLicenseCount == nil {
		var ret int32
		return ret, false
	}
	return *o.TotalLicenseCount, true
}

// HasTotalLicenseCount returns a boolean if a field has been set.
func (o *IosVppEBook) HasTotalLicenseCount() bool {
	if o != nil && o.TotalLicenseCount != nil {
		return true
	}

	return false
}

// SetTotalLicenseCount gets a reference to the given int32 and assigns it to the TotalLicenseCount field.
func (o *IosVppEBook) SetTotalLicenseCount(v int32) {
	o.TotalLicenseCount = &v
}

// GetUsedLicenseCount returns the UsedLicenseCount field if non-nil, zero value otherwise.
func (o *IosVppEBook) GetUsedLicenseCount() int32 {
	if o == nil || o.UsedLicenseCount == nil {
		var ret int32
		return ret
	}
	return *o.UsedLicenseCount
}

// GetUsedLicenseCountOk returns a tuple with the UsedLicenseCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IosVppEBook) GetUsedLicenseCountOk() (int32, bool) {
	if o == nil || o.UsedLicenseCount == nil {
		var ret int32
		return ret, false
	}
	return *o.UsedLicenseCount, true
}

// HasUsedLicenseCount returns a boolean if a field has been set.
func (o *IosVppEBook) HasUsedLicenseCount() bool {
	if o != nil && o.UsedLicenseCount != nil {
		return true
	}

	return false
}

// SetUsedLicenseCount gets a reference to the given int32 and assigns it to the UsedLicenseCount field.
func (o *IosVppEBook) SetUsedLicenseCount(v int32) {
	o.UsedLicenseCount = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o IosVppEBook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VppTokenId != nil {
		toSerialize["vppTokenId"] = o.VppTokenId
	}
	if o.AppleId == nil {
		if o.isExplicitNullAppleId {
			toSerialize["appleId"] = o.AppleId
		}
	} else {
		toSerialize["appleId"] = o.AppleId
	}
	if o.VppOrganizationName == nil {
		if o.isExplicitNullVppOrganizationName {
			toSerialize["vppOrganizationName"] = o.VppOrganizationName
		}
	} else {
		toSerialize["vppOrganizationName"] = o.VppOrganizationName
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if o.Language == nil {
		if o.isExplicitNullLanguage {
			toSerialize["language"] = o.Language
		}
	} else {
		toSerialize["language"] = o.Language
	}
	if o.Seller == nil {
		if o.isExplicitNullSeller {
			toSerialize["seller"] = o.Seller
		}
	} else {
		toSerialize["seller"] = o.Seller
	}
	if o.TotalLicenseCount != nil {
		toSerialize["totalLicenseCount"] = o.TotalLicenseCount
	}
	if o.UsedLicenseCount != nil {
		toSerialize["usedLicenseCount"] = o.UsedLicenseCount
	}
	return json.Marshal(toSerialize)
}


