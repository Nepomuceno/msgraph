/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphSharedInsight struct for MicrosoftGraphSharedInsight
type MicrosoftGraphSharedInsight struct {
	Id *string `json:"id,omitempty"`

	LastShared *AnyOfmicrosoftGraphSharingDetail `json:"lastShared,omitempty"`
	isExplicitNullLastShared bool `json:"-"`
	SharingHistory *[]AnyOfmicrosoftGraphSharingDetail `json:"sharingHistory,omitempty"`

	ResourceVisualization *AnyOfmicrosoftGraphResourceVisualization `json:"resourceVisualization,omitempty"`
	isExplicitNullResourceVisualization bool `json:"-"`
	ResourceReference *AnyOfmicrosoftGraphResourceReference `json:"resourceReference,omitempty"`
	isExplicitNullResourceReference bool `json:"-"`
	LastSharedMethod *AnyOfmicrosoftGraphEntity `json:"lastSharedMethod,omitempty"`
	isExplicitNullLastSharedMethod bool `json:"-"`
	Resource *AnyOfmicrosoftGraphEntity `json:"resource,omitempty"`
	isExplicitNullResource bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphSharedInsight) SetId(v string) {
	o.Id = &v
}

// GetLastShared returns the LastShared field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetLastShared() AnyOfmicrosoftGraphSharingDetail {
	if o == nil || o.LastShared == nil {
		var ret AnyOfmicrosoftGraphSharingDetail
		return ret
	}
	return *o.LastShared
}

// GetLastSharedOk returns a tuple with the LastShared field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetLastSharedOk() (AnyOfmicrosoftGraphSharingDetail, bool) {
	if o == nil || o.LastShared == nil {
		var ret AnyOfmicrosoftGraphSharingDetail
		return ret, false
	}
	return *o.LastShared, true
}

// HasLastShared returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasLastShared() bool {
	if o != nil && o.LastShared != nil {
		return true
	}

	return false
}

// SetLastShared gets a reference to the given AnyOfmicrosoftGraphSharingDetail and assigns it to the LastShared field.
func (o *MicrosoftGraphSharedInsight) SetLastShared(v AnyOfmicrosoftGraphSharingDetail) {
	o.LastShared = &v
}

// SetLastSharedExplicitNull (un)sets LastShared to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastShared value is set to nil even if false is passed
func (o *MicrosoftGraphSharedInsight) SetLastSharedExplicitNull(b bool) {
	o.LastShared = nil
	o.isExplicitNullLastShared = b
}
// GetSharingHistory returns the SharingHistory field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetSharingHistory() []AnyOfmicrosoftGraphSharingDetail {
	if o == nil || o.SharingHistory == nil {
		var ret []AnyOfmicrosoftGraphSharingDetail
		return ret
	}
	return *o.SharingHistory
}

// GetSharingHistoryOk returns a tuple with the SharingHistory field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetSharingHistoryOk() ([]AnyOfmicrosoftGraphSharingDetail, bool) {
	if o == nil || o.SharingHistory == nil {
		var ret []AnyOfmicrosoftGraphSharingDetail
		return ret, false
	}
	return *o.SharingHistory, true
}

// HasSharingHistory returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasSharingHistory() bool {
	if o != nil && o.SharingHistory != nil {
		return true
	}

	return false
}

// SetSharingHistory gets a reference to the given []AnyOfmicrosoftGraphSharingDetail and assigns it to the SharingHistory field.
func (o *MicrosoftGraphSharedInsight) SetSharingHistory(v []AnyOfmicrosoftGraphSharingDetail) {
	o.SharingHistory = &v
}

// GetResourceVisualization returns the ResourceVisualization field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetResourceVisualization() AnyOfmicrosoftGraphResourceVisualization {
	if o == nil || o.ResourceVisualization == nil {
		var ret AnyOfmicrosoftGraphResourceVisualization
		return ret
	}
	return *o.ResourceVisualization
}

// GetResourceVisualizationOk returns a tuple with the ResourceVisualization field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetResourceVisualizationOk() (AnyOfmicrosoftGraphResourceVisualization, bool) {
	if o == nil || o.ResourceVisualization == nil {
		var ret AnyOfmicrosoftGraphResourceVisualization
		return ret, false
	}
	return *o.ResourceVisualization, true
}

// HasResourceVisualization returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasResourceVisualization() bool {
	if o != nil && o.ResourceVisualization != nil {
		return true
	}

	return false
}

// SetResourceVisualization gets a reference to the given AnyOfmicrosoftGraphResourceVisualization and assigns it to the ResourceVisualization field.
func (o *MicrosoftGraphSharedInsight) SetResourceVisualization(v AnyOfmicrosoftGraphResourceVisualization) {
	o.ResourceVisualization = &v
}

// SetResourceVisualizationExplicitNull (un)sets ResourceVisualization to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceVisualization value is set to nil even if false is passed
func (o *MicrosoftGraphSharedInsight) SetResourceVisualizationExplicitNull(b bool) {
	o.ResourceVisualization = nil
	o.isExplicitNullResourceVisualization = b
}
// GetResourceReference returns the ResourceReference field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetResourceReference() AnyOfmicrosoftGraphResourceReference {
	if o == nil || o.ResourceReference == nil {
		var ret AnyOfmicrosoftGraphResourceReference
		return ret
	}
	return *o.ResourceReference
}

// GetResourceReferenceOk returns a tuple with the ResourceReference field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetResourceReferenceOk() (AnyOfmicrosoftGraphResourceReference, bool) {
	if o == nil || o.ResourceReference == nil {
		var ret AnyOfmicrosoftGraphResourceReference
		return ret, false
	}
	return *o.ResourceReference, true
}

// HasResourceReference returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasResourceReference() bool {
	if o != nil && o.ResourceReference != nil {
		return true
	}

	return false
}

// SetResourceReference gets a reference to the given AnyOfmicrosoftGraphResourceReference and assigns it to the ResourceReference field.
func (o *MicrosoftGraphSharedInsight) SetResourceReference(v AnyOfmicrosoftGraphResourceReference) {
	o.ResourceReference = &v
}

// SetResourceReferenceExplicitNull (un)sets ResourceReference to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceReference value is set to nil even if false is passed
func (o *MicrosoftGraphSharedInsight) SetResourceReferenceExplicitNull(b bool) {
	o.ResourceReference = nil
	o.isExplicitNullResourceReference = b
}
// GetLastSharedMethod returns the LastSharedMethod field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetLastSharedMethod() AnyOfmicrosoftGraphEntity {
	if o == nil || o.LastSharedMethod == nil {
		var ret AnyOfmicrosoftGraphEntity
		return ret
	}
	return *o.LastSharedMethod
}

// GetLastSharedMethodOk returns a tuple with the LastSharedMethod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetLastSharedMethodOk() (AnyOfmicrosoftGraphEntity, bool) {
	if o == nil || o.LastSharedMethod == nil {
		var ret AnyOfmicrosoftGraphEntity
		return ret, false
	}
	return *o.LastSharedMethod, true
}

// HasLastSharedMethod returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasLastSharedMethod() bool {
	if o != nil && o.LastSharedMethod != nil {
		return true
	}

	return false
}

// SetLastSharedMethod gets a reference to the given AnyOfmicrosoftGraphEntity and assigns it to the LastSharedMethod field.
func (o *MicrosoftGraphSharedInsight) SetLastSharedMethod(v AnyOfmicrosoftGraphEntity) {
	o.LastSharedMethod = &v
}

// SetLastSharedMethodExplicitNull (un)sets LastSharedMethod to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastSharedMethod value is set to nil even if false is passed
func (o *MicrosoftGraphSharedInsight) SetLastSharedMethodExplicitNull(b bool) {
	o.LastSharedMethod = nil
	o.isExplicitNullLastSharedMethod = b
}
// GetResource returns the Resource field if non-nil, zero value otherwise.
func (o *MicrosoftGraphSharedInsight) GetResource() AnyOfmicrosoftGraphEntity {
	if o == nil || o.Resource == nil {
		var ret AnyOfmicrosoftGraphEntity
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphSharedInsight) GetResourceOk() (AnyOfmicrosoftGraphEntity, bool) {
	if o == nil || o.Resource == nil {
		var ret AnyOfmicrosoftGraphEntity
		return ret, false
	}
	return *o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *MicrosoftGraphSharedInsight) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given AnyOfmicrosoftGraphEntity and assigns it to the Resource field.
func (o *MicrosoftGraphSharedInsight) SetResource(v AnyOfmicrosoftGraphEntity) {
	o.Resource = &v
}

// SetResourceExplicitNull (un)sets Resource to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Resource value is set to nil even if false is passed
func (o *MicrosoftGraphSharedInsight) SetResourceExplicitNull(b bool) {
	o.Resource = nil
	o.isExplicitNullResource = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphSharedInsight) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastShared == nil {
		if o.isExplicitNullLastShared {
			toSerialize["lastShared"] = o.LastShared
		}
	} else {
		toSerialize["lastShared"] = o.LastShared
	}
	if o.SharingHistory != nil {
		toSerialize["sharingHistory"] = o.SharingHistory
	}
	if o.ResourceVisualization == nil {
		if o.isExplicitNullResourceVisualization {
			toSerialize["resourceVisualization"] = o.ResourceVisualization
		}
	} else {
		toSerialize["resourceVisualization"] = o.ResourceVisualization
	}
	if o.ResourceReference == nil {
		if o.isExplicitNullResourceReference {
			toSerialize["resourceReference"] = o.ResourceReference
		}
	} else {
		toSerialize["resourceReference"] = o.ResourceReference
	}
	if o.LastSharedMethod == nil {
		if o.isExplicitNullLastSharedMethod {
			toSerialize["lastSharedMethod"] = o.LastSharedMethod
		}
	} else {
		toSerialize["lastSharedMethod"] = o.LastSharedMethod
	}
	if o.Resource == nil {
		if o.isExplicitNullResource {
			toSerialize["resource"] = o.Resource
		}
	} else {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}


