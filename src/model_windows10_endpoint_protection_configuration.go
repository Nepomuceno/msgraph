/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Windows10EndpointProtectionConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the Windows10EndpointProtectionConfiguration resource.
type Windows10EndpointProtectionConfiguration struct {
	// Blocks stateful FTP connections to the device
	FirewallBlockStatefulFTP *bool `json:"firewallBlockStatefulFTP,omitempty"`

	// Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600
	FirewallIdleTimeoutForSecurityAssociationInSeconds *int32 `json:"firewallIdleTimeoutForSecurityAssociationInSeconds,omitempty"`
	isExplicitNullFirewallIdleTimeoutForSecurityAssociationInSeconds bool `json:"-"`
	// Select the preshared key encoding to be used
	FirewallPreSharedKeyEncodingMethod *AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType `json:"firewallPreSharedKeyEncodingMethod,omitempty"`

	// Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes
	FirewallIPSecExemptionsAllowNeighborDiscovery *bool `json:"firewallIPSecExemptionsAllowNeighborDiscovery,omitempty"`

	// Configures IPSec exemptions to allow ICMP
	FirewallIPSecExemptionsAllowICMP *bool `json:"firewallIPSecExemptionsAllowICMP,omitempty"`

	// Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes
	FirewallIPSecExemptionsAllowRouterDiscovery *bool `json:"firewallIPSecExemptionsAllowRouterDiscovery,omitempty"`

	// Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic
	FirewallIPSecExemptionsAllowDHCP *bool `json:"firewallIPSecExemptionsAllowDHCP,omitempty"`

	// Specify how the certificate revocation list is to be enforced
	FirewallCertificateRevocationListCheckMethod *AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType `json:"firewallCertificateRevocationListCheckMethod,omitempty"`

	// If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set
	FirewallMergeKeyingModuleSettings *bool `json:"firewallMergeKeyingModuleSettings,omitempty"`

	// Configures how packet queueing should be applied in the tunnel gateway scenario
	FirewallPacketQueueingMethod *AnyOfmicrosoftGraphFirewallPacketQueueingMethodType `json:"firewallPacketQueueingMethod,omitempty"`

	// Configures the firewall profile settings for domain networks
	FirewallProfileDomain *AnyOfmicrosoftGraphWindowsFirewallNetworkProfile `json:"firewallProfileDomain,omitempty"`
	isExplicitNullFirewallProfileDomain bool `json:"-"`
	// Configures the firewall profile settings for public networks
	FirewallProfilePublic *AnyOfmicrosoftGraphWindowsFirewallNetworkProfile `json:"firewallProfilePublic,omitempty"`
	isExplicitNullFirewallProfilePublic bool `json:"-"`
	// Configures the firewall profile settings for private networks
	FirewallProfilePrivate *AnyOfmicrosoftGraphWindowsFirewallNetworkProfile `json:"firewallProfilePrivate,omitempty"`
	isExplicitNullFirewallProfilePrivate bool `json:"-"`
	// List of exe files and folders to be excluded from attack surface reduction rules
	DefenderAttackSurfaceReductionExcludedPaths *[]string `json:"defenderAttackSurfaceReductionExcludedPaths,omitempty"`

	// List of paths to exe that are allowed to access protected folders
	DefenderGuardedFoldersAllowedAppPaths *[]string `json:"defenderGuardedFoldersAllowedAppPaths,omitempty"`

	// List of folder paths to be added to the list of protected folders
	DefenderAdditionalGuardedFolders *[]string `json:"defenderAdditionalGuardedFolders,omitempty"`

	// Xml content containing information regarding exploit protection details.
	DefenderExploitProtectionXml *string `json:"defenderExploitProtectionXml,omitempty"`
	isExplicitNullDefenderExploitProtectionXml bool `json:"-"`
	// Name of the file from which DefenderExploitProtectionXml was obtained.
	DefenderExploitProtectionXmlFileName *string `json:"defenderExploitProtectionXmlFileName,omitempty"`
	isExplicitNullDefenderExploitProtectionXmlFileName bool `json:"-"`
	// Indicates whether or not to block user from overriding Exploit Protection settings.
	DefenderSecurityCenterBlockExploitProtectionOverride *bool `json:"defenderSecurityCenterBlockExploitProtectionOverride,omitempty"`

	// Enables the Admin to choose what types of app to allow on devices.
	AppLockerApplicationControl *AnyOfmicrosoftGraphAppLockerApplicationControlType `json:"appLockerApplicationControl,omitempty"`

	// Allows IT Admins to configure SmartScreen for Windows.
	SmartScreenEnableInShell *bool `json:"smartScreenEnableInShell,omitempty"`

	// Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files.
	SmartScreenBlockOverrideForFiles *bool `json:"smartScreenBlockOverrideForFiles,omitempty"`

	// Enable Windows Defender Application Guard
	ApplicationGuardEnabled *bool `json:"applicationGuardEnabled,omitempty"`

	// Block clipboard to transfer image file, text file or neither of them
	ApplicationGuardBlockFileTransfer *AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType `json:"applicationGuardBlockFileTransfer,omitempty"`

	// Block enterprise sites to load non-enterprise content, such as third party plug-ins
	ApplicationGuardBlockNonEnterpriseContent *bool `json:"applicationGuardBlockNonEnterpriseContent,omitempty"`

	// Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)
	ApplicationGuardAllowPersistence *bool `json:"applicationGuardAllowPersistence,omitempty"`

	// Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)
	ApplicationGuardForceAuditing *bool `json:"applicationGuardForceAuditing,omitempty"`

	// Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways.
	ApplicationGuardBlockClipboardSharing *AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType `json:"applicationGuardBlockClipboardSharing,omitempty"`

	// Allow printing to PDF from Container
	ApplicationGuardAllowPrintToPDF *bool `json:"applicationGuardAllowPrintToPDF,omitempty"`

	// Allow printing to XPS from Container
	ApplicationGuardAllowPrintToXPS *bool `json:"applicationGuardAllowPrintToXPS,omitempty"`

	// Allow printing to Local Printers from Container
	ApplicationGuardAllowPrintToLocalPrinters *bool `json:"applicationGuardAllowPrintToLocalPrinters,omitempty"`

	// Allow printing to Network Printers from Container
	ApplicationGuardAllowPrintToNetworkPrinters *bool `json:"applicationGuardAllowPrintToNetworkPrinters,omitempty"`

	// Allows the Admin to disable the warning prompt for other disk encryption on the user machines.
	BitLockerDisableWarningForOtherDiskEncryption *bool `json:"bitLockerDisableWarningForOtherDiskEncryption,omitempty"`

	// Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.
	BitLockerEnableStorageCardEncryptionOnMobile *bool `json:"bitLockerEnableStorageCardEncryptionOnMobile,omitempty"`

	// Allows the admin to require encryption to be turned on using BitLocker.
	BitLockerEncryptDevice *bool `json:"bitLockerEncryptDevice,omitempty"`

	// BitLocker Removable Drive Policy.
	BitLockerRemovableDrivePolicy *AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy `json:"bitLockerRemovableDrivePolicy,omitempty"`
	isExplicitNullBitLockerRemovableDrivePolicy bool `json:"-"`
}

// GetFirewallBlockStatefulFTP returns the FirewallBlockStatefulFTP field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallBlockStatefulFTP() bool {
	if o == nil || o.FirewallBlockStatefulFTP == nil {
		var ret bool
		return ret
	}
	return *o.FirewallBlockStatefulFTP
}

// GetFirewallBlockStatefulFTPOk returns a tuple with the FirewallBlockStatefulFTP field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallBlockStatefulFTPOk() (bool, bool) {
	if o == nil || o.FirewallBlockStatefulFTP == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallBlockStatefulFTP, true
}

// HasFirewallBlockStatefulFTP returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallBlockStatefulFTP() bool {
	if o != nil && o.FirewallBlockStatefulFTP != nil {
		return true
	}

	return false
}

// SetFirewallBlockStatefulFTP gets a reference to the given bool and assigns it to the FirewallBlockStatefulFTP field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallBlockStatefulFTP(v bool) {
	o.FirewallBlockStatefulFTP = &v
}

// GetFirewallIdleTimeoutForSecurityAssociationInSeconds returns the FirewallIdleTimeoutForSecurityAssociationInSeconds field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIdleTimeoutForSecurityAssociationInSeconds() int32 {
	if o == nil || o.FirewallIdleTimeoutForSecurityAssociationInSeconds == nil {
		var ret int32
		return ret
	}
	return *o.FirewallIdleTimeoutForSecurityAssociationInSeconds
}

// GetFirewallIdleTimeoutForSecurityAssociationInSecondsOk returns a tuple with the FirewallIdleTimeoutForSecurityAssociationInSeconds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIdleTimeoutForSecurityAssociationInSecondsOk() (int32, bool) {
	if o == nil || o.FirewallIdleTimeoutForSecurityAssociationInSeconds == nil {
		var ret int32
		return ret, false
	}
	return *o.FirewallIdleTimeoutForSecurityAssociationInSeconds, true
}

// HasFirewallIdleTimeoutForSecurityAssociationInSeconds returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallIdleTimeoutForSecurityAssociationInSeconds() bool {
	if o != nil && o.FirewallIdleTimeoutForSecurityAssociationInSeconds != nil {
		return true
	}

	return false
}

// SetFirewallIdleTimeoutForSecurityAssociationInSeconds gets a reference to the given int32 and assigns it to the FirewallIdleTimeoutForSecurityAssociationInSeconds field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIdleTimeoutForSecurityAssociationInSeconds(v int32) {
	o.FirewallIdleTimeoutForSecurityAssociationInSeconds = &v
}

// SetFirewallIdleTimeoutForSecurityAssociationInSecondsExplicitNull (un)sets FirewallIdleTimeoutForSecurityAssociationInSeconds to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FirewallIdleTimeoutForSecurityAssociationInSeconds value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIdleTimeoutForSecurityAssociationInSecondsExplicitNull(b bool) {
	o.FirewallIdleTimeoutForSecurityAssociationInSeconds = nil
	o.isExplicitNullFirewallIdleTimeoutForSecurityAssociationInSeconds = b
}
// GetFirewallPreSharedKeyEncodingMethod returns the FirewallPreSharedKeyEncodingMethod field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallPreSharedKeyEncodingMethod() AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType {
	if o == nil || o.FirewallPreSharedKeyEncodingMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType
		return ret
	}
	return *o.FirewallPreSharedKeyEncodingMethod
}

// GetFirewallPreSharedKeyEncodingMethodOk returns a tuple with the FirewallPreSharedKeyEncodingMethod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallPreSharedKeyEncodingMethodOk() (AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType, bool) {
	if o == nil || o.FirewallPreSharedKeyEncodingMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType
		return ret, false
	}
	return *o.FirewallPreSharedKeyEncodingMethod, true
}

// HasFirewallPreSharedKeyEncodingMethod returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallPreSharedKeyEncodingMethod() bool {
	if o != nil && o.FirewallPreSharedKeyEncodingMethod != nil {
		return true
	}

	return false
}

// SetFirewallPreSharedKeyEncodingMethod gets a reference to the given AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType and assigns it to the FirewallPreSharedKeyEncodingMethod field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallPreSharedKeyEncodingMethod(v AnyOfmicrosoftGraphFirewallPreSharedKeyEncodingMethodType) {
	o.FirewallPreSharedKeyEncodingMethod = &v
}

// GetFirewallIPSecExemptionsAllowNeighborDiscovery returns the FirewallIPSecExemptionsAllowNeighborDiscovery field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowNeighborDiscovery() bool {
	if o == nil || o.FirewallIPSecExemptionsAllowNeighborDiscovery == nil {
		var ret bool
		return ret
	}
	return *o.FirewallIPSecExemptionsAllowNeighborDiscovery
}

// GetFirewallIPSecExemptionsAllowNeighborDiscoveryOk returns a tuple with the FirewallIPSecExemptionsAllowNeighborDiscovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowNeighborDiscoveryOk() (bool, bool) {
	if o == nil || o.FirewallIPSecExemptionsAllowNeighborDiscovery == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallIPSecExemptionsAllowNeighborDiscovery, true
}

// HasFirewallIPSecExemptionsAllowNeighborDiscovery returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallIPSecExemptionsAllowNeighborDiscovery() bool {
	if o != nil && o.FirewallIPSecExemptionsAllowNeighborDiscovery != nil {
		return true
	}

	return false
}

// SetFirewallIPSecExemptionsAllowNeighborDiscovery gets a reference to the given bool and assigns it to the FirewallIPSecExemptionsAllowNeighborDiscovery field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIPSecExemptionsAllowNeighborDiscovery(v bool) {
	o.FirewallIPSecExemptionsAllowNeighborDiscovery = &v
}

// GetFirewallIPSecExemptionsAllowICMP returns the FirewallIPSecExemptionsAllowICMP field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowICMP() bool {
	if o == nil || o.FirewallIPSecExemptionsAllowICMP == nil {
		var ret bool
		return ret
	}
	return *o.FirewallIPSecExemptionsAllowICMP
}

// GetFirewallIPSecExemptionsAllowICMPOk returns a tuple with the FirewallIPSecExemptionsAllowICMP field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowICMPOk() (bool, bool) {
	if o == nil || o.FirewallIPSecExemptionsAllowICMP == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallIPSecExemptionsAllowICMP, true
}

// HasFirewallIPSecExemptionsAllowICMP returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallIPSecExemptionsAllowICMP() bool {
	if o != nil && o.FirewallIPSecExemptionsAllowICMP != nil {
		return true
	}

	return false
}

// SetFirewallIPSecExemptionsAllowICMP gets a reference to the given bool and assigns it to the FirewallIPSecExemptionsAllowICMP field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIPSecExemptionsAllowICMP(v bool) {
	o.FirewallIPSecExemptionsAllowICMP = &v
}

// GetFirewallIPSecExemptionsAllowRouterDiscovery returns the FirewallIPSecExemptionsAllowRouterDiscovery field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowRouterDiscovery() bool {
	if o == nil || o.FirewallIPSecExemptionsAllowRouterDiscovery == nil {
		var ret bool
		return ret
	}
	return *o.FirewallIPSecExemptionsAllowRouterDiscovery
}

// GetFirewallIPSecExemptionsAllowRouterDiscoveryOk returns a tuple with the FirewallIPSecExemptionsAllowRouterDiscovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowRouterDiscoveryOk() (bool, bool) {
	if o == nil || o.FirewallIPSecExemptionsAllowRouterDiscovery == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallIPSecExemptionsAllowRouterDiscovery, true
}

// HasFirewallIPSecExemptionsAllowRouterDiscovery returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallIPSecExemptionsAllowRouterDiscovery() bool {
	if o != nil && o.FirewallIPSecExemptionsAllowRouterDiscovery != nil {
		return true
	}

	return false
}

// SetFirewallIPSecExemptionsAllowRouterDiscovery gets a reference to the given bool and assigns it to the FirewallIPSecExemptionsAllowRouterDiscovery field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIPSecExemptionsAllowRouterDiscovery(v bool) {
	o.FirewallIPSecExemptionsAllowRouterDiscovery = &v
}

// GetFirewallIPSecExemptionsAllowDHCP returns the FirewallIPSecExemptionsAllowDHCP field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowDHCP() bool {
	if o == nil || o.FirewallIPSecExemptionsAllowDHCP == nil {
		var ret bool
		return ret
	}
	return *o.FirewallIPSecExemptionsAllowDHCP
}

// GetFirewallIPSecExemptionsAllowDHCPOk returns a tuple with the FirewallIPSecExemptionsAllowDHCP field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallIPSecExemptionsAllowDHCPOk() (bool, bool) {
	if o == nil || o.FirewallIPSecExemptionsAllowDHCP == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallIPSecExemptionsAllowDHCP, true
}

// HasFirewallIPSecExemptionsAllowDHCP returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallIPSecExemptionsAllowDHCP() bool {
	if o != nil && o.FirewallIPSecExemptionsAllowDHCP != nil {
		return true
	}

	return false
}

// SetFirewallIPSecExemptionsAllowDHCP gets a reference to the given bool and assigns it to the FirewallIPSecExemptionsAllowDHCP field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallIPSecExemptionsAllowDHCP(v bool) {
	o.FirewallIPSecExemptionsAllowDHCP = &v
}

// GetFirewallCertificateRevocationListCheckMethod returns the FirewallCertificateRevocationListCheckMethod field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallCertificateRevocationListCheckMethod() AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType {
	if o == nil || o.FirewallCertificateRevocationListCheckMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType
		return ret
	}
	return *o.FirewallCertificateRevocationListCheckMethod
}

// GetFirewallCertificateRevocationListCheckMethodOk returns a tuple with the FirewallCertificateRevocationListCheckMethod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallCertificateRevocationListCheckMethodOk() (AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType, bool) {
	if o == nil || o.FirewallCertificateRevocationListCheckMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType
		return ret, false
	}
	return *o.FirewallCertificateRevocationListCheckMethod, true
}

// HasFirewallCertificateRevocationListCheckMethod returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallCertificateRevocationListCheckMethod() bool {
	if o != nil && o.FirewallCertificateRevocationListCheckMethod != nil {
		return true
	}

	return false
}

// SetFirewallCertificateRevocationListCheckMethod gets a reference to the given AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType and assigns it to the FirewallCertificateRevocationListCheckMethod field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallCertificateRevocationListCheckMethod(v AnyOfmicrosoftGraphFirewallCertificateRevocationListCheckMethodType) {
	o.FirewallCertificateRevocationListCheckMethod = &v
}

// GetFirewallMergeKeyingModuleSettings returns the FirewallMergeKeyingModuleSettings field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallMergeKeyingModuleSettings() bool {
	if o == nil || o.FirewallMergeKeyingModuleSettings == nil {
		var ret bool
		return ret
	}
	return *o.FirewallMergeKeyingModuleSettings
}

// GetFirewallMergeKeyingModuleSettingsOk returns a tuple with the FirewallMergeKeyingModuleSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallMergeKeyingModuleSettingsOk() (bool, bool) {
	if o == nil || o.FirewallMergeKeyingModuleSettings == nil {
		var ret bool
		return ret, false
	}
	return *o.FirewallMergeKeyingModuleSettings, true
}

// HasFirewallMergeKeyingModuleSettings returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallMergeKeyingModuleSettings() bool {
	if o != nil && o.FirewallMergeKeyingModuleSettings != nil {
		return true
	}

	return false
}

// SetFirewallMergeKeyingModuleSettings gets a reference to the given bool and assigns it to the FirewallMergeKeyingModuleSettings field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallMergeKeyingModuleSettings(v bool) {
	o.FirewallMergeKeyingModuleSettings = &v
}

// GetFirewallPacketQueueingMethod returns the FirewallPacketQueueingMethod field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallPacketQueueingMethod() AnyOfmicrosoftGraphFirewallPacketQueueingMethodType {
	if o == nil || o.FirewallPacketQueueingMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallPacketQueueingMethodType
		return ret
	}
	return *o.FirewallPacketQueueingMethod
}

// GetFirewallPacketQueueingMethodOk returns a tuple with the FirewallPacketQueueingMethod field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallPacketQueueingMethodOk() (AnyOfmicrosoftGraphFirewallPacketQueueingMethodType, bool) {
	if o == nil || o.FirewallPacketQueueingMethod == nil {
		var ret AnyOfmicrosoftGraphFirewallPacketQueueingMethodType
		return ret, false
	}
	return *o.FirewallPacketQueueingMethod, true
}

// HasFirewallPacketQueueingMethod returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallPacketQueueingMethod() bool {
	if o != nil && o.FirewallPacketQueueingMethod != nil {
		return true
	}

	return false
}

// SetFirewallPacketQueueingMethod gets a reference to the given AnyOfmicrosoftGraphFirewallPacketQueueingMethodType and assigns it to the FirewallPacketQueueingMethod field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallPacketQueueingMethod(v AnyOfmicrosoftGraphFirewallPacketQueueingMethodType) {
	o.FirewallPacketQueueingMethod = &v
}

// GetFirewallProfileDomain returns the FirewallProfileDomain field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfileDomain() AnyOfmicrosoftGraphWindowsFirewallNetworkProfile {
	if o == nil || o.FirewallProfileDomain == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret
	}
	return *o.FirewallProfileDomain
}

// GetFirewallProfileDomainOk returns a tuple with the FirewallProfileDomain field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfileDomainOk() (AnyOfmicrosoftGraphWindowsFirewallNetworkProfile, bool) {
	if o == nil || o.FirewallProfileDomain == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret, false
	}
	return *o.FirewallProfileDomain, true
}

// HasFirewallProfileDomain returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallProfileDomain() bool {
	if o != nil && o.FirewallProfileDomain != nil {
		return true
	}

	return false
}

// SetFirewallProfileDomain gets a reference to the given AnyOfmicrosoftGraphWindowsFirewallNetworkProfile and assigns it to the FirewallProfileDomain field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfileDomain(v AnyOfmicrosoftGraphWindowsFirewallNetworkProfile) {
	o.FirewallProfileDomain = &v
}

// SetFirewallProfileDomainExplicitNull (un)sets FirewallProfileDomain to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FirewallProfileDomain value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfileDomainExplicitNull(b bool) {
	o.FirewallProfileDomain = nil
	o.isExplicitNullFirewallProfileDomain = b
}
// GetFirewallProfilePublic returns the FirewallProfilePublic field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfilePublic() AnyOfmicrosoftGraphWindowsFirewallNetworkProfile {
	if o == nil || o.FirewallProfilePublic == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret
	}
	return *o.FirewallProfilePublic
}

// GetFirewallProfilePublicOk returns a tuple with the FirewallProfilePublic field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfilePublicOk() (AnyOfmicrosoftGraphWindowsFirewallNetworkProfile, bool) {
	if o == nil || o.FirewallProfilePublic == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret, false
	}
	return *o.FirewallProfilePublic, true
}

// HasFirewallProfilePublic returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallProfilePublic() bool {
	if o != nil && o.FirewallProfilePublic != nil {
		return true
	}

	return false
}

// SetFirewallProfilePublic gets a reference to the given AnyOfmicrosoftGraphWindowsFirewallNetworkProfile and assigns it to the FirewallProfilePublic field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfilePublic(v AnyOfmicrosoftGraphWindowsFirewallNetworkProfile) {
	o.FirewallProfilePublic = &v
}

// SetFirewallProfilePublicExplicitNull (un)sets FirewallProfilePublic to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FirewallProfilePublic value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfilePublicExplicitNull(b bool) {
	o.FirewallProfilePublic = nil
	o.isExplicitNullFirewallProfilePublic = b
}
// GetFirewallProfilePrivate returns the FirewallProfilePrivate field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfilePrivate() AnyOfmicrosoftGraphWindowsFirewallNetworkProfile {
	if o == nil || o.FirewallProfilePrivate == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret
	}
	return *o.FirewallProfilePrivate
}

// GetFirewallProfilePrivateOk returns a tuple with the FirewallProfilePrivate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetFirewallProfilePrivateOk() (AnyOfmicrosoftGraphWindowsFirewallNetworkProfile, bool) {
	if o == nil || o.FirewallProfilePrivate == nil {
		var ret AnyOfmicrosoftGraphWindowsFirewallNetworkProfile
		return ret, false
	}
	return *o.FirewallProfilePrivate, true
}

// HasFirewallProfilePrivate returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasFirewallProfilePrivate() bool {
	if o != nil && o.FirewallProfilePrivate != nil {
		return true
	}

	return false
}

// SetFirewallProfilePrivate gets a reference to the given AnyOfmicrosoftGraphWindowsFirewallNetworkProfile and assigns it to the FirewallProfilePrivate field.
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfilePrivate(v AnyOfmicrosoftGraphWindowsFirewallNetworkProfile) {
	o.FirewallProfilePrivate = &v
}

// SetFirewallProfilePrivateExplicitNull (un)sets FirewallProfilePrivate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FirewallProfilePrivate value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetFirewallProfilePrivateExplicitNull(b bool) {
	o.FirewallProfilePrivate = nil
	o.isExplicitNullFirewallProfilePrivate = b
}
// GetDefenderAttackSurfaceReductionExcludedPaths returns the DefenderAttackSurfaceReductionExcludedPaths field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderAttackSurfaceReductionExcludedPaths() []string {
	if o == nil || o.DefenderAttackSurfaceReductionExcludedPaths == nil {
		var ret []string
		return ret
	}
	return *o.DefenderAttackSurfaceReductionExcludedPaths
}

// GetDefenderAttackSurfaceReductionExcludedPathsOk returns a tuple with the DefenderAttackSurfaceReductionExcludedPaths field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderAttackSurfaceReductionExcludedPathsOk() ([]string, bool) {
	if o == nil || o.DefenderAttackSurfaceReductionExcludedPaths == nil {
		var ret []string
		return ret, false
	}
	return *o.DefenderAttackSurfaceReductionExcludedPaths, true
}

// HasDefenderAttackSurfaceReductionExcludedPaths returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderAttackSurfaceReductionExcludedPaths() bool {
	if o != nil && o.DefenderAttackSurfaceReductionExcludedPaths != nil {
		return true
	}

	return false
}

// SetDefenderAttackSurfaceReductionExcludedPaths gets a reference to the given []string and assigns it to the DefenderAttackSurfaceReductionExcludedPaths field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderAttackSurfaceReductionExcludedPaths(v []string) {
	o.DefenderAttackSurfaceReductionExcludedPaths = &v
}

// GetDefenderGuardedFoldersAllowedAppPaths returns the DefenderGuardedFoldersAllowedAppPaths field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderGuardedFoldersAllowedAppPaths() []string {
	if o == nil || o.DefenderGuardedFoldersAllowedAppPaths == nil {
		var ret []string
		return ret
	}
	return *o.DefenderGuardedFoldersAllowedAppPaths
}

// GetDefenderGuardedFoldersAllowedAppPathsOk returns a tuple with the DefenderGuardedFoldersAllowedAppPaths field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderGuardedFoldersAllowedAppPathsOk() ([]string, bool) {
	if o == nil || o.DefenderGuardedFoldersAllowedAppPaths == nil {
		var ret []string
		return ret, false
	}
	return *o.DefenderGuardedFoldersAllowedAppPaths, true
}

// HasDefenderGuardedFoldersAllowedAppPaths returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderGuardedFoldersAllowedAppPaths() bool {
	if o != nil && o.DefenderGuardedFoldersAllowedAppPaths != nil {
		return true
	}

	return false
}

// SetDefenderGuardedFoldersAllowedAppPaths gets a reference to the given []string and assigns it to the DefenderGuardedFoldersAllowedAppPaths field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderGuardedFoldersAllowedAppPaths(v []string) {
	o.DefenderGuardedFoldersAllowedAppPaths = &v
}

// GetDefenderAdditionalGuardedFolders returns the DefenderAdditionalGuardedFolders field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderAdditionalGuardedFolders() []string {
	if o == nil || o.DefenderAdditionalGuardedFolders == nil {
		var ret []string
		return ret
	}
	return *o.DefenderAdditionalGuardedFolders
}

// GetDefenderAdditionalGuardedFoldersOk returns a tuple with the DefenderAdditionalGuardedFolders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderAdditionalGuardedFoldersOk() ([]string, bool) {
	if o == nil || o.DefenderAdditionalGuardedFolders == nil {
		var ret []string
		return ret, false
	}
	return *o.DefenderAdditionalGuardedFolders, true
}

// HasDefenderAdditionalGuardedFolders returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderAdditionalGuardedFolders() bool {
	if o != nil && o.DefenderAdditionalGuardedFolders != nil {
		return true
	}

	return false
}

// SetDefenderAdditionalGuardedFolders gets a reference to the given []string and assigns it to the DefenderAdditionalGuardedFolders field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderAdditionalGuardedFolders(v []string) {
	o.DefenderAdditionalGuardedFolders = &v
}

// GetDefenderExploitProtectionXml returns the DefenderExploitProtectionXml field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderExploitProtectionXml() string {
	if o == nil || o.DefenderExploitProtectionXml == nil {
		var ret string
		return ret
	}
	return *o.DefenderExploitProtectionXml
}

// GetDefenderExploitProtectionXmlOk returns a tuple with the DefenderExploitProtectionXml field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderExploitProtectionXmlOk() (string, bool) {
	if o == nil || o.DefenderExploitProtectionXml == nil {
		var ret string
		return ret, false
	}
	return *o.DefenderExploitProtectionXml, true
}

// HasDefenderExploitProtectionXml returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderExploitProtectionXml() bool {
	if o != nil && o.DefenderExploitProtectionXml != nil {
		return true
	}

	return false
}

// SetDefenderExploitProtectionXml gets a reference to the given string and assigns it to the DefenderExploitProtectionXml field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderExploitProtectionXml(v string) {
	o.DefenderExploitProtectionXml = &v
}

// SetDefenderExploitProtectionXmlExplicitNull (un)sets DefenderExploitProtectionXml to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DefenderExploitProtectionXml value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetDefenderExploitProtectionXmlExplicitNull(b bool) {
	o.DefenderExploitProtectionXml = nil
	o.isExplicitNullDefenderExploitProtectionXml = b
}
// GetDefenderExploitProtectionXmlFileName returns the DefenderExploitProtectionXmlFileName field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderExploitProtectionXmlFileName() string {
	if o == nil || o.DefenderExploitProtectionXmlFileName == nil {
		var ret string
		return ret
	}
	return *o.DefenderExploitProtectionXmlFileName
}

// GetDefenderExploitProtectionXmlFileNameOk returns a tuple with the DefenderExploitProtectionXmlFileName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderExploitProtectionXmlFileNameOk() (string, bool) {
	if o == nil || o.DefenderExploitProtectionXmlFileName == nil {
		var ret string
		return ret, false
	}
	return *o.DefenderExploitProtectionXmlFileName, true
}

// HasDefenderExploitProtectionXmlFileName returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderExploitProtectionXmlFileName() bool {
	if o != nil && o.DefenderExploitProtectionXmlFileName != nil {
		return true
	}

	return false
}

// SetDefenderExploitProtectionXmlFileName gets a reference to the given string and assigns it to the DefenderExploitProtectionXmlFileName field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderExploitProtectionXmlFileName(v string) {
	o.DefenderExploitProtectionXmlFileName = &v
}

// SetDefenderExploitProtectionXmlFileNameExplicitNull (un)sets DefenderExploitProtectionXmlFileName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DefenderExploitProtectionXmlFileName value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetDefenderExploitProtectionXmlFileNameExplicitNull(b bool) {
	o.DefenderExploitProtectionXmlFileName = nil
	o.isExplicitNullDefenderExploitProtectionXmlFileName = b
}
// GetDefenderSecurityCenterBlockExploitProtectionOverride returns the DefenderSecurityCenterBlockExploitProtectionOverride field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderSecurityCenterBlockExploitProtectionOverride() bool {
	if o == nil || o.DefenderSecurityCenterBlockExploitProtectionOverride == nil {
		var ret bool
		return ret
	}
	return *o.DefenderSecurityCenterBlockExploitProtectionOverride
}

// GetDefenderSecurityCenterBlockExploitProtectionOverrideOk returns a tuple with the DefenderSecurityCenterBlockExploitProtectionOverride field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetDefenderSecurityCenterBlockExploitProtectionOverrideOk() (bool, bool) {
	if o == nil || o.DefenderSecurityCenterBlockExploitProtectionOverride == nil {
		var ret bool
		return ret, false
	}
	return *o.DefenderSecurityCenterBlockExploitProtectionOverride, true
}

// HasDefenderSecurityCenterBlockExploitProtectionOverride returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasDefenderSecurityCenterBlockExploitProtectionOverride() bool {
	if o != nil && o.DefenderSecurityCenterBlockExploitProtectionOverride != nil {
		return true
	}

	return false
}

// SetDefenderSecurityCenterBlockExploitProtectionOverride gets a reference to the given bool and assigns it to the DefenderSecurityCenterBlockExploitProtectionOverride field.
func (o *Windows10EndpointProtectionConfiguration) SetDefenderSecurityCenterBlockExploitProtectionOverride(v bool) {
	o.DefenderSecurityCenterBlockExploitProtectionOverride = &v
}

// GetAppLockerApplicationControl returns the AppLockerApplicationControl field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetAppLockerApplicationControl() AnyOfmicrosoftGraphAppLockerApplicationControlType {
	if o == nil || o.AppLockerApplicationControl == nil {
		var ret AnyOfmicrosoftGraphAppLockerApplicationControlType
		return ret
	}
	return *o.AppLockerApplicationControl
}

// GetAppLockerApplicationControlOk returns a tuple with the AppLockerApplicationControl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetAppLockerApplicationControlOk() (AnyOfmicrosoftGraphAppLockerApplicationControlType, bool) {
	if o == nil || o.AppLockerApplicationControl == nil {
		var ret AnyOfmicrosoftGraphAppLockerApplicationControlType
		return ret, false
	}
	return *o.AppLockerApplicationControl, true
}

// HasAppLockerApplicationControl returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasAppLockerApplicationControl() bool {
	if o != nil && o.AppLockerApplicationControl != nil {
		return true
	}

	return false
}

// SetAppLockerApplicationControl gets a reference to the given AnyOfmicrosoftGraphAppLockerApplicationControlType and assigns it to the AppLockerApplicationControl field.
func (o *Windows10EndpointProtectionConfiguration) SetAppLockerApplicationControl(v AnyOfmicrosoftGraphAppLockerApplicationControlType) {
	o.AppLockerApplicationControl = &v
}

// GetSmartScreenEnableInShell returns the SmartScreenEnableInShell field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetSmartScreenEnableInShell() bool {
	if o == nil || o.SmartScreenEnableInShell == nil {
		var ret bool
		return ret
	}
	return *o.SmartScreenEnableInShell
}

// GetSmartScreenEnableInShellOk returns a tuple with the SmartScreenEnableInShell field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetSmartScreenEnableInShellOk() (bool, bool) {
	if o == nil || o.SmartScreenEnableInShell == nil {
		var ret bool
		return ret, false
	}
	return *o.SmartScreenEnableInShell, true
}

// HasSmartScreenEnableInShell returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasSmartScreenEnableInShell() bool {
	if o != nil && o.SmartScreenEnableInShell != nil {
		return true
	}

	return false
}

// SetSmartScreenEnableInShell gets a reference to the given bool and assigns it to the SmartScreenEnableInShell field.
func (o *Windows10EndpointProtectionConfiguration) SetSmartScreenEnableInShell(v bool) {
	o.SmartScreenEnableInShell = &v
}

// GetSmartScreenBlockOverrideForFiles returns the SmartScreenBlockOverrideForFiles field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetSmartScreenBlockOverrideForFiles() bool {
	if o == nil || o.SmartScreenBlockOverrideForFiles == nil {
		var ret bool
		return ret
	}
	return *o.SmartScreenBlockOverrideForFiles
}

// GetSmartScreenBlockOverrideForFilesOk returns a tuple with the SmartScreenBlockOverrideForFiles field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetSmartScreenBlockOverrideForFilesOk() (bool, bool) {
	if o == nil || o.SmartScreenBlockOverrideForFiles == nil {
		var ret bool
		return ret, false
	}
	return *o.SmartScreenBlockOverrideForFiles, true
}

// HasSmartScreenBlockOverrideForFiles returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasSmartScreenBlockOverrideForFiles() bool {
	if o != nil && o.SmartScreenBlockOverrideForFiles != nil {
		return true
	}

	return false
}

// SetSmartScreenBlockOverrideForFiles gets a reference to the given bool and assigns it to the SmartScreenBlockOverrideForFiles field.
func (o *Windows10EndpointProtectionConfiguration) SetSmartScreenBlockOverrideForFiles(v bool) {
	o.SmartScreenBlockOverrideForFiles = &v
}

// GetApplicationGuardEnabled returns the ApplicationGuardEnabled field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardEnabled() bool {
	if o == nil || o.ApplicationGuardEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardEnabled
}

// GetApplicationGuardEnabledOk returns a tuple with the ApplicationGuardEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardEnabledOk() (bool, bool) {
	if o == nil || o.ApplicationGuardEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardEnabled, true
}

// HasApplicationGuardEnabled returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardEnabled() bool {
	if o != nil && o.ApplicationGuardEnabled != nil {
		return true
	}

	return false
}

// SetApplicationGuardEnabled gets a reference to the given bool and assigns it to the ApplicationGuardEnabled field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardEnabled(v bool) {
	o.ApplicationGuardEnabled = &v
}

// GetApplicationGuardBlockFileTransfer returns the ApplicationGuardBlockFileTransfer field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockFileTransfer() AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType {
	if o == nil || o.ApplicationGuardBlockFileTransfer == nil {
		var ret AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType
		return ret
	}
	return *o.ApplicationGuardBlockFileTransfer
}

// GetApplicationGuardBlockFileTransferOk returns a tuple with the ApplicationGuardBlockFileTransfer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockFileTransferOk() (AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType, bool) {
	if o == nil || o.ApplicationGuardBlockFileTransfer == nil {
		var ret AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType
		return ret, false
	}
	return *o.ApplicationGuardBlockFileTransfer, true
}

// HasApplicationGuardBlockFileTransfer returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardBlockFileTransfer() bool {
	if o != nil && o.ApplicationGuardBlockFileTransfer != nil {
		return true
	}

	return false
}

// SetApplicationGuardBlockFileTransfer gets a reference to the given AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType and assigns it to the ApplicationGuardBlockFileTransfer field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardBlockFileTransfer(v AnyOfmicrosoftGraphApplicationGuardBlockFileTransferType) {
	o.ApplicationGuardBlockFileTransfer = &v
}

// GetApplicationGuardBlockNonEnterpriseContent returns the ApplicationGuardBlockNonEnterpriseContent field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockNonEnterpriseContent() bool {
	if o == nil || o.ApplicationGuardBlockNonEnterpriseContent == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardBlockNonEnterpriseContent
}

// GetApplicationGuardBlockNonEnterpriseContentOk returns a tuple with the ApplicationGuardBlockNonEnterpriseContent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockNonEnterpriseContentOk() (bool, bool) {
	if o == nil || o.ApplicationGuardBlockNonEnterpriseContent == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardBlockNonEnterpriseContent, true
}

// HasApplicationGuardBlockNonEnterpriseContent returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardBlockNonEnterpriseContent() bool {
	if o != nil && o.ApplicationGuardBlockNonEnterpriseContent != nil {
		return true
	}

	return false
}

// SetApplicationGuardBlockNonEnterpriseContent gets a reference to the given bool and assigns it to the ApplicationGuardBlockNonEnterpriseContent field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardBlockNonEnterpriseContent(v bool) {
	o.ApplicationGuardBlockNonEnterpriseContent = &v
}

// GetApplicationGuardAllowPersistence returns the ApplicationGuardAllowPersistence field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPersistence() bool {
	if o == nil || o.ApplicationGuardAllowPersistence == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardAllowPersistence
}

// GetApplicationGuardAllowPersistenceOk returns a tuple with the ApplicationGuardAllowPersistence field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPersistenceOk() (bool, bool) {
	if o == nil || o.ApplicationGuardAllowPersistence == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardAllowPersistence, true
}

// HasApplicationGuardAllowPersistence returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardAllowPersistence() bool {
	if o != nil && o.ApplicationGuardAllowPersistence != nil {
		return true
	}

	return false
}

// SetApplicationGuardAllowPersistence gets a reference to the given bool and assigns it to the ApplicationGuardAllowPersistence field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardAllowPersistence(v bool) {
	o.ApplicationGuardAllowPersistence = &v
}

// GetApplicationGuardForceAuditing returns the ApplicationGuardForceAuditing field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardForceAuditing() bool {
	if o == nil || o.ApplicationGuardForceAuditing == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardForceAuditing
}

// GetApplicationGuardForceAuditingOk returns a tuple with the ApplicationGuardForceAuditing field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardForceAuditingOk() (bool, bool) {
	if o == nil || o.ApplicationGuardForceAuditing == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardForceAuditing, true
}

// HasApplicationGuardForceAuditing returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardForceAuditing() bool {
	if o != nil && o.ApplicationGuardForceAuditing != nil {
		return true
	}

	return false
}

// SetApplicationGuardForceAuditing gets a reference to the given bool and assigns it to the ApplicationGuardForceAuditing field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardForceAuditing(v bool) {
	o.ApplicationGuardForceAuditing = &v
}

// GetApplicationGuardBlockClipboardSharing returns the ApplicationGuardBlockClipboardSharing field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockClipboardSharing() AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType {
	if o == nil || o.ApplicationGuardBlockClipboardSharing == nil {
		var ret AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType
		return ret
	}
	return *o.ApplicationGuardBlockClipboardSharing
}

// GetApplicationGuardBlockClipboardSharingOk returns a tuple with the ApplicationGuardBlockClipboardSharing field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardBlockClipboardSharingOk() (AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType, bool) {
	if o == nil || o.ApplicationGuardBlockClipboardSharing == nil {
		var ret AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType
		return ret, false
	}
	return *o.ApplicationGuardBlockClipboardSharing, true
}

// HasApplicationGuardBlockClipboardSharing returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardBlockClipboardSharing() bool {
	if o != nil && o.ApplicationGuardBlockClipboardSharing != nil {
		return true
	}

	return false
}

// SetApplicationGuardBlockClipboardSharing gets a reference to the given AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType and assigns it to the ApplicationGuardBlockClipboardSharing field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardBlockClipboardSharing(v AnyOfmicrosoftGraphApplicationGuardBlockClipboardSharingType) {
	o.ApplicationGuardBlockClipboardSharing = &v
}

// GetApplicationGuardAllowPrintToPDF returns the ApplicationGuardAllowPrintToPDF field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToPDF() bool {
	if o == nil || o.ApplicationGuardAllowPrintToPDF == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardAllowPrintToPDF
}

// GetApplicationGuardAllowPrintToPDFOk returns a tuple with the ApplicationGuardAllowPrintToPDF field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToPDFOk() (bool, bool) {
	if o == nil || o.ApplicationGuardAllowPrintToPDF == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardAllowPrintToPDF, true
}

// HasApplicationGuardAllowPrintToPDF returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardAllowPrintToPDF() bool {
	if o != nil && o.ApplicationGuardAllowPrintToPDF != nil {
		return true
	}

	return false
}

// SetApplicationGuardAllowPrintToPDF gets a reference to the given bool and assigns it to the ApplicationGuardAllowPrintToPDF field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardAllowPrintToPDF(v bool) {
	o.ApplicationGuardAllowPrintToPDF = &v
}

// GetApplicationGuardAllowPrintToXPS returns the ApplicationGuardAllowPrintToXPS field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToXPS() bool {
	if o == nil || o.ApplicationGuardAllowPrintToXPS == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardAllowPrintToXPS
}

// GetApplicationGuardAllowPrintToXPSOk returns a tuple with the ApplicationGuardAllowPrintToXPS field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToXPSOk() (bool, bool) {
	if o == nil || o.ApplicationGuardAllowPrintToXPS == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardAllowPrintToXPS, true
}

// HasApplicationGuardAllowPrintToXPS returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardAllowPrintToXPS() bool {
	if o != nil && o.ApplicationGuardAllowPrintToXPS != nil {
		return true
	}

	return false
}

// SetApplicationGuardAllowPrintToXPS gets a reference to the given bool and assigns it to the ApplicationGuardAllowPrintToXPS field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardAllowPrintToXPS(v bool) {
	o.ApplicationGuardAllowPrintToXPS = &v
}

// GetApplicationGuardAllowPrintToLocalPrinters returns the ApplicationGuardAllowPrintToLocalPrinters field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToLocalPrinters() bool {
	if o == nil || o.ApplicationGuardAllowPrintToLocalPrinters == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardAllowPrintToLocalPrinters
}

// GetApplicationGuardAllowPrintToLocalPrintersOk returns a tuple with the ApplicationGuardAllowPrintToLocalPrinters field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToLocalPrintersOk() (bool, bool) {
	if o == nil || o.ApplicationGuardAllowPrintToLocalPrinters == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardAllowPrintToLocalPrinters, true
}

// HasApplicationGuardAllowPrintToLocalPrinters returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardAllowPrintToLocalPrinters() bool {
	if o != nil && o.ApplicationGuardAllowPrintToLocalPrinters != nil {
		return true
	}

	return false
}

// SetApplicationGuardAllowPrintToLocalPrinters gets a reference to the given bool and assigns it to the ApplicationGuardAllowPrintToLocalPrinters field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardAllowPrintToLocalPrinters(v bool) {
	o.ApplicationGuardAllowPrintToLocalPrinters = &v
}

// GetApplicationGuardAllowPrintToNetworkPrinters returns the ApplicationGuardAllowPrintToNetworkPrinters field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToNetworkPrinters() bool {
	if o == nil || o.ApplicationGuardAllowPrintToNetworkPrinters == nil {
		var ret bool
		return ret
	}
	return *o.ApplicationGuardAllowPrintToNetworkPrinters
}

// GetApplicationGuardAllowPrintToNetworkPrintersOk returns a tuple with the ApplicationGuardAllowPrintToNetworkPrinters field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetApplicationGuardAllowPrintToNetworkPrintersOk() (bool, bool) {
	if o == nil || o.ApplicationGuardAllowPrintToNetworkPrinters == nil {
		var ret bool
		return ret, false
	}
	return *o.ApplicationGuardAllowPrintToNetworkPrinters, true
}

// HasApplicationGuardAllowPrintToNetworkPrinters returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasApplicationGuardAllowPrintToNetworkPrinters() bool {
	if o != nil && o.ApplicationGuardAllowPrintToNetworkPrinters != nil {
		return true
	}

	return false
}

// SetApplicationGuardAllowPrintToNetworkPrinters gets a reference to the given bool and assigns it to the ApplicationGuardAllowPrintToNetworkPrinters field.
func (o *Windows10EndpointProtectionConfiguration) SetApplicationGuardAllowPrintToNetworkPrinters(v bool) {
	o.ApplicationGuardAllowPrintToNetworkPrinters = &v
}

// GetBitLockerDisableWarningForOtherDiskEncryption returns the BitLockerDisableWarningForOtherDiskEncryption field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerDisableWarningForOtherDiskEncryption() bool {
	if o == nil || o.BitLockerDisableWarningForOtherDiskEncryption == nil {
		var ret bool
		return ret
	}
	return *o.BitLockerDisableWarningForOtherDiskEncryption
}

// GetBitLockerDisableWarningForOtherDiskEncryptionOk returns a tuple with the BitLockerDisableWarningForOtherDiskEncryption field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerDisableWarningForOtherDiskEncryptionOk() (bool, bool) {
	if o == nil || o.BitLockerDisableWarningForOtherDiskEncryption == nil {
		var ret bool
		return ret, false
	}
	return *o.BitLockerDisableWarningForOtherDiskEncryption, true
}

// HasBitLockerDisableWarningForOtherDiskEncryption returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasBitLockerDisableWarningForOtherDiskEncryption() bool {
	if o != nil && o.BitLockerDisableWarningForOtherDiskEncryption != nil {
		return true
	}

	return false
}

// SetBitLockerDisableWarningForOtherDiskEncryption gets a reference to the given bool and assigns it to the BitLockerDisableWarningForOtherDiskEncryption field.
func (o *Windows10EndpointProtectionConfiguration) SetBitLockerDisableWarningForOtherDiskEncryption(v bool) {
	o.BitLockerDisableWarningForOtherDiskEncryption = &v
}

// GetBitLockerEnableStorageCardEncryptionOnMobile returns the BitLockerEnableStorageCardEncryptionOnMobile field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerEnableStorageCardEncryptionOnMobile() bool {
	if o == nil || o.BitLockerEnableStorageCardEncryptionOnMobile == nil {
		var ret bool
		return ret
	}
	return *o.BitLockerEnableStorageCardEncryptionOnMobile
}

// GetBitLockerEnableStorageCardEncryptionOnMobileOk returns a tuple with the BitLockerEnableStorageCardEncryptionOnMobile field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerEnableStorageCardEncryptionOnMobileOk() (bool, bool) {
	if o == nil || o.BitLockerEnableStorageCardEncryptionOnMobile == nil {
		var ret bool
		return ret, false
	}
	return *o.BitLockerEnableStorageCardEncryptionOnMobile, true
}

// HasBitLockerEnableStorageCardEncryptionOnMobile returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasBitLockerEnableStorageCardEncryptionOnMobile() bool {
	if o != nil && o.BitLockerEnableStorageCardEncryptionOnMobile != nil {
		return true
	}

	return false
}

// SetBitLockerEnableStorageCardEncryptionOnMobile gets a reference to the given bool and assigns it to the BitLockerEnableStorageCardEncryptionOnMobile field.
func (o *Windows10EndpointProtectionConfiguration) SetBitLockerEnableStorageCardEncryptionOnMobile(v bool) {
	o.BitLockerEnableStorageCardEncryptionOnMobile = &v
}

// GetBitLockerEncryptDevice returns the BitLockerEncryptDevice field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerEncryptDevice() bool {
	if o == nil || o.BitLockerEncryptDevice == nil {
		var ret bool
		return ret
	}
	return *o.BitLockerEncryptDevice
}

// GetBitLockerEncryptDeviceOk returns a tuple with the BitLockerEncryptDevice field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerEncryptDeviceOk() (bool, bool) {
	if o == nil || o.BitLockerEncryptDevice == nil {
		var ret bool
		return ret, false
	}
	return *o.BitLockerEncryptDevice, true
}

// HasBitLockerEncryptDevice returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasBitLockerEncryptDevice() bool {
	if o != nil && o.BitLockerEncryptDevice != nil {
		return true
	}

	return false
}

// SetBitLockerEncryptDevice gets a reference to the given bool and assigns it to the BitLockerEncryptDevice field.
func (o *Windows10EndpointProtectionConfiguration) SetBitLockerEncryptDevice(v bool) {
	o.BitLockerEncryptDevice = &v
}

// GetBitLockerRemovableDrivePolicy returns the BitLockerRemovableDrivePolicy field if non-nil, zero value otherwise.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerRemovableDrivePolicy() AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy {
	if o == nil || o.BitLockerRemovableDrivePolicy == nil {
		var ret AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy
		return ret
	}
	return *o.BitLockerRemovableDrivePolicy
}

// GetBitLockerRemovableDrivePolicyOk returns a tuple with the BitLockerRemovableDrivePolicy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Windows10EndpointProtectionConfiguration) GetBitLockerRemovableDrivePolicyOk() (AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy, bool) {
	if o == nil || o.BitLockerRemovableDrivePolicy == nil {
		var ret AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy
		return ret, false
	}
	return *o.BitLockerRemovableDrivePolicy, true
}

// HasBitLockerRemovableDrivePolicy returns a boolean if a field has been set.
func (o *Windows10EndpointProtectionConfiguration) HasBitLockerRemovableDrivePolicy() bool {
	if o != nil && o.BitLockerRemovableDrivePolicy != nil {
		return true
	}

	return false
}

// SetBitLockerRemovableDrivePolicy gets a reference to the given AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy and assigns it to the BitLockerRemovableDrivePolicy field.
func (o *Windows10EndpointProtectionConfiguration) SetBitLockerRemovableDrivePolicy(v AnyOfmicrosoftGraphBitLockerRemovableDrivePolicy) {
	o.BitLockerRemovableDrivePolicy = &v
}

// SetBitLockerRemovableDrivePolicyExplicitNull (un)sets BitLockerRemovableDrivePolicy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BitLockerRemovableDrivePolicy value is set to nil even if false is passed
func (o *Windows10EndpointProtectionConfiguration) SetBitLockerRemovableDrivePolicyExplicitNull(b bool) {
	o.BitLockerRemovableDrivePolicy = nil
	o.isExplicitNullBitLockerRemovableDrivePolicy = b
}

// MarshalJSON returns the JSON representation of the model.
func (o Windows10EndpointProtectionConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirewallBlockStatefulFTP != nil {
		toSerialize["firewallBlockStatefulFTP"] = o.FirewallBlockStatefulFTP
	}
	if o.FirewallIdleTimeoutForSecurityAssociationInSeconds == nil {
		if o.isExplicitNullFirewallIdleTimeoutForSecurityAssociationInSeconds {
			toSerialize["firewallIdleTimeoutForSecurityAssociationInSeconds"] = o.FirewallIdleTimeoutForSecurityAssociationInSeconds
		}
	} else {
		toSerialize["firewallIdleTimeoutForSecurityAssociationInSeconds"] = o.FirewallIdleTimeoutForSecurityAssociationInSeconds
	}
	if o.FirewallPreSharedKeyEncodingMethod != nil {
		toSerialize["firewallPreSharedKeyEncodingMethod"] = o.FirewallPreSharedKeyEncodingMethod
	}
	if o.FirewallIPSecExemptionsAllowNeighborDiscovery != nil {
		toSerialize["firewallIPSecExemptionsAllowNeighborDiscovery"] = o.FirewallIPSecExemptionsAllowNeighborDiscovery
	}
	if o.FirewallIPSecExemptionsAllowICMP != nil {
		toSerialize["firewallIPSecExemptionsAllowICMP"] = o.FirewallIPSecExemptionsAllowICMP
	}
	if o.FirewallIPSecExemptionsAllowRouterDiscovery != nil {
		toSerialize["firewallIPSecExemptionsAllowRouterDiscovery"] = o.FirewallIPSecExemptionsAllowRouterDiscovery
	}
	if o.FirewallIPSecExemptionsAllowDHCP != nil {
		toSerialize["firewallIPSecExemptionsAllowDHCP"] = o.FirewallIPSecExemptionsAllowDHCP
	}
	if o.FirewallCertificateRevocationListCheckMethod != nil {
		toSerialize["firewallCertificateRevocationListCheckMethod"] = o.FirewallCertificateRevocationListCheckMethod
	}
	if o.FirewallMergeKeyingModuleSettings != nil {
		toSerialize["firewallMergeKeyingModuleSettings"] = o.FirewallMergeKeyingModuleSettings
	}
	if o.FirewallPacketQueueingMethod != nil {
		toSerialize["firewallPacketQueueingMethod"] = o.FirewallPacketQueueingMethod
	}
	if o.FirewallProfileDomain == nil {
		if o.isExplicitNullFirewallProfileDomain {
			toSerialize["firewallProfileDomain"] = o.FirewallProfileDomain
		}
	} else {
		toSerialize["firewallProfileDomain"] = o.FirewallProfileDomain
	}
	if o.FirewallProfilePublic == nil {
		if o.isExplicitNullFirewallProfilePublic {
			toSerialize["firewallProfilePublic"] = o.FirewallProfilePublic
		}
	} else {
		toSerialize["firewallProfilePublic"] = o.FirewallProfilePublic
	}
	if o.FirewallProfilePrivate == nil {
		if o.isExplicitNullFirewallProfilePrivate {
			toSerialize["firewallProfilePrivate"] = o.FirewallProfilePrivate
		}
	} else {
		toSerialize["firewallProfilePrivate"] = o.FirewallProfilePrivate
	}
	if o.DefenderAttackSurfaceReductionExcludedPaths != nil {
		toSerialize["defenderAttackSurfaceReductionExcludedPaths"] = o.DefenderAttackSurfaceReductionExcludedPaths
	}
	if o.DefenderGuardedFoldersAllowedAppPaths != nil {
		toSerialize["defenderGuardedFoldersAllowedAppPaths"] = o.DefenderGuardedFoldersAllowedAppPaths
	}
	if o.DefenderAdditionalGuardedFolders != nil {
		toSerialize["defenderAdditionalGuardedFolders"] = o.DefenderAdditionalGuardedFolders
	}
	if o.DefenderExploitProtectionXml == nil {
		if o.isExplicitNullDefenderExploitProtectionXml {
			toSerialize["defenderExploitProtectionXml"] = o.DefenderExploitProtectionXml
		}
	} else {
		toSerialize["defenderExploitProtectionXml"] = o.DefenderExploitProtectionXml
	}
	if o.DefenderExploitProtectionXmlFileName == nil {
		if o.isExplicitNullDefenderExploitProtectionXmlFileName {
			toSerialize["defenderExploitProtectionXmlFileName"] = o.DefenderExploitProtectionXmlFileName
		}
	} else {
		toSerialize["defenderExploitProtectionXmlFileName"] = o.DefenderExploitProtectionXmlFileName
	}
	if o.DefenderSecurityCenterBlockExploitProtectionOverride != nil {
		toSerialize["defenderSecurityCenterBlockExploitProtectionOverride"] = o.DefenderSecurityCenterBlockExploitProtectionOverride
	}
	if o.AppLockerApplicationControl != nil {
		toSerialize["appLockerApplicationControl"] = o.AppLockerApplicationControl
	}
	if o.SmartScreenEnableInShell != nil {
		toSerialize["smartScreenEnableInShell"] = o.SmartScreenEnableInShell
	}
	if o.SmartScreenBlockOverrideForFiles != nil {
		toSerialize["smartScreenBlockOverrideForFiles"] = o.SmartScreenBlockOverrideForFiles
	}
	if o.ApplicationGuardEnabled != nil {
		toSerialize["applicationGuardEnabled"] = o.ApplicationGuardEnabled
	}
	if o.ApplicationGuardBlockFileTransfer != nil {
		toSerialize["applicationGuardBlockFileTransfer"] = o.ApplicationGuardBlockFileTransfer
	}
	if o.ApplicationGuardBlockNonEnterpriseContent != nil {
		toSerialize["applicationGuardBlockNonEnterpriseContent"] = o.ApplicationGuardBlockNonEnterpriseContent
	}
	if o.ApplicationGuardAllowPersistence != nil {
		toSerialize["applicationGuardAllowPersistence"] = o.ApplicationGuardAllowPersistence
	}
	if o.ApplicationGuardForceAuditing != nil {
		toSerialize["applicationGuardForceAuditing"] = o.ApplicationGuardForceAuditing
	}
	if o.ApplicationGuardBlockClipboardSharing != nil {
		toSerialize["applicationGuardBlockClipboardSharing"] = o.ApplicationGuardBlockClipboardSharing
	}
	if o.ApplicationGuardAllowPrintToPDF != nil {
		toSerialize["applicationGuardAllowPrintToPDF"] = o.ApplicationGuardAllowPrintToPDF
	}
	if o.ApplicationGuardAllowPrintToXPS != nil {
		toSerialize["applicationGuardAllowPrintToXPS"] = o.ApplicationGuardAllowPrintToXPS
	}
	if o.ApplicationGuardAllowPrintToLocalPrinters != nil {
		toSerialize["applicationGuardAllowPrintToLocalPrinters"] = o.ApplicationGuardAllowPrintToLocalPrinters
	}
	if o.ApplicationGuardAllowPrintToNetworkPrinters != nil {
		toSerialize["applicationGuardAllowPrintToNetworkPrinters"] = o.ApplicationGuardAllowPrintToNetworkPrinters
	}
	if o.BitLockerDisableWarningForOtherDiskEncryption != nil {
		toSerialize["bitLockerDisableWarningForOtherDiskEncryption"] = o.BitLockerDisableWarningForOtherDiskEncryption
	}
	if o.BitLockerEnableStorageCardEncryptionOnMobile != nil {
		toSerialize["bitLockerEnableStorageCardEncryptionOnMobile"] = o.BitLockerEnableStorageCardEncryptionOnMobile
	}
	if o.BitLockerEncryptDevice != nil {
		toSerialize["bitLockerEncryptDevice"] = o.BitLockerEncryptDevice
	}
	if o.BitLockerRemovableDrivePolicy == nil {
		if o.isExplicitNullBitLockerRemovableDrivePolicy {
			toSerialize["bitLockerRemovableDrivePolicy"] = o.BitLockerRemovableDrivePolicy
		}
	} else {
		toSerialize["bitLockerRemovableDrivePolicy"] = o.BitLockerRemovableDrivePolicy
	}
	return json.Marshal(toSerialize)
}


