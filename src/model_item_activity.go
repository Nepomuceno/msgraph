/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// ItemActivity struct for ItemActivity
type ItemActivity struct {
	Access *AnyOfobject `json:"access,omitempty"`
	isExplicitNullAccess bool `json:"-"`
	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`
	isExplicitNullActivityDateTime bool `json:"-"`
	Actor *AnyOfmicrosoftGraphIdentitySet `json:"actor,omitempty"`
	isExplicitNullActor bool `json:"-"`
	DriveItem *AnyOfmicrosoftGraphDriveItem `json:"driveItem,omitempty"`
	isExplicitNullDriveItem bool `json:"-"`
}

// GetAccess returns the Access field if non-nil, zero value otherwise.
func (o *ItemActivity) GetAccess() AnyOfobject {
	if o == nil || o.Access == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ItemActivity) GetAccessOk() (AnyOfobject, bool) {
	if o == nil || o.Access == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ItemActivity) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given AnyOfobject and assigns it to the Access field.
func (o *ItemActivity) SetAccess(v AnyOfobject) {
	o.Access = &v
}

// SetAccessExplicitNull (un)sets Access to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Access value is set to nil even if false is passed
func (o *ItemActivity) SetAccessExplicitNull(b bool) {
	o.Access = nil
	o.isExplicitNullAccess = b
}
// GetActivityDateTime returns the ActivityDateTime field if non-nil, zero value otherwise.
func (o *ItemActivity) GetActivityDateTime() time.Time {
	if o == nil || o.ActivityDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivityDateTime
}

// GetActivityDateTimeOk returns a tuple with the ActivityDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ItemActivity) GetActivityDateTimeOk() (time.Time, bool) {
	if o == nil || o.ActivityDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ActivityDateTime, true
}

// HasActivityDateTime returns a boolean if a field has been set.
func (o *ItemActivity) HasActivityDateTime() bool {
	if o != nil && o.ActivityDateTime != nil {
		return true
	}

	return false
}

// SetActivityDateTime gets a reference to the given time.Time and assigns it to the ActivityDateTime field.
func (o *ItemActivity) SetActivityDateTime(v time.Time) {
	o.ActivityDateTime = &v
}

// SetActivityDateTimeExplicitNull (un)sets ActivityDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ActivityDateTime value is set to nil even if false is passed
func (o *ItemActivity) SetActivityDateTimeExplicitNull(b bool) {
	o.ActivityDateTime = nil
	o.isExplicitNullActivityDateTime = b
}
// GetActor returns the Actor field if non-nil, zero value otherwise.
func (o *ItemActivity) GetActor() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.Actor == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.Actor
}

// GetActorOk returns a tuple with the Actor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ItemActivity) GetActorOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.Actor == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.Actor, true
}

// HasActor returns a boolean if a field has been set.
func (o *ItemActivity) HasActor() bool {
	if o != nil && o.Actor != nil {
		return true
	}

	return false
}

// SetActor gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the Actor field.
func (o *ItemActivity) SetActor(v AnyOfmicrosoftGraphIdentitySet) {
	o.Actor = &v
}

// SetActorExplicitNull (un)sets Actor to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Actor value is set to nil even if false is passed
func (o *ItemActivity) SetActorExplicitNull(b bool) {
	o.Actor = nil
	o.isExplicitNullActor = b
}
// GetDriveItem returns the DriveItem field if non-nil, zero value otherwise.
func (o *ItemActivity) GetDriveItem() AnyOfmicrosoftGraphDriveItem {
	if o == nil || o.DriveItem == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret
	}
	return *o.DriveItem
}

// GetDriveItemOk returns a tuple with the DriveItem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ItemActivity) GetDriveItemOk() (AnyOfmicrosoftGraphDriveItem, bool) {
	if o == nil || o.DriveItem == nil {
		var ret AnyOfmicrosoftGraphDriveItem
		return ret, false
	}
	return *o.DriveItem, true
}

// HasDriveItem returns a boolean if a field has been set.
func (o *ItemActivity) HasDriveItem() bool {
	if o != nil && o.DriveItem != nil {
		return true
	}

	return false
}

// SetDriveItem gets a reference to the given AnyOfmicrosoftGraphDriveItem and assigns it to the DriveItem field.
func (o *ItemActivity) SetDriveItem(v AnyOfmicrosoftGraphDriveItem) {
	o.DriveItem = &v
}

// SetDriveItemExplicitNull (un)sets DriveItem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DriveItem value is set to nil even if false is passed
func (o *ItemActivity) SetDriveItemExplicitNull(b bool) {
	o.DriveItem = nil
	o.isExplicitNullDriveItem = b
}

// MarshalJSON returns the JSON representation of the model.
func (o ItemActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Access == nil {
		if o.isExplicitNullAccess {
			toSerialize["access"] = o.Access
		}
	} else {
		toSerialize["access"] = o.Access
	}
	if o.ActivityDateTime == nil {
		if o.isExplicitNullActivityDateTime {
			toSerialize["activityDateTime"] = o.ActivityDateTime
		}
	} else {
		toSerialize["activityDateTime"] = o.ActivityDateTime
	}
	if o.Actor == nil {
		if o.isExplicitNullActor {
			toSerialize["actor"] = o.Actor
		}
	} else {
		toSerialize["actor"] = o.Actor
	}
	if o.DriveItem == nil {
		if o.isExplicitNullDriveItem {
			toSerialize["driveItem"] = o.DriveItem
		}
	} else {
		toSerialize["driveItem"] = o.DriveItem
	}
	return json.Marshal(toSerialize)
}


