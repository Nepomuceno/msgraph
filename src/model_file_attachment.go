/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// FileAttachment struct for FileAttachment
type FileAttachment struct {
	ContentId *string `json:"contentId,omitempty"`
	isExplicitNullContentId bool `json:"-"`
	ContentLocation *string `json:"contentLocation,omitempty"`
	isExplicitNullContentLocation bool `json:"-"`
	ContentBytes *string `json:"contentBytes,omitempty"`
	isExplicitNullContentBytes bool `json:"-"`
}

// GetContentId returns the ContentId field if non-nil, zero value otherwise.
func (o *FileAttachment) GetContentId() string {
	if o == nil || o.ContentId == nil {
		var ret string
		return ret
	}
	return *o.ContentId
}

// GetContentIdOk returns a tuple with the ContentId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FileAttachment) GetContentIdOk() (string, bool) {
	if o == nil || o.ContentId == nil {
		var ret string
		return ret, false
	}
	return *o.ContentId, true
}

// HasContentId returns a boolean if a field has been set.
func (o *FileAttachment) HasContentId() bool {
	if o != nil && o.ContentId != nil {
		return true
	}

	return false
}

// SetContentId gets a reference to the given string and assigns it to the ContentId field.
func (o *FileAttachment) SetContentId(v string) {
	o.ContentId = &v
}

// SetContentIdExplicitNull (un)sets ContentId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ContentId value is set to nil even if false is passed
func (o *FileAttachment) SetContentIdExplicitNull(b bool) {
	o.ContentId = nil
	o.isExplicitNullContentId = b
}
// GetContentLocation returns the ContentLocation field if non-nil, zero value otherwise.
func (o *FileAttachment) GetContentLocation() string {
	if o == nil || o.ContentLocation == nil {
		var ret string
		return ret
	}
	return *o.ContentLocation
}

// GetContentLocationOk returns a tuple with the ContentLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FileAttachment) GetContentLocationOk() (string, bool) {
	if o == nil || o.ContentLocation == nil {
		var ret string
		return ret, false
	}
	return *o.ContentLocation, true
}

// HasContentLocation returns a boolean if a field has been set.
func (o *FileAttachment) HasContentLocation() bool {
	if o != nil && o.ContentLocation != nil {
		return true
	}

	return false
}

// SetContentLocation gets a reference to the given string and assigns it to the ContentLocation field.
func (o *FileAttachment) SetContentLocation(v string) {
	o.ContentLocation = &v
}

// SetContentLocationExplicitNull (un)sets ContentLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ContentLocation value is set to nil even if false is passed
func (o *FileAttachment) SetContentLocationExplicitNull(b bool) {
	o.ContentLocation = nil
	o.isExplicitNullContentLocation = b
}
// GetContentBytes returns the ContentBytes field if non-nil, zero value otherwise.
func (o *FileAttachment) GetContentBytes() string {
	if o == nil || o.ContentBytes == nil {
		var ret string
		return ret
	}
	return *o.ContentBytes
}

// GetContentBytesOk returns a tuple with the ContentBytes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FileAttachment) GetContentBytesOk() (string, bool) {
	if o == nil || o.ContentBytes == nil {
		var ret string
		return ret, false
	}
	return *o.ContentBytes, true
}

// HasContentBytes returns a boolean if a field has been set.
func (o *FileAttachment) HasContentBytes() bool {
	if o != nil && o.ContentBytes != nil {
		return true
	}

	return false
}

// SetContentBytes gets a reference to the given string and assigns it to the ContentBytes field.
func (o *FileAttachment) SetContentBytes(v string) {
	o.ContentBytes = &v
}

// SetContentBytesExplicitNull (un)sets ContentBytes to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ContentBytes value is set to nil even if false is passed
func (o *FileAttachment) SetContentBytesExplicitNull(b bool) {
	o.ContentBytes = nil
	o.isExplicitNullContentBytes = b
}

// MarshalJSON returns the JSON representation of the model.
func (o FileAttachment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentId == nil {
		if o.isExplicitNullContentId {
			toSerialize["contentId"] = o.ContentId
		}
	} else {
		toSerialize["contentId"] = o.ContentId
	}
	if o.ContentLocation == nil {
		if o.isExplicitNullContentLocation {
			toSerialize["contentLocation"] = o.ContentLocation
		}
	} else {
		toSerialize["contentLocation"] = o.ContentLocation
	}
	if o.ContentBytes == nil {
		if o.isExplicitNullContentBytes {
			toSerialize["contentBytes"] = o.ContentBytes
		}
	} else {
		toSerialize["contentBytes"] = o.ContentBytes
	}
	return json.Marshal(toSerialize)
}


