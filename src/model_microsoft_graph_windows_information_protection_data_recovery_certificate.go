/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate struct for MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate
type MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate struct {
	// Data recovery Certificate subject name
	SubjectName *string `json:"subjectName,omitempty"`
	isExplicitNullSubjectName bool `json:"-"`
	// Data recovery Certificate description
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// Data recovery Certificate expiration datetime
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`

	// Data recovery Certificate
	Certificate *string `json:"certificate,omitempty"`
	isExplicitNullCertificate bool `json:"-"`
}

// GetSubjectName returns the SubjectName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetSubjectName() string {
	if o == nil || o.SubjectName == nil {
		var ret string
		return ret
	}
	return *o.SubjectName
}

// GetSubjectNameOk returns a tuple with the SubjectName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetSubjectNameOk() (string, bool) {
	if o == nil || o.SubjectName == nil {
		var ret string
		return ret, false
	}
	return *o.SubjectName, true
}

// HasSubjectName returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) HasSubjectName() bool {
	if o != nil && o.SubjectName != nil {
		return true
	}

	return false
}

// SetSubjectName gets a reference to the given string and assigns it to the SubjectName field.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetSubjectName(v string) {
	o.SubjectName = &v
}

// SetSubjectNameExplicitNull (un)sets SubjectName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SubjectName value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetSubjectNameExplicitNull(b bool) {
	o.SubjectName = nil
	o.isExplicitNullSubjectName = b
}
// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetExpirationDateTime returns the ExpirationDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetExpirationDateTime() time.Time {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) HasExpirationDateTime() bool {
	if o != nil && o.ExpirationDateTime != nil {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

// GetCertificate returns the Certificate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) GetCertificateOk() (string, bool) {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret, false
	}
	return *o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetCertificate(v string) {
	o.Certificate = &v
}

// SetCertificateExplicitNull (un)sets Certificate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Certificate value is set to nil even if false is passed
func (o *MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) SetCertificateExplicitNull(b bool) {
	o.Certificate = nil
	o.isExplicitNullCertificate = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubjectName == nil {
		if o.isExplicitNullSubjectName {
			toSerialize["subjectName"] = o.SubjectName
		}
	} else {
		toSerialize["subjectName"] = o.SubjectName
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.ExpirationDateTime != nil {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if o.Certificate == nil {
		if o.isExplicitNullCertificate {
			toSerialize["certificate"] = o.Certificate
		}
	} else {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}


