/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphDomainDnsTxtRecord struct for MicrosoftGraphDomainDnsTxtRecord
type MicrosoftGraphDomainDnsTxtRecord struct {
	Id *string `json:"id,omitempty"`

	IsOptional *bool `json:"isOptional,omitempty"`

	Label *string `json:"label,omitempty"`

	RecordType *string `json:"recordType,omitempty"`
	isExplicitNullRecordType bool `json:"-"`
	SupportedService *string `json:"supportedService,omitempty"`

	Ttl *int32 `json:"ttl,omitempty"`

	Text *string `json:"text,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetId(v string) {
	o.Id = &v
}

// GetIsOptional returns the IsOptional field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetIsOptional() bool {
	if o == nil || o.IsOptional == nil {
		var ret bool
		return ret
	}
	return *o.IsOptional
}

// GetIsOptionalOk returns a tuple with the IsOptional field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetIsOptionalOk() (bool, bool) {
	if o == nil || o.IsOptional == nil {
		var ret bool
		return ret, false
	}
	return *o.IsOptional, true
}

// HasIsOptional returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasIsOptional() bool {
	if o != nil && o.IsOptional != nil {
		return true
	}

	return false
}

// SetIsOptional gets a reference to the given bool and assigns it to the IsOptional field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetIsOptional(v bool) {
	o.IsOptional = &v
}

// GetLabel returns the Label field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetLabelOk() (string, bool) {
	if o == nil || o.Label == nil {
		var ret string
		return ret, false
	}
	return *o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetLabel(v string) {
	o.Label = &v
}

// GetRecordType returns the RecordType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetRecordType() string {
	if o == nil || o.RecordType == nil {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetRecordTypeOk() (string, bool) {
	if o == nil || o.RecordType == nil {
		var ret string
		return ret, false
	}
	return *o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasRecordType() bool {
	if o != nil && o.RecordType != nil {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetRecordType(v string) {
	o.RecordType = &v
}

// SetRecordTypeExplicitNull (un)sets RecordType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RecordType value is set to nil even if false is passed
func (o *MicrosoftGraphDomainDnsTxtRecord) SetRecordTypeExplicitNull(b bool) {
	o.RecordType = nil
	o.isExplicitNullRecordType = b
}
// GetSupportedService returns the SupportedService field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetSupportedService() string {
	if o == nil || o.SupportedService == nil {
		var ret string
		return ret
	}
	return *o.SupportedService
}

// GetSupportedServiceOk returns a tuple with the SupportedService field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetSupportedServiceOk() (string, bool) {
	if o == nil || o.SupportedService == nil {
		var ret string
		return ret, false
	}
	return *o.SupportedService, true
}

// HasSupportedService returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasSupportedService() bool {
	if o != nil && o.SupportedService != nil {
		return true
	}

	return false
}

// SetSupportedService gets a reference to the given string and assigns it to the SupportedService field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetSupportedService(v string) {
	o.SupportedService = &v
}

// GetTtl returns the Ttl field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetTtlOk() (int32, bool) {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret, false
	}
	return *o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetTtl(v int32) {
	o.Ttl = &v
}

// GetText returns the Text field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) GetTextOk() (string, bool) {
	if o == nil || o.Text == nil {
		var ret string
		return ret, false
	}
	return *o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MicrosoftGraphDomainDnsTxtRecord) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MicrosoftGraphDomainDnsTxtRecord) SetText(v string) {
	o.Text = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDomainDnsTxtRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsOptional != nil {
		toSerialize["isOptional"] = o.IsOptional
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.RecordType == nil {
		if o.isExplicitNullRecordType {
			toSerialize["recordType"] = o.RecordType
		}
	} else {
		toSerialize["recordType"] = o.RecordType
	}
	if o.SupportedService != nil {
		toSerialize["supportedService"] = o.SupportedService
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}


