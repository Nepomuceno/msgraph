/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject982 struct for InlineObject982
type InlineObject982 struct {
	Probability *AnyOfobject `json:"probability,omitempty"`
	isExplicitNullProbability bool `json:"-"`
}

// GetProbability returns the Probability field if non-nil, zero value otherwise.
func (o *InlineObject982) GetProbability() AnyOfobject {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject982) GetProbabilityOk() (AnyOfobject, bool) {
	if o == nil || o.Probability == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Probability, true
}

// HasProbability returns a boolean if a field has been set.
func (o *InlineObject982) HasProbability() bool {
	if o != nil && o.Probability != nil {
		return true
	}

	return false
}

// SetProbability gets a reference to the given AnyOfobject and assigns it to the Probability field.
func (o *InlineObject982) SetProbability(v AnyOfobject) {
	o.Probability = &v
}

// SetProbabilityExplicitNull (un)sets Probability to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Probability value is set to nil even if false is passed
func (o *InlineObject982) SetProbabilityExplicitNull(b bool) {
	o.Probability = nil
	o.isExplicitNullProbability = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject982) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Probability == nil {
		if o.isExplicitNullProbability {
			toSerialize["probability"] = o.Probability
		}
	} else {
		toSerialize["probability"] = o.Probability
	}
	return json.Marshal(toSerialize)
}


