/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphDeviceManagementExchangeConnector struct for MicrosoftGraphDeviceManagementExchangeConnector
type MicrosoftGraphDeviceManagementExchangeConnector struct {
	Id *string `json:"id,omitempty"`

	// Last sync time for the Exchange Connector
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`

	// Exchange Connector Status
	Status *AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus `json:"status,omitempty"`

	// Email address used to configure the Service To Service Exchange Connector.
	PrimarySmtpAddress *string `json:"primarySmtpAddress,omitempty"`
	isExplicitNullPrimarySmtpAddress bool `json:"-"`
	// The name of the Exchange server.
	ServerName *string `json:"serverName,omitempty"`
	isExplicitNullServerName bool `json:"-"`
	// The name of the server hosting the Exchange Connector.
	ConnectorServerName *string `json:"connectorServerName,omitempty"`
	isExplicitNullConnectorServerName bool `json:"-"`
	// The type of Exchange Connector Configured.
	ExchangeConnectorType *AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType `json:"exchangeConnectorType,omitempty"`

	// The version of the ExchangeConnectorAgent
	Version *string `json:"version,omitempty"`
	isExplicitNullVersion bool `json:"-"`
	// An alias assigned to the Exchange server
	ExchangeAlias *string `json:"exchangeAlias,omitempty"`
	isExplicitNullExchangeAlias bool `json:"-"`
	// Exchange Organization to the Exchange server
	ExchangeOrganization *string `json:"exchangeOrganization,omitempty"`
	isExplicitNullExchangeOrganization bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetId(v string) {
	o.Id = &v
}

// GetLastSyncDateTime returns the LastSyncDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetLastSyncDateTime() time.Time {
	if o == nil || o.LastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSyncDateTime
}

// GetLastSyncDateTimeOk returns a tuple with the LastSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetLastSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastSyncDateTime, true
}

// HasLastSyncDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasLastSyncDateTime() bool {
	if o != nil && o.LastSyncDateTime != nil {
		return true
	}

	return false
}

// SetLastSyncDateTime gets a reference to the given time.Time and assigns it to the LastSyncDateTime field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetLastSyncDateTime(v time.Time) {
	o.LastSyncDateTime = &v
}

// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetStatus() AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetStatusOk() (AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus, bool) {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus and assigns it to the Status field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetStatus(v AnyOfmicrosoftGraphDeviceManagementExchangeConnectorStatus) {
	o.Status = &v
}

// GetPrimarySmtpAddress returns the PrimarySmtpAddress field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetPrimarySmtpAddress() string {
	if o == nil || o.PrimarySmtpAddress == nil {
		var ret string
		return ret
	}
	return *o.PrimarySmtpAddress
}

// GetPrimarySmtpAddressOk returns a tuple with the PrimarySmtpAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetPrimarySmtpAddressOk() (string, bool) {
	if o == nil || o.PrimarySmtpAddress == nil {
		var ret string
		return ret, false
	}
	return *o.PrimarySmtpAddress, true
}

// HasPrimarySmtpAddress returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasPrimarySmtpAddress() bool {
	if o != nil && o.PrimarySmtpAddress != nil {
		return true
	}

	return false
}

// SetPrimarySmtpAddress gets a reference to the given string and assigns it to the PrimarySmtpAddress field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetPrimarySmtpAddress(v string) {
	o.PrimarySmtpAddress = &v
}

// SetPrimarySmtpAddressExplicitNull (un)sets PrimarySmtpAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PrimarySmtpAddress value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetPrimarySmtpAddressExplicitNull(b bool) {
	o.PrimarySmtpAddress = nil
	o.isExplicitNullPrimarySmtpAddress = b
}
// GetServerName returns the ServerName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetServerNameOk() (string, bool) {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret, false
	}
	return *o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetServerName(v string) {
	o.ServerName = &v
}

// SetServerNameExplicitNull (un)sets ServerName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ServerName value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetServerNameExplicitNull(b bool) {
	o.ServerName = nil
	o.isExplicitNullServerName = b
}
// GetConnectorServerName returns the ConnectorServerName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetConnectorServerName() string {
	if o == nil || o.ConnectorServerName == nil {
		var ret string
		return ret
	}
	return *o.ConnectorServerName
}

// GetConnectorServerNameOk returns a tuple with the ConnectorServerName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetConnectorServerNameOk() (string, bool) {
	if o == nil || o.ConnectorServerName == nil {
		var ret string
		return ret, false
	}
	return *o.ConnectorServerName, true
}

// HasConnectorServerName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasConnectorServerName() bool {
	if o != nil && o.ConnectorServerName != nil {
		return true
	}

	return false
}

// SetConnectorServerName gets a reference to the given string and assigns it to the ConnectorServerName field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetConnectorServerName(v string) {
	o.ConnectorServerName = &v
}

// SetConnectorServerNameExplicitNull (un)sets ConnectorServerName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConnectorServerName value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetConnectorServerNameExplicitNull(b bool) {
	o.ConnectorServerName = nil
	o.isExplicitNullConnectorServerName = b
}
// GetExchangeConnectorType returns the ExchangeConnectorType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeConnectorType() AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType {
	if o == nil || o.ExchangeConnectorType == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType
		return ret
	}
	return *o.ExchangeConnectorType
}

// GetExchangeConnectorTypeOk returns a tuple with the ExchangeConnectorType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeConnectorTypeOk() (AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType, bool) {
	if o == nil || o.ExchangeConnectorType == nil {
		var ret AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType
		return ret, false
	}
	return *o.ExchangeConnectorType, true
}

// HasExchangeConnectorType returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasExchangeConnectorType() bool {
	if o != nil && o.ExchangeConnectorType != nil {
		return true
	}

	return false
}

// SetExchangeConnectorType gets a reference to the given AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType and assigns it to the ExchangeConnectorType field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetExchangeConnectorType(v AnyOfmicrosoftGraphDeviceManagementExchangeConnectorType) {
	o.ExchangeConnectorType = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetVersion(v string) {
	o.Version = &v
}

// SetVersionExplicitNull (un)sets Version to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Version value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetVersionExplicitNull(b bool) {
	o.Version = nil
	o.isExplicitNullVersion = b
}
// GetExchangeAlias returns the ExchangeAlias field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeAlias() string {
	if o == nil || o.ExchangeAlias == nil {
		var ret string
		return ret
	}
	return *o.ExchangeAlias
}

// GetExchangeAliasOk returns a tuple with the ExchangeAlias field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeAliasOk() (string, bool) {
	if o == nil || o.ExchangeAlias == nil {
		var ret string
		return ret, false
	}
	return *o.ExchangeAlias, true
}

// HasExchangeAlias returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasExchangeAlias() bool {
	if o != nil && o.ExchangeAlias != nil {
		return true
	}

	return false
}

// SetExchangeAlias gets a reference to the given string and assigns it to the ExchangeAlias field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetExchangeAlias(v string) {
	o.ExchangeAlias = &v
}

// SetExchangeAliasExplicitNull (un)sets ExchangeAlias to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExchangeAlias value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetExchangeAliasExplicitNull(b bool) {
	o.ExchangeAlias = nil
	o.isExplicitNullExchangeAlias = b
}
// GetExchangeOrganization returns the ExchangeOrganization field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeOrganization() string {
	if o == nil || o.ExchangeOrganization == nil {
		var ret string
		return ret
	}
	return *o.ExchangeOrganization
}

// GetExchangeOrganizationOk returns a tuple with the ExchangeOrganization field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) GetExchangeOrganizationOk() (string, bool) {
	if o == nil || o.ExchangeOrganization == nil {
		var ret string
		return ret, false
	}
	return *o.ExchangeOrganization, true
}

// HasExchangeOrganization returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) HasExchangeOrganization() bool {
	if o != nil && o.ExchangeOrganization != nil {
		return true
	}

	return false
}

// SetExchangeOrganization gets a reference to the given string and assigns it to the ExchangeOrganization field.
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetExchangeOrganization(v string) {
	o.ExchangeOrganization = &v
}

// SetExchangeOrganizationExplicitNull (un)sets ExchangeOrganization to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExchangeOrganization value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceManagementExchangeConnector) SetExchangeOrganizationExplicitNull(b bool) {
	o.ExchangeOrganization = nil
	o.isExplicitNullExchangeOrganization = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDeviceManagementExchangeConnector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastSyncDateTime != nil {
		toSerialize["lastSyncDateTime"] = o.LastSyncDateTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.PrimarySmtpAddress == nil {
		if o.isExplicitNullPrimarySmtpAddress {
			toSerialize["primarySmtpAddress"] = o.PrimarySmtpAddress
		}
	} else {
		toSerialize["primarySmtpAddress"] = o.PrimarySmtpAddress
	}
	if o.ServerName == nil {
		if o.isExplicitNullServerName {
			toSerialize["serverName"] = o.ServerName
		}
	} else {
		toSerialize["serverName"] = o.ServerName
	}
	if o.ConnectorServerName == nil {
		if o.isExplicitNullConnectorServerName {
			toSerialize["connectorServerName"] = o.ConnectorServerName
		}
	} else {
		toSerialize["connectorServerName"] = o.ConnectorServerName
	}
	if o.ExchangeConnectorType != nil {
		toSerialize["exchangeConnectorType"] = o.ExchangeConnectorType
	}
	if o.Version == nil {
		if o.isExplicitNullVersion {
			toSerialize["version"] = o.Version
		}
	} else {
		toSerialize["version"] = o.Version
	}
	if o.ExchangeAlias == nil {
		if o.isExplicitNullExchangeAlias {
			toSerialize["exchangeAlias"] = o.ExchangeAlias
		}
	} else {
		toSerialize["exchangeAlias"] = o.ExchangeAlias
	}
	if o.ExchangeOrganization == nil {
		if o.isExplicitNullExchangeOrganization {
			toSerialize["exchangeOrganization"] = o.ExchangeOrganization
		}
	} else {
		toSerialize["exchangeOrganization"] = o.ExchangeOrganization
	}
	return json.Marshal(toSerialize)
}


