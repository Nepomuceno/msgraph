/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// SharedPcConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the sharedPCConfiguration resource.
type SharedPcConfiguration struct {
	// Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false.
	AccountManagerPolicy *AnyOfmicrosoftGraphSharedPcAccountManagerPolicy `json:"accountManagerPolicy,omitempty"`
	isExplicitNullAccountManagerPolicy bool `json:"-"`
	// Indicates which type of accounts are allowed to use on a shared PC.
	AllowedAccounts *AnyOfmicrosoftGraphSharedPcAllowedAccountType `json:"allowedAccounts,omitempty"`

	// Specifies whether local storage is allowed on a shared PC.
	AllowLocalStorage *bool `json:"allowLocalStorage,omitempty"`

	// Disables the account manager for shared PC mode.
	DisableAccountManager *bool `json:"disableAccountManager,omitempty"`

	// Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true.
	DisableEduPolicies *bool `json:"disableEduPolicies,omitempty"`

	// Specifies whether the default shared PC power policies should be disabled.
	DisablePowerPolicies *bool `json:"disablePowerPolicies,omitempty"`

	// Disables the requirement to sign in whenever the device wakes up from sleep mode.
	DisableSignInOnResume *bool `json:"disableSignInOnResume,omitempty"`

	// Enables shared PC mode and applies the shared pc policies.
	Enabled *bool `json:"enabled,omitempty"`

	// Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.
	IdleTimeBeforeSleepInSeconds *int32 `json:"idleTimeBeforeSleepInSeconds,omitempty"`
	isExplicitNullIdleTimeBeforeSleepInSeconds bool `json:"-"`
	// Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.
	KioskAppDisplayName *string `json:"kioskAppDisplayName,omitempty"`
	isExplicitNullKioskAppDisplayName bool `json:"-"`
	// Specifies the application user model ID of the app to use with assigned access.
	KioskAppUserModelId *string `json:"kioskAppUserModelId,omitempty"`
	isExplicitNullKioskAppUserModelId bool `json:"-"`
	// Specifies the daily start time of maintenance hour.
	MaintenanceStartTime *string `json:"maintenanceStartTime,omitempty"`
	isExplicitNullMaintenanceStartTime bool `json:"-"`
}

// GetAccountManagerPolicy returns the AccountManagerPolicy field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetAccountManagerPolicy() AnyOfmicrosoftGraphSharedPcAccountManagerPolicy {
	if o == nil || o.AccountManagerPolicy == nil {
		var ret AnyOfmicrosoftGraphSharedPcAccountManagerPolicy
		return ret
	}
	return *o.AccountManagerPolicy
}

// GetAccountManagerPolicyOk returns a tuple with the AccountManagerPolicy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetAccountManagerPolicyOk() (AnyOfmicrosoftGraphSharedPcAccountManagerPolicy, bool) {
	if o == nil || o.AccountManagerPolicy == nil {
		var ret AnyOfmicrosoftGraphSharedPcAccountManagerPolicy
		return ret, false
	}
	return *o.AccountManagerPolicy, true
}

// HasAccountManagerPolicy returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasAccountManagerPolicy() bool {
	if o != nil && o.AccountManagerPolicy != nil {
		return true
	}

	return false
}

// SetAccountManagerPolicy gets a reference to the given AnyOfmicrosoftGraphSharedPcAccountManagerPolicy and assigns it to the AccountManagerPolicy field.
func (o *SharedPcConfiguration) SetAccountManagerPolicy(v AnyOfmicrosoftGraphSharedPcAccountManagerPolicy) {
	o.AccountManagerPolicy = &v
}

// SetAccountManagerPolicyExplicitNull (un)sets AccountManagerPolicy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AccountManagerPolicy value is set to nil even if false is passed
func (o *SharedPcConfiguration) SetAccountManagerPolicyExplicitNull(b bool) {
	o.AccountManagerPolicy = nil
	o.isExplicitNullAccountManagerPolicy = b
}
// GetAllowedAccounts returns the AllowedAccounts field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetAllowedAccounts() AnyOfmicrosoftGraphSharedPcAllowedAccountType {
	if o == nil || o.AllowedAccounts == nil {
		var ret AnyOfmicrosoftGraphSharedPcAllowedAccountType
		return ret
	}
	return *o.AllowedAccounts
}

// GetAllowedAccountsOk returns a tuple with the AllowedAccounts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetAllowedAccountsOk() (AnyOfmicrosoftGraphSharedPcAllowedAccountType, bool) {
	if o == nil || o.AllowedAccounts == nil {
		var ret AnyOfmicrosoftGraphSharedPcAllowedAccountType
		return ret, false
	}
	return *o.AllowedAccounts, true
}

// HasAllowedAccounts returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasAllowedAccounts() bool {
	if o != nil && o.AllowedAccounts != nil {
		return true
	}

	return false
}

// SetAllowedAccounts gets a reference to the given AnyOfmicrosoftGraphSharedPcAllowedAccountType and assigns it to the AllowedAccounts field.
func (o *SharedPcConfiguration) SetAllowedAccounts(v AnyOfmicrosoftGraphSharedPcAllowedAccountType) {
	o.AllowedAccounts = &v
}

// GetAllowLocalStorage returns the AllowLocalStorage field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetAllowLocalStorage() bool {
	if o == nil || o.AllowLocalStorage == nil {
		var ret bool
		return ret
	}
	return *o.AllowLocalStorage
}

// GetAllowLocalStorageOk returns a tuple with the AllowLocalStorage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetAllowLocalStorageOk() (bool, bool) {
	if o == nil || o.AllowLocalStorage == nil {
		var ret bool
		return ret, false
	}
	return *o.AllowLocalStorage, true
}

// HasAllowLocalStorage returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasAllowLocalStorage() bool {
	if o != nil && o.AllowLocalStorage != nil {
		return true
	}

	return false
}

// SetAllowLocalStorage gets a reference to the given bool and assigns it to the AllowLocalStorage field.
func (o *SharedPcConfiguration) SetAllowLocalStorage(v bool) {
	o.AllowLocalStorage = &v
}

// GetDisableAccountManager returns the DisableAccountManager field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetDisableAccountManager() bool {
	if o == nil || o.DisableAccountManager == nil {
		var ret bool
		return ret
	}
	return *o.DisableAccountManager
}

// GetDisableAccountManagerOk returns a tuple with the DisableAccountManager field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetDisableAccountManagerOk() (bool, bool) {
	if o == nil || o.DisableAccountManager == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableAccountManager, true
}

// HasDisableAccountManager returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasDisableAccountManager() bool {
	if o != nil && o.DisableAccountManager != nil {
		return true
	}

	return false
}

// SetDisableAccountManager gets a reference to the given bool and assigns it to the DisableAccountManager field.
func (o *SharedPcConfiguration) SetDisableAccountManager(v bool) {
	o.DisableAccountManager = &v
}

// GetDisableEduPolicies returns the DisableEduPolicies field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetDisableEduPolicies() bool {
	if o == nil || o.DisableEduPolicies == nil {
		var ret bool
		return ret
	}
	return *o.DisableEduPolicies
}

// GetDisableEduPoliciesOk returns a tuple with the DisableEduPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetDisableEduPoliciesOk() (bool, bool) {
	if o == nil || o.DisableEduPolicies == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableEduPolicies, true
}

// HasDisableEduPolicies returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasDisableEduPolicies() bool {
	if o != nil && o.DisableEduPolicies != nil {
		return true
	}

	return false
}

// SetDisableEduPolicies gets a reference to the given bool and assigns it to the DisableEduPolicies field.
func (o *SharedPcConfiguration) SetDisableEduPolicies(v bool) {
	o.DisableEduPolicies = &v
}

// GetDisablePowerPolicies returns the DisablePowerPolicies field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetDisablePowerPolicies() bool {
	if o == nil || o.DisablePowerPolicies == nil {
		var ret bool
		return ret
	}
	return *o.DisablePowerPolicies
}

// GetDisablePowerPoliciesOk returns a tuple with the DisablePowerPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetDisablePowerPoliciesOk() (bool, bool) {
	if o == nil || o.DisablePowerPolicies == nil {
		var ret bool
		return ret, false
	}
	return *o.DisablePowerPolicies, true
}

// HasDisablePowerPolicies returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasDisablePowerPolicies() bool {
	if o != nil && o.DisablePowerPolicies != nil {
		return true
	}

	return false
}

// SetDisablePowerPolicies gets a reference to the given bool and assigns it to the DisablePowerPolicies field.
func (o *SharedPcConfiguration) SetDisablePowerPolicies(v bool) {
	o.DisablePowerPolicies = &v
}

// GetDisableSignInOnResume returns the DisableSignInOnResume field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetDisableSignInOnResume() bool {
	if o == nil || o.DisableSignInOnResume == nil {
		var ret bool
		return ret
	}
	return *o.DisableSignInOnResume
}

// GetDisableSignInOnResumeOk returns a tuple with the DisableSignInOnResume field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetDisableSignInOnResumeOk() (bool, bool) {
	if o == nil || o.DisableSignInOnResume == nil {
		var ret bool
		return ret, false
	}
	return *o.DisableSignInOnResume, true
}

// HasDisableSignInOnResume returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasDisableSignInOnResume() bool {
	if o != nil && o.DisableSignInOnResume != nil {
		return true
	}

	return false
}

// SetDisableSignInOnResume gets a reference to the given bool and assigns it to the DisableSignInOnResume field.
func (o *SharedPcConfiguration) SetDisableSignInOnResume(v bool) {
	o.DisableSignInOnResume = &v
}

// GetEnabled returns the Enabled field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetEnabledOk() (bool, bool) {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret, false
	}
	return *o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SharedPcConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIdleTimeBeforeSleepInSeconds returns the IdleTimeBeforeSleepInSeconds field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetIdleTimeBeforeSleepInSeconds() int32 {
	if o == nil || o.IdleTimeBeforeSleepInSeconds == nil {
		var ret int32
		return ret
	}
	return *o.IdleTimeBeforeSleepInSeconds
}

// GetIdleTimeBeforeSleepInSecondsOk returns a tuple with the IdleTimeBeforeSleepInSeconds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetIdleTimeBeforeSleepInSecondsOk() (int32, bool) {
	if o == nil || o.IdleTimeBeforeSleepInSeconds == nil {
		var ret int32
		return ret, false
	}
	return *o.IdleTimeBeforeSleepInSeconds, true
}

// HasIdleTimeBeforeSleepInSeconds returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasIdleTimeBeforeSleepInSeconds() bool {
	if o != nil && o.IdleTimeBeforeSleepInSeconds != nil {
		return true
	}

	return false
}

// SetIdleTimeBeforeSleepInSeconds gets a reference to the given int32 and assigns it to the IdleTimeBeforeSleepInSeconds field.
func (o *SharedPcConfiguration) SetIdleTimeBeforeSleepInSeconds(v int32) {
	o.IdleTimeBeforeSleepInSeconds = &v
}

// SetIdleTimeBeforeSleepInSecondsExplicitNull (un)sets IdleTimeBeforeSleepInSeconds to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IdleTimeBeforeSleepInSeconds value is set to nil even if false is passed
func (o *SharedPcConfiguration) SetIdleTimeBeforeSleepInSecondsExplicitNull(b bool) {
	o.IdleTimeBeforeSleepInSeconds = nil
	o.isExplicitNullIdleTimeBeforeSleepInSeconds = b
}
// GetKioskAppDisplayName returns the KioskAppDisplayName field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetKioskAppDisplayName() string {
	if o == nil || o.KioskAppDisplayName == nil {
		var ret string
		return ret
	}
	return *o.KioskAppDisplayName
}

// GetKioskAppDisplayNameOk returns a tuple with the KioskAppDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetKioskAppDisplayNameOk() (string, bool) {
	if o == nil || o.KioskAppDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.KioskAppDisplayName, true
}

// HasKioskAppDisplayName returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasKioskAppDisplayName() bool {
	if o != nil && o.KioskAppDisplayName != nil {
		return true
	}

	return false
}

// SetKioskAppDisplayName gets a reference to the given string and assigns it to the KioskAppDisplayName field.
func (o *SharedPcConfiguration) SetKioskAppDisplayName(v string) {
	o.KioskAppDisplayName = &v
}

// SetKioskAppDisplayNameExplicitNull (un)sets KioskAppDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The KioskAppDisplayName value is set to nil even if false is passed
func (o *SharedPcConfiguration) SetKioskAppDisplayNameExplicitNull(b bool) {
	o.KioskAppDisplayName = nil
	o.isExplicitNullKioskAppDisplayName = b
}
// GetKioskAppUserModelId returns the KioskAppUserModelId field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetKioskAppUserModelId() string {
	if o == nil || o.KioskAppUserModelId == nil {
		var ret string
		return ret
	}
	return *o.KioskAppUserModelId
}

// GetKioskAppUserModelIdOk returns a tuple with the KioskAppUserModelId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetKioskAppUserModelIdOk() (string, bool) {
	if o == nil || o.KioskAppUserModelId == nil {
		var ret string
		return ret, false
	}
	return *o.KioskAppUserModelId, true
}

// HasKioskAppUserModelId returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasKioskAppUserModelId() bool {
	if o != nil && o.KioskAppUserModelId != nil {
		return true
	}

	return false
}

// SetKioskAppUserModelId gets a reference to the given string and assigns it to the KioskAppUserModelId field.
func (o *SharedPcConfiguration) SetKioskAppUserModelId(v string) {
	o.KioskAppUserModelId = &v
}

// SetKioskAppUserModelIdExplicitNull (un)sets KioskAppUserModelId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The KioskAppUserModelId value is set to nil even if false is passed
func (o *SharedPcConfiguration) SetKioskAppUserModelIdExplicitNull(b bool) {
	o.KioskAppUserModelId = nil
	o.isExplicitNullKioskAppUserModelId = b
}
// GetMaintenanceStartTime returns the MaintenanceStartTime field if non-nil, zero value otherwise.
func (o *SharedPcConfiguration) GetMaintenanceStartTime() string {
	if o == nil || o.MaintenanceStartTime == nil {
		var ret string
		return ret
	}
	return *o.MaintenanceStartTime
}

// GetMaintenanceStartTimeOk returns a tuple with the MaintenanceStartTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SharedPcConfiguration) GetMaintenanceStartTimeOk() (string, bool) {
	if o == nil || o.MaintenanceStartTime == nil {
		var ret string
		return ret, false
	}
	return *o.MaintenanceStartTime, true
}

// HasMaintenanceStartTime returns a boolean if a field has been set.
func (o *SharedPcConfiguration) HasMaintenanceStartTime() bool {
	if o != nil && o.MaintenanceStartTime != nil {
		return true
	}

	return false
}

// SetMaintenanceStartTime gets a reference to the given string and assigns it to the MaintenanceStartTime field.
func (o *SharedPcConfiguration) SetMaintenanceStartTime(v string) {
	o.MaintenanceStartTime = &v
}

// SetMaintenanceStartTimeExplicitNull (un)sets MaintenanceStartTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MaintenanceStartTime value is set to nil even if false is passed
func (o *SharedPcConfiguration) SetMaintenanceStartTimeExplicitNull(b bool) {
	o.MaintenanceStartTime = nil
	o.isExplicitNullMaintenanceStartTime = b
}

// MarshalJSON returns the JSON representation of the model.
func (o SharedPcConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountManagerPolicy == nil {
		if o.isExplicitNullAccountManagerPolicy {
			toSerialize["accountManagerPolicy"] = o.AccountManagerPolicy
		}
	} else {
		toSerialize["accountManagerPolicy"] = o.AccountManagerPolicy
	}
	if o.AllowedAccounts != nil {
		toSerialize["allowedAccounts"] = o.AllowedAccounts
	}
	if o.AllowLocalStorage != nil {
		toSerialize["allowLocalStorage"] = o.AllowLocalStorage
	}
	if o.DisableAccountManager != nil {
		toSerialize["disableAccountManager"] = o.DisableAccountManager
	}
	if o.DisableEduPolicies != nil {
		toSerialize["disableEduPolicies"] = o.DisableEduPolicies
	}
	if o.DisablePowerPolicies != nil {
		toSerialize["disablePowerPolicies"] = o.DisablePowerPolicies
	}
	if o.DisableSignInOnResume != nil {
		toSerialize["disableSignInOnResume"] = o.DisableSignInOnResume
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.IdleTimeBeforeSleepInSeconds == nil {
		if o.isExplicitNullIdleTimeBeforeSleepInSeconds {
			toSerialize["idleTimeBeforeSleepInSeconds"] = o.IdleTimeBeforeSleepInSeconds
		}
	} else {
		toSerialize["idleTimeBeforeSleepInSeconds"] = o.IdleTimeBeforeSleepInSeconds
	}
	if o.KioskAppDisplayName == nil {
		if o.isExplicitNullKioskAppDisplayName {
			toSerialize["kioskAppDisplayName"] = o.KioskAppDisplayName
		}
	} else {
		toSerialize["kioskAppDisplayName"] = o.KioskAppDisplayName
	}
	if o.KioskAppUserModelId == nil {
		if o.isExplicitNullKioskAppUserModelId {
			toSerialize["kioskAppUserModelId"] = o.KioskAppUserModelId
		}
	} else {
		toSerialize["kioskAppUserModelId"] = o.KioskAppUserModelId
	}
	if o.MaintenanceStartTime == nil {
		if o.isExplicitNullMaintenanceStartTime {
			toSerialize["maintenanceStartTime"] = o.MaintenanceStartTime
		}
	} else {
		toSerialize["maintenanceStartTime"] = o.MaintenanceStartTime
	}
	return json.Marshal(toSerialize)
}


