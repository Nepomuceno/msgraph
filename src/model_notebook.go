/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// Notebook struct for Notebook
type Notebook struct {
	IsDefault *bool `json:"isDefault,omitempty"`
	isExplicitNullIsDefault bool `json:"-"`
	UserRole *AnyOfmicrosoftGraphOnenoteUserRole `json:"userRole,omitempty"`
	isExplicitNullUserRole bool `json:"-"`
	IsShared *bool `json:"isShared,omitempty"`
	isExplicitNullIsShared bool `json:"-"`
	SectionsUrl *string `json:"sectionsUrl,omitempty"`
	isExplicitNullSectionsUrl bool `json:"-"`
	SectionGroupsUrl *string `json:"sectionGroupsUrl,omitempty"`
	isExplicitNullSectionGroupsUrl bool `json:"-"`
	Links *AnyOfmicrosoftGraphNotebookLinks `json:"links,omitempty"`
	isExplicitNullLinks bool `json:"-"`
	Sections *[]MicrosoftGraphOnenoteSection `json:"sections,omitempty"`

	SectionGroups *[]MicrosoftGraphSectionGroup `json:"sectionGroups,omitempty"`

}

// GetIsDefault returns the IsDefault field if non-nil, zero value otherwise.
func (o *Notebook) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetIsDefaultOk() (bool, bool) {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret, false
	}
	return *o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Notebook) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *Notebook) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// SetIsDefaultExplicitNull (un)sets IsDefault to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsDefault value is set to nil even if false is passed
func (o *Notebook) SetIsDefaultExplicitNull(b bool) {
	o.IsDefault = nil
	o.isExplicitNullIsDefault = b
}
// GetUserRole returns the UserRole field if non-nil, zero value otherwise.
func (o *Notebook) GetUserRole() AnyOfmicrosoftGraphOnenoteUserRole {
	if o == nil || o.UserRole == nil {
		var ret AnyOfmicrosoftGraphOnenoteUserRole
		return ret
	}
	return *o.UserRole
}

// GetUserRoleOk returns a tuple with the UserRole field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetUserRoleOk() (AnyOfmicrosoftGraphOnenoteUserRole, bool) {
	if o == nil || o.UserRole == nil {
		var ret AnyOfmicrosoftGraphOnenoteUserRole
		return ret, false
	}
	return *o.UserRole, true
}

// HasUserRole returns a boolean if a field has been set.
func (o *Notebook) HasUserRole() bool {
	if o != nil && o.UserRole != nil {
		return true
	}

	return false
}

// SetUserRole gets a reference to the given AnyOfmicrosoftGraphOnenoteUserRole and assigns it to the UserRole field.
func (o *Notebook) SetUserRole(v AnyOfmicrosoftGraphOnenoteUserRole) {
	o.UserRole = &v
}

// SetUserRoleExplicitNull (un)sets UserRole to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserRole value is set to nil even if false is passed
func (o *Notebook) SetUserRoleExplicitNull(b bool) {
	o.UserRole = nil
	o.isExplicitNullUserRole = b
}
// GetIsShared returns the IsShared field if non-nil, zero value otherwise.
func (o *Notebook) GetIsShared() bool {
	if o == nil || o.IsShared == nil {
		var ret bool
		return ret
	}
	return *o.IsShared
}

// GetIsSharedOk returns a tuple with the IsShared field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetIsSharedOk() (bool, bool) {
	if o == nil || o.IsShared == nil {
		var ret bool
		return ret, false
	}
	return *o.IsShared, true
}

// HasIsShared returns a boolean if a field has been set.
func (o *Notebook) HasIsShared() bool {
	if o != nil && o.IsShared != nil {
		return true
	}

	return false
}

// SetIsShared gets a reference to the given bool and assigns it to the IsShared field.
func (o *Notebook) SetIsShared(v bool) {
	o.IsShared = &v
}

// SetIsSharedExplicitNull (un)sets IsShared to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsShared value is set to nil even if false is passed
func (o *Notebook) SetIsSharedExplicitNull(b bool) {
	o.IsShared = nil
	o.isExplicitNullIsShared = b
}
// GetSectionsUrl returns the SectionsUrl field if non-nil, zero value otherwise.
func (o *Notebook) GetSectionsUrl() string {
	if o == nil || o.SectionsUrl == nil {
		var ret string
		return ret
	}
	return *o.SectionsUrl
}

// GetSectionsUrlOk returns a tuple with the SectionsUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetSectionsUrlOk() (string, bool) {
	if o == nil || o.SectionsUrl == nil {
		var ret string
		return ret, false
	}
	return *o.SectionsUrl, true
}

// HasSectionsUrl returns a boolean if a field has been set.
func (o *Notebook) HasSectionsUrl() bool {
	if o != nil && o.SectionsUrl != nil {
		return true
	}

	return false
}

// SetSectionsUrl gets a reference to the given string and assigns it to the SectionsUrl field.
func (o *Notebook) SetSectionsUrl(v string) {
	o.SectionsUrl = &v
}

// SetSectionsUrlExplicitNull (un)sets SectionsUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SectionsUrl value is set to nil even if false is passed
func (o *Notebook) SetSectionsUrlExplicitNull(b bool) {
	o.SectionsUrl = nil
	o.isExplicitNullSectionsUrl = b
}
// GetSectionGroupsUrl returns the SectionGroupsUrl field if non-nil, zero value otherwise.
func (o *Notebook) GetSectionGroupsUrl() string {
	if o == nil || o.SectionGroupsUrl == nil {
		var ret string
		return ret
	}
	return *o.SectionGroupsUrl
}

// GetSectionGroupsUrlOk returns a tuple with the SectionGroupsUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetSectionGroupsUrlOk() (string, bool) {
	if o == nil || o.SectionGroupsUrl == nil {
		var ret string
		return ret, false
	}
	return *o.SectionGroupsUrl, true
}

// HasSectionGroupsUrl returns a boolean if a field has been set.
func (o *Notebook) HasSectionGroupsUrl() bool {
	if o != nil && o.SectionGroupsUrl != nil {
		return true
	}

	return false
}

// SetSectionGroupsUrl gets a reference to the given string and assigns it to the SectionGroupsUrl field.
func (o *Notebook) SetSectionGroupsUrl(v string) {
	o.SectionGroupsUrl = &v
}

// SetSectionGroupsUrlExplicitNull (un)sets SectionGroupsUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SectionGroupsUrl value is set to nil even if false is passed
func (o *Notebook) SetSectionGroupsUrlExplicitNull(b bool) {
	o.SectionGroupsUrl = nil
	o.isExplicitNullSectionGroupsUrl = b
}
// GetLinks returns the Links field if non-nil, zero value otherwise.
func (o *Notebook) GetLinks() AnyOfmicrosoftGraphNotebookLinks {
	if o == nil || o.Links == nil {
		var ret AnyOfmicrosoftGraphNotebookLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetLinksOk() (AnyOfmicrosoftGraphNotebookLinks, bool) {
	if o == nil || o.Links == nil {
		var ret AnyOfmicrosoftGraphNotebookLinks
		return ret, false
	}
	return *o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Notebook) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AnyOfmicrosoftGraphNotebookLinks and assigns it to the Links field.
func (o *Notebook) SetLinks(v AnyOfmicrosoftGraphNotebookLinks) {
	o.Links = &v
}

// SetLinksExplicitNull (un)sets Links to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Links value is set to nil even if false is passed
func (o *Notebook) SetLinksExplicitNull(b bool) {
	o.Links = nil
	o.isExplicitNullLinks = b
}
// GetSections returns the Sections field if non-nil, zero value otherwise.
func (o *Notebook) GetSections() []MicrosoftGraphOnenoteSection {
	if o == nil || o.Sections == nil {
		var ret []MicrosoftGraphOnenoteSection
		return ret
	}
	return *o.Sections
}

// GetSectionsOk returns a tuple with the Sections field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetSectionsOk() ([]MicrosoftGraphOnenoteSection, bool) {
	if o == nil || o.Sections == nil {
		var ret []MicrosoftGraphOnenoteSection
		return ret, false
	}
	return *o.Sections, true
}

// HasSections returns a boolean if a field has been set.
func (o *Notebook) HasSections() bool {
	if o != nil && o.Sections != nil {
		return true
	}

	return false
}

// SetSections gets a reference to the given []MicrosoftGraphOnenoteSection and assigns it to the Sections field.
func (o *Notebook) SetSections(v []MicrosoftGraphOnenoteSection) {
	o.Sections = &v
}

// GetSectionGroups returns the SectionGroups field if non-nil, zero value otherwise.
func (o *Notebook) GetSectionGroups() []MicrosoftGraphSectionGroup {
	if o == nil || o.SectionGroups == nil {
		var ret []MicrosoftGraphSectionGroup
		return ret
	}
	return *o.SectionGroups
}

// GetSectionGroupsOk returns a tuple with the SectionGroups field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Notebook) GetSectionGroupsOk() ([]MicrosoftGraphSectionGroup, bool) {
	if o == nil || o.SectionGroups == nil {
		var ret []MicrosoftGraphSectionGroup
		return ret, false
	}
	return *o.SectionGroups, true
}

// HasSectionGroups returns a boolean if a field has been set.
func (o *Notebook) HasSectionGroups() bool {
	if o != nil && o.SectionGroups != nil {
		return true
	}

	return false
}

// SetSectionGroups gets a reference to the given []MicrosoftGraphSectionGroup and assigns it to the SectionGroups field.
func (o *Notebook) SetSectionGroups(v []MicrosoftGraphSectionGroup) {
	o.SectionGroups = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o Notebook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsDefault == nil {
		if o.isExplicitNullIsDefault {
			toSerialize["isDefault"] = o.IsDefault
		}
	} else {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.UserRole == nil {
		if o.isExplicitNullUserRole {
			toSerialize["userRole"] = o.UserRole
		}
	} else {
		toSerialize["userRole"] = o.UserRole
	}
	if o.IsShared == nil {
		if o.isExplicitNullIsShared {
			toSerialize["isShared"] = o.IsShared
		}
	} else {
		toSerialize["isShared"] = o.IsShared
	}
	if o.SectionsUrl == nil {
		if o.isExplicitNullSectionsUrl {
			toSerialize["sectionsUrl"] = o.SectionsUrl
		}
	} else {
		toSerialize["sectionsUrl"] = o.SectionsUrl
	}
	if o.SectionGroupsUrl == nil {
		if o.isExplicitNullSectionGroupsUrl {
			toSerialize["sectionGroupsUrl"] = o.SectionGroupsUrl
		}
	} else {
		toSerialize["sectionGroupsUrl"] = o.SectionGroupsUrl
	}
	if o.Links == nil {
		if o.isExplicitNullLinks {
			toSerialize["links"] = o.Links
		}
	} else {
		toSerialize["links"] = o.Links
	}
	if o.Sections != nil {
		toSerialize["sections"] = o.Sections
	}
	if o.SectionGroups != nil {
		toSerialize["sectionGroups"] = o.SectionGroups
	}
	return json.Marshal(toSerialize)
}


