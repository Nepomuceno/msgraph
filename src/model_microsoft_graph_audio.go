/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphAudio struct for MicrosoftGraphAudio
type MicrosoftGraphAudio struct {
	Album *string `json:"album,omitempty"`
	isExplicitNullAlbum bool `json:"-"`
	AlbumArtist *string `json:"albumArtist,omitempty"`
	isExplicitNullAlbumArtist bool `json:"-"`
	Artist *string `json:"artist,omitempty"`
	isExplicitNullArtist bool `json:"-"`
	Bitrate *int64 `json:"bitrate,omitempty"`
	isExplicitNullBitrate bool `json:"-"`
	Composers *string `json:"composers,omitempty"`
	isExplicitNullComposers bool `json:"-"`
	Copyright *string `json:"copyright,omitempty"`
	isExplicitNullCopyright bool `json:"-"`
	Disc *int32 `json:"disc,omitempty"`
	isExplicitNullDisc bool `json:"-"`
	DiscCount *int32 `json:"discCount,omitempty"`
	isExplicitNullDiscCount bool `json:"-"`
	Duration *int64 `json:"duration,omitempty"`
	isExplicitNullDuration bool `json:"-"`
	Genre *string `json:"genre,omitempty"`
	isExplicitNullGenre bool `json:"-"`
	HasDrm *bool `json:"hasDrm,omitempty"`
	isExplicitNullHasDrm bool `json:"-"`
	IsVariableBitrate *bool `json:"isVariableBitrate,omitempty"`
	isExplicitNullIsVariableBitrate bool `json:"-"`
	Title *string `json:"title,omitempty"`
	isExplicitNullTitle bool `json:"-"`
	Track *int32 `json:"track,omitempty"`
	isExplicitNullTrack bool `json:"-"`
	TrackCount *int32 `json:"trackCount,omitempty"`
	isExplicitNullTrackCount bool `json:"-"`
	Year *int32 `json:"year,omitempty"`
	isExplicitNullYear bool `json:"-"`
}

// GetAlbum returns the Album field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetAlbum() string {
	if o == nil || o.Album == nil {
		var ret string
		return ret
	}
	return *o.Album
}

// GetAlbumOk returns a tuple with the Album field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetAlbumOk() (string, bool) {
	if o == nil || o.Album == nil {
		var ret string
		return ret, false
	}
	return *o.Album, true
}

// HasAlbum returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasAlbum() bool {
	if o != nil && o.Album != nil {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given string and assigns it to the Album field.
func (o *MicrosoftGraphAudio) SetAlbum(v string) {
	o.Album = &v
}

// SetAlbumExplicitNull (un)sets Album to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Album value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetAlbumExplicitNull(b bool) {
	o.Album = nil
	o.isExplicitNullAlbum = b
}
// GetAlbumArtist returns the AlbumArtist field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetAlbumArtist() string {
	if o == nil || o.AlbumArtist == nil {
		var ret string
		return ret
	}
	return *o.AlbumArtist
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetAlbumArtistOk() (string, bool) {
	if o == nil || o.AlbumArtist == nil {
		var ret string
		return ret, false
	}
	return *o.AlbumArtist, true
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasAlbumArtist() bool {
	if o != nil && o.AlbumArtist != nil {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given string and assigns it to the AlbumArtist field.
func (o *MicrosoftGraphAudio) SetAlbumArtist(v string) {
	o.AlbumArtist = &v
}

// SetAlbumArtistExplicitNull (un)sets AlbumArtist to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AlbumArtist value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetAlbumArtistExplicitNull(b bool) {
	o.AlbumArtist = nil
	o.isExplicitNullAlbumArtist = b
}
// GetArtist returns the Artist field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetArtist() string {
	if o == nil || o.Artist == nil {
		var ret string
		return ret
	}
	return *o.Artist
}

// GetArtistOk returns a tuple with the Artist field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetArtistOk() (string, bool) {
	if o == nil || o.Artist == nil {
		var ret string
		return ret, false
	}
	return *o.Artist, true
}

// HasArtist returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasArtist() bool {
	if o != nil && o.Artist != nil {
		return true
	}

	return false
}

// SetArtist gets a reference to the given string and assigns it to the Artist field.
func (o *MicrosoftGraphAudio) SetArtist(v string) {
	o.Artist = &v
}

// SetArtistExplicitNull (un)sets Artist to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Artist value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetArtistExplicitNull(b bool) {
	o.Artist = nil
	o.isExplicitNullArtist = b
}
// GetBitrate returns the Bitrate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetBitrate() int64 {
	if o == nil || o.Bitrate == nil {
		var ret int64
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetBitrateOk() (int64, bool) {
	if o == nil || o.Bitrate == nil {
		var ret int64
		return ret, false
	}
	return *o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int64 and assigns it to the Bitrate field.
func (o *MicrosoftGraphAudio) SetBitrate(v int64) {
	o.Bitrate = &v
}

// SetBitrateExplicitNull (un)sets Bitrate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Bitrate value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetBitrateExplicitNull(b bool) {
	o.Bitrate = nil
	o.isExplicitNullBitrate = b
}
// GetComposers returns the Composers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetComposers() string {
	if o == nil || o.Composers == nil {
		var ret string
		return ret
	}
	return *o.Composers
}

// GetComposersOk returns a tuple with the Composers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetComposersOk() (string, bool) {
	if o == nil || o.Composers == nil {
		var ret string
		return ret, false
	}
	return *o.Composers, true
}

// HasComposers returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasComposers() bool {
	if o != nil && o.Composers != nil {
		return true
	}

	return false
}

// SetComposers gets a reference to the given string and assigns it to the Composers field.
func (o *MicrosoftGraphAudio) SetComposers(v string) {
	o.Composers = &v
}

// SetComposersExplicitNull (un)sets Composers to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Composers value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetComposersExplicitNull(b bool) {
	o.Composers = nil
	o.isExplicitNullComposers = b
}
// GetCopyright returns the Copyright field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetCopyright() string {
	if o == nil || o.Copyright == nil {
		var ret string
		return ret
	}
	return *o.Copyright
}

// GetCopyrightOk returns a tuple with the Copyright field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetCopyrightOk() (string, bool) {
	if o == nil || o.Copyright == nil {
		var ret string
		return ret, false
	}
	return *o.Copyright, true
}

// HasCopyright returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasCopyright() bool {
	if o != nil && o.Copyright != nil {
		return true
	}

	return false
}

// SetCopyright gets a reference to the given string and assigns it to the Copyright field.
func (o *MicrosoftGraphAudio) SetCopyright(v string) {
	o.Copyright = &v
}

// SetCopyrightExplicitNull (un)sets Copyright to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Copyright value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetCopyrightExplicitNull(b bool) {
	o.Copyright = nil
	o.isExplicitNullCopyright = b
}
// GetDisc returns the Disc field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetDisc() int32 {
	if o == nil || o.Disc == nil {
		var ret int32
		return ret
	}
	return *o.Disc
}

// GetDiscOk returns a tuple with the Disc field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetDiscOk() (int32, bool) {
	if o == nil || o.Disc == nil {
		var ret int32
		return ret, false
	}
	return *o.Disc, true
}

// HasDisc returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasDisc() bool {
	if o != nil && o.Disc != nil {
		return true
	}

	return false
}

// SetDisc gets a reference to the given int32 and assigns it to the Disc field.
func (o *MicrosoftGraphAudio) SetDisc(v int32) {
	o.Disc = &v
}

// SetDiscExplicitNull (un)sets Disc to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Disc value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetDiscExplicitNull(b bool) {
	o.Disc = nil
	o.isExplicitNullDisc = b
}
// GetDiscCount returns the DiscCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetDiscCount() int32 {
	if o == nil || o.DiscCount == nil {
		var ret int32
		return ret
	}
	return *o.DiscCount
}

// GetDiscCountOk returns a tuple with the DiscCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetDiscCountOk() (int32, bool) {
	if o == nil || o.DiscCount == nil {
		var ret int32
		return ret, false
	}
	return *o.DiscCount, true
}

// HasDiscCount returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasDiscCount() bool {
	if o != nil && o.DiscCount != nil {
		return true
	}

	return false
}

// SetDiscCount gets a reference to the given int32 and assigns it to the DiscCount field.
func (o *MicrosoftGraphAudio) SetDiscCount(v int32) {
	o.DiscCount = &v
}

// SetDiscCountExplicitNull (un)sets DiscCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DiscCount value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetDiscCountExplicitNull(b bool) {
	o.DiscCount = nil
	o.isExplicitNullDiscCount = b
}
// GetDuration returns the Duration field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetDuration() int64 {
	if o == nil || o.Duration == nil {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetDurationOk() (int64, bool) {
	if o == nil || o.Duration == nil {
		var ret int64
		return ret, false
	}
	return *o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *MicrosoftGraphAudio) SetDuration(v int64) {
	o.Duration = &v
}

// SetDurationExplicitNull (un)sets Duration to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Duration value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetDurationExplicitNull(b bool) {
	o.Duration = nil
	o.isExplicitNullDuration = b
}
// GetGenre returns the Genre field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetGenre() string {
	if o == nil || o.Genre == nil {
		var ret string
		return ret
	}
	return *o.Genre
}

// GetGenreOk returns a tuple with the Genre field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetGenreOk() (string, bool) {
	if o == nil || o.Genre == nil {
		var ret string
		return ret, false
	}
	return *o.Genre, true
}

// HasGenre returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasGenre() bool {
	if o != nil && o.Genre != nil {
		return true
	}

	return false
}

// SetGenre gets a reference to the given string and assigns it to the Genre field.
func (o *MicrosoftGraphAudio) SetGenre(v string) {
	o.Genre = &v
}

// SetGenreExplicitNull (un)sets Genre to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Genre value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetGenreExplicitNull(b bool) {
	o.Genre = nil
	o.isExplicitNullGenre = b
}
// GetHasDrm returns the HasDrm field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetHasDrm() bool {
	if o == nil || o.HasDrm == nil {
		var ret bool
		return ret
	}
	return *o.HasDrm
}

// GetHasDrmOk returns a tuple with the HasDrm field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetHasDrmOk() (bool, bool) {
	if o == nil || o.HasDrm == nil {
		var ret bool
		return ret, false
	}
	return *o.HasDrm, true
}

// HasHasDrm returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasHasDrm() bool {
	if o != nil && o.HasDrm != nil {
		return true
	}

	return false
}

// SetHasDrm gets a reference to the given bool and assigns it to the HasDrm field.
func (o *MicrosoftGraphAudio) SetHasDrm(v bool) {
	o.HasDrm = &v
}

// SetHasDrmExplicitNull (un)sets HasDrm to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasDrm value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetHasDrmExplicitNull(b bool) {
	o.HasDrm = nil
	o.isExplicitNullHasDrm = b
}
// GetIsVariableBitrate returns the IsVariableBitrate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetIsVariableBitrate() bool {
	if o == nil || o.IsVariableBitrate == nil {
		var ret bool
		return ret
	}
	return *o.IsVariableBitrate
}

// GetIsVariableBitrateOk returns a tuple with the IsVariableBitrate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetIsVariableBitrateOk() (bool, bool) {
	if o == nil || o.IsVariableBitrate == nil {
		var ret bool
		return ret, false
	}
	return *o.IsVariableBitrate, true
}

// HasIsVariableBitrate returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasIsVariableBitrate() bool {
	if o != nil && o.IsVariableBitrate != nil {
		return true
	}

	return false
}

// SetIsVariableBitrate gets a reference to the given bool and assigns it to the IsVariableBitrate field.
func (o *MicrosoftGraphAudio) SetIsVariableBitrate(v bool) {
	o.IsVariableBitrate = &v
}

// SetIsVariableBitrateExplicitNull (un)sets IsVariableBitrate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsVariableBitrate value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetIsVariableBitrateExplicitNull(b bool) {
	o.IsVariableBitrate = nil
	o.isExplicitNullIsVariableBitrate = b
}
// GetTitle returns the Title field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetTitleOk() (string, bool) {
	if o == nil || o.Title == nil {
		var ret string
		return ret, false
	}
	return *o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MicrosoftGraphAudio) SetTitle(v string) {
	o.Title = &v
}

// SetTitleExplicitNull (un)sets Title to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Title value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetTitleExplicitNull(b bool) {
	o.Title = nil
	o.isExplicitNullTitle = b
}
// GetTrack returns the Track field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetTrack() int32 {
	if o == nil || o.Track == nil {
		var ret int32
		return ret
	}
	return *o.Track
}

// GetTrackOk returns a tuple with the Track field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetTrackOk() (int32, bool) {
	if o == nil || o.Track == nil {
		var ret int32
		return ret, false
	}
	return *o.Track, true
}

// HasTrack returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasTrack() bool {
	if o != nil && o.Track != nil {
		return true
	}

	return false
}

// SetTrack gets a reference to the given int32 and assigns it to the Track field.
func (o *MicrosoftGraphAudio) SetTrack(v int32) {
	o.Track = &v
}

// SetTrackExplicitNull (un)sets Track to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Track value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetTrackExplicitNull(b bool) {
	o.Track = nil
	o.isExplicitNullTrack = b
}
// GetTrackCount returns the TrackCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetTrackCount() int32 {
	if o == nil || o.TrackCount == nil {
		var ret int32
		return ret
	}
	return *o.TrackCount
}

// GetTrackCountOk returns a tuple with the TrackCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetTrackCountOk() (int32, bool) {
	if o == nil || o.TrackCount == nil {
		var ret int32
		return ret, false
	}
	return *o.TrackCount, true
}

// HasTrackCount returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasTrackCount() bool {
	if o != nil && o.TrackCount != nil {
		return true
	}

	return false
}

// SetTrackCount gets a reference to the given int32 and assigns it to the TrackCount field.
func (o *MicrosoftGraphAudio) SetTrackCount(v int32) {
	o.TrackCount = &v
}

// SetTrackCountExplicitNull (un)sets TrackCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TrackCount value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetTrackCountExplicitNull(b bool) {
	o.TrackCount = nil
	o.isExplicitNullTrackCount = b
}
// GetYear returns the Year field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAudio) GetYear() int32 {
	if o == nil || o.Year == nil {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAudio) GetYearOk() (int32, bool) {
	if o == nil || o.Year == nil {
		var ret int32
		return ret, false
	}
	return *o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *MicrosoftGraphAudio) HasYear() bool {
	if o != nil && o.Year != nil {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *MicrosoftGraphAudio) SetYear(v int32) {
	o.Year = &v
}

// SetYearExplicitNull (un)sets Year to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Year value is set to nil even if false is passed
func (o *MicrosoftGraphAudio) SetYearExplicitNull(b bool) {
	o.Year = nil
	o.isExplicitNullYear = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAudio) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Album == nil {
		if o.isExplicitNullAlbum {
			toSerialize["album"] = o.Album
		}
	} else {
		toSerialize["album"] = o.Album
	}
	if o.AlbumArtist == nil {
		if o.isExplicitNullAlbumArtist {
			toSerialize["albumArtist"] = o.AlbumArtist
		}
	} else {
		toSerialize["albumArtist"] = o.AlbumArtist
	}
	if o.Artist == nil {
		if o.isExplicitNullArtist {
			toSerialize["artist"] = o.Artist
		}
	} else {
		toSerialize["artist"] = o.Artist
	}
	if o.Bitrate == nil {
		if o.isExplicitNullBitrate {
			toSerialize["bitrate"] = o.Bitrate
		}
	} else {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.Composers == nil {
		if o.isExplicitNullComposers {
			toSerialize["composers"] = o.Composers
		}
	} else {
		toSerialize["composers"] = o.Composers
	}
	if o.Copyright == nil {
		if o.isExplicitNullCopyright {
			toSerialize["copyright"] = o.Copyright
		}
	} else {
		toSerialize["copyright"] = o.Copyright
	}
	if o.Disc == nil {
		if o.isExplicitNullDisc {
			toSerialize["disc"] = o.Disc
		}
	} else {
		toSerialize["disc"] = o.Disc
	}
	if o.DiscCount == nil {
		if o.isExplicitNullDiscCount {
			toSerialize["discCount"] = o.DiscCount
		}
	} else {
		toSerialize["discCount"] = o.DiscCount
	}
	if o.Duration == nil {
		if o.isExplicitNullDuration {
			toSerialize["duration"] = o.Duration
		}
	} else {
		toSerialize["duration"] = o.Duration
	}
	if o.Genre == nil {
		if o.isExplicitNullGenre {
			toSerialize["genre"] = o.Genre
		}
	} else {
		toSerialize["genre"] = o.Genre
	}
	if o.HasDrm == nil {
		if o.isExplicitNullHasDrm {
			toSerialize["hasDrm"] = o.HasDrm
		}
	} else {
		toSerialize["hasDrm"] = o.HasDrm
	}
	if o.IsVariableBitrate == nil {
		if o.isExplicitNullIsVariableBitrate {
			toSerialize["isVariableBitrate"] = o.IsVariableBitrate
		}
	} else {
		toSerialize["isVariableBitrate"] = o.IsVariableBitrate
	}
	if o.Title == nil {
		if o.isExplicitNullTitle {
			toSerialize["title"] = o.Title
		}
	} else {
		toSerialize["title"] = o.Title
	}
	if o.Track == nil {
		if o.isExplicitNullTrack {
			toSerialize["track"] = o.Track
		}
	} else {
		toSerialize["track"] = o.Track
	}
	if o.TrackCount == nil {
		if o.isExplicitNullTrackCount {
			toSerialize["trackCount"] = o.TrackCount
		}
	} else {
		toSerialize["trackCount"] = o.TrackCount
	}
	if o.Year == nil {
		if o.isExplicitNullYear {
			toSerialize["year"] = o.Year
		}
	} else {
		toSerialize["year"] = o.Year
	}
	return json.Marshal(toSerialize)
}


