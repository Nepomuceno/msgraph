/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject848 struct for InlineObject848
type InlineObject848 struct {
	DecimalDollar *AnyOfobject `json:"decimalDollar,omitempty"`
	isExplicitNullDecimalDollar bool `json:"-"`
	Fraction *AnyOfobject `json:"fraction,omitempty"`
	isExplicitNullFraction bool `json:"-"`
}

// GetDecimalDollar returns the DecimalDollar field if non-nil, zero value otherwise.
func (o *InlineObject848) GetDecimalDollar() AnyOfobject {
	if o == nil || o.DecimalDollar == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.DecimalDollar
}

// GetDecimalDollarOk returns a tuple with the DecimalDollar field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject848) GetDecimalDollarOk() (AnyOfobject, bool) {
	if o == nil || o.DecimalDollar == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.DecimalDollar, true
}

// HasDecimalDollar returns a boolean if a field has been set.
func (o *InlineObject848) HasDecimalDollar() bool {
	if o != nil && o.DecimalDollar != nil {
		return true
	}

	return false
}

// SetDecimalDollar gets a reference to the given AnyOfobject and assigns it to the DecimalDollar field.
func (o *InlineObject848) SetDecimalDollar(v AnyOfobject) {
	o.DecimalDollar = &v
}

// SetDecimalDollarExplicitNull (un)sets DecimalDollar to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DecimalDollar value is set to nil even if false is passed
func (o *InlineObject848) SetDecimalDollarExplicitNull(b bool) {
	o.DecimalDollar = nil
	o.isExplicitNullDecimalDollar = b
}
// GetFraction returns the Fraction field if non-nil, zero value otherwise.
func (o *InlineObject848) GetFraction() AnyOfobject {
	if o == nil || o.Fraction == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Fraction
}

// GetFractionOk returns a tuple with the Fraction field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject848) GetFractionOk() (AnyOfobject, bool) {
	if o == nil || o.Fraction == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Fraction, true
}

// HasFraction returns a boolean if a field has been set.
func (o *InlineObject848) HasFraction() bool {
	if o != nil && o.Fraction != nil {
		return true
	}

	return false
}

// SetFraction gets a reference to the given AnyOfobject and assigns it to the Fraction field.
func (o *InlineObject848) SetFraction(v AnyOfobject) {
	o.Fraction = &v
}

// SetFractionExplicitNull (un)sets Fraction to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Fraction value is set to nil even if false is passed
func (o *InlineObject848) SetFractionExplicitNull(b bool) {
	o.Fraction = nil
	o.isExplicitNullFraction = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject848) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DecimalDollar == nil {
		if o.isExplicitNullDecimalDollar {
			toSerialize["decimalDollar"] = o.DecimalDollar
		}
	} else {
		toSerialize["decimalDollar"] = o.DecimalDollar
	}
	if o.Fraction == nil {
		if o.isExplicitNullFraction {
			toSerialize["fraction"] = o.Fraction
		}
	} else {
		toSerialize["fraction"] = o.Fraction
	}
	return json.Marshal(toSerialize)
}


