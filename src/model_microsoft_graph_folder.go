/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphFolder struct for MicrosoftGraphFolder
type MicrosoftGraphFolder struct {
	ChildCount *int32 `json:"childCount,omitempty"`
	isExplicitNullChildCount bool `json:"-"`
	View *AnyOfmicrosoftGraphFolderView `json:"view,omitempty"`
	isExplicitNullView bool `json:"-"`
}

// GetChildCount returns the ChildCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFolder) GetChildCount() int32 {
	if o == nil || o.ChildCount == nil {
		var ret int32
		return ret
	}
	return *o.ChildCount
}

// GetChildCountOk returns a tuple with the ChildCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFolder) GetChildCountOk() (int32, bool) {
	if o == nil || o.ChildCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ChildCount, true
}

// HasChildCount returns a boolean if a field has been set.
func (o *MicrosoftGraphFolder) HasChildCount() bool {
	if o != nil && o.ChildCount != nil {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given int32 and assigns it to the ChildCount field.
func (o *MicrosoftGraphFolder) SetChildCount(v int32) {
	o.ChildCount = &v
}

// SetChildCountExplicitNull (un)sets ChildCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChildCount value is set to nil even if false is passed
func (o *MicrosoftGraphFolder) SetChildCountExplicitNull(b bool) {
	o.ChildCount = nil
	o.isExplicitNullChildCount = b
}
// GetView returns the View field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFolder) GetView() AnyOfmicrosoftGraphFolderView {
	if o == nil || o.View == nil {
		var ret AnyOfmicrosoftGraphFolderView
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFolder) GetViewOk() (AnyOfmicrosoftGraphFolderView, bool) {
	if o == nil || o.View == nil {
		var ret AnyOfmicrosoftGraphFolderView
		return ret, false
	}
	return *o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *MicrosoftGraphFolder) HasView() bool {
	if o != nil && o.View != nil {
		return true
	}

	return false
}

// SetView gets a reference to the given AnyOfmicrosoftGraphFolderView and assigns it to the View field.
func (o *MicrosoftGraphFolder) SetView(v AnyOfmicrosoftGraphFolderView) {
	o.View = &v
}

// SetViewExplicitNull (un)sets View to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The View value is set to nil even if false is passed
func (o *MicrosoftGraphFolder) SetViewExplicitNull(b bool) {
	o.View = nil
	o.isExplicitNullView = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChildCount == nil {
		if o.isExplicitNullChildCount {
			toSerialize["childCount"] = o.ChildCount
		}
	} else {
		toSerialize["childCount"] = o.ChildCount
	}
	if o.View == nil {
		if o.isExplicitNullView {
			toSerialize["view"] = o.View
		}
	} else {
		toSerialize["view"] = o.View
	}
	return json.Marshal(toSerialize)
}


