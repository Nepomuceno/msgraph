/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// WorkbookChartDataLabels struct for WorkbookChartDataLabels
type WorkbookChartDataLabels struct {
	Position *string `json:"position,omitempty"`
	isExplicitNullPosition bool `json:"-"`
	Separator *string `json:"separator,omitempty"`
	isExplicitNullSeparator bool `json:"-"`
	ShowBubbleSize *bool `json:"showBubbleSize,omitempty"`
	isExplicitNullShowBubbleSize bool `json:"-"`
	ShowCategoryName *bool `json:"showCategoryName,omitempty"`
	isExplicitNullShowCategoryName bool `json:"-"`
	ShowLegendKey *bool `json:"showLegendKey,omitempty"`
	isExplicitNullShowLegendKey bool `json:"-"`
	ShowPercentage *bool `json:"showPercentage,omitempty"`
	isExplicitNullShowPercentage bool `json:"-"`
	ShowSeriesName *bool `json:"showSeriesName,omitempty"`
	isExplicitNullShowSeriesName bool `json:"-"`
	ShowValue *bool `json:"showValue,omitempty"`
	isExplicitNullShowValue bool `json:"-"`
	Format *AnyOfmicrosoftGraphWorkbookChartDataLabelFormat `json:"format,omitempty"`
	isExplicitNullFormat bool `json:"-"`
}

// GetPosition returns the Position field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetPositionOk() (string, bool) {
	if o == nil || o.Position == nil {
		var ret string
		return ret, false
	}
	return *o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *WorkbookChartDataLabels) SetPosition(v string) {
	o.Position = &v
}

// SetPositionExplicitNull (un)sets Position to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Position value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetPositionExplicitNull(b bool) {
	o.Position = nil
	o.isExplicitNullPosition = b
}
// GetSeparator returns the Separator field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetSeparator() string {
	if o == nil || o.Separator == nil {
		var ret string
		return ret
	}
	return *o.Separator
}

// GetSeparatorOk returns a tuple with the Separator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetSeparatorOk() (string, bool) {
	if o == nil || o.Separator == nil {
		var ret string
		return ret, false
	}
	return *o.Separator, true
}

// HasSeparator returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasSeparator() bool {
	if o != nil && o.Separator != nil {
		return true
	}

	return false
}

// SetSeparator gets a reference to the given string and assigns it to the Separator field.
func (o *WorkbookChartDataLabels) SetSeparator(v string) {
	o.Separator = &v
}

// SetSeparatorExplicitNull (un)sets Separator to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Separator value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetSeparatorExplicitNull(b bool) {
	o.Separator = nil
	o.isExplicitNullSeparator = b
}
// GetShowBubbleSize returns the ShowBubbleSize field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowBubbleSize() bool {
	if o == nil || o.ShowBubbleSize == nil {
		var ret bool
		return ret
	}
	return *o.ShowBubbleSize
}

// GetShowBubbleSizeOk returns a tuple with the ShowBubbleSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowBubbleSizeOk() (bool, bool) {
	if o == nil || o.ShowBubbleSize == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowBubbleSize, true
}

// HasShowBubbleSize returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowBubbleSize() bool {
	if o != nil && o.ShowBubbleSize != nil {
		return true
	}

	return false
}

// SetShowBubbleSize gets a reference to the given bool and assigns it to the ShowBubbleSize field.
func (o *WorkbookChartDataLabels) SetShowBubbleSize(v bool) {
	o.ShowBubbleSize = &v
}

// SetShowBubbleSizeExplicitNull (un)sets ShowBubbleSize to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowBubbleSize value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowBubbleSizeExplicitNull(b bool) {
	o.ShowBubbleSize = nil
	o.isExplicitNullShowBubbleSize = b
}
// GetShowCategoryName returns the ShowCategoryName field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowCategoryName() bool {
	if o == nil || o.ShowCategoryName == nil {
		var ret bool
		return ret
	}
	return *o.ShowCategoryName
}

// GetShowCategoryNameOk returns a tuple with the ShowCategoryName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowCategoryNameOk() (bool, bool) {
	if o == nil || o.ShowCategoryName == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowCategoryName, true
}

// HasShowCategoryName returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowCategoryName() bool {
	if o != nil && o.ShowCategoryName != nil {
		return true
	}

	return false
}

// SetShowCategoryName gets a reference to the given bool and assigns it to the ShowCategoryName field.
func (o *WorkbookChartDataLabels) SetShowCategoryName(v bool) {
	o.ShowCategoryName = &v
}

// SetShowCategoryNameExplicitNull (un)sets ShowCategoryName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowCategoryName value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowCategoryNameExplicitNull(b bool) {
	o.ShowCategoryName = nil
	o.isExplicitNullShowCategoryName = b
}
// GetShowLegendKey returns the ShowLegendKey field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowLegendKey() bool {
	if o == nil || o.ShowLegendKey == nil {
		var ret bool
		return ret
	}
	return *o.ShowLegendKey
}

// GetShowLegendKeyOk returns a tuple with the ShowLegendKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowLegendKeyOk() (bool, bool) {
	if o == nil || o.ShowLegendKey == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowLegendKey, true
}

// HasShowLegendKey returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowLegendKey() bool {
	if o != nil && o.ShowLegendKey != nil {
		return true
	}

	return false
}

// SetShowLegendKey gets a reference to the given bool and assigns it to the ShowLegendKey field.
func (o *WorkbookChartDataLabels) SetShowLegendKey(v bool) {
	o.ShowLegendKey = &v
}

// SetShowLegendKeyExplicitNull (un)sets ShowLegendKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowLegendKey value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowLegendKeyExplicitNull(b bool) {
	o.ShowLegendKey = nil
	o.isExplicitNullShowLegendKey = b
}
// GetShowPercentage returns the ShowPercentage field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowPercentage() bool {
	if o == nil || o.ShowPercentage == nil {
		var ret bool
		return ret
	}
	return *o.ShowPercentage
}

// GetShowPercentageOk returns a tuple with the ShowPercentage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowPercentageOk() (bool, bool) {
	if o == nil || o.ShowPercentage == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowPercentage, true
}

// HasShowPercentage returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowPercentage() bool {
	if o != nil && o.ShowPercentage != nil {
		return true
	}

	return false
}

// SetShowPercentage gets a reference to the given bool and assigns it to the ShowPercentage field.
func (o *WorkbookChartDataLabels) SetShowPercentage(v bool) {
	o.ShowPercentage = &v
}

// SetShowPercentageExplicitNull (un)sets ShowPercentage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowPercentage value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowPercentageExplicitNull(b bool) {
	o.ShowPercentage = nil
	o.isExplicitNullShowPercentage = b
}
// GetShowSeriesName returns the ShowSeriesName field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowSeriesName() bool {
	if o == nil || o.ShowSeriesName == nil {
		var ret bool
		return ret
	}
	return *o.ShowSeriesName
}

// GetShowSeriesNameOk returns a tuple with the ShowSeriesName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowSeriesNameOk() (bool, bool) {
	if o == nil || o.ShowSeriesName == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowSeriesName, true
}

// HasShowSeriesName returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowSeriesName() bool {
	if o != nil && o.ShowSeriesName != nil {
		return true
	}

	return false
}

// SetShowSeriesName gets a reference to the given bool and assigns it to the ShowSeriesName field.
func (o *WorkbookChartDataLabels) SetShowSeriesName(v bool) {
	o.ShowSeriesName = &v
}

// SetShowSeriesNameExplicitNull (un)sets ShowSeriesName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowSeriesName value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowSeriesNameExplicitNull(b bool) {
	o.ShowSeriesName = nil
	o.isExplicitNullShowSeriesName = b
}
// GetShowValue returns the ShowValue field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetShowValue() bool {
	if o == nil || o.ShowValue == nil {
		var ret bool
		return ret
	}
	return *o.ShowValue
}

// GetShowValueOk returns a tuple with the ShowValue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetShowValueOk() (bool, bool) {
	if o == nil || o.ShowValue == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowValue, true
}

// HasShowValue returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasShowValue() bool {
	if o != nil && o.ShowValue != nil {
		return true
	}

	return false
}

// SetShowValue gets a reference to the given bool and assigns it to the ShowValue field.
func (o *WorkbookChartDataLabels) SetShowValue(v bool) {
	o.ShowValue = &v
}

// SetShowValueExplicitNull (un)sets ShowValue to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowValue value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetShowValueExplicitNull(b bool) {
	o.ShowValue = nil
	o.isExplicitNullShowValue = b
}
// GetFormat returns the Format field if non-nil, zero value otherwise.
func (o *WorkbookChartDataLabels) GetFormat() AnyOfmicrosoftGraphWorkbookChartDataLabelFormat {
	if o == nil || o.Format == nil {
		var ret AnyOfmicrosoftGraphWorkbookChartDataLabelFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WorkbookChartDataLabels) GetFormatOk() (AnyOfmicrosoftGraphWorkbookChartDataLabelFormat, bool) {
	if o == nil || o.Format == nil {
		var ret AnyOfmicrosoftGraphWorkbookChartDataLabelFormat
		return ret, false
	}
	return *o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *WorkbookChartDataLabels) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given AnyOfmicrosoftGraphWorkbookChartDataLabelFormat and assigns it to the Format field.
func (o *WorkbookChartDataLabels) SetFormat(v AnyOfmicrosoftGraphWorkbookChartDataLabelFormat) {
	o.Format = &v
}

// SetFormatExplicitNull (un)sets Format to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Format value is set to nil even if false is passed
func (o *WorkbookChartDataLabels) SetFormatExplicitNull(b bool) {
	o.Format = nil
	o.isExplicitNullFormat = b
}

// MarshalJSON returns the JSON representation of the model.
func (o WorkbookChartDataLabels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Position == nil {
		if o.isExplicitNullPosition {
			toSerialize["position"] = o.Position
		}
	} else {
		toSerialize["position"] = o.Position
	}
	if o.Separator == nil {
		if o.isExplicitNullSeparator {
			toSerialize["separator"] = o.Separator
		}
	} else {
		toSerialize["separator"] = o.Separator
	}
	if o.ShowBubbleSize == nil {
		if o.isExplicitNullShowBubbleSize {
			toSerialize["showBubbleSize"] = o.ShowBubbleSize
		}
	} else {
		toSerialize["showBubbleSize"] = o.ShowBubbleSize
	}
	if o.ShowCategoryName == nil {
		if o.isExplicitNullShowCategoryName {
			toSerialize["showCategoryName"] = o.ShowCategoryName
		}
	} else {
		toSerialize["showCategoryName"] = o.ShowCategoryName
	}
	if o.ShowLegendKey == nil {
		if o.isExplicitNullShowLegendKey {
			toSerialize["showLegendKey"] = o.ShowLegendKey
		}
	} else {
		toSerialize["showLegendKey"] = o.ShowLegendKey
	}
	if o.ShowPercentage == nil {
		if o.isExplicitNullShowPercentage {
			toSerialize["showPercentage"] = o.ShowPercentage
		}
	} else {
		toSerialize["showPercentage"] = o.ShowPercentage
	}
	if o.ShowSeriesName == nil {
		if o.isExplicitNullShowSeriesName {
			toSerialize["showSeriesName"] = o.ShowSeriesName
		}
	} else {
		toSerialize["showSeriesName"] = o.ShowSeriesName
	}
	if o.ShowValue == nil {
		if o.isExplicitNullShowValue {
			toSerialize["showValue"] = o.ShowValue
		}
	} else {
		toSerialize["showValue"] = o.ShowValue
	}
	if o.Format == nil {
		if o.isExplicitNullFormat {
			toSerialize["format"] = o.Format
		}
	} else {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}


