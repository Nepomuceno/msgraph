/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1016 struct for InlineObject1016
type InlineObject1016 struct {
	Numerator *AnyOfobject `json:"numerator,omitempty"`
	isExplicitNullNumerator bool `json:"-"`
	Denominator *AnyOfobject `json:"denominator,omitempty"`
	isExplicitNullDenominator bool `json:"-"`
}

// GetNumerator returns the Numerator field if non-nil, zero value otherwise.
func (o *InlineObject1016) GetNumerator() AnyOfobject {
	if o == nil || o.Numerator == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Numerator
}

// GetNumeratorOk returns a tuple with the Numerator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1016) GetNumeratorOk() (AnyOfobject, bool) {
	if o == nil || o.Numerator == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Numerator, true
}

// HasNumerator returns a boolean if a field has been set.
func (o *InlineObject1016) HasNumerator() bool {
	if o != nil && o.Numerator != nil {
		return true
	}

	return false
}

// SetNumerator gets a reference to the given AnyOfobject and assigns it to the Numerator field.
func (o *InlineObject1016) SetNumerator(v AnyOfobject) {
	o.Numerator = &v
}

// SetNumeratorExplicitNull (un)sets Numerator to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Numerator value is set to nil even if false is passed
func (o *InlineObject1016) SetNumeratorExplicitNull(b bool) {
	o.Numerator = nil
	o.isExplicitNullNumerator = b
}
// GetDenominator returns the Denominator field if non-nil, zero value otherwise.
func (o *InlineObject1016) GetDenominator() AnyOfobject {
	if o == nil || o.Denominator == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Denominator
}

// GetDenominatorOk returns a tuple with the Denominator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1016) GetDenominatorOk() (AnyOfobject, bool) {
	if o == nil || o.Denominator == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Denominator, true
}

// HasDenominator returns a boolean if a field has been set.
func (o *InlineObject1016) HasDenominator() bool {
	if o != nil && o.Denominator != nil {
		return true
	}

	return false
}

// SetDenominator gets a reference to the given AnyOfobject and assigns it to the Denominator field.
func (o *InlineObject1016) SetDenominator(v AnyOfobject) {
	o.Denominator = &v
}

// SetDenominatorExplicitNull (un)sets Denominator to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Denominator value is set to nil even if false is passed
func (o *InlineObject1016) SetDenominatorExplicitNull(b bool) {
	o.Denominator = nil
	o.isExplicitNullDenominator = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1016) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Numerator == nil {
		if o.isExplicitNullNumerator {
			toSerialize["numerator"] = o.Numerator
		}
	} else {
		toSerialize["numerator"] = o.Numerator
	}
	if o.Denominator == nil {
		if o.isExplicitNullDenominator {
			toSerialize["denominator"] = o.Denominator
		}
	} else {
		toSerialize["denominator"] = o.Denominator
	}
	return json.Marshal(toSerialize)
}


