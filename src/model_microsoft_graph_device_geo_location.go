/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphDeviceGeoLocation struct for MicrosoftGraphDeviceGeoLocation
type MicrosoftGraphDeviceGeoLocation struct {
	// Time at which location was recorded, relative to UTC
	LastCollectedDateTime *time.Time `json:"lastCollectedDateTime,omitempty"`

	// Longitude coordinate of the device's location
	Longitude *AnyOfnumberstringstring `json:"longitude,omitempty"`

	// Latitude coordinate of the device's location
	Latitude *AnyOfnumberstringstring `json:"latitude,omitempty"`

	// Altitude, given in meters above sea level
	Altitude *AnyOfnumberstringstring `json:"altitude,omitempty"`

	// Accuracy of longitude and latitude in meters
	HorizontalAccuracy *AnyOfnumberstringstring `json:"horizontalAccuracy,omitempty"`

	// Accuracy of altitude in meters
	VerticalAccuracy *AnyOfnumberstringstring `json:"verticalAccuracy,omitempty"`

	// Heading in degrees from true north
	Heading *AnyOfnumberstringstring `json:"heading,omitempty"`

	// Speed the device is traveling in meters per second
	Speed *AnyOfnumberstringstring `json:"speed,omitempty"`

}

// GetLastCollectedDateTime returns the LastCollectedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetLastCollectedDateTime() time.Time {
	if o == nil || o.LastCollectedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastCollectedDateTime
}

// GetLastCollectedDateTimeOk returns a tuple with the LastCollectedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetLastCollectedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastCollectedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastCollectedDateTime, true
}

// HasLastCollectedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasLastCollectedDateTime() bool {
	if o != nil && o.LastCollectedDateTime != nil {
		return true
	}

	return false
}

// SetLastCollectedDateTime gets a reference to the given time.Time and assigns it to the LastCollectedDateTime field.
func (o *MicrosoftGraphDeviceGeoLocation) SetLastCollectedDateTime(v time.Time) {
	o.LastCollectedDateTime = &v
}

// GetLongitude returns the Longitude field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetLongitude() AnyOfnumberstringstring {
	if o == nil || o.Longitude == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetLongitudeOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.Longitude == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Longitude field.
func (o *MicrosoftGraphDeviceGeoLocation) SetLongitude(v AnyOfnumberstringstring) {
	o.Longitude = &v
}

// GetLatitude returns the Latitude field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetLatitude() AnyOfnumberstringstring {
	if o == nil || o.Latitude == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetLatitudeOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.Latitude == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Latitude field.
func (o *MicrosoftGraphDeviceGeoLocation) SetLatitude(v AnyOfnumberstringstring) {
	o.Latitude = &v
}

// GetAltitude returns the Altitude field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetAltitude() AnyOfnumberstringstring {
	if o == nil || o.Altitude == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.Altitude
}

// GetAltitudeOk returns a tuple with the Altitude field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetAltitudeOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.Altitude == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.Altitude, true
}

// HasAltitude returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasAltitude() bool {
	if o != nil && o.Altitude != nil {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given AnyOfnumberstringstring and assigns it to the Altitude field.
func (o *MicrosoftGraphDeviceGeoLocation) SetAltitude(v AnyOfnumberstringstring) {
	o.Altitude = &v
}

// GetHorizontalAccuracy returns the HorizontalAccuracy field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetHorizontalAccuracy() AnyOfnumberstringstring {
	if o == nil || o.HorizontalAccuracy == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.HorizontalAccuracy
}

// GetHorizontalAccuracyOk returns a tuple with the HorizontalAccuracy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetHorizontalAccuracyOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.HorizontalAccuracy == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.HorizontalAccuracy, true
}

// HasHorizontalAccuracy returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasHorizontalAccuracy() bool {
	if o != nil && o.HorizontalAccuracy != nil {
		return true
	}

	return false
}

// SetHorizontalAccuracy gets a reference to the given AnyOfnumberstringstring and assigns it to the HorizontalAccuracy field.
func (o *MicrosoftGraphDeviceGeoLocation) SetHorizontalAccuracy(v AnyOfnumberstringstring) {
	o.HorizontalAccuracy = &v
}

// GetVerticalAccuracy returns the VerticalAccuracy field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetVerticalAccuracy() AnyOfnumberstringstring {
	if o == nil || o.VerticalAccuracy == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.VerticalAccuracy
}

// GetVerticalAccuracyOk returns a tuple with the VerticalAccuracy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetVerticalAccuracyOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.VerticalAccuracy == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.VerticalAccuracy, true
}

// HasVerticalAccuracy returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasVerticalAccuracy() bool {
	if o != nil && o.VerticalAccuracy != nil {
		return true
	}

	return false
}

// SetVerticalAccuracy gets a reference to the given AnyOfnumberstringstring and assigns it to the VerticalAccuracy field.
func (o *MicrosoftGraphDeviceGeoLocation) SetVerticalAccuracy(v AnyOfnumberstringstring) {
	o.VerticalAccuracy = &v
}

// GetHeading returns the Heading field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetHeading() AnyOfnumberstringstring {
	if o == nil || o.Heading == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.Heading
}

// GetHeadingOk returns a tuple with the Heading field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetHeadingOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.Heading == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.Heading, true
}

// HasHeading returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasHeading() bool {
	if o != nil && o.Heading != nil {
		return true
	}

	return false
}

// SetHeading gets a reference to the given AnyOfnumberstringstring and assigns it to the Heading field.
func (o *MicrosoftGraphDeviceGeoLocation) SetHeading(v AnyOfnumberstringstring) {
	o.Heading = &v
}

// GetSpeed returns the Speed field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceGeoLocation) GetSpeed() AnyOfnumberstringstring {
	if o == nil || o.Speed == nil {
		var ret AnyOfnumberstringstring
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceGeoLocation) GetSpeedOk() (AnyOfnumberstringstring, bool) {
	if o == nil || o.Speed == nil {
		var ret AnyOfnumberstringstring
		return ret, false
	}
	return *o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceGeoLocation) HasSpeed() bool {
	if o != nil && o.Speed != nil {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given AnyOfnumberstringstring and assigns it to the Speed field.
func (o *MicrosoftGraphDeviceGeoLocation) SetSpeed(v AnyOfnumberstringstring) {
	o.Speed = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDeviceGeoLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastCollectedDateTime != nil {
		toSerialize["lastCollectedDateTime"] = o.LastCollectedDateTime
	}
	if o.Longitude != nil {
		toSerialize["longitude"] = o.Longitude
	}
	if o.Latitude != nil {
		toSerialize["latitude"] = o.Latitude
	}
	if o.Altitude != nil {
		toSerialize["altitude"] = o.Altitude
	}
	if o.HorizontalAccuracy != nil {
		toSerialize["horizontalAccuracy"] = o.HorizontalAccuracy
	}
	if o.VerticalAccuracy != nil {
		toSerialize["verticalAccuracy"] = o.VerticalAccuracy
	}
	if o.Heading != nil {
		toSerialize["heading"] = o.Heading
	}
	if o.Speed != nil {
		toSerialize["speed"] = o.Speed
	}
	return json.Marshal(toSerialize)
}


