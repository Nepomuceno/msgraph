/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// WindowsDeviceAdAccount struct for WindowsDeviceAdAccount
type WindowsDeviceAdAccount struct {
	DomainName *string `json:"domainName,omitempty"`
	isExplicitNullDomainName bool `json:"-"`
	UserName *string `json:"userName,omitempty"`
	isExplicitNullUserName bool `json:"-"`
}

// GetDomainName returns the DomainName field if non-nil, zero value otherwise.
func (o *WindowsDeviceAdAccount) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsDeviceAdAccount) GetDomainNameOk() (string, bool) {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret, false
	}
	return *o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *WindowsDeviceAdAccount) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *WindowsDeviceAdAccount) SetDomainName(v string) {
	o.DomainName = &v
}

// SetDomainNameExplicitNull (un)sets DomainName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DomainName value is set to nil even if false is passed
func (o *WindowsDeviceAdAccount) SetDomainNameExplicitNull(b bool) {
	o.DomainName = nil
	o.isExplicitNullDomainName = b
}
// GetUserName returns the UserName field if non-nil, zero value otherwise.
func (o *WindowsDeviceAdAccount) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WindowsDeviceAdAccount) GetUserNameOk() (string, bool) {
	if o == nil || o.UserName == nil {
		var ret string
		return ret, false
	}
	return *o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *WindowsDeviceAdAccount) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *WindowsDeviceAdAccount) SetUserName(v string) {
	o.UserName = &v
}

// SetUserNameExplicitNull (un)sets UserName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserName value is set to nil even if false is passed
func (o *WindowsDeviceAdAccount) SetUserNameExplicitNull(b bool) {
	o.UserName = nil
	o.isExplicitNullUserName = b
}

// MarshalJSON returns the JSON representation of the model.
func (o WindowsDeviceAdAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainName == nil {
		if o.isExplicitNullDomainName {
			toSerialize["domainName"] = o.DomainName
		}
	} else {
		toSerialize["domainName"] = o.DomainName
	}
	if o.UserName == nil {
		if o.isExplicitNullUserName {
			toSerialize["userName"] = o.UserName
		}
	} else {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}


