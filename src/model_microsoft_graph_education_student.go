/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphEducationStudent struct for MicrosoftGraphEducationStudent
type MicrosoftGraphEducationStudent struct {
	GraduationYear *string `json:"graduationYear,omitempty"`
	isExplicitNullGraduationYear bool `json:"-"`
	Grade *string `json:"grade,omitempty"`
	isExplicitNullGrade bool `json:"-"`
	BirthDate *string `json:"birthDate,omitempty"`
	isExplicitNullBirthDate bool `json:"-"`
	Gender *AnyOfmicrosoftGraphEducationGender `json:"gender,omitempty"`
	isExplicitNullGender bool `json:"-"`
	StudentNumber *string `json:"studentNumber,omitempty"`
	isExplicitNullStudentNumber bool `json:"-"`
	ExternalId *string `json:"externalId,omitempty"`
	isExplicitNullExternalId bool `json:"-"`
}

// GetGraduationYear returns the GraduationYear field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetGraduationYear() string {
	if o == nil || o.GraduationYear == nil {
		var ret string
		return ret
	}
	return *o.GraduationYear
}

// GetGraduationYearOk returns a tuple with the GraduationYear field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetGraduationYearOk() (string, bool) {
	if o == nil || o.GraduationYear == nil {
		var ret string
		return ret, false
	}
	return *o.GraduationYear, true
}

// HasGraduationYear returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasGraduationYear() bool {
	if o != nil && o.GraduationYear != nil {
		return true
	}

	return false
}

// SetGraduationYear gets a reference to the given string and assigns it to the GraduationYear field.
func (o *MicrosoftGraphEducationStudent) SetGraduationYear(v string) {
	o.GraduationYear = &v
}

// SetGraduationYearExplicitNull (un)sets GraduationYear to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GraduationYear value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetGraduationYearExplicitNull(b bool) {
	o.GraduationYear = nil
	o.isExplicitNullGraduationYear = b
}
// GetGrade returns the Grade field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetGrade() string {
	if o == nil || o.Grade == nil {
		var ret string
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetGradeOk() (string, bool) {
	if o == nil || o.Grade == nil {
		var ret string
		return ret, false
	}
	return *o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasGrade() bool {
	if o != nil && o.Grade != nil {
		return true
	}

	return false
}

// SetGrade gets a reference to the given string and assigns it to the Grade field.
func (o *MicrosoftGraphEducationStudent) SetGrade(v string) {
	o.Grade = &v
}

// SetGradeExplicitNull (un)sets Grade to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Grade value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetGradeExplicitNull(b bool) {
	o.Grade = nil
	o.isExplicitNullGrade = b
}
// GetBirthDate returns the BirthDate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetBirthDate() string {
	if o == nil || o.BirthDate == nil {
		var ret string
		return ret
	}
	return *o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetBirthDateOk() (string, bool) {
	if o == nil || o.BirthDate == nil {
		var ret string
		return ret, false
	}
	return *o.BirthDate, true
}

// HasBirthDate returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasBirthDate() bool {
	if o != nil && o.BirthDate != nil {
		return true
	}

	return false
}

// SetBirthDate gets a reference to the given string and assigns it to the BirthDate field.
func (o *MicrosoftGraphEducationStudent) SetBirthDate(v string) {
	o.BirthDate = &v
}

// SetBirthDateExplicitNull (un)sets BirthDate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BirthDate value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetBirthDateExplicitNull(b bool) {
	o.BirthDate = nil
	o.isExplicitNullBirthDate = b
}
// GetGender returns the Gender field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetGender() AnyOfmicrosoftGraphEducationGender {
	if o == nil || o.Gender == nil {
		var ret AnyOfmicrosoftGraphEducationGender
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetGenderOk() (AnyOfmicrosoftGraphEducationGender, bool) {
	if o == nil || o.Gender == nil {
		var ret AnyOfmicrosoftGraphEducationGender
		return ret, false
	}
	return *o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasGender() bool {
	if o != nil && o.Gender != nil {
		return true
	}

	return false
}

// SetGender gets a reference to the given AnyOfmicrosoftGraphEducationGender and assigns it to the Gender field.
func (o *MicrosoftGraphEducationStudent) SetGender(v AnyOfmicrosoftGraphEducationGender) {
	o.Gender = &v
}

// SetGenderExplicitNull (un)sets Gender to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Gender value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetGenderExplicitNull(b bool) {
	o.Gender = nil
	o.isExplicitNullGender = b
}
// GetStudentNumber returns the StudentNumber field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetStudentNumber() string {
	if o == nil || o.StudentNumber == nil {
		var ret string
		return ret
	}
	return *o.StudentNumber
}

// GetStudentNumberOk returns a tuple with the StudentNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetStudentNumberOk() (string, bool) {
	if o == nil || o.StudentNumber == nil {
		var ret string
		return ret, false
	}
	return *o.StudentNumber, true
}

// HasStudentNumber returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasStudentNumber() bool {
	if o != nil && o.StudentNumber != nil {
		return true
	}

	return false
}

// SetStudentNumber gets a reference to the given string and assigns it to the StudentNumber field.
func (o *MicrosoftGraphEducationStudent) SetStudentNumber(v string) {
	o.StudentNumber = &v
}

// SetStudentNumberExplicitNull (un)sets StudentNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StudentNumber value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetStudentNumberExplicitNull(b bool) {
	o.StudentNumber = nil
	o.isExplicitNullStudentNumber = b
}
// GetExternalId returns the ExternalId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEducationStudent) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEducationStudent) GetExternalIdOk() (string, bool) {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret, false
	}
	return *o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *MicrosoftGraphEducationStudent) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *MicrosoftGraphEducationStudent) SetExternalId(v string) {
	o.ExternalId = &v
}

// SetExternalIdExplicitNull (un)sets ExternalId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ExternalId value is set to nil even if false is passed
func (o *MicrosoftGraphEducationStudent) SetExternalIdExplicitNull(b bool) {
	o.ExternalId = nil
	o.isExplicitNullExternalId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphEducationStudent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GraduationYear == nil {
		if o.isExplicitNullGraduationYear {
			toSerialize["graduationYear"] = o.GraduationYear
		}
	} else {
		toSerialize["graduationYear"] = o.GraduationYear
	}
	if o.Grade == nil {
		if o.isExplicitNullGrade {
			toSerialize["grade"] = o.Grade
		}
	} else {
		toSerialize["grade"] = o.Grade
	}
	if o.BirthDate == nil {
		if o.isExplicitNullBirthDate {
			toSerialize["birthDate"] = o.BirthDate
		}
	} else {
		toSerialize["birthDate"] = o.BirthDate
	}
	if o.Gender == nil {
		if o.isExplicitNullGender {
			toSerialize["gender"] = o.Gender
		}
	} else {
		toSerialize["gender"] = o.Gender
	}
	if o.StudentNumber == nil {
		if o.isExplicitNullStudentNumber {
			toSerialize["studentNumber"] = o.StudentNumber
		}
	} else {
		toSerialize["studentNumber"] = o.StudentNumber
	}
	if o.ExternalId == nil {
		if o.isExplicitNullExternalId {
			toSerialize["externalId"] = o.ExternalId
		}
	} else {
		toSerialize["externalId"] = o.ExternalId
	}
	return json.Marshal(toSerialize)
}


