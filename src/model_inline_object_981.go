/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject981 struct for InlineObject981
type InlineObject981 struct {
	Z *AnyOfobject `json:"z,omitempty"`
	isExplicitNullZ bool `json:"-"`
	Cumulative *AnyOfobject `json:"cumulative,omitempty"`
	isExplicitNullCumulative bool `json:"-"`
}

// GetZ returns the Z field if non-nil, zero value otherwise.
func (o *InlineObject981) GetZ() AnyOfobject {
	if o == nil || o.Z == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Z
}

// GetZOk returns a tuple with the Z field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject981) GetZOk() (AnyOfobject, bool) {
	if o == nil || o.Z == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Z, true
}

// HasZ returns a boolean if a field has been set.
func (o *InlineObject981) HasZ() bool {
	if o != nil && o.Z != nil {
		return true
	}

	return false
}

// SetZ gets a reference to the given AnyOfobject and assigns it to the Z field.
func (o *InlineObject981) SetZ(v AnyOfobject) {
	o.Z = &v
}

// SetZExplicitNull (un)sets Z to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Z value is set to nil even if false is passed
func (o *InlineObject981) SetZExplicitNull(b bool) {
	o.Z = nil
	o.isExplicitNullZ = b
}
// GetCumulative returns the Cumulative field if non-nil, zero value otherwise.
func (o *InlineObject981) GetCumulative() AnyOfobject {
	if o == nil || o.Cumulative == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Cumulative
}

// GetCumulativeOk returns a tuple with the Cumulative field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject981) GetCumulativeOk() (AnyOfobject, bool) {
	if o == nil || o.Cumulative == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Cumulative, true
}

// HasCumulative returns a boolean if a field has been set.
func (o *InlineObject981) HasCumulative() bool {
	if o != nil && o.Cumulative != nil {
		return true
	}

	return false
}

// SetCumulative gets a reference to the given AnyOfobject and assigns it to the Cumulative field.
func (o *InlineObject981) SetCumulative(v AnyOfobject) {
	o.Cumulative = &v
}

// SetCumulativeExplicitNull (un)sets Cumulative to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Cumulative value is set to nil even if false is passed
func (o *InlineObject981) SetCumulativeExplicitNull(b bool) {
	o.Cumulative = nil
	o.isExplicitNullCumulative = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject981) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Z == nil {
		if o.isExplicitNullZ {
			toSerialize["z"] = o.Z
		}
	} else {
		toSerialize["z"] = o.Z
	}
	if o.Cumulative == nil {
		if o.isExplicitNullCumulative {
			toSerialize["cumulative"] = o.Cumulative
		}
	} else {
		toSerialize["cumulative"] = o.Cumulative
	}
	return json.Marshal(toSerialize)
}


