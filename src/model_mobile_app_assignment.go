/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MobileAppAssignment A class containing the properties used for Group Assignment of a Mobile App.
type MobileAppAssignment struct {
	// The install intent defined by the admin.
	Intent *AnyOfmicrosoftGraphInstallIntent `json:"intent,omitempty"`

	// The target group assignment defined by the admin.
	Target *AnyOfobject `json:"target,omitempty"`
	isExplicitNullTarget bool `json:"-"`
	// The settings for target assignment defined by the admin.
	Settings *AnyOfobject `json:"settings,omitempty"`
	isExplicitNullSettings bool `json:"-"`
}

// GetIntent returns the Intent field if non-nil, zero value otherwise.
func (o *MobileAppAssignment) GetIntent() AnyOfmicrosoftGraphInstallIntent {
	if o == nil || o.Intent == nil {
		var ret AnyOfmicrosoftGraphInstallIntent
		return ret
	}
	return *o.Intent
}

// GetIntentOk returns a tuple with the Intent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MobileAppAssignment) GetIntentOk() (AnyOfmicrosoftGraphInstallIntent, bool) {
	if o == nil || o.Intent == nil {
		var ret AnyOfmicrosoftGraphInstallIntent
		return ret, false
	}
	return *o.Intent, true
}

// HasIntent returns a boolean if a field has been set.
func (o *MobileAppAssignment) HasIntent() bool {
	if o != nil && o.Intent != nil {
		return true
	}

	return false
}

// SetIntent gets a reference to the given AnyOfmicrosoftGraphInstallIntent and assigns it to the Intent field.
func (o *MobileAppAssignment) SetIntent(v AnyOfmicrosoftGraphInstallIntent) {
	o.Intent = &v
}

// GetTarget returns the Target field if non-nil, zero value otherwise.
func (o *MobileAppAssignment) GetTarget() AnyOfobject {
	if o == nil || o.Target == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MobileAppAssignment) GetTargetOk() (AnyOfobject, bool) {
	if o == nil || o.Target == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *MobileAppAssignment) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given AnyOfobject and assigns it to the Target field.
func (o *MobileAppAssignment) SetTarget(v AnyOfobject) {
	o.Target = &v
}

// SetTargetExplicitNull (un)sets Target to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Target value is set to nil even if false is passed
func (o *MobileAppAssignment) SetTargetExplicitNull(b bool) {
	o.Target = nil
	o.isExplicitNullTarget = b
}
// GetSettings returns the Settings field if non-nil, zero value otherwise.
func (o *MobileAppAssignment) GetSettings() AnyOfobject {
	if o == nil || o.Settings == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MobileAppAssignment) GetSettingsOk() (AnyOfobject, bool) {
	if o == nil || o.Settings == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *MobileAppAssignment) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AnyOfobject and assigns it to the Settings field.
func (o *MobileAppAssignment) SetSettings(v AnyOfobject) {
	o.Settings = &v
}

// SetSettingsExplicitNull (un)sets Settings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Settings value is set to nil even if false is passed
func (o *MobileAppAssignment) SetSettingsExplicitNull(b bool) {
	o.Settings = nil
	o.isExplicitNullSettings = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MobileAppAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Intent != nil {
		toSerialize["intent"] = o.Intent
	}
	if o.Target == nil {
		if o.isExplicitNullTarget {
			toSerialize["target"] = o.Target
		}
	} else {
		toSerialize["target"] = o.Target
	}
	if o.Settings == nil {
		if o.isExplicitNullSettings {
			toSerialize["settings"] = o.Settings
		}
	} else {
		toSerialize["settings"] = o.Settings
	}
	return json.Marshal(toSerialize)
}


