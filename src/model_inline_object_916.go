/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject916 struct for InlineObject916
type InlineObject916 struct {
	Inumber *AnyOfobject `json:"inumber,omitempty"`
	isExplicitNullInumber bool `json:"-"`
	Number *AnyOfobject `json:"number,omitempty"`
	isExplicitNullNumber bool `json:"-"`
}

// GetInumber returns the Inumber field if non-nil, zero value otherwise.
func (o *InlineObject916) GetInumber() AnyOfobject {
	if o == nil || o.Inumber == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Inumber
}

// GetInumberOk returns a tuple with the Inumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject916) GetInumberOk() (AnyOfobject, bool) {
	if o == nil || o.Inumber == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Inumber, true
}

// HasInumber returns a boolean if a field has been set.
func (o *InlineObject916) HasInumber() bool {
	if o != nil && o.Inumber != nil {
		return true
	}

	return false
}

// SetInumber gets a reference to the given AnyOfobject and assigns it to the Inumber field.
func (o *InlineObject916) SetInumber(v AnyOfobject) {
	o.Inumber = &v
}

// SetInumberExplicitNull (un)sets Inumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Inumber value is set to nil even if false is passed
func (o *InlineObject916) SetInumberExplicitNull(b bool) {
	o.Inumber = nil
	o.isExplicitNullInumber = b
}
// GetNumber returns the Number field if non-nil, zero value otherwise.
func (o *InlineObject916) GetNumber() AnyOfobject {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject916) GetNumberOk() (AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject916) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject916) SetNumber(v AnyOfobject) {
	o.Number = &v
}

// SetNumberExplicitNull (un)sets Number to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Number value is set to nil even if false is passed
func (o *InlineObject916) SetNumberExplicitNull(b bool) {
	o.Number = nil
	o.isExplicitNullNumber = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject916) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Inumber == nil {
		if o.isExplicitNullInumber {
			toSerialize["inumber"] = o.Inumber
		}
	} else {
		toSerialize["inumber"] = o.Inumber
	}
	if o.Number == nil {
		if o.isExplicitNullNumber {
			toSerialize["number"] = o.Number
		}
	} else {
		toSerialize["number"] = o.Number
	}
	return json.Marshal(toSerialize)
}


