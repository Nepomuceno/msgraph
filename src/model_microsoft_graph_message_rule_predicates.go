/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphMessageRulePredicates struct for MicrosoftGraphMessageRulePredicates
type MicrosoftGraphMessageRulePredicates struct {
	Categories *[]string `json:"categories,omitempty"`

	SubjectContains *[]string `json:"subjectContains,omitempty"`

	BodyContains *[]string `json:"bodyContains,omitempty"`

	BodyOrSubjectContains *[]string `json:"bodyOrSubjectContains,omitempty"`

	SenderContains *[]string `json:"senderContains,omitempty"`

	RecipientContains *[]string `json:"recipientContains,omitempty"`

	HeaderContains *[]string `json:"headerContains,omitempty"`

	MessageActionFlag *AnyOfmicrosoftGraphMessageActionFlag `json:"messageActionFlag,omitempty"`
	isExplicitNullMessageActionFlag bool `json:"-"`
	Importance *AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	isExplicitNullImportance bool `json:"-"`
	Sensitivity *AnyOfmicrosoftGraphSensitivity `json:"sensitivity,omitempty"`
	isExplicitNullSensitivity bool `json:"-"`
	FromAddresses *[]AnyOfmicrosoftGraphRecipient `json:"fromAddresses,omitempty"`

	SentToAddresses *[]AnyOfmicrosoftGraphRecipient `json:"sentToAddresses,omitempty"`

	SentToMe *bool `json:"sentToMe,omitempty"`
	isExplicitNullSentToMe bool `json:"-"`
	SentOnlyToMe *bool `json:"sentOnlyToMe,omitempty"`
	isExplicitNullSentOnlyToMe bool `json:"-"`
	SentCcMe *bool `json:"sentCcMe,omitempty"`
	isExplicitNullSentCcMe bool `json:"-"`
	SentToOrCcMe *bool `json:"sentToOrCcMe,omitempty"`
	isExplicitNullSentToOrCcMe bool `json:"-"`
	NotSentToMe *bool `json:"notSentToMe,omitempty"`
	isExplicitNullNotSentToMe bool `json:"-"`
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	isExplicitNullHasAttachments bool `json:"-"`
	IsApprovalRequest *bool `json:"isApprovalRequest,omitempty"`
	isExplicitNullIsApprovalRequest bool `json:"-"`
	IsAutomaticForward *bool `json:"isAutomaticForward,omitempty"`
	isExplicitNullIsAutomaticForward bool `json:"-"`
	IsAutomaticReply *bool `json:"isAutomaticReply,omitempty"`
	isExplicitNullIsAutomaticReply bool `json:"-"`
	IsEncrypted *bool `json:"isEncrypted,omitempty"`
	isExplicitNullIsEncrypted bool `json:"-"`
	IsMeetingRequest *bool `json:"isMeetingRequest,omitempty"`
	isExplicitNullIsMeetingRequest bool `json:"-"`
	IsMeetingResponse *bool `json:"isMeetingResponse,omitempty"`
	isExplicitNullIsMeetingResponse bool `json:"-"`
	IsNonDeliveryReport *bool `json:"isNonDeliveryReport,omitempty"`
	isExplicitNullIsNonDeliveryReport bool `json:"-"`
	IsPermissionControlled *bool `json:"isPermissionControlled,omitempty"`
	isExplicitNullIsPermissionControlled bool `json:"-"`
	IsReadReceipt *bool `json:"isReadReceipt,omitempty"`
	isExplicitNullIsReadReceipt bool `json:"-"`
	IsSigned *bool `json:"isSigned,omitempty"`
	isExplicitNullIsSigned bool `json:"-"`
	IsVoicemail *bool `json:"isVoicemail,omitempty"`
	isExplicitNullIsVoicemail bool `json:"-"`
	WithinSizeRange *AnyOfmicrosoftGraphSizeRange `json:"withinSizeRange,omitempty"`
	isExplicitNullWithinSizeRange bool `json:"-"`
}

// GetCategories returns the Categories field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetCategories() []string {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetCategoriesOk() ([]string, bool) {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret, false
	}
	return *o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *MicrosoftGraphMessageRulePredicates) SetCategories(v []string) {
	o.Categories = &v
}

// GetSubjectContains returns the SubjectContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSubjectContains() []string {
	if o == nil || o.SubjectContains == nil {
		var ret []string
		return ret
	}
	return *o.SubjectContains
}

// GetSubjectContainsOk returns a tuple with the SubjectContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSubjectContainsOk() ([]string, bool) {
	if o == nil || o.SubjectContains == nil {
		var ret []string
		return ret, false
	}
	return *o.SubjectContains, true
}

// HasSubjectContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSubjectContains() bool {
	if o != nil && o.SubjectContains != nil {
		return true
	}

	return false
}

// SetSubjectContains gets a reference to the given []string and assigns it to the SubjectContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetSubjectContains(v []string) {
	o.SubjectContains = &v
}

// GetBodyContains returns the BodyContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyContains() []string {
	if o == nil || o.BodyContains == nil {
		var ret []string
		return ret
	}
	return *o.BodyContains
}

// GetBodyContainsOk returns a tuple with the BodyContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyContainsOk() ([]string, bool) {
	if o == nil || o.BodyContains == nil {
		var ret []string
		return ret, false
	}
	return *o.BodyContains, true
}

// HasBodyContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasBodyContains() bool {
	if o != nil && o.BodyContains != nil {
		return true
	}

	return false
}

// SetBodyContains gets a reference to the given []string and assigns it to the BodyContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetBodyContains(v []string) {
	o.BodyContains = &v
}

// GetBodyOrSubjectContains returns the BodyOrSubjectContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyOrSubjectContains() []string {
	if o == nil || o.BodyOrSubjectContains == nil {
		var ret []string
		return ret
	}
	return *o.BodyOrSubjectContains
}

// GetBodyOrSubjectContainsOk returns a tuple with the BodyOrSubjectContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetBodyOrSubjectContainsOk() ([]string, bool) {
	if o == nil || o.BodyOrSubjectContains == nil {
		var ret []string
		return ret, false
	}
	return *o.BodyOrSubjectContains, true
}

// HasBodyOrSubjectContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasBodyOrSubjectContains() bool {
	if o != nil && o.BodyOrSubjectContains != nil {
		return true
	}

	return false
}

// SetBodyOrSubjectContains gets a reference to the given []string and assigns it to the BodyOrSubjectContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetBodyOrSubjectContains(v []string) {
	o.BodyOrSubjectContains = &v
}

// GetSenderContains returns the SenderContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSenderContains() []string {
	if o == nil || o.SenderContains == nil {
		var ret []string
		return ret
	}
	return *o.SenderContains
}

// GetSenderContainsOk returns a tuple with the SenderContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSenderContainsOk() ([]string, bool) {
	if o == nil || o.SenderContains == nil {
		var ret []string
		return ret, false
	}
	return *o.SenderContains, true
}

// HasSenderContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSenderContains() bool {
	if o != nil && o.SenderContains != nil {
		return true
	}

	return false
}

// SetSenderContains gets a reference to the given []string and assigns it to the SenderContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetSenderContains(v []string) {
	o.SenderContains = &v
}

// GetRecipientContains returns the RecipientContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetRecipientContains() []string {
	if o == nil || o.RecipientContains == nil {
		var ret []string
		return ret
	}
	return *o.RecipientContains
}

// GetRecipientContainsOk returns a tuple with the RecipientContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetRecipientContainsOk() ([]string, bool) {
	if o == nil || o.RecipientContains == nil {
		var ret []string
		return ret, false
	}
	return *o.RecipientContains, true
}

// HasRecipientContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasRecipientContains() bool {
	if o != nil && o.RecipientContains != nil {
		return true
	}

	return false
}

// SetRecipientContains gets a reference to the given []string and assigns it to the RecipientContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetRecipientContains(v []string) {
	o.RecipientContains = &v
}

// GetHeaderContains returns the HeaderContains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetHeaderContains() []string {
	if o == nil || o.HeaderContains == nil {
		var ret []string
		return ret
	}
	return *o.HeaderContains
}

// GetHeaderContainsOk returns a tuple with the HeaderContains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetHeaderContainsOk() ([]string, bool) {
	if o == nil || o.HeaderContains == nil {
		var ret []string
		return ret, false
	}
	return *o.HeaderContains, true
}

// HasHeaderContains returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasHeaderContains() bool {
	if o != nil && o.HeaderContains != nil {
		return true
	}

	return false
}

// SetHeaderContains gets a reference to the given []string and assigns it to the HeaderContains field.
func (o *MicrosoftGraphMessageRulePredicates) SetHeaderContains(v []string) {
	o.HeaderContains = &v
}

// GetMessageActionFlag returns the MessageActionFlag field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetMessageActionFlag() AnyOfmicrosoftGraphMessageActionFlag {
	if o == nil || o.MessageActionFlag == nil {
		var ret AnyOfmicrosoftGraphMessageActionFlag
		return ret
	}
	return *o.MessageActionFlag
}

// GetMessageActionFlagOk returns a tuple with the MessageActionFlag field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetMessageActionFlagOk() (AnyOfmicrosoftGraphMessageActionFlag, bool) {
	if o == nil || o.MessageActionFlag == nil {
		var ret AnyOfmicrosoftGraphMessageActionFlag
		return ret, false
	}
	return *o.MessageActionFlag, true
}

// HasMessageActionFlag returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasMessageActionFlag() bool {
	if o != nil && o.MessageActionFlag != nil {
		return true
	}

	return false
}

// SetMessageActionFlag gets a reference to the given AnyOfmicrosoftGraphMessageActionFlag and assigns it to the MessageActionFlag field.
func (o *MicrosoftGraphMessageRulePredicates) SetMessageActionFlag(v AnyOfmicrosoftGraphMessageActionFlag) {
	o.MessageActionFlag = &v
}

// SetMessageActionFlagExplicitNull (un)sets MessageActionFlag to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MessageActionFlag value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetMessageActionFlagExplicitNull(b bool) {
	o.MessageActionFlag = nil
	o.isExplicitNullMessageActionFlag = b
}
// GetImportance returns the Importance field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetImportanceOk() (AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret, false
	}
	return *o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *MicrosoftGraphMessageRulePredicates) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = &v
}

// SetImportanceExplicitNull (un)sets Importance to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Importance value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetImportanceExplicitNull(b bool) {
	o.Importance = nil
	o.isExplicitNullImportance = b
}
// GetSensitivity returns the Sensitivity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSensitivity() AnyOfmicrosoftGraphSensitivity {
	if o == nil || o.Sensitivity == nil {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret
	}
	return *o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSensitivityOk() (AnyOfmicrosoftGraphSensitivity, bool) {
	if o == nil || o.Sensitivity == nil {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret, false
	}
	return *o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSensitivity() bool {
	if o != nil && o.Sensitivity != nil {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given AnyOfmicrosoftGraphSensitivity and assigns it to the Sensitivity field.
func (o *MicrosoftGraphMessageRulePredicates) SetSensitivity(v AnyOfmicrosoftGraphSensitivity) {
	o.Sensitivity = &v
}

// SetSensitivityExplicitNull (un)sets Sensitivity to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sensitivity value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetSensitivityExplicitNull(b bool) {
	o.Sensitivity = nil
	o.isExplicitNullSensitivity = b
}
// GetFromAddresses returns the FromAddresses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetFromAddresses() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.FromAddresses == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.FromAddresses
}

// GetFromAddressesOk returns a tuple with the FromAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetFromAddressesOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.FromAddresses == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.FromAddresses, true
}

// HasFromAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasFromAddresses() bool {
	if o != nil && o.FromAddresses != nil {
		return true
	}

	return false
}

// SetFromAddresses gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the FromAddresses field.
func (o *MicrosoftGraphMessageRulePredicates) SetFromAddresses(v []AnyOfmicrosoftGraphRecipient) {
	o.FromAddresses = &v
}

// GetSentToAddresses returns the SentToAddresses field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToAddresses() []AnyOfmicrosoftGraphRecipient {
	if o == nil || o.SentToAddresses == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.SentToAddresses
}

// GetSentToAddressesOk returns a tuple with the SentToAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToAddressesOk() ([]AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.SentToAddresses == nil {
		var ret []AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.SentToAddresses, true
}

// HasSentToAddresses returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToAddresses() bool {
	if o != nil && o.SentToAddresses != nil {
		return true
	}

	return false
}

// SetSentToAddresses gets a reference to the given []AnyOfmicrosoftGraphRecipient and assigns it to the SentToAddresses field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToAddresses(v []AnyOfmicrosoftGraphRecipient) {
	o.SentToAddresses = &v
}

// GetSentToMe returns the SentToMe field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToMe() bool {
	if o == nil || o.SentToMe == nil {
		var ret bool
		return ret
	}
	return *o.SentToMe
}

// GetSentToMeOk returns a tuple with the SentToMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToMeOk() (bool, bool) {
	if o == nil || o.SentToMe == nil {
		var ret bool
		return ret, false
	}
	return *o.SentToMe, true
}

// HasSentToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToMe() bool {
	if o != nil && o.SentToMe != nil {
		return true
	}

	return false
}

// SetSentToMe gets a reference to the given bool and assigns it to the SentToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToMe(v bool) {
	o.SentToMe = &v
}

// SetSentToMeExplicitNull (un)sets SentToMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SentToMe value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetSentToMeExplicitNull(b bool) {
	o.SentToMe = nil
	o.isExplicitNullSentToMe = b
}
// GetSentOnlyToMe returns the SentOnlyToMe field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentOnlyToMe() bool {
	if o == nil || o.SentOnlyToMe == nil {
		var ret bool
		return ret
	}
	return *o.SentOnlyToMe
}

// GetSentOnlyToMeOk returns a tuple with the SentOnlyToMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentOnlyToMeOk() (bool, bool) {
	if o == nil || o.SentOnlyToMe == nil {
		var ret bool
		return ret, false
	}
	return *o.SentOnlyToMe, true
}

// HasSentOnlyToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentOnlyToMe() bool {
	if o != nil && o.SentOnlyToMe != nil {
		return true
	}

	return false
}

// SetSentOnlyToMe gets a reference to the given bool and assigns it to the SentOnlyToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentOnlyToMe(v bool) {
	o.SentOnlyToMe = &v
}

// SetSentOnlyToMeExplicitNull (un)sets SentOnlyToMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SentOnlyToMe value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetSentOnlyToMeExplicitNull(b bool) {
	o.SentOnlyToMe = nil
	o.isExplicitNullSentOnlyToMe = b
}
// GetSentCcMe returns the SentCcMe field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentCcMe() bool {
	if o == nil || o.SentCcMe == nil {
		var ret bool
		return ret
	}
	return *o.SentCcMe
}

// GetSentCcMeOk returns a tuple with the SentCcMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentCcMeOk() (bool, bool) {
	if o == nil || o.SentCcMe == nil {
		var ret bool
		return ret, false
	}
	return *o.SentCcMe, true
}

// HasSentCcMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentCcMe() bool {
	if o != nil && o.SentCcMe != nil {
		return true
	}

	return false
}

// SetSentCcMe gets a reference to the given bool and assigns it to the SentCcMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentCcMe(v bool) {
	o.SentCcMe = &v
}

// SetSentCcMeExplicitNull (un)sets SentCcMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SentCcMe value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetSentCcMeExplicitNull(b bool) {
	o.SentCcMe = nil
	o.isExplicitNullSentCcMe = b
}
// GetSentToOrCcMe returns the SentToOrCcMe field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToOrCcMe() bool {
	if o == nil || o.SentToOrCcMe == nil {
		var ret bool
		return ret
	}
	return *o.SentToOrCcMe
}

// GetSentToOrCcMeOk returns a tuple with the SentToOrCcMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetSentToOrCcMeOk() (bool, bool) {
	if o == nil || o.SentToOrCcMe == nil {
		var ret bool
		return ret, false
	}
	return *o.SentToOrCcMe, true
}

// HasSentToOrCcMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasSentToOrCcMe() bool {
	if o != nil && o.SentToOrCcMe != nil {
		return true
	}

	return false
}

// SetSentToOrCcMe gets a reference to the given bool and assigns it to the SentToOrCcMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetSentToOrCcMe(v bool) {
	o.SentToOrCcMe = &v
}

// SetSentToOrCcMeExplicitNull (un)sets SentToOrCcMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SentToOrCcMe value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetSentToOrCcMeExplicitNull(b bool) {
	o.SentToOrCcMe = nil
	o.isExplicitNullSentToOrCcMe = b
}
// GetNotSentToMe returns the NotSentToMe field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetNotSentToMe() bool {
	if o == nil || o.NotSentToMe == nil {
		var ret bool
		return ret
	}
	return *o.NotSentToMe
}

// GetNotSentToMeOk returns a tuple with the NotSentToMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetNotSentToMeOk() (bool, bool) {
	if o == nil || o.NotSentToMe == nil {
		var ret bool
		return ret, false
	}
	return *o.NotSentToMe, true
}

// HasNotSentToMe returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasNotSentToMe() bool {
	if o != nil && o.NotSentToMe != nil {
		return true
	}

	return false
}

// SetNotSentToMe gets a reference to the given bool and assigns it to the NotSentToMe field.
func (o *MicrosoftGraphMessageRulePredicates) SetNotSentToMe(v bool) {
	o.NotSentToMe = &v
}

// SetNotSentToMeExplicitNull (un)sets NotSentToMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NotSentToMe value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetNotSentToMeExplicitNull(b bool) {
	o.NotSentToMe = nil
	o.isExplicitNullNotSentToMe = b
}
// GetHasAttachments returns the HasAttachments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetHasAttachments() bool {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetHasAttachmentsOk() (bool, bool) {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret, false
	}
	return *o.HasAttachments, true
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasHasAttachments() bool {
	if o != nil && o.HasAttachments != nil {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given bool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphMessageRulePredicates) SetHasAttachments(v bool) {
	o.HasAttachments = &v
}

// SetHasAttachmentsExplicitNull (un)sets HasAttachments to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasAttachments value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetHasAttachmentsExplicitNull(b bool) {
	o.HasAttachments = nil
	o.isExplicitNullHasAttachments = b
}
// GetIsApprovalRequest returns the IsApprovalRequest field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsApprovalRequest() bool {
	if o == nil || o.IsApprovalRequest == nil {
		var ret bool
		return ret
	}
	return *o.IsApprovalRequest
}

// GetIsApprovalRequestOk returns a tuple with the IsApprovalRequest field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsApprovalRequestOk() (bool, bool) {
	if o == nil || o.IsApprovalRequest == nil {
		var ret bool
		return ret, false
	}
	return *o.IsApprovalRequest, true
}

// HasIsApprovalRequest returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsApprovalRequest() bool {
	if o != nil && o.IsApprovalRequest != nil {
		return true
	}

	return false
}

// SetIsApprovalRequest gets a reference to the given bool and assigns it to the IsApprovalRequest field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsApprovalRequest(v bool) {
	o.IsApprovalRequest = &v
}

// SetIsApprovalRequestExplicitNull (un)sets IsApprovalRequest to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsApprovalRequest value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsApprovalRequestExplicitNull(b bool) {
	o.IsApprovalRequest = nil
	o.isExplicitNullIsApprovalRequest = b
}
// GetIsAutomaticForward returns the IsAutomaticForward field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticForward() bool {
	if o == nil || o.IsAutomaticForward == nil {
		var ret bool
		return ret
	}
	return *o.IsAutomaticForward
}

// GetIsAutomaticForwardOk returns a tuple with the IsAutomaticForward field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticForwardOk() (bool, bool) {
	if o == nil || o.IsAutomaticForward == nil {
		var ret bool
		return ret, false
	}
	return *o.IsAutomaticForward, true
}

// HasIsAutomaticForward returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsAutomaticForward() bool {
	if o != nil && o.IsAutomaticForward != nil {
		return true
	}

	return false
}

// SetIsAutomaticForward gets a reference to the given bool and assigns it to the IsAutomaticForward field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticForward(v bool) {
	o.IsAutomaticForward = &v
}

// SetIsAutomaticForwardExplicitNull (un)sets IsAutomaticForward to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsAutomaticForward value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticForwardExplicitNull(b bool) {
	o.IsAutomaticForward = nil
	o.isExplicitNullIsAutomaticForward = b
}
// GetIsAutomaticReply returns the IsAutomaticReply field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticReply() bool {
	if o == nil || o.IsAutomaticReply == nil {
		var ret bool
		return ret
	}
	return *o.IsAutomaticReply
}

// GetIsAutomaticReplyOk returns a tuple with the IsAutomaticReply field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsAutomaticReplyOk() (bool, bool) {
	if o == nil || o.IsAutomaticReply == nil {
		var ret bool
		return ret, false
	}
	return *o.IsAutomaticReply, true
}

// HasIsAutomaticReply returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsAutomaticReply() bool {
	if o != nil && o.IsAutomaticReply != nil {
		return true
	}

	return false
}

// SetIsAutomaticReply gets a reference to the given bool and assigns it to the IsAutomaticReply field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticReply(v bool) {
	o.IsAutomaticReply = &v
}

// SetIsAutomaticReplyExplicitNull (un)sets IsAutomaticReply to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsAutomaticReply value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsAutomaticReplyExplicitNull(b bool) {
	o.IsAutomaticReply = nil
	o.isExplicitNullIsAutomaticReply = b
}
// GetIsEncrypted returns the IsEncrypted field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsEncrypted() bool {
	if o == nil || o.IsEncrypted == nil {
		var ret bool
		return ret
	}
	return *o.IsEncrypted
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsEncryptedOk() (bool, bool) {
	if o == nil || o.IsEncrypted == nil {
		var ret bool
		return ret, false
	}
	return *o.IsEncrypted, true
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted != nil {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given bool and assigns it to the IsEncrypted field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsEncrypted(v bool) {
	o.IsEncrypted = &v
}

// SetIsEncryptedExplicitNull (un)sets IsEncrypted to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsEncrypted value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsEncryptedExplicitNull(b bool) {
	o.IsEncrypted = nil
	o.isExplicitNullIsEncrypted = b
}
// GetIsMeetingRequest returns the IsMeetingRequest field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingRequest() bool {
	if o == nil || o.IsMeetingRequest == nil {
		var ret bool
		return ret
	}
	return *o.IsMeetingRequest
}

// GetIsMeetingRequestOk returns a tuple with the IsMeetingRequest field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingRequestOk() (bool, bool) {
	if o == nil || o.IsMeetingRequest == nil {
		var ret bool
		return ret, false
	}
	return *o.IsMeetingRequest, true
}

// HasIsMeetingRequest returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsMeetingRequest() bool {
	if o != nil && o.IsMeetingRequest != nil {
		return true
	}

	return false
}

// SetIsMeetingRequest gets a reference to the given bool and assigns it to the IsMeetingRequest field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingRequest(v bool) {
	o.IsMeetingRequest = &v
}

// SetIsMeetingRequestExplicitNull (un)sets IsMeetingRequest to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsMeetingRequest value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingRequestExplicitNull(b bool) {
	o.IsMeetingRequest = nil
	o.isExplicitNullIsMeetingRequest = b
}
// GetIsMeetingResponse returns the IsMeetingResponse field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingResponse() bool {
	if o == nil || o.IsMeetingResponse == nil {
		var ret bool
		return ret
	}
	return *o.IsMeetingResponse
}

// GetIsMeetingResponseOk returns a tuple with the IsMeetingResponse field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsMeetingResponseOk() (bool, bool) {
	if o == nil || o.IsMeetingResponse == nil {
		var ret bool
		return ret, false
	}
	return *o.IsMeetingResponse, true
}

// HasIsMeetingResponse returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsMeetingResponse() bool {
	if o != nil && o.IsMeetingResponse != nil {
		return true
	}

	return false
}

// SetIsMeetingResponse gets a reference to the given bool and assigns it to the IsMeetingResponse field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingResponse(v bool) {
	o.IsMeetingResponse = &v
}

// SetIsMeetingResponseExplicitNull (un)sets IsMeetingResponse to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsMeetingResponse value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsMeetingResponseExplicitNull(b bool) {
	o.IsMeetingResponse = nil
	o.isExplicitNullIsMeetingResponse = b
}
// GetIsNonDeliveryReport returns the IsNonDeliveryReport field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsNonDeliveryReport() bool {
	if o == nil || o.IsNonDeliveryReport == nil {
		var ret bool
		return ret
	}
	return *o.IsNonDeliveryReport
}

// GetIsNonDeliveryReportOk returns a tuple with the IsNonDeliveryReport field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsNonDeliveryReportOk() (bool, bool) {
	if o == nil || o.IsNonDeliveryReport == nil {
		var ret bool
		return ret, false
	}
	return *o.IsNonDeliveryReport, true
}

// HasIsNonDeliveryReport returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsNonDeliveryReport() bool {
	if o != nil && o.IsNonDeliveryReport != nil {
		return true
	}

	return false
}

// SetIsNonDeliveryReport gets a reference to the given bool and assigns it to the IsNonDeliveryReport field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsNonDeliveryReport(v bool) {
	o.IsNonDeliveryReport = &v
}

// SetIsNonDeliveryReportExplicitNull (un)sets IsNonDeliveryReport to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsNonDeliveryReport value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsNonDeliveryReportExplicitNull(b bool) {
	o.IsNonDeliveryReport = nil
	o.isExplicitNullIsNonDeliveryReport = b
}
// GetIsPermissionControlled returns the IsPermissionControlled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsPermissionControlled() bool {
	if o == nil || o.IsPermissionControlled == nil {
		var ret bool
		return ret
	}
	return *o.IsPermissionControlled
}

// GetIsPermissionControlledOk returns a tuple with the IsPermissionControlled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsPermissionControlledOk() (bool, bool) {
	if o == nil || o.IsPermissionControlled == nil {
		var ret bool
		return ret, false
	}
	return *o.IsPermissionControlled, true
}

// HasIsPermissionControlled returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsPermissionControlled() bool {
	if o != nil && o.IsPermissionControlled != nil {
		return true
	}

	return false
}

// SetIsPermissionControlled gets a reference to the given bool and assigns it to the IsPermissionControlled field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsPermissionControlled(v bool) {
	o.IsPermissionControlled = &v
}

// SetIsPermissionControlledExplicitNull (un)sets IsPermissionControlled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsPermissionControlled value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsPermissionControlledExplicitNull(b bool) {
	o.IsPermissionControlled = nil
	o.isExplicitNullIsPermissionControlled = b
}
// GetIsReadReceipt returns the IsReadReceipt field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsReadReceipt() bool {
	if o == nil || o.IsReadReceipt == nil {
		var ret bool
		return ret
	}
	return *o.IsReadReceipt
}

// GetIsReadReceiptOk returns a tuple with the IsReadReceipt field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsReadReceiptOk() (bool, bool) {
	if o == nil || o.IsReadReceipt == nil {
		var ret bool
		return ret, false
	}
	return *o.IsReadReceipt, true
}

// HasIsReadReceipt returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsReadReceipt() bool {
	if o != nil && o.IsReadReceipt != nil {
		return true
	}

	return false
}

// SetIsReadReceipt gets a reference to the given bool and assigns it to the IsReadReceipt field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsReadReceipt(v bool) {
	o.IsReadReceipt = &v
}

// SetIsReadReceiptExplicitNull (un)sets IsReadReceipt to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsReadReceipt value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsReadReceiptExplicitNull(b bool) {
	o.IsReadReceipt = nil
	o.isExplicitNullIsReadReceipt = b
}
// GetIsSigned returns the IsSigned field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsSigned() bool {
	if o == nil || o.IsSigned == nil {
		var ret bool
		return ret
	}
	return *o.IsSigned
}

// GetIsSignedOk returns a tuple with the IsSigned field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsSignedOk() (bool, bool) {
	if o == nil || o.IsSigned == nil {
		var ret bool
		return ret, false
	}
	return *o.IsSigned, true
}

// HasIsSigned returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsSigned() bool {
	if o != nil && o.IsSigned != nil {
		return true
	}

	return false
}

// SetIsSigned gets a reference to the given bool and assigns it to the IsSigned field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsSigned(v bool) {
	o.IsSigned = &v
}

// SetIsSignedExplicitNull (un)sets IsSigned to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsSigned value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsSignedExplicitNull(b bool) {
	o.IsSigned = nil
	o.isExplicitNullIsSigned = b
}
// GetIsVoicemail returns the IsVoicemail field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetIsVoicemail() bool {
	if o == nil || o.IsVoicemail == nil {
		var ret bool
		return ret
	}
	return *o.IsVoicemail
}

// GetIsVoicemailOk returns a tuple with the IsVoicemail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetIsVoicemailOk() (bool, bool) {
	if o == nil || o.IsVoicemail == nil {
		var ret bool
		return ret, false
	}
	return *o.IsVoicemail, true
}

// HasIsVoicemail returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasIsVoicemail() bool {
	if o != nil && o.IsVoicemail != nil {
		return true
	}

	return false
}

// SetIsVoicemail gets a reference to the given bool and assigns it to the IsVoicemail field.
func (o *MicrosoftGraphMessageRulePredicates) SetIsVoicemail(v bool) {
	o.IsVoicemail = &v
}

// SetIsVoicemailExplicitNull (un)sets IsVoicemail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsVoicemail value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetIsVoicemailExplicitNull(b bool) {
	o.IsVoicemail = nil
	o.isExplicitNullIsVoicemail = b
}
// GetWithinSizeRange returns the WithinSizeRange field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMessageRulePredicates) GetWithinSizeRange() AnyOfmicrosoftGraphSizeRange {
	if o == nil || o.WithinSizeRange == nil {
		var ret AnyOfmicrosoftGraphSizeRange
		return ret
	}
	return *o.WithinSizeRange
}

// GetWithinSizeRangeOk returns a tuple with the WithinSizeRange field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMessageRulePredicates) GetWithinSizeRangeOk() (AnyOfmicrosoftGraphSizeRange, bool) {
	if o == nil || o.WithinSizeRange == nil {
		var ret AnyOfmicrosoftGraphSizeRange
		return ret, false
	}
	return *o.WithinSizeRange, true
}

// HasWithinSizeRange returns a boolean if a field has been set.
func (o *MicrosoftGraphMessageRulePredicates) HasWithinSizeRange() bool {
	if o != nil && o.WithinSizeRange != nil {
		return true
	}

	return false
}

// SetWithinSizeRange gets a reference to the given AnyOfmicrosoftGraphSizeRange and assigns it to the WithinSizeRange field.
func (o *MicrosoftGraphMessageRulePredicates) SetWithinSizeRange(v AnyOfmicrosoftGraphSizeRange) {
	o.WithinSizeRange = &v
}

// SetWithinSizeRangeExplicitNull (un)sets WithinSizeRange to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WithinSizeRange value is set to nil even if false is passed
func (o *MicrosoftGraphMessageRulePredicates) SetWithinSizeRangeExplicitNull(b bool) {
	o.WithinSizeRange = nil
	o.isExplicitNullWithinSizeRange = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphMessageRulePredicates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.SubjectContains != nil {
		toSerialize["subjectContains"] = o.SubjectContains
	}
	if o.BodyContains != nil {
		toSerialize["bodyContains"] = o.BodyContains
	}
	if o.BodyOrSubjectContains != nil {
		toSerialize["bodyOrSubjectContains"] = o.BodyOrSubjectContains
	}
	if o.SenderContains != nil {
		toSerialize["senderContains"] = o.SenderContains
	}
	if o.RecipientContains != nil {
		toSerialize["recipientContains"] = o.RecipientContains
	}
	if o.HeaderContains != nil {
		toSerialize["headerContains"] = o.HeaderContains
	}
	if o.MessageActionFlag == nil {
		if o.isExplicitNullMessageActionFlag {
			toSerialize["messageActionFlag"] = o.MessageActionFlag
		}
	} else {
		toSerialize["messageActionFlag"] = o.MessageActionFlag
	}
	if o.Importance == nil {
		if o.isExplicitNullImportance {
			toSerialize["importance"] = o.Importance
		}
	} else {
		toSerialize["importance"] = o.Importance
	}
	if o.Sensitivity == nil {
		if o.isExplicitNullSensitivity {
			toSerialize["sensitivity"] = o.Sensitivity
		}
	} else {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	if o.FromAddresses != nil {
		toSerialize["fromAddresses"] = o.FromAddresses
	}
	if o.SentToAddresses != nil {
		toSerialize["sentToAddresses"] = o.SentToAddresses
	}
	if o.SentToMe == nil {
		if o.isExplicitNullSentToMe {
			toSerialize["sentToMe"] = o.SentToMe
		}
	} else {
		toSerialize["sentToMe"] = o.SentToMe
	}
	if o.SentOnlyToMe == nil {
		if o.isExplicitNullSentOnlyToMe {
			toSerialize["sentOnlyToMe"] = o.SentOnlyToMe
		}
	} else {
		toSerialize["sentOnlyToMe"] = o.SentOnlyToMe
	}
	if o.SentCcMe == nil {
		if o.isExplicitNullSentCcMe {
			toSerialize["sentCcMe"] = o.SentCcMe
		}
	} else {
		toSerialize["sentCcMe"] = o.SentCcMe
	}
	if o.SentToOrCcMe == nil {
		if o.isExplicitNullSentToOrCcMe {
			toSerialize["sentToOrCcMe"] = o.SentToOrCcMe
		}
	} else {
		toSerialize["sentToOrCcMe"] = o.SentToOrCcMe
	}
	if o.NotSentToMe == nil {
		if o.isExplicitNullNotSentToMe {
			toSerialize["notSentToMe"] = o.NotSentToMe
		}
	} else {
		toSerialize["notSentToMe"] = o.NotSentToMe
	}
	if o.HasAttachments == nil {
		if o.isExplicitNullHasAttachments {
			toSerialize["hasAttachments"] = o.HasAttachments
		}
	} else {
		toSerialize["hasAttachments"] = o.HasAttachments
	}
	if o.IsApprovalRequest == nil {
		if o.isExplicitNullIsApprovalRequest {
			toSerialize["isApprovalRequest"] = o.IsApprovalRequest
		}
	} else {
		toSerialize["isApprovalRequest"] = o.IsApprovalRequest
	}
	if o.IsAutomaticForward == nil {
		if o.isExplicitNullIsAutomaticForward {
			toSerialize["isAutomaticForward"] = o.IsAutomaticForward
		}
	} else {
		toSerialize["isAutomaticForward"] = o.IsAutomaticForward
	}
	if o.IsAutomaticReply == nil {
		if o.isExplicitNullIsAutomaticReply {
			toSerialize["isAutomaticReply"] = o.IsAutomaticReply
		}
	} else {
		toSerialize["isAutomaticReply"] = o.IsAutomaticReply
	}
	if o.IsEncrypted == nil {
		if o.isExplicitNullIsEncrypted {
			toSerialize["isEncrypted"] = o.IsEncrypted
		}
	} else {
		toSerialize["isEncrypted"] = o.IsEncrypted
	}
	if o.IsMeetingRequest == nil {
		if o.isExplicitNullIsMeetingRequest {
			toSerialize["isMeetingRequest"] = o.IsMeetingRequest
		}
	} else {
		toSerialize["isMeetingRequest"] = o.IsMeetingRequest
	}
	if o.IsMeetingResponse == nil {
		if o.isExplicitNullIsMeetingResponse {
			toSerialize["isMeetingResponse"] = o.IsMeetingResponse
		}
	} else {
		toSerialize["isMeetingResponse"] = o.IsMeetingResponse
	}
	if o.IsNonDeliveryReport == nil {
		if o.isExplicitNullIsNonDeliveryReport {
			toSerialize["isNonDeliveryReport"] = o.IsNonDeliveryReport
		}
	} else {
		toSerialize["isNonDeliveryReport"] = o.IsNonDeliveryReport
	}
	if o.IsPermissionControlled == nil {
		if o.isExplicitNullIsPermissionControlled {
			toSerialize["isPermissionControlled"] = o.IsPermissionControlled
		}
	} else {
		toSerialize["isPermissionControlled"] = o.IsPermissionControlled
	}
	if o.IsReadReceipt == nil {
		if o.isExplicitNullIsReadReceipt {
			toSerialize["isReadReceipt"] = o.IsReadReceipt
		}
	} else {
		toSerialize["isReadReceipt"] = o.IsReadReceipt
	}
	if o.IsSigned == nil {
		if o.isExplicitNullIsSigned {
			toSerialize["isSigned"] = o.IsSigned
		}
	} else {
		toSerialize["isSigned"] = o.IsSigned
	}
	if o.IsVoicemail == nil {
		if o.isExplicitNullIsVoicemail {
			toSerialize["isVoicemail"] = o.IsVoicemail
		}
	} else {
		toSerialize["isVoicemail"] = o.IsVoicemail
	}
	if o.WithinSizeRange == nil {
		if o.isExplicitNullWithinSizeRange {
			toSerialize["withinSizeRange"] = o.WithinSizeRange
		}
	} else {
		toSerialize["withinSizeRange"] = o.WithinSizeRange
	}
	return json.Marshal(toSerialize)
}


