/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphMeetingTimeSuggestionsResult struct for MicrosoftGraphMeetingTimeSuggestionsResult
type MicrosoftGraphMeetingTimeSuggestionsResult struct {
	MeetingTimeSuggestions *[]AnyOfmicrosoftGraphMeetingTimeSuggestion `json:"meetingTimeSuggestions,omitempty"`

	EmptySuggestionsReason *string `json:"emptySuggestionsReason,omitempty"`
	isExplicitNullEmptySuggestionsReason bool `json:"-"`
}

// GetMeetingTimeSuggestions returns the MeetingTimeSuggestions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) GetMeetingTimeSuggestions() []AnyOfmicrosoftGraphMeetingTimeSuggestion {
	if o == nil || o.MeetingTimeSuggestions == nil {
		var ret []AnyOfmicrosoftGraphMeetingTimeSuggestion
		return ret
	}
	return *o.MeetingTimeSuggestions
}

// GetMeetingTimeSuggestionsOk returns a tuple with the MeetingTimeSuggestions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) GetMeetingTimeSuggestionsOk() ([]AnyOfmicrosoftGraphMeetingTimeSuggestion, bool) {
	if o == nil || o.MeetingTimeSuggestions == nil {
		var ret []AnyOfmicrosoftGraphMeetingTimeSuggestion
		return ret, false
	}
	return *o.MeetingTimeSuggestions, true
}

// HasMeetingTimeSuggestions returns a boolean if a field has been set.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) HasMeetingTimeSuggestions() bool {
	if o != nil && o.MeetingTimeSuggestions != nil {
		return true
	}

	return false
}

// SetMeetingTimeSuggestions gets a reference to the given []AnyOfmicrosoftGraphMeetingTimeSuggestion and assigns it to the MeetingTimeSuggestions field.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) SetMeetingTimeSuggestions(v []AnyOfmicrosoftGraphMeetingTimeSuggestion) {
	o.MeetingTimeSuggestions = &v
}

// GetEmptySuggestionsReason returns the EmptySuggestionsReason field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) GetEmptySuggestionsReason() string {
	if o == nil || o.EmptySuggestionsReason == nil {
		var ret string
		return ret
	}
	return *o.EmptySuggestionsReason
}

// GetEmptySuggestionsReasonOk returns a tuple with the EmptySuggestionsReason field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) GetEmptySuggestionsReasonOk() (string, bool) {
	if o == nil || o.EmptySuggestionsReason == nil {
		var ret string
		return ret, false
	}
	return *o.EmptySuggestionsReason, true
}

// HasEmptySuggestionsReason returns a boolean if a field has been set.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) HasEmptySuggestionsReason() bool {
	if o != nil && o.EmptySuggestionsReason != nil {
		return true
	}

	return false
}

// SetEmptySuggestionsReason gets a reference to the given string and assigns it to the EmptySuggestionsReason field.
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) SetEmptySuggestionsReason(v string) {
	o.EmptySuggestionsReason = &v
}

// SetEmptySuggestionsReasonExplicitNull (un)sets EmptySuggestionsReason to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EmptySuggestionsReason value is set to nil even if false is passed
func (o *MicrosoftGraphMeetingTimeSuggestionsResult) SetEmptySuggestionsReasonExplicitNull(b bool) {
	o.EmptySuggestionsReason = nil
	o.isExplicitNullEmptySuggestionsReason = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphMeetingTimeSuggestionsResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MeetingTimeSuggestions != nil {
		toSerialize["meetingTimeSuggestions"] = o.MeetingTimeSuggestions
	}
	if o.EmptySuggestionsReason == nil {
		if o.isExplicitNullEmptySuggestionsReason {
			toSerialize["emptySuggestionsReason"] = o.EmptySuggestionsReason
		}
	} else {
		toSerialize["emptySuggestionsReason"] = o.EmptySuggestionsReason
	}
	return json.Marshal(toSerialize)
}


