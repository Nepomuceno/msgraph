/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphPlannerTask struct for MicrosoftGraphPlannerTask
type MicrosoftGraphPlannerTask struct {
	Id *string `json:"id,omitempty"`

	CreatedBy *AnyOfmicrosoftGraphIdentitySet `json:"createdBy,omitempty"`
	isExplicitNullCreatedBy bool `json:"-"`
	PlanId *string `json:"planId,omitempty"`
	isExplicitNullPlanId bool `json:"-"`
	BucketId *string `json:"bucketId,omitempty"`
	isExplicitNullBucketId bool `json:"-"`
	Title *string `json:"title,omitempty"`

	OrderHint *string `json:"orderHint,omitempty"`
	isExplicitNullOrderHint bool `json:"-"`
	AssigneePriority *string `json:"assigneePriority,omitempty"`
	isExplicitNullAssigneePriority bool `json:"-"`
	PercentComplete *int32 `json:"percentComplete,omitempty"`
	isExplicitNullPercentComplete bool `json:"-"`
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	isExplicitNullStartDateTime bool `json:"-"`
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	DueDateTime *time.Time `json:"dueDateTime,omitempty"`
	isExplicitNullDueDateTime bool `json:"-"`
	HasDescription *bool `json:"hasDescription,omitempty"`
	isExplicitNullHasDescription bool `json:"-"`
	PreviewType *AnyOfmicrosoftGraphPlannerPreviewType `json:"previewType,omitempty"`
	isExplicitNullPreviewType bool `json:"-"`
	CompletedDateTime *time.Time `json:"completedDateTime,omitempty"`
	isExplicitNullCompletedDateTime bool `json:"-"`
	CompletedBy *AnyOfmicrosoftGraphIdentitySet `json:"completedBy,omitempty"`
	isExplicitNullCompletedBy bool `json:"-"`
	ReferenceCount *int32 `json:"referenceCount,omitempty"`
	isExplicitNullReferenceCount bool `json:"-"`
	ChecklistItemCount *int32 `json:"checklistItemCount,omitempty"`
	isExplicitNullChecklistItemCount bool `json:"-"`
	ActiveChecklistItemCount *int32 `json:"activeChecklistItemCount,omitempty"`
	isExplicitNullActiveChecklistItemCount bool `json:"-"`
	AppliedCategories *AnyOfobject `json:"appliedCategories,omitempty"`
	isExplicitNullAppliedCategories bool `json:"-"`
	Assignments *AnyOfobject `json:"assignments,omitempty"`
	isExplicitNullAssignments bool `json:"-"`
	ConversationThreadId *string `json:"conversationThreadId,omitempty"`
	isExplicitNullConversationThreadId bool `json:"-"`
	Details *AnyOfmicrosoftGraphPlannerTaskDetails `json:"details,omitempty"`
	isExplicitNullDetails bool `json:"-"`
	AssignedToTaskBoardFormat *AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat `json:"assignedToTaskBoardFormat,omitempty"`
	isExplicitNullAssignedToTaskBoardFormat bool `json:"-"`
	ProgressTaskBoardFormat *AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat `json:"progressTaskBoardFormat,omitempty"`
	isExplicitNullProgressTaskBoardFormat bool `json:"-"`
	BucketTaskBoardFormat *AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat `json:"bucketTaskBoardFormat,omitempty"`
	isExplicitNullBucketTaskBoardFormat bool `json:"-"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphPlannerTask) SetId(v string) {
	o.Id = &v
}

// GetCreatedBy returns the CreatedBy field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetCreatedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetCreatedByOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CreatedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CreatedBy field.
func (o *MicrosoftGraphPlannerTask) SetCreatedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CreatedBy = &v
}

// SetCreatedByExplicitNull (un)sets CreatedBy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedBy value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetCreatedByExplicitNull(b bool) {
	o.CreatedBy = nil
	o.isExplicitNullCreatedBy = b
}
// GetPlanId returns the PlanId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetPlanIdOk() (string, bool) {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret, false
	}
	return *o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *MicrosoftGraphPlannerTask) SetPlanId(v string) {
	o.PlanId = &v
}

// SetPlanIdExplicitNull (un)sets PlanId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PlanId value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetPlanIdExplicitNull(b bool) {
	o.PlanId = nil
	o.isExplicitNullPlanId = b
}
// GetBucketId returns the BucketId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetBucketId() string {
	if o == nil || o.BucketId == nil {
		var ret string
		return ret
	}
	return *o.BucketId
}

// GetBucketIdOk returns a tuple with the BucketId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetBucketIdOk() (string, bool) {
	if o == nil || o.BucketId == nil {
		var ret string
		return ret, false
	}
	return *o.BucketId, true
}

// HasBucketId returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasBucketId() bool {
	if o != nil && o.BucketId != nil {
		return true
	}

	return false
}

// SetBucketId gets a reference to the given string and assigns it to the BucketId field.
func (o *MicrosoftGraphPlannerTask) SetBucketId(v string) {
	o.BucketId = &v
}

// SetBucketIdExplicitNull (un)sets BucketId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BucketId value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetBucketIdExplicitNull(b bool) {
	o.BucketId = nil
	o.isExplicitNullBucketId = b
}
// GetTitle returns the Title field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetTitleOk() (string, bool) {
	if o == nil || o.Title == nil {
		var ret string
		return ret, false
	}
	return *o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MicrosoftGraphPlannerTask) SetTitle(v string) {
	o.Title = &v
}

// GetOrderHint returns the OrderHint field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetOrderHint() string {
	if o == nil || o.OrderHint == nil {
		var ret string
		return ret
	}
	return *o.OrderHint
}

// GetOrderHintOk returns a tuple with the OrderHint field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetOrderHintOk() (string, bool) {
	if o == nil || o.OrderHint == nil {
		var ret string
		return ret, false
	}
	return *o.OrderHint, true
}

// HasOrderHint returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasOrderHint() bool {
	if o != nil && o.OrderHint != nil {
		return true
	}

	return false
}

// SetOrderHint gets a reference to the given string and assigns it to the OrderHint field.
func (o *MicrosoftGraphPlannerTask) SetOrderHint(v string) {
	o.OrderHint = &v
}

// SetOrderHintExplicitNull (un)sets OrderHint to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OrderHint value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetOrderHintExplicitNull(b bool) {
	o.OrderHint = nil
	o.isExplicitNullOrderHint = b
}
// GetAssigneePriority returns the AssigneePriority field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetAssigneePriority() string {
	if o == nil || o.AssigneePriority == nil {
		var ret string
		return ret
	}
	return *o.AssigneePriority
}

// GetAssigneePriorityOk returns a tuple with the AssigneePriority field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetAssigneePriorityOk() (string, bool) {
	if o == nil || o.AssigneePriority == nil {
		var ret string
		return ret, false
	}
	return *o.AssigneePriority, true
}

// HasAssigneePriority returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasAssigneePriority() bool {
	if o != nil && o.AssigneePriority != nil {
		return true
	}

	return false
}

// SetAssigneePriority gets a reference to the given string and assigns it to the AssigneePriority field.
func (o *MicrosoftGraphPlannerTask) SetAssigneePriority(v string) {
	o.AssigneePriority = &v
}

// SetAssigneePriorityExplicitNull (un)sets AssigneePriority to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AssigneePriority value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetAssigneePriorityExplicitNull(b bool) {
	o.AssigneePriority = nil
	o.isExplicitNullAssigneePriority = b
}
// GetPercentComplete returns the PercentComplete field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetPercentComplete() int32 {
	if o == nil || o.PercentComplete == nil {
		var ret int32
		return ret
	}
	return *o.PercentComplete
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetPercentCompleteOk() (int32, bool) {
	if o == nil || o.PercentComplete == nil {
		var ret int32
		return ret, false
	}
	return *o.PercentComplete, true
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasPercentComplete() bool {
	if o != nil && o.PercentComplete != nil {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given int32 and assigns it to the PercentComplete field.
func (o *MicrosoftGraphPlannerTask) SetPercentComplete(v int32) {
	o.PercentComplete = &v
}

// SetPercentCompleteExplicitNull (un)sets PercentComplete to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PercentComplete value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetPercentCompleteExplicitNull(b bool) {
	o.PercentComplete = nil
	o.isExplicitNullPercentComplete = b
}
// GetStartDateTime returns the StartDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetStartDateTimeOk() (time.Time, bool) {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *MicrosoftGraphPlannerTask) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// SetStartDateTimeExplicitNull (un)sets StartDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StartDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetStartDateTimeExplicitNull(b bool) {
	o.StartDateTime = nil
	o.isExplicitNullStartDateTime = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphPlannerTask) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetDueDateTime returns the DueDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetDueDateTime() time.Time {
	if o == nil || o.DueDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DueDateTime
}

// GetDueDateTimeOk returns a tuple with the DueDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetDueDateTimeOk() (time.Time, bool) {
	if o == nil || o.DueDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DueDateTime, true
}

// HasDueDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasDueDateTime() bool {
	if o != nil && o.DueDateTime != nil {
		return true
	}

	return false
}

// SetDueDateTime gets a reference to the given time.Time and assigns it to the DueDateTime field.
func (o *MicrosoftGraphPlannerTask) SetDueDateTime(v time.Time) {
	o.DueDateTime = &v
}

// SetDueDateTimeExplicitNull (un)sets DueDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DueDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetDueDateTimeExplicitNull(b bool) {
	o.DueDateTime = nil
	o.isExplicitNullDueDateTime = b
}
// GetHasDescription returns the HasDescription field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetHasDescription() bool {
	if o == nil || o.HasDescription == nil {
		var ret bool
		return ret
	}
	return *o.HasDescription
}

// GetHasDescriptionOk returns a tuple with the HasDescription field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetHasDescriptionOk() (bool, bool) {
	if o == nil || o.HasDescription == nil {
		var ret bool
		return ret, false
	}
	return *o.HasDescription, true
}

// HasHasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasHasDescription() bool {
	if o != nil && o.HasDescription != nil {
		return true
	}

	return false
}

// SetHasDescription gets a reference to the given bool and assigns it to the HasDescription field.
func (o *MicrosoftGraphPlannerTask) SetHasDescription(v bool) {
	o.HasDescription = &v
}

// SetHasDescriptionExplicitNull (un)sets HasDescription to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasDescription value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetHasDescriptionExplicitNull(b bool) {
	o.HasDescription = nil
	o.isExplicitNullHasDescription = b
}
// GetPreviewType returns the PreviewType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetPreviewType() AnyOfmicrosoftGraphPlannerPreviewType {
	if o == nil || o.PreviewType == nil {
		var ret AnyOfmicrosoftGraphPlannerPreviewType
		return ret
	}
	return *o.PreviewType
}

// GetPreviewTypeOk returns a tuple with the PreviewType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetPreviewTypeOk() (AnyOfmicrosoftGraphPlannerPreviewType, bool) {
	if o == nil || o.PreviewType == nil {
		var ret AnyOfmicrosoftGraphPlannerPreviewType
		return ret, false
	}
	return *o.PreviewType, true
}

// HasPreviewType returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasPreviewType() bool {
	if o != nil && o.PreviewType != nil {
		return true
	}

	return false
}

// SetPreviewType gets a reference to the given AnyOfmicrosoftGraphPlannerPreviewType and assigns it to the PreviewType field.
func (o *MicrosoftGraphPlannerTask) SetPreviewType(v AnyOfmicrosoftGraphPlannerPreviewType) {
	o.PreviewType = &v
}

// SetPreviewTypeExplicitNull (un)sets PreviewType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreviewType value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetPreviewTypeExplicitNull(b bool) {
	o.PreviewType = nil
	o.isExplicitNullPreviewType = b
}
// GetCompletedDateTime returns the CompletedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetCompletedDateTime() time.Time {
	if o == nil || o.CompletedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletedDateTime
}

// GetCompletedDateTimeOk returns a tuple with the CompletedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetCompletedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CompletedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CompletedDateTime, true
}

// HasCompletedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasCompletedDateTime() bool {
	if o != nil && o.CompletedDateTime != nil {
		return true
	}

	return false
}

// SetCompletedDateTime gets a reference to the given time.Time and assigns it to the CompletedDateTime field.
func (o *MicrosoftGraphPlannerTask) SetCompletedDateTime(v time.Time) {
	o.CompletedDateTime = &v
}

// SetCompletedDateTimeExplicitNull (un)sets CompletedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CompletedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetCompletedDateTimeExplicitNull(b bool) {
	o.CompletedDateTime = nil
	o.isExplicitNullCompletedDateTime = b
}
// GetCompletedBy returns the CompletedBy field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetCompletedBy() AnyOfmicrosoftGraphIdentitySet {
	if o == nil || o.CompletedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret
	}
	return *o.CompletedBy
}

// GetCompletedByOk returns a tuple with the CompletedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetCompletedByOk() (AnyOfmicrosoftGraphIdentitySet, bool) {
	if o == nil || o.CompletedBy == nil {
		var ret AnyOfmicrosoftGraphIdentitySet
		return ret, false
	}
	return *o.CompletedBy, true
}

// HasCompletedBy returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasCompletedBy() bool {
	if o != nil && o.CompletedBy != nil {
		return true
	}

	return false
}

// SetCompletedBy gets a reference to the given AnyOfmicrosoftGraphIdentitySet and assigns it to the CompletedBy field.
func (o *MicrosoftGraphPlannerTask) SetCompletedBy(v AnyOfmicrosoftGraphIdentitySet) {
	o.CompletedBy = &v
}

// SetCompletedByExplicitNull (un)sets CompletedBy to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CompletedBy value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetCompletedByExplicitNull(b bool) {
	o.CompletedBy = nil
	o.isExplicitNullCompletedBy = b
}
// GetReferenceCount returns the ReferenceCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetReferenceCount() int32 {
	if o == nil || o.ReferenceCount == nil {
		var ret int32
		return ret
	}
	return *o.ReferenceCount
}

// GetReferenceCountOk returns a tuple with the ReferenceCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetReferenceCountOk() (int32, bool) {
	if o == nil || o.ReferenceCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ReferenceCount, true
}

// HasReferenceCount returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasReferenceCount() bool {
	if o != nil && o.ReferenceCount != nil {
		return true
	}

	return false
}

// SetReferenceCount gets a reference to the given int32 and assigns it to the ReferenceCount field.
func (o *MicrosoftGraphPlannerTask) SetReferenceCount(v int32) {
	o.ReferenceCount = &v
}

// SetReferenceCountExplicitNull (un)sets ReferenceCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ReferenceCount value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetReferenceCountExplicitNull(b bool) {
	o.ReferenceCount = nil
	o.isExplicitNullReferenceCount = b
}
// GetChecklistItemCount returns the ChecklistItemCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetChecklistItemCount() int32 {
	if o == nil || o.ChecklistItemCount == nil {
		var ret int32
		return ret
	}
	return *o.ChecklistItemCount
}

// GetChecklistItemCountOk returns a tuple with the ChecklistItemCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetChecklistItemCountOk() (int32, bool) {
	if o == nil || o.ChecklistItemCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ChecklistItemCount, true
}

// HasChecklistItemCount returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasChecklistItemCount() bool {
	if o != nil && o.ChecklistItemCount != nil {
		return true
	}

	return false
}

// SetChecklistItemCount gets a reference to the given int32 and assigns it to the ChecklistItemCount field.
func (o *MicrosoftGraphPlannerTask) SetChecklistItemCount(v int32) {
	o.ChecklistItemCount = &v
}

// SetChecklistItemCountExplicitNull (un)sets ChecklistItemCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChecklistItemCount value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetChecklistItemCountExplicitNull(b bool) {
	o.ChecklistItemCount = nil
	o.isExplicitNullChecklistItemCount = b
}
// GetActiveChecklistItemCount returns the ActiveChecklistItemCount field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetActiveChecklistItemCount() int32 {
	if o == nil || o.ActiveChecklistItemCount == nil {
		var ret int32
		return ret
	}
	return *o.ActiveChecklistItemCount
}

// GetActiveChecklistItemCountOk returns a tuple with the ActiveChecklistItemCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetActiveChecklistItemCountOk() (int32, bool) {
	if o == nil || o.ActiveChecklistItemCount == nil {
		var ret int32
		return ret, false
	}
	return *o.ActiveChecklistItemCount, true
}

// HasActiveChecklistItemCount returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasActiveChecklistItemCount() bool {
	if o != nil && o.ActiveChecklistItemCount != nil {
		return true
	}

	return false
}

// SetActiveChecklistItemCount gets a reference to the given int32 and assigns it to the ActiveChecklistItemCount field.
func (o *MicrosoftGraphPlannerTask) SetActiveChecklistItemCount(v int32) {
	o.ActiveChecklistItemCount = &v
}

// SetActiveChecklistItemCountExplicitNull (un)sets ActiveChecklistItemCount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ActiveChecklistItemCount value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetActiveChecklistItemCountExplicitNull(b bool) {
	o.ActiveChecklistItemCount = nil
	o.isExplicitNullActiveChecklistItemCount = b
}
// GetAppliedCategories returns the AppliedCategories field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetAppliedCategories() AnyOfobject {
	if o == nil || o.AppliedCategories == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.AppliedCategories
}

// GetAppliedCategoriesOk returns a tuple with the AppliedCategories field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetAppliedCategoriesOk() (AnyOfobject, bool) {
	if o == nil || o.AppliedCategories == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.AppliedCategories, true
}

// HasAppliedCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasAppliedCategories() bool {
	if o != nil && o.AppliedCategories != nil {
		return true
	}

	return false
}

// SetAppliedCategories gets a reference to the given AnyOfobject and assigns it to the AppliedCategories field.
func (o *MicrosoftGraphPlannerTask) SetAppliedCategories(v AnyOfobject) {
	o.AppliedCategories = &v
}

// SetAppliedCategoriesExplicitNull (un)sets AppliedCategories to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppliedCategories value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetAppliedCategoriesExplicitNull(b bool) {
	o.AppliedCategories = nil
	o.isExplicitNullAppliedCategories = b
}
// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetAssignments() AnyOfobject {
	if o == nil || o.Assignments == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetAssignmentsOk() (AnyOfobject, bool) {
	if o == nil || o.Assignments == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given AnyOfobject and assigns it to the Assignments field.
func (o *MicrosoftGraphPlannerTask) SetAssignments(v AnyOfobject) {
	o.Assignments = &v
}

// SetAssignmentsExplicitNull (un)sets Assignments to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Assignments value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetAssignmentsExplicitNull(b bool) {
	o.Assignments = nil
	o.isExplicitNullAssignments = b
}
// GetConversationThreadId returns the ConversationThreadId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetConversationThreadId() string {
	if o == nil || o.ConversationThreadId == nil {
		var ret string
		return ret
	}
	return *o.ConversationThreadId
}

// GetConversationThreadIdOk returns a tuple with the ConversationThreadId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetConversationThreadIdOk() (string, bool) {
	if o == nil || o.ConversationThreadId == nil {
		var ret string
		return ret, false
	}
	return *o.ConversationThreadId, true
}

// HasConversationThreadId returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasConversationThreadId() bool {
	if o != nil && o.ConversationThreadId != nil {
		return true
	}

	return false
}

// SetConversationThreadId gets a reference to the given string and assigns it to the ConversationThreadId field.
func (o *MicrosoftGraphPlannerTask) SetConversationThreadId(v string) {
	o.ConversationThreadId = &v
}

// SetConversationThreadIdExplicitNull (un)sets ConversationThreadId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConversationThreadId value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetConversationThreadIdExplicitNull(b bool) {
	o.ConversationThreadId = nil
	o.isExplicitNullConversationThreadId = b
}
// GetDetails returns the Details field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetDetails() AnyOfmicrosoftGraphPlannerTaskDetails {
	if o == nil || o.Details == nil {
		var ret AnyOfmicrosoftGraphPlannerTaskDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetDetailsOk() (AnyOfmicrosoftGraphPlannerTaskDetails, bool) {
	if o == nil || o.Details == nil {
		var ret AnyOfmicrosoftGraphPlannerTaskDetails
		return ret, false
	}
	return *o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given AnyOfmicrosoftGraphPlannerTaskDetails and assigns it to the Details field.
func (o *MicrosoftGraphPlannerTask) SetDetails(v AnyOfmicrosoftGraphPlannerTaskDetails) {
	o.Details = &v
}

// SetDetailsExplicitNull (un)sets Details to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Details value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetDetailsExplicitNull(b bool) {
	o.Details = nil
	o.isExplicitNullDetails = b
}
// GetAssignedToTaskBoardFormat returns the AssignedToTaskBoardFormat field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetAssignedToTaskBoardFormat() AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat {
	if o == nil || o.AssignedToTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
		return ret
	}
	return *o.AssignedToTaskBoardFormat
}

// GetAssignedToTaskBoardFormatOk returns a tuple with the AssignedToTaskBoardFormat field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetAssignedToTaskBoardFormatOk() (AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat, bool) {
	if o == nil || o.AssignedToTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
		return ret, false
	}
	return *o.AssignedToTaskBoardFormat, true
}

// HasAssignedToTaskBoardFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasAssignedToTaskBoardFormat() bool {
	if o != nil && o.AssignedToTaskBoardFormat != nil {
		return true
	}

	return false
}

// SetAssignedToTaskBoardFormat gets a reference to the given AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat and assigns it to the AssignedToTaskBoardFormat field.
func (o *MicrosoftGraphPlannerTask) SetAssignedToTaskBoardFormat(v AnyOfmicrosoftGraphPlannerAssignedToTaskBoardTaskFormat) {
	o.AssignedToTaskBoardFormat = &v
}

// SetAssignedToTaskBoardFormatExplicitNull (un)sets AssignedToTaskBoardFormat to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AssignedToTaskBoardFormat value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetAssignedToTaskBoardFormatExplicitNull(b bool) {
	o.AssignedToTaskBoardFormat = nil
	o.isExplicitNullAssignedToTaskBoardFormat = b
}
// GetProgressTaskBoardFormat returns the ProgressTaskBoardFormat field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetProgressTaskBoardFormat() AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat {
	if o == nil || o.ProgressTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat
		return ret
	}
	return *o.ProgressTaskBoardFormat
}

// GetProgressTaskBoardFormatOk returns a tuple with the ProgressTaskBoardFormat field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetProgressTaskBoardFormatOk() (AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat, bool) {
	if o == nil || o.ProgressTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat
		return ret, false
	}
	return *o.ProgressTaskBoardFormat, true
}

// HasProgressTaskBoardFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasProgressTaskBoardFormat() bool {
	if o != nil && o.ProgressTaskBoardFormat != nil {
		return true
	}

	return false
}

// SetProgressTaskBoardFormat gets a reference to the given AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat and assigns it to the ProgressTaskBoardFormat field.
func (o *MicrosoftGraphPlannerTask) SetProgressTaskBoardFormat(v AnyOfmicrosoftGraphPlannerProgressTaskBoardTaskFormat) {
	o.ProgressTaskBoardFormat = &v
}

// SetProgressTaskBoardFormatExplicitNull (un)sets ProgressTaskBoardFormat to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ProgressTaskBoardFormat value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetProgressTaskBoardFormatExplicitNull(b bool) {
	o.ProgressTaskBoardFormat = nil
	o.isExplicitNullProgressTaskBoardFormat = b
}
// GetBucketTaskBoardFormat returns the BucketTaskBoardFormat field if non-nil, zero value otherwise.
func (o *MicrosoftGraphPlannerTask) GetBucketTaskBoardFormat() AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat {
	if o == nil || o.BucketTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat
		return ret
	}
	return *o.BucketTaskBoardFormat
}

// GetBucketTaskBoardFormatOk returns a tuple with the BucketTaskBoardFormat field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphPlannerTask) GetBucketTaskBoardFormatOk() (AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat, bool) {
	if o == nil || o.BucketTaskBoardFormat == nil {
		var ret AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat
		return ret, false
	}
	return *o.BucketTaskBoardFormat, true
}

// HasBucketTaskBoardFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphPlannerTask) HasBucketTaskBoardFormat() bool {
	if o != nil && o.BucketTaskBoardFormat != nil {
		return true
	}

	return false
}

// SetBucketTaskBoardFormat gets a reference to the given AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat and assigns it to the BucketTaskBoardFormat field.
func (o *MicrosoftGraphPlannerTask) SetBucketTaskBoardFormat(v AnyOfmicrosoftGraphPlannerBucketTaskBoardTaskFormat) {
	o.BucketTaskBoardFormat = &v
}

// SetBucketTaskBoardFormatExplicitNull (un)sets BucketTaskBoardFormat to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BucketTaskBoardFormat value is set to nil even if false is passed
func (o *MicrosoftGraphPlannerTask) SetBucketTaskBoardFormatExplicitNull(b bool) {
	o.BucketTaskBoardFormat = nil
	o.isExplicitNullBucketTaskBoardFormat = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphPlannerTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedBy == nil {
		if o.isExplicitNullCreatedBy {
			toSerialize["createdBy"] = o.CreatedBy
		}
	} else {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.PlanId == nil {
		if o.isExplicitNullPlanId {
			toSerialize["planId"] = o.PlanId
		}
	} else {
		toSerialize["planId"] = o.PlanId
	}
	if o.BucketId == nil {
		if o.isExplicitNullBucketId {
			toSerialize["bucketId"] = o.BucketId
		}
	} else {
		toSerialize["bucketId"] = o.BucketId
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.OrderHint == nil {
		if o.isExplicitNullOrderHint {
			toSerialize["orderHint"] = o.OrderHint
		}
	} else {
		toSerialize["orderHint"] = o.OrderHint
	}
	if o.AssigneePriority == nil {
		if o.isExplicitNullAssigneePriority {
			toSerialize["assigneePriority"] = o.AssigneePriority
		}
	} else {
		toSerialize["assigneePriority"] = o.AssigneePriority
	}
	if o.PercentComplete == nil {
		if o.isExplicitNullPercentComplete {
			toSerialize["percentComplete"] = o.PercentComplete
		}
	} else {
		toSerialize["percentComplete"] = o.PercentComplete
	}
	if o.StartDateTime == nil {
		if o.isExplicitNullStartDateTime {
			toSerialize["startDateTime"] = o.StartDateTime
		}
	} else {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.DueDateTime == nil {
		if o.isExplicitNullDueDateTime {
			toSerialize["dueDateTime"] = o.DueDateTime
		}
	} else {
		toSerialize["dueDateTime"] = o.DueDateTime
	}
	if o.HasDescription == nil {
		if o.isExplicitNullHasDescription {
			toSerialize["hasDescription"] = o.HasDescription
		}
	} else {
		toSerialize["hasDescription"] = o.HasDescription
	}
	if o.PreviewType == nil {
		if o.isExplicitNullPreviewType {
			toSerialize["previewType"] = o.PreviewType
		}
	} else {
		toSerialize["previewType"] = o.PreviewType
	}
	if o.CompletedDateTime == nil {
		if o.isExplicitNullCompletedDateTime {
			toSerialize["completedDateTime"] = o.CompletedDateTime
		}
	} else {
		toSerialize["completedDateTime"] = o.CompletedDateTime
	}
	if o.CompletedBy == nil {
		if o.isExplicitNullCompletedBy {
			toSerialize["completedBy"] = o.CompletedBy
		}
	} else {
		toSerialize["completedBy"] = o.CompletedBy
	}
	if o.ReferenceCount == nil {
		if o.isExplicitNullReferenceCount {
			toSerialize["referenceCount"] = o.ReferenceCount
		}
	} else {
		toSerialize["referenceCount"] = o.ReferenceCount
	}
	if o.ChecklistItemCount == nil {
		if o.isExplicitNullChecklistItemCount {
			toSerialize["checklistItemCount"] = o.ChecklistItemCount
		}
	} else {
		toSerialize["checklistItemCount"] = o.ChecklistItemCount
	}
	if o.ActiveChecklistItemCount == nil {
		if o.isExplicitNullActiveChecklistItemCount {
			toSerialize["activeChecklistItemCount"] = o.ActiveChecklistItemCount
		}
	} else {
		toSerialize["activeChecklistItemCount"] = o.ActiveChecklistItemCount
	}
	if o.AppliedCategories == nil {
		if o.isExplicitNullAppliedCategories {
			toSerialize["appliedCategories"] = o.AppliedCategories
		}
	} else {
		toSerialize["appliedCategories"] = o.AppliedCategories
	}
	if o.Assignments == nil {
		if o.isExplicitNullAssignments {
			toSerialize["assignments"] = o.Assignments
		}
	} else {
		toSerialize["assignments"] = o.Assignments
	}
	if o.ConversationThreadId == nil {
		if o.isExplicitNullConversationThreadId {
			toSerialize["conversationThreadId"] = o.ConversationThreadId
		}
	} else {
		toSerialize["conversationThreadId"] = o.ConversationThreadId
	}
	if o.Details == nil {
		if o.isExplicitNullDetails {
			toSerialize["details"] = o.Details
		}
	} else {
		toSerialize["details"] = o.Details
	}
	if o.AssignedToTaskBoardFormat == nil {
		if o.isExplicitNullAssignedToTaskBoardFormat {
			toSerialize["assignedToTaskBoardFormat"] = o.AssignedToTaskBoardFormat
		}
	} else {
		toSerialize["assignedToTaskBoardFormat"] = o.AssignedToTaskBoardFormat
	}
	if o.ProgressTaskBoardFormat == nil {
		if o.isExplicitNullProgressTaskBoardFormat {
			toSerialize["progressTaskBoardFormat"] = o.ProgressTaskBoardFormat
		}
	} else {
		toSerialize["progressTaskBoardFormat"] = o.ProgressTaskBoardFormat
	}
	if o.BucketTaskBoardFormat == nil {
		if o.isExplicitNullBucketTaskBoardFormat {
			toSerialize["bucketTaskBoardFormat"] = o.BucketTaskBoardFormat
		}
	} else {
		toSerialize["bucketTaskBoardFormat"] = o.BucketTaskBoardFormat
	}
	return json.Marshal(toSerialize)
}


