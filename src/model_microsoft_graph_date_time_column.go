/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphDateTimeColumn struct for MicrosoftGraphDateTimeColumn
type MicrosoftGraphDateTimeColumn struct {
	DisplayAs *string `json:"displayAs,omitempty"`
	isExplicitNullDisplayAs bool `json:"-"`
	Format *string `json:"format,omitempty"`
	isExplicitNullFormat bool `json:"-"`
}

// GetDisplayAs returns the DisplayAs field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDateTimeColumn) GetDisplayAs() string {
	if o == nil || o.DisplayAs == nil {
		var ret string
		return ret
	}
	return *o.DisplayAs
}

// GetDisplayAsOk returns a tuple with the DisplayAs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDateTimeColumn) GetDisplayAsOk() (string, bool) {
	if o == nil || o.DisplayAs == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayAs, true
}

// HasDisplayAs returns a boolean if a field has been set.
func (o *MicrosoftGraphDateTimeColumn) HasDisplayAs() bool {
	if o != nil && o.DisplayAs != nil {
		return true
	}

	return false
}

// SetDisplayAs gets a reference to the given string and assigns it to the DisplayAs field.
func (o *MicrosoftGraphDateTimeColumn) SetDisplayAs(v string) {
	o.DisplayAs = &v
}

// SetDisplayAsExplicitNull (un)sets DisplayAs to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayAs value is set to nil even if false is passed
func (o *MicrosoftGraphDateTimeColumn) SetDisplayAsExplicitNull(b bool) {
	o.DisplayAs = nil
	o.isExplicitNullDisplayAs = b
}
// GetFormat returns the Format field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDateTimeColumn) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDateTimeColumn) GetFormatOk() (string, bool) {
	if o == nil || o.Format == nil {
		var ret string
		return ret, false
	}
	return *o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MicrosoftGraphDateTimeColumn) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *MicrosoftGraphDateTimeColumn) SetFormat(v string) {
	o.Format = &v
}

// SetFormatExplicitNull (un)sets Format to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Format value is set to nil even if false is passed
func (o *MicrosoftGraphDateTimeColumn) SetFormatExplicitNull(b bool) {
	o.Format = nil
	o.isExplicitNullFormat = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDateTimeColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayAs == nil {
		if o.isExplicitNullDisplayAs {
			toSerialize["displayAs"] = o.DisplayAs
		}
	} else {
		toSerialize["displayAs"] = o.DisplayAs
	}
	if o.Format == nil {
		if o.isExplicitNullFormat {
			toSerialize["format"] = o.Format
		}
	} else {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}


