/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphMdmWindowsInformationProtectionPolicy struct for MicrosoftGraphMdmWindowsInformationProtectionPolicy
type MicrosoftGraphMdmWindowsInformationProtectionPolicy struct {
	Id *string `json:"id,omitempty"`

	// Policy display name.
	DisplayName *string `json:"displayName,omitempty"`

	// The policy's description.
	Description *string `json:"description,omitempty"`
	isExplicitNullDescription bool `json:"-"`
	// The date and time the policy was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	// Last time the policy was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`

	// Version of the entity.
	Version *string `json:"version,omitempty"`
	isExplicitNullVersion bool `json:"-"`
	// WIP enforcement level.See the Enum definition for supported values
	EnforcementLevel *AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel `json:"enforcementLevel,omitempty"`

	// Primary enterprise domain
	EnterpriseDomain *string `json:"enterpriseDomain,omitempty"`
	isExplicitNullEnterpriseDomain bool `json:"-"`
	// List of enterprise domains to be protected
	EnterpriseProtectedDomainNames *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseProtectedDomainNames,omitempty"`

	// Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
	ProtectionUnderLockConfigRequired *bool `json:"protectionUnderLockConfigRequired,omitempty"`

	// Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)
	DataRecoveryCertificate *AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate `json:"dataRecoveryCertificate,omitempty"`
	isExplicitNullDataRecoveryCertificate bool `json:"-"`
	// This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
	RevokeOnUnenrollDisabled *bool `json:"revokeOnUnenrollDisabled,omitempty"`

	// TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
	RightsManagementServicesTemplateId *string `json:"rightsManagementServicesTemplateId,omitempty"`
	isExplicitNullRightsManagementServicesTemplateId bool `json:"-"`
	// Specifies whether to allow Azure RMS encryption for WIP
	AzureRightsManagementServicesAllowed *bool `json:"azureRightsManagementServicesAllowed,omitempty"`

	// Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
	IconsVisible *bool `json:"iconsVisible,omitempty"`

	// Protected applications can access enterprise data and the data handled by those applications are protected with encryption
	ProtectedApps *[]AnyOfmicrosoftGraphWindowsInformationProtectionApp `json:"protectedApps,omitempty"`

	// Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
	ExemptApps *[]AnyOfmicrosoftGraphWindowsInformationProtectionApp `json:"exemptApps,omitempty"`

	// This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseNetworkDomainNames *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseNetworkDomainNames,omitempty"`

	// Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
	EnterpriseProxiedDomains *[]AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection `json:"enterpriseProxiedDomains,omitempty"`

	// Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseIPRanges *[]AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection `json:"enterpriseIPRanges,omitempty"`

	// Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
	EnterpriseIPRangesAreAuthoritative *bool `json:"enterpriseIPRangesAreAuthoritative,omitempty"`

	// This is a list of proxy servers. Any server not on this list is considered non-enterprise
	EnterpriseProxyServers *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseProxyServers,omitempty"`

	// This is the comma-separated list of internal proxy servers. For example, \"157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59\". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
	EnterpriseInternalProxyServers *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"enterpriseInternalProxyServers,omitempty"`

	// Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
	EnterpriseProxyServersAreAuthoritative *bool `json:"enterpriseProxyServersAreAuthoritative,omitempty"`

	// List of domain names that can used for work or personal resource
	NeutralDomainResources *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"neutralDomainResources,omitempty"`

	// This switch is for the Windows Search Indexer, to allow or disallow indexing of items
	IndexingEncryptedStoresOrItemsBlocked *bool `json:"indexingEncryptedStoresOrItemsBlocked,omitempty"`

	// Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
	SmbAutoEncryptedFileExtensions *[]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection `json:"smbAutoEncryptedFileExtensions,omitempty"`

	// Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`

	ProtectedAppLockerFiles *[]MicrosoftGraphWindowsInformationProtectionAppLockerFile `json:"protectedAppLockerFiles,omitempty"`

	ExemptAppLockerFiles *[]MicrosoftGraphWindowsInformationProtectionAppLockerFile `json:"exemptAppLockerFiles,omitempty"`

	Assignments *[]MicrosoftGraphTargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDescription(v string) {
	o.Description = &v
}

// SetDescriptionExplicitNull (un)sets Description to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Description value is set to nil even if false is passed
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDescriptionExplicitNull(b bool) {
	o.Description = nil
	o.isExplicitNullDescription = b
}
// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetVersion(v string) {
	o.Version = &v
}

// SetVersionExplicitNull (un)sets Version to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Version value is set to nil even if false is passed
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetVersionExplicitNull(b bool) {
	o.Version = nil
	o.isExplicitNullVersion = b
}
// GetEnforcementLevel returns the EnforcementLevel field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnforcementLevel() AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel {
	if o == nil || o.EnforcementLevel == nil {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel
		return ret
	}
	return *o.EnforcementLevel
}

// GetEnforcementLevelOk returns a tuple with the EnforcementLevel field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnforcementLevelOk() (AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel, bool) {
	if o == nil || o.EnforcementLevel == nil {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel
		return ret, false
	}
	return *o.EnforcementLevel, true
}

// HasEnforcementLevel returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnforcementLevel() bool {
	if o != nil && o.EnforcementLevel != nil {
		return true
	}

	return false
}

// SetEnforcementLevel gets a reference to the given AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel and assigns it to the EnforcementLevel field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnforcementLevel(v AnyOfmicrosoftGraphWindowsInformationProtectionEnforcementLevel) {
	o.EnforcementLevel = &v
}

// GetEnterpriseDomain returns the EnterpriseDomain field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseDomain() string {
	if o == nil || o.EnterpriseDomain == nil {
		var ret string
		return ret
	}
	return *o.EnterpriseDomain
}

// GetEnterpriseDomainOk returns a tuple with the EnterpriseDomain field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseDomainOk() (string, bool) {
	if o == nil || o.EnterpriseDomain == nil {
		var ret string
		return ret, false
	}
	return *o.EnterpriseDomain, true
}

// HasEnterpriseDomain returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseDomain() bool {
	if o != nil && o.EnterpriseDomain != nil {
		return true
	}

	return false
}

// SetEnterpriseDomain gets a reference to the given string and assigns it to the EnterpriseDomain field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseDomain(v string) {
	o.EnterpriseDomain = &v
}

// SetEnterpriseDomainExplicitNull (un)sets EnterpriseDomain to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EnterpriseDomain value is set to nil even if false is passed
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseDomainExplicitNull(b bool) {
	o.EnterpriseDomain = nil
	o.isExplicitNullEnterpriseDomain = b
}
// GetEnterpriseProtectedDomainNames returns the EnterpriseProtectedDomainNames field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProtectedDomainNames() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseProtectedDomainNames == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseProtectedDomainNames
}

// GetEnterpriseProtectedDomainNamesOk returns a tuple with the EnterpriseProtectedDomainNames field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProtectedDomainNamesOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseProtectedDomainNames == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.EnterpriseProtectedDomainNames, true
}

// HasEnterpriseProtectedDomainNames returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProtectedDomainNames() bool {
	if o != nil && o.EnterpriseProtectedDomainNames != nil {
		return true
	}

	return false
}

// SetEnterpriseProtectedDomainNames gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseProtectedDomainNames field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProtectedDomainNames(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseProtectedDomainNames = &v
}

// GetProtectionUnderLockConfigRequired returns the ProtectionUnderLockConfigRequired field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectionUnderLockConfigRequired() bool {
	if o == nil || o.ProtectionUnderLockConfigRequired == nil {
		var ret bool
		return ret
	}
	return *o.ProtectionUnderLockConfigRequired
}

// GetProtectionUnderLockConfigRequiredOk returns a tuple with the ProtectionUnderLockConfigRequired field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectionUnderLockConfigRequiredOk() (bool, bool) {
	if o == nil || o.ProtectionUnderLockConfigRequired == nil {
		var ret bool
		return ret, false
	}
	return *o.ProtectionUnderLockConfigRequired, true
}

// HasProtectionUnderLockConfigRequired returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectionUnderLockConfigRequired() bool {
	if o != nil && o.ProtectionUnderLockConfigRequired != nil {
		return true
	}

	return false
}

// SetProtectionUnderLockConfigRequired gets a reference to the given bool and assigns it to the ProtectionUnderLockConfigRequired field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectionUnderLockConfigRequired(v bool) {
	o.ProtectionUnderLockConfigRequired = &v
}

// GetDataRecoveryCertificate returns the DataRecoveryCertificate field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDataRecoveryCertificate() AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate {
	if o == nil || o.DataRecoveryCertificate == nil {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate
		return ret
	}
	return *o.DataRecoveryCertificate
}

// GetDataRecoveryCertificateOk returns a tuple with the DataRecoveryCertificate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetDataRecoveryCertificateOk() (AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate, bool) {
	if o == nil || o.DataRecoveryCertificate == nil {
		var ret AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate
		return ret, false
	}
	return *o.DataRecoveryCertificate, true
}

// HasDataRecoveryCertificate returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasDataRecoveryCertificate() bool {
	if o != nil && o.DataRecoveryCertificate != nil {
		return true
	}

	return false
}

// SetDataRecoveryCertificate gets a reference to the given AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate and assigns it to the DataRecoveryCertificate field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDataRecoveryCertificate(v AnyOfmicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate) {
	o.DataRecoveryCertificate = &v
}

// SetDataRecoveryCertificateExplicitNull (un)sets DataRecoveryCertificate to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DataRecoveryCertificate value is set to nil even if false is passed
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetDataRecoveryCertificateExplicitNull(b bool) {
	o.DataRecoveryCertificate = nil
	o.isExplicitNullDataRecoveryCertificate = b
}
// GetRevokeOnUnenrollDisabled returns the RevokeOnUnenrollDisabled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRevokeOnUnenrollDisabled() bool {
	if o == nil || o.RevokeOnUnenrollDisabled == nil {
		var ret bool
		return ret
	}
	return *o.RevokeOnUnenrollDisabled
}

// GetRevokeOnUnenrollDisabledOk returns a tuple with the RevokeOnUnenrollDisabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRevokeOnUnenrollDisabledOk() (bool, bool) {
	if o == nil || o.RevokeOnUnenrollDisabled == nil {
		var ret bool
		return ret, false
	}
	return *o.RevokeOnUnenrollDisabled, true
}

// HasRevokeOnUnenrollDisabled returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasRevokeOnUnenrollDisabled() bool {
	if o != nil && o.RevokeOnUnenrollDisabled != nil {
		return true
	}

	return false
}

// SetRevokeOnUnenrollDisabled gets a reference to the given bool and assigns it to the RevokeOnUnenrollDisabled field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRevokeOnUnenrollDisabled(v bool) {
	o.RevokeOnUnenrollDisabled = &v
}

// GetRightsManagementServicesTemplateId returns the RightsManagementServicesTemplateId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRightsManagementServicesTemplateId() string {
	if o == nil || o.RightsManagementServicesTemplateId == nil {
		var ret string
		return ret
	}
	return *o.RightsManagementServicesTemplateId
}

// GetRightsManagementServicesTemplateIdOk returns a tuple with the RightsManagementServicesTemplateId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetRightsManagementServicesTemplateIdOk() (string, bool) {
	if o == nil || o.RightsManagementServicesTemplateId == nil {
		var ret string
		return ret, false
	}
	return *o.RightsManagementServicesTemplateId, true
}

// HasRightsManagementServicesTemplateId returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasRightsManagementServicesTemplateId() bool {
	if o != nil && o.RightsManagementServicesTemplateId != nil {
		return true
	}

	return false
}

// SetRightsManagementServicesTemplateId gets a reference to the given string and assigns it to the RightsManagementServicesTemplateId field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRightsManagementServicesTemplateId(v string) {
	o.RightsManagementServicesTemplateId = &v
}

// SetRightsManagementServicesTemplateIdExplicitNull (un)sets RightsManagementServicesTemplateId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RightsManagementServicesTemplateId value is set to nil even if false is passed
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetRightsManagementServicesTemplateIdExplicitNull(b bool) {
	o.RightsManagementServicesTemplateId = nil
	o.isExplicitNullRightsManagementServicesTemplateId = b
}
// GetAzureRightsManagementServicesAllowed returns the AzureRightsManagementServicesAllowed field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAzureRightsManagementServicesAllowed() bool {
	if o == nil || o.AzureRightsManagementServicesAllowed == nil {
		var ret bool
		return ret
	}
	return *o.AzureRightsManagementServicesAllowed
}

// GetAzureRightsManagementServicesAllowedOk returns a tuple with the AzureRightsManagementServicesAllowed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAzureRightsManagementServicesAllowedOk() (bool, bool) {
	if o == nil || o.AzureRightsManagementServicesAllowed == nil {
		var ret bool
		return ret, false
	}
	return *o.AzureRightsManagementServicesAllowed, true
}

// HasAzureRightsManagementServicesAllowed returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasAzureRightsManagementServicesAllowed() bool {
	if o != nil && o.AzureRightsManagementServicesAllowed != nil {
		return true
	}

	return false
}

// SetAzureRightsManagementServicesAllowed gets a reference to the given bool and assigns it to the AzureRightsManagementServicesAllowed field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetAzureRightsManagementServicesAllowed(v bool) {
	o.AzureRightsManagementServicesAllowed = &v
}

// GetIconsVisible returns the IconsVisible field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIconsVisible() bool {
	if o == nil || o.IconsVisible == nil {
		var ret bool
		return ret
	}
	return *o.IconsVisible
}

// GetIconsVisibleOk returns a tuple with the IconsVisible field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIconsVisibleOk() (bool, bool) {
	if o == nil || o.IconsVisible == nil {
		var ret bool
		return ret, false
	}
	return *o.IconsVisible, true
}

// HasIconsVisible returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIconsVisible() bool {
	if o != nil && o.IconsVisible != nil {
		return true
	}

	return false
}

// SetIconsVisible gets a reference to the given bool and assigns it to the IconsVisible field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIconsVisible(v bool) {
	o.IconsVisible = &v
}

// GetProtectedApps returns the ProtectedApps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedApps() []AnyOfmicrosoftGraphWindowsInformationProtectionApp {
	if o == nil || o.ProtectedApps == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret
	}
	return *o.ProtectedApps
}

// GetProtectedAppsOk returns a tuple with the ProtectedApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppsOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionApp, bool) {
	if o == nil || o.ProtectedApps == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret, false
	}
	return *o.ProtectedApps, true
}

// HasProtectedApps returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectedApps() bool {
	if o != nil && o.ProtectedApps != nil {
		return true
	}

	return false
}

// SetProtectedApps gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionApp and assigns it to the ProtectedApps field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectedApps(v []AnyOfmicrosoftGraphWindowsInformationProtectionApp) {
	o.ProtectedApps = &v
}

// GetExemptApps returns the ExemptApps field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptApps() []AnyOfmicrosoftGraphWindowsInformationProtectionApp {
	if o == nil || o.ExemptApps == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret
	}
	return *o.ExemptApps
}

// GetExemptAppsOk returns a tuple with the ExemptApps field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppsOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionApp, bool) {
	if o == nil || o.ExemptApps == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionApp
		return ret, false
	}
	return *o.ExemptApps, true
}

// HasExemptApps returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasExemptApps() bool {
	if o != nil && o.ExemptApps != nil {
		return true
	}

	return false
}

// SetExemptApps gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionApp and assigns it to the ExemptApps field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetExemptApps(v []AnyOfmicrosoftGraphWindowsInformationProtectionApp) {
	o.ExemptApps = &v
}

// GetEnterpriseNetworkDomainNames returns the EnterpriseNetworkDomainNames field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseNetworkDomainNames() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseNetworkDomainNames == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseNetworkDomainNames
}

// GetEnterpriseNetworkDomainNamesOk returns a tuple with the EnterpriseNetworkDomainNames field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseNetworkDomainNamesOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseNetworkDomainNames == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.EnterpriseNetworkDomainNames, true
}

// HasEnterpriseNetworkDomainNames returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseNetworkDomainNames() bool {
	if o != nil && o.EnterpriseNetworkDomainNames != nil {
		return true
	}

	return false
}

// SetEnterpriseNetworkDomainNames gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseNetworkDomainNames field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseNetworkDomainNames(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseNetworkDomainNames = &v
}

// GetEnterpriseProxiedDomains returns the EnterpriseProxiedDomains field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxiedDomains() []AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection {
	if o == nil || o.EnterpriseProxiedDomains == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection
		return ret
	}
	return *o.EnterpriseProxiedDomains
}

// GetEnterpriseProxiedDomainsOk returns a tuple with the EnterpriseProxiedDomains field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxiedDomainsOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection, bool) {
	if o == nil || o.EnterpriseProxiedDomains == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection
		return ret, false
	}
	return *o.EnterpriseProxiedDomains, true
}

// HasEnterpriseProxiedDomains returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxiedDomains() bool {
	if o != nil && o.EnterpriseProxiedDomains != nil {
		return true
	}

	return false
}

// SetEnterpriseProxiedDomains gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection and assigns it to the EnterpriseProxiedDomains field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxiedDomains(v []AnyOfmicrosoftGraphWindowsInformationProtectionProxiedDomainCollection) {
	o.EnterpriseProxiedDomains = &v
}

// GetEnterpriseIPRanges returns the EnterpriseIPRanges field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRanges() []AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection {
	if o == nil || o.EnterpriseIPRanges == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection
		return ret
	}
	return *o.EnterpriseIPRanges
}

// GetEnterpriseIPRangesOk returns a tuple with the EnterpriseIPRanges field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection, bool) {
	if o == nil || o.EnterpriseIPRanges == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection
		return ret, false
	}
	return *o.EnterpriseIPRanges, true
}

// HasEnterpriseIPRanges returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseIPRanges() bool {
	if o != nil && o.EnterpriseIPRanges != nil {
		return true
	}

	return false
}

// SetEnterpriseIPRanges gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection and assigns it to the EnterpriseIPRanges field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseIPRanges(v []AnyOfmicrosoftGraphWindowsInformationProtectionIpRangeCollection) {
	o.EnterpriseIPRanges = &v
}

// GetEnterpriseIPRangesAreAuthoritative returns the EnterpriseIPRangesAreAuthoritative field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesAreAuthoritative() bool {
	if o == nil || o.EnterpriseIPRangesAreAuthoritative == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseIPRangesAreAuthoritative
}

// GetEnterpriseIPRangesAreAuthoritativeOk returns a tuple with the EnterpriseIPRangesAreAuthoritative field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseIPRangesAreAuthoritativeOk() (bool, bool) {
	if o == nil || o.EnterpriseIPRangesAreAuthoritative == nil {
		var ret bool
		return ret, false
	}
	return *o.EnterpriseIPRangesAreAuthoritative, true
}

// HasEnterpriseIPRangesAreAuthoritative returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseIPRangesAreAuthoritative() bool {
	if o != nil && o.EnterpriseIPRangesAreAuthoritative != nil {
		return true
	}

	return false
}

// SetEnterpriseIPRangesAreAuthoritative gets a reference to the given bool and assigns it to the EnterpriseIPRangesAreAuthoritative field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseIPRangesAreAuthoritative(v bool) {
	o.EnterpriseIPRangesAreAuthoritative = &v
}

// GetEnterpriseProxyServers returns the EnterpriseProxyServers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServers() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseProxyServers == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseProxyServers
}

// GetEnterpriseProxyServersOk returns a tuple with the EnterpriseProxyServers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseProxyServers == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.EnterpriseProxyServers, true
}

// HasEnterpriseProxyServers returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxyServers() bool {
	if o != nil && o.EnterpriseProxyServers != nil {
		return true
	}

	return false
}

// SetEnterpriseProxyServers gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseProxyServers field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxyServers(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseProxyServers = &v
}

// GetEnterpriseInternalProxyServers returns the EnterpriseInternalProxyServers field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseInternalProxyServers() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.EnterpriseInternalProxyServers == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.EnterpriseInternalProxyServers
}

// GetEnterpriseInternalProxyServersOk returns a tuple with the EnterpriseInternalProxyServers field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseInternalProxyServersOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.EnterpriseInternalProxyServers == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.EnterpriseInternalProxyServers, true
}

// HasEnterpriseInternalProxyServers returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseInternalProxyServers() bool {
	if o != nil && o.EnterpriseInternalProxyServers != nil {
		return true
	}

	return false
}

// SetEnterpriseInternalProxyServers gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the EnterpriseInternalProxyServers field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseInternalProxyServers(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.EnterpriseInternalProxyServers = &v
}

// GetEnterpriseProxyServersAreAuthoritative returns the EnterpriseProxyServersAreAuthoritative field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersAreAuthoritative() bool {
	if o == nil || o.EnterpriseProxyServersAreAuthoritative == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseProxyServersAreAuthoritative
}

// GetEnterpriseProxyServersAreAuthoritativeOk returns a tuple with the EnterpriseProxyServersAreAuthoritative field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetEnterpriseProxyServersAreAuthoritativeOk() (bool, bool) {
	if o == nil || o.EnterpriseProxyServersAreAuthoritative == nil {
		var ret bool
		return ret, false
	}
	return *o.EnterpriseProxyServersAreAuthoritative, true
}

// HasEnterpriseProxyServersAreAuthoritative returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasEnterpriseProxyServersAreAuthoritative() bool {
	if o != nil && o.EnterpriseProxyServersAreAuthoritative != nil {
		return true
	}

	return false
}

// SetEnterpriseProxyServersAreAuthoritative gets a reference to the given bool and assigns it to the EnterpriseProxyServersAreAuthoritative field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetEnterpriseProxyServersAreAuthoritative(v bool) {
	o.EnterpriseProxyServersAreAuthoritative = &v
}

// GetNeutralDomainResources returns the NeutralDomainResources field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetNeutralDomainResources() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.NeutralDomainResources == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.NeutralDomainResources
}

// GetNeutralDomainResourcesOk returns a tuple with the NeutralDomainResources field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetNeutralDomainResourcesOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.NeutralDomainResources == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.NeutralDomainResources, true
}

// HasNeutralDomainResources returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasNeutralDomainResources() bool {
	if o != nil && o.NeutralDomainResources != nil {
		return true
	}

	return false
}

// SetNeutralDomainResources gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the NeutralDomainResources field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetNeutralDomainResources(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.NeutralDomainResources = &v
}

// GetIndexingEncryptedStoresOrItemsBlocked returns the IndexingEncryptedStoresOrItemsBlocked field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIndexingEncryptedStoresOrItemsBlocked() bool {
	if o == nil || o.IndexingEncryptedStoresOrItemsBlocked == nil {
		var ret bool
		return ret
	}
	return *o.IndexingEncryptedStoresOrItemsBlocked
}

// GetIndexingEncryptedStoresOrItemsBlockedOk returns a tuple with the IndexingEncryptedStoresOrItemsBlocked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIndexingEncryptedStoresOrItemsBlockedOk() (bool, bool) {
	if o == nil || o.IndexingEncryptedStoresOrItemsBlocked == nil {
		var ret bool
		return ret, false
	}
	return *o.IndexingEncryptedStoresOrItemsBlocked, true
}

// HasIndexingEncryptedStoresOrItemsBlocked returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIndexingEncryptedStoresOrItemsBlocked() bool {
	if o != nil && o.IndexingEncryptedStoresOrItemsBlocked != nil {
		return true
	}

	return false
}

// SetIndexingEncryptedStoresOrItemsBlocked gets a reference to the given bool and assigns it to the IndexingEncryptedStoresOrItemsBlocked field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIndexingEncryptedStoresOrItemsBlocked(v bool) {
	o.IndexingEncryptedStoresOrItemsBlocked = &v
}

// GetSmbAutoEncryptedFileExtensions returns the SmbAutoEncryptedFileExtensions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetSmbAutoEncryptedFileExtensions() []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection {
	if o == nil || o.SmbAutoEncryptedFileExtensions == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret
	}
	return *o.SmbAutoEncryptedFileExtensions
}

// GetSmbAutoEncryptedFileExtensionsOk returns a tuple with the SmbAutoEncryptedFileExtensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetSmbAutoEncryptedFileExtensionsOk() ([]AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection, bool) {
	if o == nil || o.SmbAutoEncryptedFileExtensions == nil {
		var ret []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection
		return ret, false
	}
	return *o.SmbAutoEncryptedFileExtensions, true
}

// HasSmbAutoEncryptedFileExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasSmbAutoEncryptedFileExtensions() bool {
	if o != nil && o.SmbAutoEncryptedFileExtensions != nil {
		return true
	}

	return false
}

// SetSmbAutoEncryptedFileExtensions gets a reference to the given []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection and assigns it to the SmbAutoEncryptedFileExtensions field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetSmbAutoEncryptedFileExtensions(v []AnyOfmicrosoftGraphWindowsInformationProtectionResourceCollection) {
	o.SmbAutoEncryptedFileExtensions = &v
}

// GetIsAssigned returns the IsAssigned field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIsAssigned() bool {
	if o == nil || o.IsAssigned == nil {
		var ret bool
		return ret
	}
	return *o.IsAssigned
}

// GetIsAssignedOk returns a tuple with the IsAssigned field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetIsAssignedOk() (bool, bool) {
	if o == nil || o.IsAssigned == nil {
		var ret bool
		return ret, false
	}
	return *o.IsAssigned, true
}

// HasIsAssigned returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasIsAssigned() bool {
	if o != nil && o.IsAssigned != nil {
		return true
	}

	return false
}

// SetIsAssigned gets a reference to the given bool and assigns it to the IsAssigned field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetIsAssigned(v bool) {
	o.IsAssigned = &v
}

// GetProtectedAppLockerFiles returns the ProtectedAppLockerFiles field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppLockerFiles() []MicrosoftGraphWindowsInformationProtectionAppLockerFile {
	if o == nil || o.ProtectedAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret
	}
	return *o.ProtectedAppLockerFiles
}

// GetProtectedAppLockerFilesOk returns a tuple with the ProtectedAppLockerFiles field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetProtectedAppLockerFilesOk() ([]MicrosoftGraphWindowsInformationProtectionAppLockerFile, bool) {
	if o == nil || o.ProtectedAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret, false
	}
	return *o.ProtectedAppLockerFiles, true
}

// HasProtectedAppLockerFiles returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasProtectedAppLockerFiles() bool {
	if o != nil && o.ProtectedAppLockerFiles != nil {
		return true
	}

	return false
}

// SetProtectedAppLockerFiles gets a reference to the given []MicrosoftGraphWindowsInformationProtectionAppLockerFile and assigns it to the ProtectedAppLockerFiles field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetProtectedAppLockerFiles(v []MicrosoftGraphWindowsInformationProtectionAppLockerFile) {
	o.ProtectedAppLockerFiles = &v
}

// GetExemptAppLockerFiles returns the ExemptAppLockerFiles field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppLockerFiles() []MicrosoftGraphWindowsInformationProtectionAppLockerFile {
	if o == nil || o.ExemptAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret
	}
	return *o.ExemptAppLockerFiles
}

// GetExemptAppLockerFilesOk returns a tuple with the ExemptAppLockerFiles field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetExemptAppLockerFilesOk() ([]MicrosoftGraphWindowsInformationProtectionAppLockerFile, bool) {
	if o == nil || o.ExemptAppLockerFiles == nil {
		var ret []MicrosoftGraphWindowsInformationProtectionAppLockerFile
		return ret, false
	}
	return *o.ExemptAppLockerFiles, true
}

// HasExemptAppLockerFiles returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasExemptAppLockerFiles() bool {
	if o != nil && o.ExemptAppLockerFiles != nil {
		return true
	}

	return false
}

// SetExemptAppLockerFiles gets a reference to the given []MicrosoftGraphWindowsInformationProtectionAppLockerFile and assigns it to the ExemptAppLockerFiles field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetExemptAppLockerFiles(v []MicrosoftGraphWindowsInformationProtectionAppLockerFile) {
	o.ExemptAppLockerFiles = &v
}

// GetAssignments returns the Assignments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAssignments() []MicrosoftGraphTargetedManagedAppPolicyAssignment {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphTargetedManagedAppPolicyAssignment
		return ret
	}
	return *o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) GetAssignmentsOk() ([]MicrosoftGraphTargetedManagedAppPolicyAssignment, bool) {
	if o == nil || o.Assignments == nil {
		var ret []MicrosoftGraphTargetedManagedAppPolicyAssignment
		return ret, false
	}
	return *o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []MicrosoftGraphTargetedManagedAppPolicyAssignment and assigns it to the Assignments field.
func (o *MicrosoftGraphMdmWindowsInformationProtectionPolicy) SetAssignments(v []MicrosoftGraphTargetedManagedAppPolicyAssignment) {
	o.Assignments = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphMdmWindowsInformationProtectionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Description == nil {
		if o.isExplicitNullDescription {
			toSerialize["description"] = o.Description
		}
	} else {
		toSerialize["description"] = o.Description
	}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.LastModifiedDateTime != nil {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.Version == nil {
		if o.isExplicitNullVersion {
			toSerialize["version"] = o.Version
		}
	} else {
		toSerialize["version"] = o.Version
	}
	if o.EnforcementLevel != nil {
		toSerialize["enforcementLevel"] = o.EnforcementLevel
	}
	if o.EnterpriseDomain == nil {
		if o.isExplicitNullEnterpriseDomain {
			toSerialize["enterpriseDomain"] = o.EnterpriseDomain
		}
	} else {
		toSerialize["enterpriseDomain"] = o.EnterpriseDomain
	}
	if o.EnterpriseProtectedDomainNames != nil {
		toSerialize["enterpriseProtectedDomainNames"] = o.EnterpriseProtectedDomainNames
	}
	if o.ProtectionUnderLockConfigRequired != nil {
		toSerialize["protectionUnderLockConfigRequired"] = o.ProtectionUnderLockConfigRequired
	}
	if o.DataRecoveryCertificate == nil {
		if o.isExplicitNullDataRecoveryCertificate {
			toSerialize["dataRecoveryCertificate"] = o.DataRecoveryCertificate
		}
	} else {
		toSerialize["dataRecoveryCertificate"] = o.DataRecoveryCertificate
	}
	if o.RevokeOnUnenrollDisabled != nil {
		toSerialize["revokeOnUnenrollDisabled"] = o.RevokeOnUnenrollDisabled
	}
	if o.RightsManagementServicesTemplateId == nil {
		if o.isExplicitNullRightsManagementServicesTemplateId {
			toSerialize["rightsManagementServicesTemplateId"] = o.RightsManagementServicesTemplateId
		}
	} else {
		toSerialize["rightsManagementServicesTemplateId"] = o.RightsManagementServicesTemplateId
	}
	if o.AzureRightsManagementServicesAllowed != nil {
		toSerialize["azureRightsManagementServicesAllowed"] = o.AzureRightsManagementServicesAllowed
	}
	if o.IconsVisible != nil {
		toSerialize["iconsVisible"] = o.IconsVisible
	}
	if o.ProtectedApps != nil {
		toSerialize["protectedApps"] = o.ProtectedApps
	}
	if o.ExemptApps != nil {
		toSerialize["exemptApps"] = o.ExemptApps
	}
	if o.EnterpriseNetworkDomainNames != nil {
		toSerialize["enterpriseNetworkDomainNames"] = o.EnterpriseNetworkDomainNames
	}
	if o.EnterpriseProxiedDomains != nil {
		toSerialize["enterpriseProxiedDomains"] = o.EnterpriseProxiedDomains
	}
	if o.EnterpriseIPRanges != nil {
		toSerialize["enterpriseIPRanges"] = o.EnterpriseIPRanges
	}
	if o.EnterpriseIPRangesAreAuthoritative != nil {
		toSerialize["enterpriseIPRangesAreAuthoritative"] = o.EnterpriseIPRangesAreAuthoritative
	}
	if o.EnterpriseProxyServers != nil {
		toSerialize["enterpriseProxyServers"] = o.EnterpriseProxyServers
	}
	if o.EnterpriseInternalProxyServers != nil {
		toSerialize["enterpriseInternalProxyServers"] = o.EnterpriseInternalProxyServers
	}
	if o.EnterpriseProxyServersAreAuthoritative != nil {
		toSerialize["enterpriseProxyServersAreAuthoritative"] = o.EnterpriseProxyServersAreAuthoritative
	}
	if o.NeutralDomainResources != nil {
		toSerialize["neutralDomainResources"] = o.NeutralDomainResources
	}
	if o.IndexingEncryptedStoresOrItemsBlocked != nil {
		toSerialize["indexingEncryptedStoresOrItemsBlocked"] = o.IndexingEncryptedStoresOrItemsBlocked
	}
	if o.SmbAutoEncryptedFileExtensions != nil {
		toSerialize["smbAutoEncryptedFileExtensions"] = o.SmbAutoEncryptedFileExtensions
	}
	if o.IsAssigned != nil {
		toSerialize["isAssigned"] = o.IsAssigned
	}
	if o.ProtectedAppLockerFiles != nil {
		toSerialize["protectedAppLockerFiles"] = o.ProtectedAppLockerFiles
	}
	if o.ExemptAppLockerFiles != nil {
		toSerialize["exemptAppLockerFiles"] = o.ExemptAppLockerFiles
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	return json.Marshal(toSerialize)
}


