/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphMalwareState struct for MicrosoftGraphMalwareState
type MicrosoftGraphMalwareState struct {
	Category *string `json:"category,omitempty"`
	isExplicitNullCategory bool `json:"-"`
	Family *string `json:"family,omitempty"`
	isExplicitNullFamily bool `json:"-"`
	Name *string `json:"name,omitempty"`
	isExplicitNullName bool `json:"-"`
	Severity *string `json:"severity,omitempty"`
	isExplicitNullSeverity bool `json:"-"`
	WasRunning *bool `json:"wasRunning,omitempty"`
	isExplicitNullWasRunning bool `json:"-"`
}

// GetCategory returns the Category field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMalwareState) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMalwareState) GetCategoryOk() (string, bool) {
	if o == nil || o.Category == nil {
		var ret string
		return ret, false
	}
	return *o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *MicrosoftGraphMalwareState) SetCategory(v string) {
	o.Category = &v
}

// SetCategoryExplicitNull (un)sets Category to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Category value is set to nil even if false is passed
func (o *MicrosoftGraphMalwareState) SetCategoryExplicitNull(b bool) {
	o.Category = nil
	o.isExplicitNullCategory = b
}
// GetFamily returns the Family field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMalwareState) GetFamily() string {
	if o == nil || o.Family == nil {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMalwareState) GetFamilyOk() (string, bool) {
	if o == nil || o.Family == nil {
		var ret string
		return ret, false
	}
	return *o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasFamily() bool {
	if o != nil && o.Family != nil {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *MicrosoftGraphMalwareState) SetFamily(v string) {
	o.Family = &v
}

// SetFamilyExplicitNull (un)sets Family to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Family value is set to nil even if false is passed
func (o *MicrosoftGraphMalwareState) SetFamilyExplicitNull(b bool) {
	o.Family = nil
	o.isExplicitNullFamily = b
}
// GetName returns the Name field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMalwareState) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMalwareState) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphMalwareState) SetName(v string) {
	o.Name = &v
}

// SetNameExplicitNull (un)sets Name to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Name value is set to nil even if false is passed
func (o *MicrosoftGraphMalwareState) SetNameExplicitNull(b bool) {
	o.Name = nil
	o.isExplicitNullName = b
}
// GetSeverity returns the Severity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMalwareState) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMalwareState) GetSeverityOk() (string, bool) {
	if o == nil || o.Severity == nil {
		var ret string
		return ret, false
	}
	return *o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *MicrosoftGraphMalwareState) SetSeverity(v string) {
	o.Severity = &v
}

// SetSeverityExplicitNull (un)sets Severity to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Severity value is set to nil even if false is passed
func (o *MicrosoftGraphMalwareState) SetSeverityExplicitNull(b bool) {
	o.Severity = nil
	o.isExplicitNullSeverity = b
}
// GetWasRunning returns the WasRunning field if non-nil, zero value otherwise.
func (o *MicrosoftGraphMalwareState) GetWasRunning() bool {
	if o == nil || o.WasRunning == nil {
		var ret bool
		return ret
	}
	return *o.WasRunning
}

// GetWasRunningOk returns a tuple with the WasRunning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphMalwareState) GetWasRunningOk() (bool, bool) {
	if o == nil || o.WasRunning == nil {
		var ret bool
		return ret, false
	}
	return *o.WasRunning, true
}

// HasWasRunning returns a boolean if a field has been set.
func (o *MicrosoftGraphMalwareState) HasWasRunning() bool {
	if o != nil && o.WasRunning != nil {
		return true
	}

	return false
}

// SetWasRunning gets a reference to the given bool and assigns it to the WasRunning field.
func (o *MicrosoftGraphMalwareState) SetWasRunning(v bool) {
	o.WasRunning = &v
}

// SetWasRunningExplicitNull (un)sets WasRunning to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WasRunning value is set to nil even if false is passed
func (o *MicrosoftGraphMalwareState) SetWasRunningExplicitNull(b bool) {
	o.WasRunning = nil
	o.isExplicitNullWasRunning = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphMalwareState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category == nil {
		if o.isExplicitNullCategory {
			toSerialize["category"] = o.Category
		}
	} else {
		toSerialize["category"] = o.Category
	}
	if o.Family == nil {
		if o.isExplicitNullFamily {
			toSerialize["family"] = o.Family
		}
	} else {
		toSerialize["family"] = o.Family
	}
	if o.Name == nil {
		if o.isExplicitNullName {
			toSerialize["name"] = o.Name
		}
	} else {
		toSerialize["name"] = o.Name
	}
	if o.Severity == nil {
		if o.isExplicitNullSeverity {
			toSerialize["severity"] = o.Severity
		}
	} else {
		toSerialize["severity"] = o.Severity
	}
	if o.WasRunning == nil {
		if o.isExplicitNullWasRunning {
			toSerialize["wasRunning"] = o.WasRunning
		}
	} else {
		toSerialize["wasRunning"] = o.WasRunning
	}
	return json.Marshal(toSerialize)
}


