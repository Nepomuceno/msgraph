/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1031 struct for InlineObject1031
type InlineObject1031 struct {
	Number *AnyOfobject `json:"number,omitempty"`
	isExplicitNullNumber bool `json:"-"`
	NumDigits *AnyOfobject `json:"numDigits,omitempty"`
	isExplicitNullNumDigits bool `json:"-"`
}

// GetNumber returns the Number field if non-nil, zero value otherwise.
func (o *InlineObject1031) GetNumber() AnyOfobject {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1031) GetNumberOk() (AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject1031) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject1031) SetNumber(v AnyOfobject) {
	o.Number = &v
}

// SetNumberExplicitNull (un)sets Number to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Number value is set to nil even if false is passed
func (o *InlineObject1031) SetNumberExplicitNull(b bool) {
	o.Number = nil
	o.isExplicitNullNumber = b
}
// GetNumDigits returns the NumDigits field if non-nil, zero value otherwise.
func (o *InlineObject1031) GetNumDigits() AnyOfobject {
	if o == nil || o.NumDigits == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.NumDigits
}

// GetNumDigitsOk returns a tuple with the NumDigits field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1031) GetNumDigitsOk() (AnyOfobject, bool) {
	if o == nil || o.NumDigits == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.NumDigits, true
}

// HasNumDigits returns a boolean if a field has been set.
func (o *InlineObject1031) HasNumDigits() bool {
	if o != nil && o.NumDigits != nil {
		return true
	}

	return false
}

// SetNumDigits gets a reference to the given AnyOfobject and assigns it to the NumDigits field.
func (o *InlineObject1031) SetNumDigits(v AnyOfobject) {
	o.NumDigits = &v
}

// SetNumDigitsExplicitNull (un)sets NumDigits to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NumDigits value is set to nil even if false is passed
func (o *InlineObject1031) SetNumDigitsExplicitNull(b bool) {
	o.NumDigits = nil
	o.isExplicitNullNumDigits = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1031) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number == nil {
		if o.isExplicitNullNumber {
			toSerialize["number"] = o.Number
		}
	} else {
		toSerialize["number"] = o.Number
	}
	if o.NumDigits == nil {
		if o.isExplicitNullNumDigits {
			toSerialize["numDigits"] = o.NumDigits
		}
	} else {
		toSerialize["numDigits"] = o.NumDigits
	}
	return json.Marshal(toSerialize)
}


