/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// SignIn struct for SignIn
type SignIn struct {
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`

	UserDisplayName *string `json:"userDisplayName,omitempty"`
	isExplicitNullUserDisplayName bool `json:"-"`
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	isExplicitNullUserPrincipalName bool `json:"-"`
	UserId *string `json:"userId,omitempty"`

	AppId *string `json:"appId,omitempty"`
	isExplicitNullAppId bool `json:"-"`
	AppDisplayName *string `json:"appDisplayName,omitempty"`
	isExplicitNullAppDisplayName bool `json:"-"`
	IpAddress *string `json:"ipAddress,omitempty"`
	isExplicitNullIpAddress bool `json:"-"`
	Status *AnyOfmicrosoftGraphSignInStatus `json:"status,omitempty"`
	isExplicitNullStatus bool `json:"-"`
	ClientAppUsed *string `json:"clientAppUsed,omitempty"`
	isExplicitNullClientAppUsed bool `json:"-"`
	DeviceDetail *AnyOfmicrosoftGraphDeviceDetail `json:"deviceDetail,omitempty"`
	isExplicitNullDeviceDetail bool `json:"-"`
	Location *AnyOfmicrosoftGraphSignInLocation `json:"location,omitempty"`
	isExplicitNullLocation bool `json:"-"`
	CorrelationId *string `json:"correlationId,omitempty"`
	isExplicitNullCorrelationId bool `json:"-"`
	ConditionalAccessStatus *AnyOfmicrosoftGraphConditionalAccessStatus `json:"conditionalAccessStatus,omitempty"`
	isExplicitNullConditionalAccessStatus bool `json:"-"`
	AppliedConditionalAccessPolicies *[]AnyOfmicrosoftGraphAppliedConditionalAccessPolicy `json:"appliedConditionalAccessPolicies,omitempty"`

	IsInteractive *bool `json:"isInteractive,omitempty"`
	isExplicitNullIsInteractive bool `json:"-"`
	RiskDetail *AnyOfmicrosoftGraphRiskDetail `json:"riskDetail,omitempty"`
	isExplicitNullRiskDetail bool `json:"-"`
	RiskLevelAggregated *AnyOfmicrosoftGraphRiskLevel `json:"riskLevelAggregated,omitempty"`
	isExplicitNullRiskLevelAggregated bool `json:"-"`
	RiskLevelDuringSignIn *AnyOfmicrosoftGraphRiskLevel `json:"riskLevelDuringSignIn,omitempty"`
	isExplicitNullRiskLevelDuringSignIn bool `json:"-"`
	RiskState *AnyOfmicrosoftGraphRiskState `json:"riskState,omitempty"`
	isExplicitNullRiskState bool `json:"-"`
	RiskEventTypes *[]AnyOfmicrosoftGraphRiskEventType `json:"riskEventTypes,omitempty"`

	ResourceDisplayName *string `json:"resourceDisplayName,omitempty"`
	isExplicitNullResourceDisplayName bool `json:"-"`
	ResourceId *string `json:"resourceId,omitempty"`
	isExplicitNullResourceId bool `json:"-"`
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *SignIn) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *SignIn) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *SignIn) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// GetUserDisplayName returns the UserDisplayName field if non-nil, zero value otherwise.
func (o *SignIn) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetUserDisplayNameOk() (string, bool) {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *SignIn) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName != nil {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *SignIn) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// SetUserDisplayNameExplicitNull (un)sets UserDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserDisplayName value is set to nil even if false is passed
func (o *SignIn) SetUserDisplayNameExplicitNull(b bool) {
	o.UserDisplayName = nil
	o.isExplicitNullUserDisplayName = b
}
// GetUserPrincipalName returns the UserPrincipalName field if non-nil, zero value otherwise.
func (o *SignIn) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetUserPrincipalNameOk() (string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *SignIn) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *SignIn) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// SetUserPrincipalNameExplicitNull (un)sets UserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserPrincipalName value is set to nil even if false is passed
func (o *SignIn) SetUserPrincipalNameExplicitNull(b bool) {
	o.UserPrincipalName = nil
	o.isExplicitNullUserPrincipalName = b
}
// GetUserId returns the UserId field if non-nil, zero value otherwise.
func (o *SignIn) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetUserIdOk() (string, bool) {
	if o == nil || o.UserId == nil {
		var ret string
		return ret, false
	}
	return *o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SignIn) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SignIn) SetUserId(v string) {
	o.UserId = &v
}

// GetAppId returns the AppId field if non-nil, zero value otherwise.
func (o *SignIn) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetAppIdOk() (string, bool) {
	if o == nil || o.AppId == nil {
		var ret string
		return ret, false
	}
	return *o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *SignIn) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *SignIn) SetAppId(v string) {
	o.AppId = &v
}

// SetAppIdExplicitNull (un)sets AppId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppId value is set to nil even if false is passed
func (o *SignIn) SetAppIdExplicitNull(b bool) {
	o.AppId = nil
	o.isExplicitNullAppId = b
}
// GetAppDisplayName returns the AppDisplayName field if non-nil, zero value otherwise.
func (o *SignIn) GetAppDisplayName() string {
	if o == nil || o.AppDisplayName == nil {
		var ret string
		return ret
	}
	return *o.AppDisplayName
}

// GetAppDisplayNameOk returns a tuple with the AppDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetAppDisplayNameOk() (string, bool) {
	if o == nil || o.AppDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.AppDisplayName, true
}

// HasAppDisplayName returns a boolean if a field has been set.
func (o *SignIn) HasAppDisplayName() bool {
	if o != nil && o.AppDisplayName != nil {
		return true
	}

	return false
}

// SetAppDisplayName gets a reference to the given string and assigns it to the AppDisplayName field.
func (o *SignIn) SetAppDisplayName(v string) {
	o.AppDisplayName = &v
}

// SetAppDisplayNameExplicitNull (un)sets AppDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AppDisplayName value is set to nil even if false is passed
func (o *SignIn) SetAppDisplayNameExplicitNull(b bool) {
	o.AppDisplayName = nil
	o.isExplicitNullAppDisplayName = b
}
// GetIpAddress returns the IpAddress field if non-nil, zero value otherwise.
func (o *SignIn) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetIpAddressOk() (string, bool) {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret, false
	}
	return *o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *SignIn) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *SignIn) SetIpAddress(v string) {
	o.IpAddress = &v
}

// SetIpAddressExplicitNull (un)sets IpAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IpAddress value is set to nil even if false is passed
func (o *SignIn) SetIpAddressExplicitNull(b bool) {
	o.IpAddress = nil
	o.isExplicitNullIpAddress = b
}
// GetStatus returns the Status field if non-nil, zero value otherwise.
func (o *SignIn) GetStatus() AnyOfmicrosoftGraphSignInStatus {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphSignInStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetStatusOk() (AnyOfmicrosoftGraphSignInStatus, bool) {
	if o == nil || o.Status == nil {
		var ret AnyOfmicrosoftGraphSignInStatus
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SignIn) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AnyOfmicrosoftGraphSignInStatus and assigns it to the Status field.
func (o *SignIn) SetStatus(v AnyOfmicrosoftGraphSignInStatus) {
	o.Status = &v
}

// SetStatusExplicitNull (un)sets Status to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Status value is set to nil even if false is passed
func (o *SignIn) SetStatusExplicitNull(b bool) {
	o.Status = nil
	o.isExplicitNullStatus = b
}
// GetClientAppUsed returns the ClientAppUsed field if non-nil, zero value otherwise.
func (o *SignIn) GetClientAppUsed() string {
	if o == nil || o.ClientAppUsed == nil {
		var ret string
		return ret
	}
	return *o.ClientAppUsed
}

// GetClientAppUsedOk returns a tuple with the ClientAppUsed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetClientAppUsedOk() (string, bool) {
	if o == nil || o.ClientAppUsed == nil {
		var ret string
		return ret, false
	}
	return *o.ClientAppUsed, true
}

// HasClientAppUsed returns a boolean if a field has been set.
func (o *SignIn) HasClientAppUsed() bool {
	if o != nil && o.ClientAppUsed != nil {
		return true
	}

	return false
}

// SetClientAppUsed gets a reference to the given string and assigns it to the ClientAppUsed field.
func (o *SignIn) SetClientAppUsed(v string) {
	o.ClientAppUsed = &v
}

// SetClientAppUsedExplicitNull (un)sets ClientAppUsed to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ClientAppUsed value is set to nil even if false is passed
func (o *SignIn) SetClientAppUsedExplicitNull(b bool) {
	o.ClientAppUsed = nil
	o.isExplicitNullClientAppUsed = b
}
// GetDeviceDetail returns the DeviceDetail field if non-nil, zero value otherwise.
func (o *SignIn) GetDeviceDetail() AnyOfmicrosoftGraphDeviceDetail {
	if o == nil || o.DeviceDetail == nil {
		var ret AnyOfmicrosoftGraphDeviceDetail
		return ret
	}
	return *o.DeviceDetail
}

// GetDeviceDetailOk returns a tuple with the DeviceDetail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetDeviceDetailOk() (AnyOfmicrosoftGraphDeviceDetail, bool) {
	if o == nil || o.DeviceDetail == nil {
		var ret AnyOfmicrosoftGraphDeviceDetail
		return ret, false
	}
	return *o.DeviceDetail, true
}

// HasDeviceDetail returns a boolean if a field has been set.
func (o *SignIn) HasDeviceDetail() bool {
	if o != nil && o.DeviceDetail != nil {
		return true
	}

	return false
}

// SetDeviceDetail gets a reference to the given AnyOfmicrosoftGraphDeviceDetail and assigns it to the DeviceDetail field.
func (o *SignIn) SetDeviceDetail(v AnyOfmicrosoftGraphDeviceDetail) {
	o.DeviceDetail = &v
}

// SetDeviceDetailExplicitNull (un)sets DeviceDetail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceDetail value is set to nil even if false is passed
func (o *SignIn) SetDeviceDetailExplicitNull(b bool) {
	o.DeviceDetail = nil
	o.isExplicitNullDeviceDetail = b
}
// GetLocation returns the Location field if non-nil, zero value otherwise.
func (o *SignIn) GetLocation() AnyOfmicrosoftGraphSignInLocation {
	if o == nil || o.Location == nil {
		var ret AnyOfmicrosoftGraphSignInLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetLocationOk() (AnyOfmicrosoftGraphSignInLocation, bool) {
	if o == nil || o.Location == nil {
		var ret AnyOfmicrosoftGraphSignInLocation
		return ret, false
	}
	return *o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SignIn) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphSignInLocation and assigns it to the Location field.
func (o *SignIn) SetLocation(v AnyOfmicrosoftGraphSignInLocation) {
	o.Location = &v
}

// SetLocationExplicitNull (un)sets Location to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Location value is set to nil even if false is passed
func (o *SignIn) SetLocationExplicitNull(b bool) {
	o.Location = nil
	o.isExplicitNullLocation = b
}
// GetCorrelationId returns the CorrelationId field if non-nil, zero value otherwise.
func (o *SignIn) GetCorrelationId() string {
	if o == nil || o.CorrelationId == nil {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetCorrelationIdOk() (string, bool) {
	if o == nil || o.CorrelationId == nil {
		var ret string
		return ret, false
	}
	return *o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *SignIn) HasCorrelationId() bool {
	if o != nil && o.CorrelationId != nil {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *SignIn) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// SetCorrelationIdExplicitNull (un)sets CorrelationId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CorrelationId value is set to nil even if false is passed
func (o *SignIn) SetCorrelationIdExplicitNull(b bool) {
	o.CorrelationId = nil
	o.isExplicitNullCorrelationId = b
}
// GetConditionalAccessStatus returns the ConditionalAccessStatus field if non-nil, zero value otherwise.
func (o *SignIn) GetConditionalAccessStatus() AnyOfmicrosoftGraphConditionalAccessStatus {
	if o == nil || o.ConditionalAccessStatus == nil {
		var ret AnyOfmicrosoftGraphConditionalAccessStatus
		return ret
	}
	return *o.ConditionalAccessStatus
}

// GetConditionalAccessStatusOk returns a tuple with the ConditionalAccessStatus field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetConditionalAccessStatusOk() (AnyOfmicrosoftGraphConditionalAccessStatus, bool) {
	if o == nil || o.ConditionalAccessStatus == nil {
		var ret AnyOfmicrosoftGraphConditionalAccessStatus
		return ret, false
	}
	return *o.ConditionalAccessStatus, true
}

// HasConditionalAccessStatus returns a boolean if a field has been set.
func (o *SignIn) HasConditionalAccessStatus() bool {
	if o != nil && o.ConditionalAccessStatus != nil {
		return true
	}

	return false
}

// SetConditionalAccessStatus gets a reference to the given AnyOfmicrosoftGraphConditionalAccessStatus and assigns it to the ConditionalAccessStatus field.
func (o *SignIn) SetConditionalAccessStatus(v AnyOfmicrosoftGraphConditionalAccessStatus) {
	o.ConditionalAccessStatus = &v
}

// SetConditionalAccessStatusExplicitNull (un)sets ConditionalAccessStatus to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConditionalAccessStatus value is set to nil even if false is passed
func (o *SignIn) SetConditionalAccessStatusExplicitNull(b bool) {
	o.ConditionalAccessStatus = nil
	o.isExplicitNullConditionalAccessStatus = b
}
// GetAppliedConditionalAccessPolicies returns the AppliedConditionalAccessPolicies field if non-nil, zero value otherwise.
func (o *SignIn) GetAppliedConditionalAccessPolicies() []AnyOfmicrosoftGraphAppliedConditionalAccessPolicy {
	if o == nil || o.AppliedConditionalAccessPolicies == nil {
		var ret []AnyOfmicrosoftGraphAppliedConditionalAccessPolicy
		return ret
	}
	return *o.AppliedConditionalAccessPolicies
}

// GetAppliedConditionalAccessPoliciesOk returns a tuple with the AppliedConditionalAccessPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetAppliedConditionalAccessPoliciesOk() ([]AnyOfmicrosoftGraphAppliedConditionalAccessPolicy, bool) {
	if o == nil || o.AppliedConditionalAccessPolicies == nil {
		var ret []AnyOfmicrosoftGraphAppliedConditionalAccessPolicy
		return ret, false
	}
	return *o.AppliedConditionalAccessPolicies, true
}

// HasAppliedConditionalAccessPolicies returns a boolean if a field has been set.
func (o *SignIn) HasAppliedConditionalAccessPolicies() bool {
	if o != nil && o.AppliedConditionalAccessPolicies != nil {
		return true
	}

	return false
}

// SetAppliedConditionalAccessPolicies gets a reference to the given []AnyOfmicrosoftGraphAppliedConditionalAccessPolicy and assigns it to the AppliedConditionalAccessPolicies field.
func (o *SignIn) SetAppliedConditionalAccessPolicies(v []AnyOfmicrosoftGraphAppliedConditionalAccessPolicy) {
	o.AppliedConditionalAccessPolicies = &v
}

// GetIsInteractive returns the IsInteractive field if non-nil, zero value otherwise.
func (o *SignIn) GetIsInteractive() bool {
	if o == nil || o.IsInteractive == nil {
		var ret bool
		return ret
	}
	return *o.IsInteractive
}

// GetIsInteractiveOk returns a tuple with the IsInteractive field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetIsInteractiveOk() (bool, bool) {
	if o == nil || o.IsInteractive == nil {
		var ret bool
		return ret, false
	}
	return *o.IsInteractive, true
}

// HasIsInteractive returns a boolean if a field has been set.
func (o *SignIn) HasIsInteractive() bool {
	if o != nil && o.IsInteractive != nil {
		return true
	}

	return false
}

// SetIsInteractive gets a reference to the given bool and assigns it to the IsInteractive field.
func (o *SignIn) SetIsInteractive(v bool) {
	o.IsInteractive = &v
}

// SetIsInteractiveExplicitNull (un)sets IsInteractive to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsInteractive value is set to nil even if false is passed
func (o *SignIn) SetIsInteractiveExplicitNull(b bool) {
	o.IsInteractive = nil
	o.isExplicitNullIsInteractive = b
}
// GetRiskDetail returns the RiskDetail field if non-nil, zero value otherwise.
func (o *SignIn) GetRiskDetail() AnyOfmicrosoftGraphRiskDetail {
	if o == nil || o.RiskDetail == nil {
		var ret AnyOfmicrosoftGraphRiskDetail
		return ret
	}
	return *o.RiskDetail
}

// GetRiskDetailOk returns a tuple with the RiskDetail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetRiskDetailOk() (AnyOfmicrosoftGraphRiskDetail, bool) {
	if o == nil || o.RiskDetail == nil {
		var ret AnyOfmicrosoftGraphRiskDetail
		return ret, false
	}
	return *o.RiskDetail, true
}

// HasRiskDetail returns a boolean if a field has been set.
func (o *SignIn) HasRiskDetail() bool {
	if o != nil && o.RiskDetail != nil {
		return true
	}

	return false
}

// SetRiskDetail gets a reference to the given AnyOfmicrosoftGraphRiskDetail and assigns it to the RiskDetail field.
func (o *SignIn) SetRiskDetail(v AnyOfmicrosoftGraphRiskDetail) {
	o.RiskDetail = &v
}

// SetRiskDetailExplicitNull (un)sets RiskDetail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RiskDetail value is set to nil even if false is passed
func (o *SignIn) SetRiskDetailExplicitNull(b bool) {
	o.RiskDetail = nil
	o.isExplicitNullRiskDetail = b
}
// GetRiskLevelAggregated returns the RiskLevelAggregated field if non-nil, zero value otherwise.
func (o *SignIn) GetRiskLevelAggregated() AnyOfmicrosoftGraphRiskLevel {
	if o == nil || o.RiskLevelAggregated == nil {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret
	}
	return *o.RiskLevelAggregated
}

// GetRiskLevelAggregatedOk returns a tuple with the RiskLevelAggregated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetRiskLevelAggregatedOk() (AnyOfmicrosoftGraphRiskLevel, bool) {
	if o == nil || o.RiskLevelAggregated == nil {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret, false
	}
	return *o.RiskLevelAggregated, true
}

// HasRiskLevelAggregated returns a boolean if a field has been set.
func (o *SignIn) HasRiskLevelAggregated() bool {
	if o != nil && o.RiskLevelAggregated != nil {
		return true
	}

	return false
}

// SetRiskLevelAggregated gets a reference to the given AnyOfmicrosoftGraphRiskLevel and assigns it to the RiskLevelAggregated field.
func (o *SignIn) SetRiskLevelAggregated(v AnyOfmicrosoftGraphRiskLevel) {
	o.RiskLevelAggregated = &v
}

// SetRiskLevelAggregatedExplicitNull (un)sets RiskLevelAggregated to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RiskLevelAggregated value is set to nil even if false is passed
func (o *SignIn) SetRiskLevelAggregatedExplicitNull(b bool) {
	o.RiskLevelAggregated = nil
	o.isExplicitNullRiskLevelAggregated = b
}
// GetRiskLevelDuringSignIn returns the RiskLevelDuringSignIn field if non-nil, zero value otherwise.
func (o *SignIn) GetRiskLevelDuringSignIn() AnyOfmicrosoftGraphRiskLevel {
	if o == nil || o.RiskLevelDuringSignIn == nil {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret
	}
	return *o.RiskLevelDuringSignIn
}

// GetRiskLevelDuringSignInOk returns a tuple with the RiskLevelDuringSignIn field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetRiskLevelDuringSignInOk() (AnyOfmicrosoftGraphRiskLevel, bool) {
	if o == nil || o.RiskLevelDuringSignIn == nil {
		var ret AnyOfmicrosoftGraphRiskLevel
		return ret, false
	}
	return *o.RiskLevelDuringSignIn, true
}

// HasRiskLevelDuringSignIn returns a boolean if a field has been set.
func (o *SignIn) HasRiskLevelDuringSignIn() bool {
	if o != nil && o.RiskLevelDuringSignIn != nil {
		return true
	}

	return false
}

// SetRiskLevelDuringSignIn gets a reference to the given AnyOfmicrosoftGraphRiskLevel and assigns it to the RiskLevelDuringSignIn field.
func (o *SignIn) SetRiskLevelDuringSignIn(v AnyOfmicrosoftGraphRiskLevel) {
	o.RiskLevelDuringSignIn = &v
}

// SetRiskLevelDuringSignInExplicitNull (un)sets RiskLevelDuringSignIn to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RiskLevelDuringSignIn value is set to nil even if false is passed
func (o *SignIn) SetRiskLevelDuringSignInExplicitNull(b bool) {
	o.RiskLevelDuringSignIn = nil
	o.isExplicitNullRiskLevelDuringSignIn = b
}
// GetRiskState returns the RiskState field if non-nil, zero value otherwise.
func (o *SignIn) GetRiskState() AnyOfmicrosoftGraphRiskState {
	if o == nil || o.RiskState == nil {
		var ret AnyOfmicrosoftGraphRiskState
		return ret
	}
	return *o.RiskState
}

// GetRiskStateOk returns a tuple with the RiskState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetRiskStateOk() (AnyOfmicrosoftGraphRiskState, bool) {
	if o == nil || o.RiskState == nil {
		var ret AnyOfmicrosoftGraphRiskState
		return ret, false
	}
	return *o.RiskState, true
}

// HasRiskState returns a boolean if a field has been set.
func (o *SignIn) HasRiskState() bool {
	if o != nil && o.RiskState != nil {
		return true
	}

	return false
}

// SetRiskState gets a reference to the given AnyOfmicrosoftGraphRiskState and assigns it to the RiskState field.
func (o *SignIn) SetRiskState(v AnyOfmicrosoftGraphRiskState) {
	o.RiskState = &v
}

// SetRiskStateExplicitNull (un)sets RiskState to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RiskState value is set to nil even if false is passed
func (o *SignIn) SetRiskStateExplicitNull(b bool) {
	o.RiskState = nil
	o.isExplicitNullRiskState = b
}
// GetRiskEventTypes returns the RiskEventTypes field if non-nil, zero value otherwise.
func (o *SignIn) GetRiskEventTypes() []AnyOfmicrosoftGraphRiskEventType {
	if o == nil || o.RiskEventTypes == nil {
		var ret []AnyOfmicrosoftGraphRiskEventType
		return ret
	}
	return *o.RiskEventTypes
}

// GetRiskEventTypesOk returns a tuple with the RiskEventTypes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetRiskEventTypesOk() ([]AnyOfmicrosoftGraphRiskEventType, bool) {
	if o == nil || o.RiskEventTypes == nil {
		var ret []AnyOfmicrosoftGraphRiskEventType
		return ret, false
	}
	return *o.RiskEventTypes, true
}

// HasRiskEventTypes returns a boolean if a field has been set.
func (o *SignIn) HasRiskEventTypes() bool {
	if o != nil && o.RiskEventTypes != nil {
		return true
	}

	return false
}

// SetRiskEventTypes gets a reference to the given []AnyOfmicrosoftGraphRiskEventType and assigns it to the RiskEventTypes field.
func (o *SignIn) SetRiskEventTypes(v []AnyOfmicrosoftGraphRiskEventType) {
	o.RiskEventTypes = &v
}

// GetResourceDisplayName returns the ResourceDisplayName field if non-nil, zero value otherwise.
func (o *SignIn) GetResourceDisplayName() string {
	if o == nil || o.ResourceDisplayName == nil {
		var ret string
		return ret
	}
	return *o.ResourceDisplayName
}

// GetResourceDisplayNameOk returns a tuple with the ResourceDisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetResourceDisplayNameOk() (string, bool) {
	if o == nil || o.ResourceDisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.ResourceDisplayName, true
}

// HasResourceDisplayName returns a boolean if a field has been set.
func (o *SignIn) HasResourceDisplayName() bool {
	if o != nil && o.ResourceDisplayName != nil {
		return true
	}

	return false
}

// SetResourceDisplayName gets a reference to the given string and assigns it to the ResourceDisplayName field.
func (o *SignIn) SetResourceDisplayName(v string) {
	o.ResourceDisplayName = &v
}

// SetResourceDisplayNameExplicitNull (un)sets ResourceDisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceDisplayName value is set to nil even if false is passed
func (o *SignIn) SetResourceDisplayNameExplicitNull(b bool) {
	o.ResourceDisplayName = nil
	o.isExplicitNullResourceDisplayName = b
}
// GetResourceId returns the ResourceId field if non-nil, zero value otherwise.
func (o *SignIn) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SignIn) GetResourceIdOk() (string, bool) {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret, false
	}
	return *o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *SignIn) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *SignIn) SetResourceId(v string) {
	o.ResourceId = &v
}

// SetResourceIdExplicitNull (un)sets ResourceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResourceId value is set to nil even if false is passed
func (o *SignIn) SetResourceIdExplicitNull(b bool) {
	o.ResourceId = nil
	o.isExplicitNullResourceId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o SignIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDateTime != nil {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.UserDisplayName == nil {
		if o.isExplicitNullUserDisplayName {
			toSerialize["userDisplayName"] = o.UserDisplayName
		}
	} else {
		toSerialize["userDisplayName"] = o.UserDisplayName
	}
	if o.UserPrincipalName == nil {
		if o.isExplicitNullUserPrincipalName {
			toSerialize["userPrincipalName"] = o.UserPrincipalName
		}
	} else {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.AppId == nil {
		if o.isExplicitNullAppId {
			toSerialize["appId"] = o.AppId
		}
	} else {
		toSerialize["appId"] = o.AppId
	}
	if o.AppDisplayName == nil {
		if o.isExplicitNullAppDisplayName {
			toSerialize["appDisplayName"] = o.AppDisplayName
		}
	} else {
		toSerialize["appDisplayName"] = o.AppDisplayName
	}
	if o.IpAddress == nil {
		if o.isExplicitNullIpAddress {
			toSerialize["ipAddress"] = o.IpAddress
		}
	} else {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.Status == nil {
		if o.isExplicitNullStatus {
			toSerialize["status"] = o.Status
		}
	} else {
		toSerialize["status"] = o.Status
	}
	if o.ClientAppUsed == nil {
		if o.isExplicitNullClientAppUsed {
			toSerialize["clientAppUsed"] = o.ClientAppUsed
		}
	} else {
		toSerialize["clientAppUsed"] = o.ClientAppUsed
	}
	if o.DeviceDetail == nil {
		if o.isExplicitNullDeviceDetail {
			toSerialize["deviceDetail"] = o.DeviceDetail
		}
	} else {
		toSerialize["deviceDetail"] = o.DeviceDetail
	}
	if o.Location == nil {
		if o.isExplicitNullLocation {
			toSerialize["location"] = o.Location
		}
	} else {
		toSerialize["location"] = o.Location
	}
	if o.CorrelationId == nil {
		if o.isExplicitNullCorrelationId {
			toSerialize["correlationId"] = o.CorrelationId
		}
	} else {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if o.ConditionalAccessStatus == nil {
		if o.isExplicitNullConditionalAccessStatus {
			toSerialize["conditionalAccessStatus"] = o.ConditionalAccessStatus
		}
	} else {
		toSerialize["conditionalAccessStatus"] = o.ConditionalAccessStatus
	}
	if o.AppliedConditionalAccessPolicies != nil {
		toSerialize["appliedConditionalAccessPolicies"] = o.AppliedConditionalAccessPolicies
	}
	if o.IsInteractive == nil {
		if o.isExplicitNullIsInteractive {
			toSerialize["isInteractive"] = o.IsInteractive
		}
	} else {
		toSerialize["isInteractive"] = o.IsInteractive
	}
	if o.RiskDetail == nil {
		if o.isExplicitNullRiskDetail {
			toSerialize["riskDetail"] = o.RiskDetail
		}
	} else {
		toSerialize["riskDetail"] = o.RiskDetail
	}
	if o.RiskLevelAggregated == nil {
		if o.isExplicitNullRiskLevelAggregated {
			toSerialize["riskLevelAggregated"] = o.RiskLevelAggregated
		}
	} else {
		toSerialize["riskLevelAggregated"] = o.RiskLevelAggregated
	}
	if o.RiskLevelDuringSignIn == nil {
		if o.isExplicitNullRiskLevelDuringSignIn {
			toSerialize["riskLevelDuringSignIn"] = o.RiskLevelDuringSignIn
		}
	} else {
		toSerialize["riskLevelDuringSignIn"] = o.RiskLevelDuringSignIn
	}
	if o.RiskState == nil {
		if o.isExplicitNullRiskState {
			toSerialize["riskState"] = o.RiskState
		}
	} else {
		toSerialize["riskState"] = o.RiskState
	}
	if o.RiskEventTypes != nil {
		toSerialize["riskEventTypes"] = o.RiskEventTypes
	}
	if o.ResourceDisplayName == nil {
		if o.isExplicitNullResourceDisplayName {
			toSerialize["resourceDisplayName"] = o.ResourceDisplayName
		}
	} else {
		toSerialize["resourceDisplayName"] = o.ResourceDisplayName
	}
	if o.ResourceId == nil {
		if o.isExplicitNullResourceId {
			toSerialize["resourceId"] = o.ResourceId
		}
	} else {
		toSerialize["resourceId"] = o.ResourceId
	}
	return json.Marshal(toSerialize)
}


