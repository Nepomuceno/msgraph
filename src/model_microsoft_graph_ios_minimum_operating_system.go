/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphIosMinimumOperatingSystem struct for MicrosoftGraphIosMinimumOperatingSystem
type MicrosoftGraphIosMinimumOperatingSystem struct {
	// Version 8.0 or later.
	V80 *bool `json:"v8_0,omitempty"`

	// Version 9.0 or later.
	V90 *bool `json:"v9_0,omitempty"`

	// Version 10.0 or later.
	V100 *bool `json:"v10_0,omitempty"`

	// Version 11.0 or later.
	V110 *bool `json:"v11_0,omitempty"`

	// Version 12.0 or later.
	V120 *bool `json:"v12_0,omitempty"`

	// Version 13.0 or later.
	V130 *bool `json:"v13_0,omitempty"`

}

// GetV80 returns the V80 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV80() bool {
	if o == nil || o.V80 == nil {
		var ret bool
		return ret
	}
	return *o.V80
}

// GetV80Ok returns a tuple with the V80 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV80Ok() (bool, bool) {
	if o == nil || o.V80 == nil {
		var ret bool
		return ret, false
	}
	return *o.V80, true
}

// HasV80 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV80() bool {
	if o != nil && o.V80 != nil {
		return true
	}

	return false
}

// SetV80 gets a reference to the given bool and assigns it to the V80 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV80(v bool) {
	o.V80 = &v
}

// GetV90 returns the V90 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV90() bool {
	if o == nil || o.V90 == nil {
		var ret bool
		return ret
	}
	return *o.V90
}

// GetV90Ok returns a tuple with the V90 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV90Ok() (bool, bool) {
	if o == nil || o.V90 == nil {
		var ret bool
		return ret, false
	}
	return *o.V90, true
}

// HasV90 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV90() bool {
	if o != nil && o.V90 != nil {
		return true
	}

	return false
}

// SetV90 gets a reference to the given bool and assigns it to the V90 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV90(v bool) {
	o.V90 = &v
}

// GetV100 returns the V100 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV100() bool {
	if o == nil || o.V100 == nil {
		var ret bool
		return ret
	}
	return *o.V100
}

// GetV100Ok returns a tuple with the V100 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV100Ok() (bool, bool) {
	if o == nil || o.V100 == nil {
		var ret bool
		return ret, false
	}
	return *o.V100, true
}

// HasV100 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV100() bool {
	if o != nil && o.V100 != nil {
		return true
	}

	return false
}

// SetV100 gets a reference to the given bool and assigns it to the V100 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV100(v bool) {
	o.V100 = &v
}

// GetV110 returns the V110 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV110() bool {
	if o == nil || o.V110 == nil {
		var ret bool
		return ret
	}
	return *o.V110
}

// GetV110Ok returns a tuple with the V110 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV110Ok() (bool, bool) {
	if o == nil || o.V110 == nil {
		var ret bool
		return ret, false
	}
	return *o.V110, true
}

// HasV110 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV110() bool {
	if o != nil && o.V110 != nil {
		return true
	}

	return false
}

// SetV110 gets a reference to the given bool and assigns it to the V110 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV110(v bool) {
	o.V110 = &v
}

// GetV120 returns the V120 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV120() bool {
	if o == nil || o.V120 == nil {
		var ret bool
		return ret
	}
	return *o.V120
}

// GetV120Ok returns a tuple with the V120 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV120Ok() (bool, bool) {
	if o == nil || o.V120 == nil {
		var ret bool
		return ret, false
	}
	return *o.V120, true
}

// HasV120 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV120() bool {
	if o != nil && o.V120 != nil {
		return true
	}

	return false
}

// SetV120 gets a reference to the given bool and assigns it to the V120 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV120(v bool) {
	o.V120 = &v
}

// GetV130 returns the V130 field if non-nil, zero value otherwise.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV130() bool {
	if o == nil || o.V130 == nil {
		var ret bool
		return ret
	}
	return *o.V130
}

// GetV130Ok returns a tuple with the V130 field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) GetV130Ok() (bool, bool) {
	if o == nil || o.V130 == nil {
		var ret bool
		return ret, false
	}
	return *o.V130, true
}

// HasV130 returns a boolean if a field has been set.
func (o *MicrosoftGraphIosMinimumOperatingSystem) HasV130() bool {
	if o != nil && o.V130 != nil {
		return true
	}

	return false
}

// SetV130 gets a reference to the given bool and assigns it to the V130 field.
func (o *MicrosoftGraphIosMinimumOperatingSystem) SetV130(v bool) {
	o.V130 = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphIosMinimumOperatingSystem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.V80 != nil {
		toSerialize["v8_0"] = o.V80
	}
	if o.V90 != nil {
		toSerialize["v9_0"] = o.V90
	}
	if o.V100 != nil {
		toSerialize["v10_0"] = o.V100
	}
	if o.V110 != nil {
		toSerialize["v11_0"] = o.V110
	}
	if o.V120 != nil {
		toSerialize["v12_0"] = o.V120
	}
	if o.V130 != nil {
		toSerialize["v13_0"] = o.V130
	}
	return json.Marshal(toSerialize)
}


