/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// User Represents an Azure Active Directory user object.
type User struct {
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	isExplicitNullAccountEnabled bool `json:"-"`
	AgeGroup *string `json:"ageGroup,omitempty"`
	isExplicitNullAgeGroup bool `json:"-"`
	AssignedLicenses *[]MicrosoftGraphAssignedLicense `json:"assignedLicenses,omitempty"`

	AssignedPlans *[]MicrosoftGraphAssignedPlan `json:"assignedPlans,omitempty"`

	BusinessPhones *[]string `json:"businessPhones,omitempty"`

	City *string `json:"city,omitempty"`
	isExplicitNullCity bool `json:"-"`
	CompanyName *string `json:"companyName,omitempty"`
	isExplicitNullCompanyName bool `json:"-"`
	ConsentProvidedForMinor *string `json:"consentProvidedForMinor,omitempty"`
	isExplicitNullConsentProvidedForMinor bool `json:"-"`
	Country *string `json:"country,omitempty"`
	isExplicitNullCountry bool `json:"-"`
	Department *string `json:"department,omitempty"`
	isExplicitNullDepartment bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	EmployeeId *string `json:"employeeId,omitempty"`
	isExplicitNullEmployeeId bool `json:"-"`
	FaxNumber *string `json:"faxNumber,omitempty"`
	isExplicitNullFaxNumber bool `json:"-"`
	GivenName *string `json:"givenName,omitempty"`
	isExplicitNullGivenName bool `json:"-"`
	ImAddresses *[]string `json:"imAddresses,omitempty"`

	IsResourceAccount *bool `json:"isResourceAccount,omitempty"`
	isExplicitNullIsResourceAccount bool `json:"-"`
	JobTitle *string `json:"jobTitle,omitempty"`
	isExplicitNullJobTitle bool `json:"-"`
	LegalAgeGroupClassification *string `json:"legalAgeGroupClassification,omitempty"`
	isExplicitNullLegalAgeGroupClassification bool `json:"-"`
	LicenseAssignmentStates *[]AnyOfmicrosoftGraphLicenseAssignmentState `json:"licenseAssignmentStates,omitempty"`

	Mail *string `json:"mail,omitempty"`
	isExplicitNullMail bool `json:"-"`
	MailNickname *string `json:"mailNickname,omitempty"`
	isExplicitNullMailNickname bool `json:"-"`
	MobilePhone *string `json:"mobilePhone,omitempty"`
	isExplicitNullMobilePhone bool `json:"-"`
	OnPremisesDistinguishedName *string `json:"onPremisesDistinguishedName,omitempty"`
	isExplicitNullOnPremisesDistinguishedName bool `json:"-"`
	OnPremisesExtensionAttributes *AnyOfmicrosoftGraphOnPremisesExtensionAttributes `json:"onPremisesExtensionAttributes,omitempty"`
	isExplicitNullOnPremisesExtensionAttributes bool `json:"-"`
	OnPremisesImmutableId *string `json:"onPremisesImmutableId,omitempty"`
	isExplicitNullOnPremisesImmutableId bool `json:"-"`
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	isExplicitNullOnPremisesLastSyncDateTime bool `json:"-"`
	OnPremisesProvisioningErrors *[]AnyOfmicrosoftGraphOnPremisesProvisioningError `json:"onPremisesProvisioningErrors,omitempty"`

	OnPremisesSecurityIdentifier *string `json:"onPremisesSecurityIdentifier,omitempty"`
	isExplicitNullOnPremisesSecurityIdentifier bool `json:"-"`
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	isExplicitNullOnPremisesSyncEnabled bool `json:"-"`
	OnPremisesDomainName *string `json:"onPremisesDomainName,omitempty"`
	isExplicitNullOnPremisesDomainName bool `json:"-"`
	OnPremisesSamAccountName *string `json:"onPremisesSamAccountName,omitempty"`
	isExplicitNullOnPremisesSamAccountName bool `json:"-"`
	OnPremisesUserPrincipalName *string `json:"onPremisesUserPrincipalName,omitempty"`
	isExplicitNullOnPremisesUserPrincipalName bool `json:"-"`
	OtherMails *[]string `json:"otherMails,omitempty"`

	PasswordPolicies *string `json:"passwordPolicies,omitempty"`
	isExplicitNullPasswordPolicies bool `json:"-"`
	PasswordProfile *AnyOfmicrosoftGraphPasswordProfile `json:"passwordProfile,omitempty"`
	isExplicitNullPasswordProfile bool `json:"-"`
	OfficeLocation *string `json:"officeLocation,omitempty"`
	isExplicitNullOfficeLocation bool `json:"-"`
	PostalCode *string `json:"postalCode,omitempty"`
	isExplicitNullPostalCode bool `json:"-"`
	PreferredLanguage *string `json:"preferredLanguage,omitempty"`
	isExplicitNullPreferredLanguage bool `json:"-"`
	ProvisionedPlans *[]MicrosoftGraphProvisionedPlan `json:"provisionedPlans,omitempty"`

	ProxyAddresses *[]string `json:"proxyAddresses,omitempty"`

	ShowInAddressList *bool `json:"showInAddressList,omitempty"`
	isExplicitNullShowInAddressList bool `json:"-"`
	SignInSessionsValidFromDateTime *time.Time `json:"signInSessionsValidFromDateTime,omitempty"`
	isExplicitNullSignInSessionsValidFromDateTime bool `json:"-"`
	State *string `json:"state,omitempty"`
	isExplicitNullState bool `json:"-"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	isExplicitNullStreetAddress bool `json:"-"`
	Surname *string `json:"surname,omitempty"`
	isExplicitNullSurname bool `json:"-"`
	UsageLocation *string `json:"usageLocation,omitempty"`
	isExplicitNullUsageLocation bool `json:"-"`
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	isExplicitNullUserPrincipalName bool `json:"-"`
	UserType *string `json:"userType,omitempty"`
	isExplicitNullUserType bool `json:"-"`
	MailboxSettings *AnyOfmicrosoftGraphMailboxSettings `json:"mailboxSettings,omitempty"`
	isExplicitNullMailboxSettings bool `json:"-"`
	// The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
	DeviceEnrollmentLimit *int32 `json:"deviceEnrollmentLimit,omitempty"`

	AboutMe *string `json:"aboutMe,omitempty"`
	isExplicitNullAboutMe bool `json:"-"`
	Birthday *time.Time `json:"birthday,omitempty"`

	HireDate *time.Time `json:"hireDate,omitempty"`

	Interests *[]string `json:"interests,omitempty"`

	MySite *string `json:"mySite,omitempty"`
	isExplicitNullMySite bool `json:"-"`
	PastProjects *[]string `json:"pastProjects,omitempty"`

	PreferredName *string `json:"preferredName,omitempty"`
	isExplicitNullPreferredName bool `json:"-"`
	Responsibilities *[]string `json:"responsibilities,omitempty"`

	Schools *[]string `json:"schools,omitempty"`

	Skills *[]string `json:"skills,omitempty"`

	OwnedDevices *[]MicrosoftGraphDirectoryObject `json:"ownedDevices,omitempty"`

	RegisteredDevices *[]MicrosoftGraphDirectoryObject `json:"registeredDevices,omitempty"`

	Manager *AnyOfmicrosoftGraphDirectoryObject `json:"manager,omitempty"`
	isExplicitNullManager bool `json:"-"`
	DirectReports *[]MicrosoftGraphDirectoryObject `json:"directReports,omitempty"`

	MemberOf *[]MicrosoftGraphDirectoryObject `json:"memberOf,omitempty"`

	CreatedObjects *[]MicrosoftGraphDirectoryObject `json:"createdObjects,omitempty"`

	OwnedObjects *[]MicrosoftGraphDirectoryObject `json:"ownedObjects,omitempty"`

	LicenseDetails *[]MicrosoftGraphLicenseDetails `json:"licenseDetails,omitempty"`

	TransitiveMemberOf *[]MicrosoftGraphDirectoryObject `json:"transitiveMemberOf,omitempty"`

	Outlook *AnyOfmicrosoftGraphOutlookUser `json:"outlook,omitempty"`
	isExplicitNullOutlook bool `json:"-"`
	Messages *[]MicrosoftGraphMessage `json:"messages,omitempty"`

	MailFolders *[]MicrosoftGraphMailFolder `json:"mailFolders,omitempty"`

	Calendar *AnyOfmicrosoftGraphCalendar `json:"calendar,omitempty"`
	isExplicitNullCalendar bool `json:"-"`
	Calendars *[]MicrosoftGraphCalendar `json:"calendars,omitempty"`

	CalendarGroups *[]MicrosoftGraphCalendarGroup `json:"calendarGroups,omitempty"`

	CalendarView *[]MicrosoftGraphEvent `json:"calendarView,omitempty"`

	Events *[]MicrosoftGraphEvent `json:"events,omitempty"`

	People *[]MicrosoftGraphPerson `json:"people,omitempty"`

	Contacts *[]MicrosoftGraphContact `json:"contacts,omitempty"`

	ContactFolders *[]MicrosoftGraphContactFolder `json:"contactFolders,omitempty"`

	InferenceClassification *AnyOfmicrosoftGraphInferenceClassification `json:"inferenceClassification,omitempty"`
	isExplicitNullInferenceClassification bool `json:"-"`
	Photo *AnyOfmicrosoftGraphProfilePhoto `json:"photo,omitempty"`
	isExplicitNullPhoto bool `json:"-"`
	Photos *[]MicrosoftGraphProfilePhoto `json:"photos,omitempty"`

	Drive *AnyOfmicrosoftGraphDrive `json:"drive,omitempty"`
	isExplicitNullDrive bool `json:"-"`
	Drives *[]MicrosoftGraphDrive `json:"drives,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

	ManagedDevices *[]MicrosoftGraphManagedDevice `json:"managedDevices,omitempty"`

	ManagedAppRegistrations *[]MicrosoftGraphManagedAppRegistration `json:"managedAppRegistrations,omitempty"`

	DeviceManagementTroubleshootingEvents *[]MicrosoftGraphDeviceManagementTroubleshootingEvent `json:"deviceManagementTroubleshootingEvents,omitempty"`

	Planner *AnyOfmicrosoftGraphPlannerUser `json:"planner,omitempty"`
	isExplicitNullPlanner bool `json:"-"`
	Insights *AnyOfmicrosoftGraphOfficeGraphInsights `json:"insights,omitempty"`
	isExplicitNullInsights bool `json:"-"`
	Settings *AnyOfmicrosoftGraphUserSettings `json:"settings,omitempty"`
	isExplicitNullSettings bool `json:"-"`
	Onenote *AnyOfmicrosoftGraphOnenote `json:"onenote,omitempty"`
	isExplicitNullOnenote bool `json:"-"`
	Activities *[]MicrosoftGraphUserActivity `json:"activities,omitempty"`

	JoinedTeams *[]MicrosoftGraphGroup `json:"joinedTeams,omitempty"`

}

// GetAccountEnabled returns the AccountEnabled field if non-nil, zero value otherwise.
func (o *User) GetAccountEnabled() bool {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AccountEnabled
}

// GetAccountEnabledOk returns a tuple with the AccountEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAccountEnabledOk() (bool, bool) {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.AccountEnabled, true
}

// HasAccountEnabled returns a boolean if a field has been set.
func (o *User) HasAccountEnabled() bool {
	if o != nil && o.AccountEnabled != nil {
		return true
	}

	return false
}

// SetAccountEnabled gets a reference to the given bool and assigns it to the AccountEnabled field.
func (o *User) SetAccountEnabled(v bool) {
	o.AccountEnabled = &v
}

// SetAccountEnabledExplicitNull (un)sets AccountEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AccountEnabled value is set to nil even if false is passed
func (o *User) SetAccountEnabledExplicitNull(b bool) {
	o.AccountEnabled = nil
	o.isExplicitNullAccountEnabled = b
}
// GetAgeGroup returns the AgeGroup field if non-nil, zero value otherwise.
func (o *User) GetAgeGroup() string {
	if o == nil || o.AgeGroup == nil {
		var ret string
		return ret
	}
	return *o.AgeGroup
}

// GetAgeGroupOk returns a tuple with the AgeGroup field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAgeGroupOk() (string, bool) {
	if o == nil || o.AgeGroup == nil {
		var ret string
		return ret, false
	}
	return *o.AgeGroup, true
}

// HasAgeGroup returns a boolean if a field has been set.
func (o *User) HasAgeGroup() bool {
	if o != nil && o.AgeGroup != nil {
		return true
	}

	return false
}

// SetAgeGroup gets a reference to the given string and assigns it to the AgeGroup field.
func (o *User) SetAgeGroup(v string) {
	o.AgeGroup = &v
}

// SetAgeGroupExplicitNull (un)sets AgeGroup to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AgeGroup value is set to nil even if false is passed
func (o *User) SetAgeGroupExplicitNull(b bool) {
	o.AgeGroup = nil
	o.isExplicitNullAgeGroup = b
}
// GetAssignedLicenses returns the AssignedLicenses field if non-nil, zero value otherwise.
func (o *User) GetAssignedLicenses() []MicrosoftGraphAssignedLicense {
	if o == nil || o.AssignedLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret
	}
	return *o.AssignedLicenses
}

// GetAssignedLicensesOk returns a tuple with the AssignedLicenses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAssignedLicensesOk() ([]MicrosoftGraphAssignedLicense, bool) {
	if o == nil || o.AssignedLicenses == nil {
		var ret []MicrosoftGraphAssignedLicense
		return ret, false
	}
	return *o.AssignedLicenses, true
}

// HasAssignedLicenses returns a boolean if a field has been set.
func (o *User) HasAssignedLicenses() bool {
	if o != nil && o.AssignedLicenses != nil {
		return true
	}

	return false
}

// SetAssignedLicenses gets a reference to the given []MicrosoftGraphAssignedLicense and assigns it to the AssignedLicenses field.
func (o *User) SetAssignedLicenses(v []MicrosoftGraphAssignedLicense) {
	o.AssignedLicenses = &v
}

// GetAssignedPlans returns the AssignedPlans field if non-nil, zero value otherwise.
func (o *User) GetAssignedPlans() []MicrosoftGraphAssignedPlan {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret
	}
	return *o.AssignedPlans
}

// GetAssignedPlansOk returns a tuple with the AssignedPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAssignedPlansOk() ([]MicrosoftGraphAssignedPlan, bool) {
	if o == nil || o.AssignedPlans == nil {
		var ret []MicrosoftGraphAssignedPlan
		return ret, false
	}
	return *o.AssignedPlans, true
}

// HasAssignedPlans returns a boolean if a field has been set.
func (o *User) HasAssignedPlans() bool {
	if o != nil && o.AssignedPlans != nil {
		return true
	}

	return false
}

// SetAssignedPlans gets a reference to the given []MicrosoftGraphAssignedPlan and assigns it to the AssignedPlans field.
func (o *User) SetAssignedPlans(v []MicrosoftGraphAssignedPlan) {
	o.AssignedPlans = &v
}

// GetBusinessPhones returns the BusinessPhones field if non-nil, zero value otherwise.
func (o *User) GetBusinessPhones() []string {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret
	}
	return *o.BusinessPhones
}

// GetBusinessPhonesOk returns a tuple with the BusinessPhones field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetBusinessPhonesOk() ([]string, bool) {
	if o == nil || o.BusinessPhones == nil {
		var ret []string
		return ret, false
	}
	return *o.BusinessPhones, true
}

// HasBusinessPhones returns a boolean if a field has been set.
func (o *User) HasBusinessPhones() bool {
	if o != nil && o.BusinessPhones != nil {
		return true
	}

	return false
}

// SetBusinessPhones gets a reference to the given []string and assigns it to the BusinessPhones field.
func (o *User) SetBusinessPhones(v []string) {
	o.BusinessPhones = &v
}

// GetCity returns the City field if non-nil, zero value otherwise.
func (o *User) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCityOk() (string, bool) {
	if o == nil || o.City == nil {
		var ret string
		return ret, false
	}
	return *o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *User) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *User) SetCity(v string) {
	o.City = &v
}

// SetCityExplicitNull (un)sets City to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The City value is set to nil even if false is passed
func (o *User) SetCityExplicitNull(b bool) {
	o.City = nil
	o.isExplicitNullCity = b
}
// GetCompanyName returns the CompanyName field if non-nil, zero value otherwise.
func (o *User) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCompanyNameOk() (string, bool) {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret, false
	}
	return *o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *User) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *User) SetCompanyName(v string) {
	o.CompanyName = &v
}

// SetCompanyNameExplicitNull (un)sets CompanyName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CompanyName value is set to nil even if false is passed
func (o *User) SetCompanyNameExplicitNull(b bool) {
	o.CompanyName = nil
	o.isExplicitNullCompanyName = b
}
// GetConsentProvidedForMinor returns the ConsentProvidedForMinor field if non-nil, zero value otherwise.
func (o *User) GetConsentProvidedForMinor() string {
	if o == nil || o.ConsentProvidedForMinor == nil {
		var ret string
		return ret
	}
	return *o.ConsentProvidedForMinor
}

// GetConsentProvidedForMinorOk returns a tuple with the ConsentProvidedForMinor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetConsentProvidedForMinorOk() (string, bool) {
	if o == nil || o.ConsentProvidedForMinor == nil {
		var ret string
		return ret, false
	}
	return *o.ConsentProvidedForMinor, true
}

// HasConsentProvidedForMinor returns a boolean if a field has been set.
func (o *User) HasConsentProvidedForMinor() bool {
	if o != nil && o.ConsentProvidedForMinor != nil {
		return true
	}

	return false
}

// SetConsentProvidedForMinor gets a reference to the given string and assigns it to the ConsentProvidedForMinor field.
func (o *User) SetConsentProvidedForMinor(v string) {
	o.ConsentProvidedForMinor = &v
}

// SetConsentProvidedForMinorExplicitNull (un)sets ConsentProvidedForMinor to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ConsentProvidedForMinor value is set to nil even if false is passed
func (o *User) SetConsentProvidedForMinorExplicitNull(b bool) {
	o.ConsentProvidedForMinor = nil
	o.isExplicitNullConsentProvidedForMinor = b
}
// GetCountry returns the Country field if non-nil, zero value otherwise.
func (o *User) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCountryOk() (string, bool) {
	if o == nil || o.Country == nil {
		var ret string
		return ret, false
	}
	return *o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *User) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *User) SetCountry(v string) {
	o.Country = &v
}

// SetCountryExplicitNull (un)sets Country to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Country value is set to nil even if false is passed
func (o *User) SetCountryExplicitNull(b bool) {
	o.Country = nil
	o.isExplicitNullCountry = b
}
// GetDepartment returns the Department field if non-nil, zero value otherwise.
func (o *User) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDepartmentOk() (string, bool) {
	if o == nil || o.Department == nil {
		var ret string
		return ret, false
	}
	return *o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *User) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *User) SetDepartment(v string) {
	o.Department = &v
}

// SetDepartmentExplicitNull (un)sets Department to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Department value is set to nil even if false is passed
func (o *User) SetDepartmentExplicitNull(b bool) {
	o.Department = nil
	o.isExplicitNullDepartment = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *User) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *User) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *User) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *User) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetEmployeeId returns the EmployeeId field if non-nil, zero value otherwise.
func (o *User) GetEmployeeId() string {
	if o == nil || o.EmployeeId == nil {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmployeeIdOk() (string, bool) {
	if o == nil || o.EmployeeId == nil {
		var ret string
		return ret, false
	}
	return *o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *User) HasEmployeeId() bool {
	if o != nil && o.EmployeeId != nil {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *User) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// SetEmployeeIdExplicitNull (un)sets EmployeeId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EmployeeId value is set to nil even if false is passed
func (o *User) SetEmployeeIdExplicitNull(b bool) {
	o.EmployeeId = nil
	o.isExplicitNullEmployeeId = b
}
// GetFaxNumber returns the FaxNumber field if non-nil, zero value otherwise.
func (o *User) GetFaxNumber() string {
	if o == nil || o.FaxNumber == nil {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFaxNumberOk() (string, bool) {
	if o == nil || o.FaxNumber == nil {
		var ret string
		return ret, false
	}
	return *o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *User) HasFaxNumber() bool {
	if o != nil && o.FaxNumber != nil {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *User) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// SetFaxNumberExplicitNull (un)sets FaxNumber to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FaxNumber value is set to nil even if false is passed
func (o *User) SetFaxNumberExplicitNull(b bool) {
	o.FaxNumber = nil
	o.isExplicitNullFaxNumber = b
}
// GetGivenName returns the GivenName field if non-nil, zero value otherwise.
func (o *User) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetGivenNameOk() (string, bool) {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret, false
	}
	return *o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *User) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *User) SetGivenName(v string) {
	o.GivenName = &v
}

// SetGivenNameExplicitNull (un)sets GivenName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The GivenName value is set to nil even if false is passed
func (o *User) SetGivenNameExplicitNull(b bool) {
	o.GivenName = nil
	o.isExplicitNullGivenName = b
}
// GetImAddresses returns the ImAddresses field if non-nil, zero value otherwise.
func (o *User) GetImAddresses() []string {
	if o == nil || o.ImAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ImAddresses
}

// GetImAddressesOk returns a tuple with the ImAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetImAddressesOk() ([]string, bool) {
	if o == nil || o.ImAddresses == nil {
		var ret []string
		return ret, false
	}
	return *o.ImAddresses, true
}

// HasImAddresses returns a boolean if a field has been set.
func (o *User) HasImAddresses() bool {
	if o != nil && o.ImAddresses != nil {
		return true
	}

	return false
}

// SetImAddresses gets a reference to the given []string and assigns it to the ImAddresses field.
func (o *User) SetImAddresses(v []string) {
	o.ImAddresses = &v
}

// GetIsResourceAccount returns the IsResourceAccount field if non-nil, zero value otherwise.
func (o *User) GetIsResourceAccount() bool {
	if o == nil || o.IsResourceAccount == nil {
		var ret bool
		return ret
	}
	return *o.IsResourceAccount
}

// GetIsResourceAccountOk returns a tuple with the IsResourceAccount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetIsResourceAccountOk() (bool, bool) {
	if o == nil || o.IsResourceAccount == nil {
		var ret bool
		return ret, false
	}
	return *o.IsResourceAccount, true
}

// HasIsResourceAccount returns a boolean if a field has been set.
func (o *User) HasIsResourceAccount() bool {
	if o != nil && o.IsResourceAccount != nil {
		return true
	}

	return false
}

// SetIsResourceAccount gets a reference to the given bool and assigns it to the IsResourceAccount field.
func (o *User) SetIsResourceAccount(v bool) {
	o.IsResourceAccount = &v
}

// SetIsResourceAccountExplicitNull (un)sets IsResourceAccount to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsResourceAccount value is set to nil even if false is passed
func (o *User) SetIsResourceAccountExplicitNull(b bool) {
	o.IsResourceAccount = nil
	o.isExplicitNullIsResourceAccount = b
}
// GetJobTitle returns the JobTitle field if non-nil, zero value otherwise.
func (o *User) GetJobTitle() string {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetJobTitleOk() (string, bool) {
	if o == nil || o.JobTitle == nil {
		var ret string
		return ret, false
	}
	return *o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *User) HasJobTitle() bool {
	if o != nil && o.JobTitle != nil {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *User) SetJobTitle(v string) {
	o.JobTitle = &v
}

// SetJobTitleExplicitNull (un)sets JobTitle to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The JobTitle value is set to nil even if false is passed
func (o *User) SetJobTitleExplicitNull(b bool) {
	o.JobTitle = nil
	o.isExplicitNullJobTitle = b
}
// GetLegalAgeGroupClassification returns the LegalAgeGroupClassification field if non-nil, zero value otherwise.
func (o *User) GetLegalAgeGroupClassification() string {
	if o == nil || o.LegalAgeGroupClassification == nil {
		var ret string
		return ret
	}
	return *o.LegalAgeGroupClassification
}

// GetLegalAgeGroupClassificationOk returns a tuple with the LegalAgeGroupClassification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLegalAgeGroupClassificationOk() (string, bool) {
	if o == nil || o.LegalAgeGroupClassification == nil {
		var ret string
		return ret, false
	}
	return *o.LegalAgeGroupClassification, true
}

// HasLegalAgeGroupClassification returns a boolean if a field has been set.
func (o *User) HasLegalAgeGroupClassification() bool {
	if o != nil && o.LegalAgeGroupClassification != nil {
		return true
	}

	return false
}

// SetLegalAgeGroupClassification gets a reference to the given string and assigns it to the LegalAgeGroupClassification field.
func (o *User) SetLegalAgeGroupClassification(v string) {
	o.LegalAgeGroupClassification = &v
}

// SetLegalAgeGroupClassificationExplicitNull (un)sets LegalAgeGroupClassification to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LegalAgeGroupClassification value is set to nil even if false is passed
func (o *User) SetLegalAgeGroupClassificationExplicitNull(b bool) {
	o.LegalAgeGroupClassification = nil
	o.isExplicitNullLegalAgeGroupClassification = b
}
// GetLicenseAssignmentStates returns the LicenseAssignmentStates field if non-nil, zero value otherwise.
func (o *User) GetLicenseAssignmentStates() []AnyOfmicrosoftGraphLicenseAssignmentState {
	if o == nil || o.LicenseAssignmentStates == nil {
		var ret []AnyOfmicrosoftGraphLicenseAssignmentState
		return ret
	}
	return *o.LicenseAssignmentStates
}

// GetLicenseAssignmentStatesOk returns a tuple with the LicenseAssignmentStates field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLicenseAssignmentStatesOk() ([]AnyOfmicrosoftGraphLicenseAssignmentState, bool) {
	if o == nil || o.LicenseAssignmentStates == nil {
		var ret []AnyOfmicrosoftGraphLicenseAssignmentState
		return ret, false
	}
	return *o.LicenseAssignmentStates, true
}

// HasLicenseAssignmentStates returns a boolean if a field has been set.
func (o *User) HasLicenseAssignmentStates() bool {
	if o != nil && o.LicenseAssignmentStates != nil {
		return true
	}

	return false
}

// SetLicenseAssignmentStates gets a reference to the given []AnyOfmicrosoftGraphLicenseAssignmentState and assigns it to the LicenseAssignmentStates field.
func (o *User) SetLicenseAssignmentStates(v []AnyOfmicrosoftGraphLicenseAssignmentState) {
	o.LicenseAssignmentStates = &v
}

// GetMail returns the Mail field if non-nil, zero value otherwise.
func (o *User) GetMail() string {
	if o == nil || o.Mail == nil {
		var ret string
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMailOk() (string, bool) {
	if o == nil || o.Mail == nil {
		var ret string
		return ret, false
	}
	return *o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *User) HasMail() bool {
	if o != nil && o.Mail != nil {
		return true
	}

	return false
}

// SetMail gets a reference to the given string and assigns it to the Mail field.
func (o *User) SetMail(v string) {
	o.Mail = &v
}

// SetMailExplicitNull (un)sets Mail to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Mail value is set to nil even if false is passed
func (o *User) SetMailExplicitNull(b bool) {
	o.Mail = nil
	o.isExplicitNullMail = b
}
// GetMailNickname returns the MailNickname field if non-nil, zero value otherwise.
func (o *User) GetMailNickname() string {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret
	}
	return *o.MailNickname
}

// GetMailNicknameOk returns a tuple with the MailNickname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMailNicknameOk() (string, bool) {
	if o == nil || o.MailNickname == nil {
		var ret string
		return ret, false
	}
	return *o.MailNickname, true
}

// HasMailNickname returns a boolean if a field has been set.
func (o *User) HasMailNickname() bool {
	if o != nil && o.MailNickname != nil {
		return true
	}

	return false
}

// SetMailNickname gets a reference to the given string and assigns it to the MailNickname field.
func (o *User) SetMailNickname(v string) {
	o.MailNickname = &v
}

// SetMailNicknameExplicitNull (un)sets MailNickname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailNickname value is set to nil even if false is passed
func (o *User) SetMailNicknameExplicitNull(b bool) {
	o.MailNickname = nil
	o.isExplicitNullMailNickname = b
}
// GetMobilePhone returns the MobilePhone field if non-nil, zero value otherwise.
func (o *User) GetMobilePhone() string {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMobilePhoneOk() (string, bool) {
	if o == nil || o.MobilePhone == nil {
		var ret string
		return ret, false
	}
	return *o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *User) HasMobilePhone() bool {
	if o != nil && o.MobilePhone != nil {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *User) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

// SetMobilePhoneExplicitNull (un)sets MobilePhone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MobilePhone value is set to nil even if false is passed
func (o *User) SetMobilePhoneExplicitNull(b bool) {
	o.MobilePhone = nil
	o.isExplicitNullMobilePhone = b
}
// GetOnPremisesDistinguishedName returns the OnPremisesDistinguishedName field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesDistinguishedName() string {
	if o == nil || o.OnPremisesDistinguishedName == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesDistinguishedName
}

// GetOnPremisesDistinguishedNameOk returns a tuple with the OnPremisesDistinguishedName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesDistinguishedNameOk() (string, bool) {
	if o == nil || o.OnPremisesDistinguishedName == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesDistinguishedName, true
}

// HasOnPremisesDistinguishedName returns a boolean if a field has been set.
func (o *User) HasOnPremisesDistinguishedName() bool {
	if o != nil && o.OnPremisesDistinguishedName != nil {
		return true
	}

	return false
}

// SetOnPremisesDistinguishedName gets a reference to the given string and assigns it to the OnPremisesDistinguishedName field.
func (o *User) SetOnPremisesDistinguishedName(v string) {
	o.OnPremisesDistinguishedName = &v
}

// SetOnPremisesDistinguishedNameExplicitNull (un)sets OnPremisesDistinguishedName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesDistinguishedName value is set to nil even if false is passed
func (o *User) SetOnPremisesDistinguishedNameExplicitNull(b bool) {
	o.OnPremisesDistinguishedName = nil
	o.isExplicitNullOnPremisesDistinguishedName = b
}
// GetOnPremisesExtensionAttributes returns the OnPremisesExtensionAttributes field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesExtensionAttributes() AnyOfmicrosoftGraphOnPremisesExtensionAttributes {
	if o == nil || o.OnPremisesExtensionAttributes == nil {
		var ret AnyOfmicrosoftGraphOnPremisesExtensionAttributes
		return ret
	}
	return *o.OnPremisesExtensionAttributes
}

// GetOnPremisesExtensionAttributesOk returns a tuple with the OnPremisesExtensionAttributes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesExtensionAttributesOk() (AnyOfmicrosoftGraphOnPremisesExtensionAttributes, bool) {
	if o == nil || o.OnPremisesExtensionAttributes == nil {
		var ret AnyOfmicrosoftGraphOnPremisesExtensionAttributes
		return ret, false
	}
	return *o.OnPremisesExtensionAttributes, true
}

// HasOnPremisesExtensionAttributes returns a boolean if a field has been set.
func (o *User) HasOnPremisesExtensionAttributes() bool {
	if o != nil && o.OnPremisesExtensionAttributes != nil {
		return true
	}

	return false
}

// SetOnPremisesExtensionAttributes gets a reference to the given AnyOfmicrosoftGraphOnPremisesExtensionAttributes and assigns it to the OnPremisesExtensionAttributes field.
func (o *User) SetOnPremisesExtensionAttributes(v AnyOfmicrosoftGraphOnPremisesExtensionAttributes) {
	o.OnPremisesExtensionAttributes = &v
}

// SetOnPremisesExtensionAttributesExplicitNull (un)sets OnPremisesExtensionAttributes to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesExtensionAttributes value is set to nil even if false is passed
func (o *User) SetOnPremisesExtensionAttributesExplicitNull(b bool) {
	o.OnPremisesExtensionAttributes = nil
	o.isExplicitNullOnPremisesExtensionAttributes = b
}
// GetOnPremisesImmutableId returns the OnPremisesImmutableId field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesImmutableId() string {
	if o == nil || o.OnPremisesImmutableId == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesImmutableId
}

// GetOnPremisesImmutableIdOk returns a tuple with the OnPremisesImmutableId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesImmutableIdOk() (string, bool) {
	if o == nil || o.OnPremisesImmutableId == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesImmutableId, true
}

// HasOnPremisesImmutableId returns a boolean if a field has been set.
func (o *User) HasOnPremisesImmutableId() bool {
	if o != nil && o.OnPremisesImmutableId != nil {
		return true
	}

	return false
}

// SetOnPremisesImmutableId gets a reference to the given string and assigns it to the OnPremisesImmutableId field.
func (o *User) SetOnPremisesImmutableId(v string) {
	o.OnPremisesImmutableId = &v
}

// SetOnPremisesImmutableIdExplicitNull (un)sets OnPremisesImmutableId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesImmutableId value is set to nil even if false is passed
func (o *User) SetOnPremisesImmutableIdExplicitNull(b bool) {
	o.OnPremisesImmutableId = nil
	o.isExplicitNullOnPremisesImmutableId = b
}
// GetOnPremisesLastSyncDateTime returns the OnPremisesLastSyncDateTime field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesLastSyncDateTime() time.Time {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.OnPremisesLastSyncDateTime
}

// GetOnPremisesLastSyncDateTimeOk returns a tuple with the OnPremisesLastSyncDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesLastSyncDateTimeOk() (time.Time, bool) {
	if o == nil || o.OnPremisesLastSyncDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.OnPremisesLastSyncDateTime, true
}

// HasOnPremisesLastSyncDateTime returns a boolean if a field has been set.
func (o *User) HasOnPremisesLastSyncDateTime() bool {
	if o != nil && o.OnPremisesLastSyncDateTime != nil {
		return true
	}

	return false
}

// SetOnPremisesLastSyncDateTime gets a reference to the given time.Time and assigns it to the OnPremisesLastSyncDateTime field.
func (o *User) SetOnPremisesLastSyncDateTime(v time.Time) {
	o.OnPremisesLastSyncDateTime = &v
}

// SetOnPremisesLastSyncDateTimeExplicitNull (un)sets OnPremisesLastSyncDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesLastSyncDateTime value is set to nil even if false is passed
func (o *User) SetOnPremisesLastSyncDateTimeExplicitNull(b bool) {
	o.OnPremisesLastSyncDateTime = nil
	o.isExplicitNullOnPremisesLastSyncDateTime = b
}
// GetOnPremisesProvisioningErrors returns the OnPremisesProvisioningErrors field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesProvisioningErrors() []AnyOfmicrosoftGraphOnPremisesProvisioningError {
	if o == nil || o.OnPremisesProvisioningErrors == nil {
		var ret []AnyOfmicrosoftGraphOnPremisesProvisioningError
		return ret
	}
	return *o.OnPremisesProvisioningErrors
}

// GetOnPremisesProvisioningErrorsOk returns a tuple with the OnPremisesProvisioningErrors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesProvisioningErrorsOk() ([]AnyOfmicrosoftGraphOnPremisesProvisioningError, bool) {
	if o == nil || o.OnPremisesProvisioningErrors == nil {
		var ret []AnyOfmicrosoftGraphOnPremisesProvisioningError
		return ret, false
	}
	return *o.OnPremisesProvisioningErrors, true
}

// HasOnPremisesProvisioningErrors returns a boolean if a field has been set.
func (o *User) HasOnPremisesProvisioningErrors() bool {
	if o != nil && o.OnPremisesProvisioningErrors != nil {
		return true
	}

	return false
}

// SetOnPremisesProvisioningErrors gets a reference to the given []AnyOfmicrosoftGraphOnPremisesProvisioningError and assigns it to the OnPremisesProvisioningErrors field.
func (o *User) SetOnPremisesProvisioningErrors(v []AnyOfmicrosoftGraphOnPremisesProvisioningError) {
	o.OnPremisesProvisioningErrors = &v
}

// GetOnPremisesSecurityIdentifier returns the OnPremisesSecurityIdentifier field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesSecurityIdentifier() string {
	if o == nil || o.OnPremisesSecurityIdentifier == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesSecurityIdentifier
}

// GetOnPremisesSecurityIdentifierOk returns a tuple with the OnPremisesSecurityIdentifier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesSecurityIdentifierOk() (string, bool) {
	if o == nil || o.OnPremisesSecurityIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesSecurityIdentifier, true
}

// HasOnPremisesSecurityIdentifier returns a boolean if a field has been set.
func (o *User) HasOnPremisesSecurityIdentifier() bool {
	if o != nil && o.OnPremisesSecurityIdentifier != nil {
		return true
	}

	return false
}

// SetOnPremisesSecurityIdentifier gets a reference to the given string and assigns it to the OnPremisesSecurityIdentifier field.
func (o *User) SetOnPremisesSecurityIdentifier(v string) {
	o.OnPremisesSecurityIdentifier = &v
}

// SetOnPremisesSecurityIdentifierExplicitNull (un)sets OnPremisesSecurityIdentifier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSecurityIdentifier value is set to nil even if false is passed
func (o *User) SetOnPremisesSecurityIdentifierExplicitNull(b bool) {
	o.OnPremisesSecurityIdentifier = nil
	o.isExplicitNullOnPremisesSecurityIdentifier = b
}
// GetOnPremisesSyncEnabled returns the OnPremisesSyncEnabled field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesSyncEnabled() bool {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret
	}
	return *o.OnPremisesSyncEnabled
}

// GetOnPremisesSyncEnabledOk returns a tuple with the OnPremisesSyncEnabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesSyncEnabledOk() (bool, bool) {
	if o == nil || o.OnPremisesSyncEnabled == nil {
		var ret bool
		return ret, false
	}
	return *o.OnPremisesSyncEnabled, true
}

// HasOnPremisesSyncEnabled returns a boolean if a field has been set.
func (o *User) HasOnPremisesSyncEnabled() bool {
	if o != nil && o.OnPremisesSyncEnabled != nil {
		return true
	}

	return false
}

// SetOnPremisesSyncEnabled gets a reference to the given bool and assigns it to the OnPremisesSyncEnabled field.
func (o *User) SetOnPremisesSyncEnabled(v bool) {
	o.OnPremisesSyncEnabled = &v
}

// SetOnPremisesSyncEnabledExplicitNull (un)sets OnPremisesSyncEnabled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSyncEnabled value is set to nil even if false is passed
func (o *User) SetOnPremisesSyncEnabledExplicitNull(b bool) {
	o.OnPremisesSyncEnabled = nil
	o.isExplicitNullOnPremisesSyncEnabled = b
}
// GetOnPremisesDomainName returns the OnPremisesDomainName field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesDomainName() string {
	if o == nil || o.OnPremisesDomainName == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesDomainName
}

// GetOnPremisesDomainNameOk returns a tuple with the OnPremisesDomainName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesDomainNameOk() (string, bool) {
	if o == nil || o.OnPremisesDomainName == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesDomainName, true
}

// HasOnPremisesDomainName returns a boolean if a field has been set.
func (o *User) HasOnPremisesDomainName() bool {
	if o != nil && o.OnPremisesDomainName != nil {
		return true
	}

	return false
}

// SetOnPremisesDomainName gets a reference to the given string and assigns it to the OnPremisesDomainName field.
func (o *User) SetOnPremisesDomainName(v string) {
	o.OnPremisesDomainName = &v
}

// SetOnPremisesDomainNameExplicitNull (un)sets OnPremisesDomainName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesDomainName value is set to nil even if false is passed
func (o *User) SetOnPremisesDomainNameExplicitNull(b bool) {
	o.OnPremisesDomainName = nil
	o.isExplicitNullOnPremisesDomainName = b
}
// GetOnPremisesSamAccountName returns the OnPremisesSamAccountName field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesSamAccountName() string {
	if o == nil || o.OnPremisesSamAccountName == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesSamAccountName
}

// GetOnPremisesSamAccountNameOk returns a tuple with the OnPremisesSamAccountName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesSamAccountNameOk() (string, bool) {
	if o == nil || o.OnPremisesSamAccountName == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesSamAccountName, true
}

// HasOnPremisesSamAccountName returns a boolean if a field has been set.
func (o *User) HasOnPremisesSamAccountName() bool {
	if o != nil && o.OnPremisesSamAccountName != nil {
		return true
	}

	return false
}

// SetOnPremisesSamAccountName gets a reference to the given string and assigns it to the OnPremisesSamAccountName field.
func (o *User) SetOnPremisesSamAccountName(v string) {
	o.OnPremisesSamAccountName = &v
}

// SetOnPremisesSamAccountNameExplicitNull (un)sets OnPremisesSamAccountName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesSamAccountName value is set to nil even if false is passed
func (o *User) SetOnPremisesSamAccountNameExplicitNull(b bool) {
	o.OnPremisesSamAccountName = nil
	o.isExplicitNullOnPremisesSamAccountName = b
}
// GetOnPremisesUserPrincipalName returns the OnPremisesUserPrincipalName field if non-nil, zero value otherwise.
func (o *User) GetOnPremisesUserPrincipalName() string {
	if o == nil || o.OnPremisesUserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.OnPremisesUserPrincipalName
}

// GetOnPremisesUserPrincipalNameOk returns a tuple with the OnPremisesUserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnPremisesUserPrincipalNameOk() (string, bool) {
	if o == nil || o.OnPremisesUserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.OnPremisesUserPrincipalName, true
}

// HasOnPremisesUserPrincipalName returns a boolean if a field has been set.
func (o *User) HasOnPremisesUserPrincipalName() bool {
	if o != nil && o.OnPremisesUserPrincipalName != nil {
		return true
	}

	return false
}

// SetOnPremisesUserPrincipalName gets a reference to the given string and assigns it to the OnPremisesUserPrincipalName field.
func (o *User) SetOnPremisesUserPrincipalName(v string) {
	o.OnPremisesUserPrincipalName = &v
}

// SetOnPremisesUserPrincipalNameExplicitNull (un)sets OnPremisesUserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnPremisesUserPrincipalName value is set to nil even if false is passed
func (o *User) SetOnPremisesUserPrincipalNameExplicitNull(b bool) {
	o.OnPremisesUserPrincipalName = nil
	o.isExplicitNullOnPremisesUserPrincipalName = b
}
// GetOtherMails returns the OtherMails field if non-nil, zero value otherwise.
func (o *User) GetOtherMails() []string {
	if o == nil || o.OtherMails == nil {
		var ret []string
		return ret
	}
	return *o.OtherMails
}

// GetOtherMailsOk returns a tuple with the OtherMails field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOtherMailsOk() ([]string, bool) {
	if o == nil || o.OtherMails == nil {
		var ret []string
		return ret, false
	}
	return *o.OtherMails, true
}

// HasOtherMails returns a boolean if a field has been set.
func (o *User) HasOtherMails() bool {
	if o != nil && o.OtherMails != nil {
		return true
	}

	return false
}

// SetOtherMails gets a reference to the given []string and assigns it to the OtherMails field.
func (o *User) SetOtherMails(v []string) {
	o.OtherMails = &v
}

// GetPasswordPolicies returns the PasswordPolicies field if non-nil, zero value otherwise.
func (o *User) GetPasswordPolicies() string {
	if o == nil || o.PasswordPolicies == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicies
}

// GetPasswordPoliciesOk returns a tuple with the PasswordPolicies field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPasswordPoliciesOk() (string, bool) {
	if o == nil || o.PasswordPolicies == nil {
		var ret string
		return ret, false
	}
	return *o.PasswordPolicies, true
}

// HasPasswordPolicies returns a boolean if a field has been set.
func (o *User) HasPasswordPolicies() bool {
	if o != nil && o.PasswordPolicies != nil {
		return true
	}

	return false
}

// SetPasswordPolicies gets a reference to the given string and assigns it to the PasswordPolicies field.
func (o *User) SetPasswordPolicies(v string) {
	o.PasswordPolicies = &v
}

// SetPasswordPoliciesExplicitNull (un)sets PasswordPolicies to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordPolicies value is set to nil even if false is passed
func (o *User) SetPasswordPoliciesExplicitNull(b bool) {
	o.PasswordPolicies = nil
	o.isExplicitNullPasswordPolicies = b
}
// GetPasswordProfile returns the PasswordProfile field if non-nil, zero value otherwise.
func (o *User) GetPasswordProfile() AnyOfmicrosoftGraphPasswordProfile {
	if o == nil || o.PasswordProfile == nil {
		var ret AnyOfmicrosoftGraphPasswordProfile
		return ret
	}
	return *o.PasswordProfile
}

// GetPasswordProfileOk returns a tuple with the PasswordProfile field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPasswordProfileOk() (AnyOfmicrosoftGraphPasswordProfile, bool) {
	if o == nil || o.PasswordProfile == nil {
		var ret AnyOfmicrosoftGraphPasswordProfile
		return ret, false
	}
	return *o.PasswordProfile, true
}

// HasPasswordProfile returns a boolean if a field has been set.
func (o *User) HasPasswordProfile() bool {
	if o != nil && o.PasswordProfile != nil {
		return true
	}

	return false
}

// SetPasswordProfile gets a reference to the given AnyOfmicrosoftGraphPasswordProfile and assigns it to the PasswordProfile field.
func (o *User) SetPasswordProfile(v AnyOfmicrosoftGraphPasswordProfile) {
	o.PasswordProfile = &v
}

// SetPasswordProfileExplicitNull (un)sets PasswordProfile to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PasswordProfile value is set to nil even if false is passed
func (o *User) SetPasswordProfileExplicitNull(b bool) {
	o.PasswordProfile = nil
	o.isExplicitNullPasswordProfile = b
}
// GetOfficeLocation returns the OfficeLocation field if non-nil, zero value otherwise.
func (o *User) GetOfficeLocation() string {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret
	}
	return *o.OfficeLocation
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOfficeLocationOk() (string, bool) {
	if o == nil || o.OfficeLocation == nil {
		var ret string
		return ret, false
	}
	return *o.OfficeLocation, true
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *User) HasOfficeLocation() bool {
	if o != nil && o.OfficeLocation != nil {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given string and assigns it to the OfficeLocation field.
func (o *User) SetOfficeLocation(v string) {
	o.OfficeLocation = &v
}

// SetOfficeLocationExplicitNull (un)sets OfficeLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OfficeLocation value is set to nil even if false is passed
func (o *User) SetOfficeLocationExplicitNull(b bool) {
	o.OfficeLocation = nil
	o.isExplicitNullOfficeLocation = b
}
// GetPostalCode returns the PostalCode field if non-nil, zero value otherwise.
func (o *User) GetPostalCode() string {
	if o == nil || o.PostalCode == nil {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPostalCodeOk() (string, bool) {
	if o == nil || o.PostalCode == nil {
		var ret string
		return ret, false
	}
	return *o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *User) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *User) SetPostalCode(v string) {
	o.PostalCode = &v
}

// SetPostalCodeExplicitNull (un)sets PostalCode to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PostalCode value is set to nil even if false is passed
func (o *User) SetPostalCodeExplicitNull(b bool) {
	o.PostalCode = nil
	o.isExplicitNullPostalCode = b
}
// GetPreferredLanguage returns the PreferredLanguage field if non-nil, zero value otherwise.
func (o *User) GetPreferredLanguage() string {
	if o == nil || o.PreferredLanguage == nil {
		var ret string
		return ret
	}
	return *o.PreferredLanguage
}

// GetPreferredLanguageOk returns a tuple with the PreferredLanguage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPreferredLanguageOk() (string, bool) {
	if o == nil || o.PreferredLanguage == nil {
		var ret string
		return ret, false
	}
	return *o.PreferredLanguage, true
}

// HasPreferredLanguage returns a boolean if a field has been set.
func (o *User) HasPreferredLanguage() bool {
	if o != nil && o.PreferredLanguage != nil {
		return true
	}

	return false
}

// SetPreferredLanguage gets a reference to the given string and assigns it to the PreferredLanguage field.
func (o *User) SetPreferredLanguage(v string) {
	o.PreferredLanguage = &v
}

// SetPreferredLanguageExplicitNull (un)sets PreferredLanguage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreferredLanguage value is set to nil even if false is passed
func (o *User) SetPreferredLanguageExplicitNull(b bool) {
	o.PreferredLanguage = nil
	o.isExplicitNullPreferredLanguage = b
}
// GetProvisionedPlans returns the ProvisionedPlans field if non-nil, zero value otherwise.
func (o *User) GetProvisionedPlans() []MicrosoftGraphProvisionedPlan {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret
	}
	return *o.ProvisionedPlans
}

// GetProvisionedPlansOk returns a tuple with the ProvisionedPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetProvisionedPlansOk() ([]MicrosoftGraphProvisionedPlan, bool) {
	if o == nil || o.ProvisionedPlans == nil {
		var ret []MicrosoftGraphProvisionedPlan
		return ret, false
	}
	return *o.ProvisionedPlans, true
}

// HasProvisionedPlans returns a boolean if a field has been set.
func (o *User) HasProvisionedPlans() bool {
	if o != nil && o.ProvisionedPlans != nil {
		return true
	}

	return false
}

// SetProvisionedPlans gets a reference to the given []MicrosoftGraphProvisionedPlan and assigns it to the ProvisionedPlans field.
func (o *User) SetProvisionedPlans(v []MicrosoftGraphProvisionedPlan) {
	o.ProvisionedPlans = &v
}

// GetProxyAddresses returns the ProxyAddresses field if non-nil, zero value otherwise.
func (o *User) GetProxyAddresses() []string {
	if o == nil || o.ProxyAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ProxyAddresses
}

// GetProxyAddressesOk returns a tuple with the ProxyAddresses field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetProxyAddressesOk() ([]string, bool) {
	if o == nil || o.ProxyAddresses == nil {
		var ret []string
		return ret, false
	}
	return *o.ProxyAddresses, true
}

// HasProxyAddresses returns a boolean if a field has been set.
func (o *User) HasProxyAddresses() bool {
	if o != nil && o.ProxyAddresses != nil {
		return true
	}

	return false
}

// SetProxyAddresses gets a reference to the given []string and assigns it to the ProxyAddresses field.
func (o *User) SetProxyAddresses(v []string) {
	o.ProxyAddresses = &v
}

// GetShowInAddressList returns the ShowInAddressList field if non-nil, zero value otherwise.
func (o *User) GetShowInAddressList() bool {
	if o == nil || o.ShowInAddressList == nil {
		var ret bool
		return ret
	}
	return *o.ShowInAddressList
}

// GetShowInAddressListOk returns a tuple with the ShowInAddressList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetShowInAddressListOk() (bool, bool) {
	if o == nil || o.ShowInAddressList == nil {
		var ret bool
		return ret, false
	}
	return *o.ShowInAddressList, true
}

// HasShowInAddressList returns a boolean if a field has been set.
func (o *User) HasShowInAddressList() bool {
	if o != nil && o.ShowInAddressList != nil {
		return true
	}

	return false
}

// SetShowInAddressList gets a reference to the given bool and assigns it to the ShowInAddressList field.
func (o *User) SetShowInAddressList(v bool) {
	o.ShowInAddressList = &v
}

// SetShowInAddressListExplicitNull (un)sets ShowInAddressList to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowInAddressList value is set to nil even if false is passed
func (o *User) SetShowInAddressListExplicitNull(b bool) {
	o.ShowInAddressList = nil
	o.isExplicitNullShowInAddressList = b
}
// GetSignInSessionsValidFromDateTime returns the SignInSessionsValidFromDateTime field if non-nil, zero value otherwise.
func (o *User) GetSignInSessionsValidFromDateTime() time.Time {
	if o == nil || o.SignInSessionsValidFromDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.SignInSessionsValidFromDateTime
}

// GetSignInSessionsValidFromDateTimeOk returns a tuple with the SignInSessionsValidFromDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSignInSessionsValidFromDateTimeOk() (time.Time, bool) {
	if o == nil || o.SignInSessionsValidFromDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.SignInSessionsValidFromDateTime, true
}

// HasSignInSessionsValidFromDateTime returns a boolean if a field has been set.
func (o *User) HasSignInSessionsValidFromDateTime() bool {
	if o != nil && o.SignInSessionsValidFromDateTime != nil {
		return true
	}

	return false
}

// SetSignInSessionsValidFromDateTime gets a reference to the given time.Time and assigns it to the SignInSessionsValidFromDateTime field.
func (o *User) SetSignInSessionsValidFromDateTime(v time.Time) {
	o.SignInSessionsValidFromDateTime = &v
}

// SetSignInSessionsValidFromDateTimeExplicitNull (un)sets SignInSessionsValidFromDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SignInSessionsValidFromDateTime value is set to nil even if false is passed
func (o *User) SetSignInSessionsValidFromDateTimeExplicitNull(b bool) {
	o.SignInSessionsValidFromDateTime = nil
	o.isExplicitNullSignInSessionsValidFromDateTime = b
}
// GetState returns the State field if non-nil, zero value otherwise.
func (o *User) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *User) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *User) SetState(v string) {
	o.State = &v
}

// SetStateExplicitNull (un)sets State to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The State value is set to nil even if false is passed
func (o *User) SetStateExplicitNull(b bool) {
	o.State = nil
	o.isExplicitNullState = b
}
// GetStreetAddress returns the StreetAddress field if non-nil, zero value otherwise.
func (o *User) GetStreetAddress() string {
	if o == nil || o.StreetAddress == nil {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetStreetAddressOk() (string, bool) {
	if o == nil || o.StreetAddress == nil {
		var ret string
		return ret, false
	}
	return *o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *User) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *User) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// SetStreetAddressExplicitNull (un)sets StreetAddress to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The StreetAddress value is set to nil even if false is passed
func (o *User) SetStreetAddressExplicitNull(b bool) {
	o.StreetAddress = nil
	o.isExplicitNullStreetAddress = b
}
// GetSurname returns the Surname field if non-nil, zero value otherwise.
func (o *User) GetSurname() string {
	if o == nil || o.Surname == nil {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSurnameOk() (string, bool) {
	if o == nil || o.Surname == nil {
		var ret string
		return ret, false
	}
	return *o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *User) HasSurname() bool {
	if o != nil && o.Surname != nil {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *User) SetSurname(v string) {
	o.Surname = &v
}

// SetSurnameExplicitNull (un)sets Surname to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Surname value is set to nil even if false is passed
func (o *User) SetSurnameExplicitNull(b bool) {
	o.Surname = nil
	o.isExplicitNullSurname = b
}
// GetUsageLocation returns the UsageLocation field if non-nil, zero value otherwise.
func (o *User) GetUsageLocation() string {
	if o == nil || o.UsageLocation == nil {
		var ret string
		return ret
	}
	return *o.UsageLocation
}

// GetUsageLocationOk returns a tuple with the UsageLocation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUsageLocationOk() (string, bool) {
	if o == nil || o.UsageLocation == nil {
		var ret string
		return ret, false
	}
	return *o.UsageLocation, true
}

// HasUsageLocation returns a boolean if a field has been set.
func (o *User) HasUsageLocation() bool {
	if o != nil && o.UsageLocation != nil {
		return true
	}

	return false
}

// SetUsageLocation gets a reference to the given string and assigns it to the UsageLocation field.
func (o *User) SetUsageLocation(v string) {
	o.UsageLocation = &v
}

// SetUsageLocationExplicitNull (un)sets UsageLocation to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UsageLocation value is set to nil even if false is passed
func (o *User) SetUsageLocationExplicitNull(b bool) {
	o.UsageLocation = nil
	o.isExplicitNullUsageLocation = b
}
// GetUserPrincipalName returns the UserPrincipalName field if non-nil, zero value otherwise.
func (o *User) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUserPrincipalNameOk() (string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret, false
	}
	return *o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *User) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *User) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

// SetUserPrincipalNameExplicitNull (un)sets UserPrincipalName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserPrincipalName value is set to nil even if false is passed
func (o *User) SetUserPrincipalNameExplicitNull(b bool) {
	o.UserPrincipalName = nil
	o.isExplicitNullUserPrincipalName = b
}
// GetUserType returns the UserType field if non-nil, zero value otherwise.
func (o *User) GetUserType() string {
	if o == nil || o.UserType == nil {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUserTypeOk() (string, bool) {
	if o == nil || o.UserType == nil {
		var ret string
		return ret, false
	}
	return *o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *User) HasUserType() bool {
	if o != nil && o.UserType != nil {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *User) SetUserType(v string) {
	o.UserType = &v
}

// SetUserTypeExplicitNull (un)sets UserType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The UserType value is set to nil even if false is passed
func (o *User) SetUserTypeExplicitNull(b bool) {
	o.UserType = nil
	o.isExplicitNullUserType = b
}
// GetMailboxSettings returns the MailboxSettings field if non-nil, zero value otherwise.
func (o *User) GetMailboxSettings() AnyOfmicrosoftGraphMailboxSettings {
	if o == nil || o.MailboxSettings == nil {
		var ret AnyOfmicrosoftGraphMailboxSettings
		return ret
	}
	return *o.MailboxSettings
}

// GetMailboxSettingsOk returns a tuple with the MailboxSettings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMailboxSettingsOk() (AnyOfmicrosoftGraphMailboxSettings, bool) {
	if o == nil || o.MailboxSettings == nil {
		var ret AnyOfmicrosoftGraphMailboxSettings
		return ret, false
	}
	return *o.MailboxSettings, true
}

// HasMailboxSettings returns a boolean if a field has been set.
func (o *User) HasMailboxSettings() bool {
	if o != nil && o.MailboxSettings != nil {
		return true
	}

	return false
}

// SetMailboxSettings gets a reference to the given AnyOfmicrosoftGraphMailboxSettings and assigns it to the MailboxSettings field.
func (o *User) SetMailboxSettings(v AnyOfmicrosoftGraphMailboxSettings) {
	o.MailboxSettings = &v
}

// SetMailboxSettingsExplicitNull (un)sets MailboxSettings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MailboxSettings value is set to nil even if false is passed
func (o *User) SetMailboxSettingsExplicitNull(b bool) {
	o.MailboxSettings = nil
	o.isExplicitNullMailboxSettings = b
}
// GetDeviceEnrollmentLimit returns the DeviceEnrollmentLimit field if non-nil, zero value otherwise.
func (o *User) GetDeviceEnrollmentLimit() int32 {
	if o == nil || o.DeviceEnrollmentLimit == nil {
		var ret int32
		return ret
	}
	return *o.DeviceEnrollmentLimit
}

// GetDeviceEnrollmentLimitOk returns a tuple with the DeviceEnrollmentLimit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDeviceEnrollmentLimitOk() (int32, bool) {
	if o == nil || o.DeviceEnrollmentLimit == nil {
		var ret int32
		return ret, false
	}
	return *o.DeviceEnrollmentLimit, true
}

// HasDeviceEnrollmentLimit returns a boolean if a field has been set.
func (o *User) HasDeviceEnrollmentLimit() bool {
	if o != nil && o.DeviceEnrollmentLimit != nil {
		return true
	}

	return false
}

// SetDeviceEnrollmentLimit gets a reference to the given int32 and assigns it to the DeviceEnrollmentLimit field.
func (o *User) SetDeviceEnrollmentLimit(v int32) {
	o.DeviceEnrollmentLimit = &v
}

// GetAboutMe returns the AboutMe field if non-nil, zero value otherwise.
func (o *User) GetAboutMe() string {
	if o == nil || o.AboutMe == nil {
		var ret string
		return ret
	}
	return *o.AboutMe
}

// GetAboutMeOk returns a tuple with the AboutMe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAboutMeOk() (string, bool) {
	if o == nil || o.AboutMe == nil {
		var ret string
		return ret, false
	}
	return *o.AboutMe, true
}

// HasAboutMe returns a boolean if a field has been set.
func (o *User) HasAboutMe() bool {
	if o != nil && o.AboutMe != nil {
		return true
	}

	return false
}

// SetAboutMe gets a reference to the given string and assigns it to the AboutMe field.
func (o *User) SetAboutMe(v string) {
	o.AboutMe = &v
}

// SetAboutMeExplicitNull (un)sets AboutMe to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AboutMe value is set to nil even if false is passed
func (o *User) SetAboutMeExplicitNull(b bool) {
	o.AboutMe = nil
	o.isExplicitNullAboutMe = b
}
// GetBirthday returns the Birthday field if non-nil, zero value otherwise.
func (o *User) GetBirthday() time.Time {
	if o == nil || o.Birthday == nil {
		var ret time.Time
		return ret
	}
	return *o.Birthday
}

// GetBirthdayOk returns a tuple with the Birthday field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetBirthdayOk() (time.Time, bool) {
	if o == nil || o.Birthday == nil {
		var ret time.Time
		return ret, false
	}
	return *o.Birthday, true
}

// HasBirthday returns a boolean if a field has been set.
func (o *User) HasBirthday() bool {
	if o != nil && o.Birthday != nil {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given time.Time and assigns it to the Birthday field.
func (o *User) SetBirthday(v time.Time) {
	o.Birthday = &v
}

// GetHireDate returns the HireDate field if non-nil, zero value otherwise.
func (o *User) GetHireDate() time.Time {
	if o == nil || o.HireDate == nil {
		var ret time.Time
		return ret
	}
	return *o.HireDate
}

// GetHireDateOk returns a tuple with the HireDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetHireDateOk() (time.Time, bool) {
	if o == nil || o.HireDate == nil {
		var ret time.Time
		return ret, false
	}
	return *o.HireDate, true
}

// HasHireDate returns a boolean if a field has been set.
func (o *User) HasHireDate() bool {
	if o != nil && o.HireDate != nil {
		return true
	}

	return false
}

// SetHireDate gets a reference to the given time.Time and assigns it to the HireDate field.
func (o *User) SetHireDate(v time.Time) {
	o.HireDate = &v
}

// GetInterests returns the Interests field if non-nil, zero value otherwise.
func (o *User) GetInterests() []string {
	if o == nil || o.Interests == nil {
		var ret []string
		return ret
	}
	return *o.Interests
}

// GetInterestsOk returns a tuple with the Interests field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetInterestsOk() ([]string, bool) {
	if o == nil || o.Interests == nil {
		var ret []string
		return ret, false
	}
	return *o.Interests, true
}

// HasInterests returns a boolean if a field has been set.
func (o *User) HasInterests() bool {
	if o != nil && o.Interests != nil {
		return true
	}

	return false
}

// SetInterests gets a reference to the given []string and assigns it to the Interests field.
func (o *User) SetInterests(v []string) {
	o.Interests = &v
}

// GetMySite returns the MySite field if non-nil, zero value otherwise.
func (o *User) GetMySite() string {
	if o == nil || o.MySite == nil {
		var ret string
		return ret
	}
	return *o.MySite
}

// GetMySiteOk returns a tuple with the MySite field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMySiteOk() (string, bool) {
	if o == nil || o.MySite == nil {
		var ret string
		return ret, false
	}
	return *o.MySite, true
}

// HasMySite returns a boolean if a field has been set.
func (o *User) HasMySite() bool {
	if o != nil && o.MySite != nil {
		return true
	}

	return false
}

// SetMySite gets a reference to the given string and assigns it to the MySite field.
func (o *User) SetMySite(v string) {
	o.MySite = &v
}

// SetMySiteExplicitNull (un)sets MySite to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MySite value is set to nil even if false is passed
func (o *User) SetMySiteExplicitNull(b bool) {
	o.MySite = nil
	o.isExplicitNullMySite = b
}
// GetPastProjects returns the PastProjects field if non-nil, zero value otherwise.
func (o *User) GetPastProjects() []string {
	if o == nil || o.PastProjects == nil {
		var ret []string
		return ret
	}
	return *o.PastProjects
}

// GetPastProjectsOk returns a tuple with the PastProjects field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPastProjectsOk() ([]string, bool) {
	if o == nil || o.PastProjects == nil {
		var ret []string
		return ret, false
	}
	return *o.PastProjects, true
}

// HasPastProjects returns a boolean if a field has been set.
func (o *User) HasPastProjects() bool {
	if o != nil && o.PastProjects != nil {
		return true
	}

	return false
}

// SetPastProjects gets a reference to the given []string and assigns it to the PastProjects field.
func (o *User) SetPastProjects(v []string) {
	o.PastProjects = &v
}

// GetPreferredName returns the PreferredName field if non-nil, zero value otherwise.
func (o *User) GetPreferredName() string {
	if o == nil || o.PreferredName == nil {
		var ret string
		return ret
	}
	return *o.PreferredName
}

// GetPreferredNameOk returns a tuple with the PreferredName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPreferredNameOk() (string, bool) {
	if o == nil || o.PreferredName == nil {
		var ret string
		return ret, false
	}
	return *o.PreferredName, true
}

// HasPreferredName returns a boolean if a field has been set.
func (o *User) HasPreferredName() bool {
	if o != nil && o.PreferredName != nil {
		return true
	}

	return false
}

// SetPreferredName gets a reference to the given string and assigns it to the PreferredName field.
func (o *User) SetPreferredName(v string) {
	o.PreferredName = &v
}

// SetPreferredNameExplicitNull (un)sets PreferredName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PreferredName value is set to nil even if false is passed
func (o *User) SetPreferredNameExplicitNull(b bool) {
	o.PreferredName = nil
	o.isExplicitNullPreferredName = b
}
// GetResponsibilities returns the Responsibilities field if non-nil, zero value otherwise.
func (o *User) GetResponsibilities() []string {
	if o == nil || o.Responsibilities == nil {
		var ret []string
		return ret
	}
	return *o.Responsibilities
}

// GetResponsibilitiesOk returns a tuple with the Responsibilities field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetResponsibilitiesOk() ([]string, bool) {
	if o == nil || o.Responsibilities == nil {
		var ret []string
		return ret, false
	}
	return *o.Responsibilities, true
}

// HasResponsibilities returns a boolean if a field has been set.
func (o *User) HasResponsibilities() bool {
	if o != nil && o.Responsibilities != nil {
		return true
	}

	return false
}

// SetResponsibilities gets a reference to the given []string and assigns it to the Responsibilities field.
func (o *User) SetResponsibilities(v []string) {
	o.Responsibilities = &v
}

// GetSchools returns the Schools field if non-nil, zero value otherwise.
func (o *User) GetSchools() []string {
	if o == nil || o.Schools == nil {
		var ret []string
		return ret
	}
	return *o.Schools
}

// GetSchoolsOk returns a tuple with the Schools field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSchoolsOk() ([]string, bool) {
	if o == nil || o.Schools == nil {
		var ret []string
		return ret, false
	}
	return *o.Schools, true
}

// HasSchools returns a boolean if a field has been set.
func (o *User) HasSchools() bool {
	if o != nil && o.Schools != nil {
		return true
	}

	return false
}

// SetSchools gets a reference to the given []string and assigns it to the Schools field.
func (o *User) SetSchools(v []string) {
	o.Schools = &v
}

// GetSkills returns the Skills field if non-nil, zero value otherwise.
func (o *User) GetSkills() []string {
	if o == nil || o.Skills == nil {
		var ret []string
		return ret
	}
	return *o.Skills
}

// GetSkillsOk returns a tuple with the Skills field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSkillsOk() ([]string, bool) {
	if o == nil || o.Skills == nil {
		var ret []string
		return ret, false
	}
	return *o.Skills, true
}

// HasSkills returns a boolean if a field has been set.
func (o *User) HasSkills() bool {
	if o != nil && o.Skills != nil {
		return true
	}

	return false
}

// SetSkills gets a reference to the given []string and assigns it to the Skills field.
func (o *User) SetSkills(v []string) {
	o.Skills = &v
}

// GetOwnedDevices returns the OwnedDevices field if non-nil, zero value otherwise.
func (o *User) GetOwnedDevices() []MicrosoftGraphDirectoryObject {
	if o == nil || o.OwnedDevices == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.OwnedDevices
}

// GetOwnedDevicesOk returns a tuple with the OwnedDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOwnedDevicesOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.OwnedDevices == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.OwnedDevices, true
}

// HasOwnedDevices returns a boolean if a field has been set.
func (o *User) HasOwnedDevices() bool {
	if o != nil && o.OwnedDevices != nil {
		return true
	}

	return false
}

// SetOwnedDevices gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the OwnedDevices field.
func (o *User) SetOwnedDevices(v []MicrosoftGraphDirectoryObject) {
	o.OwnedDevices = &v
}

// GetRegisteredDevices returns the RegisteredDevices field if non-nil, zero value otherwise.
func (o *User) GetRegisteredDevices() []MicrosoftGraphDirectoryObject {
	if o == nil || o.RegisteredDevices == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.RegisteredDevices
}

// GetRegisteredDevicesOk returns a tuple with the RegisteredDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetRegisteredDevicesOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.RegisteredDevices == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.RegisteredDevices, true
}

// HasRegisteredDevices returns a boolean if a field has been set.
func (o *User) HasRegisteredDevices() bool {
	if o != nil && o.RegisteredDevices != nil {
		return true
	}

	return false
}

// SetRegisteredDevices gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the RegisteredDevices field.
func (o *User) SetRegisteredDevices(v []MicrosoftGraphDirectoryObject) {
	o.RegisteredDevices = &v
}

// GetManager returns the Manager field if non-nil, zero value otherwise.
func (o *User) GetManager() AnyOfmicrosoftGraphDirectoryObject {
	if o == nil || o.Manager == nil {
		var ret AnyOfmicrosoftGraphDirectoryObject
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetManagerOk() (AnyOfmicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.Manager == nil {
		var ret AnyOfmicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *User) HasManager() bool {
	if o != nil && o.Manager != nil {
		return true
	}

	return false
}

// SetManager gets a reference to the given AnyOfmicrosoftGraphDirectoryObject and assigns it to the Manager field.
func (o *User) SetManager(v AnyOfmicrosoftGraphDirectoryObject) {
	o.Manager = &v
}

// SetManagerExplicitNull (un)sets Manager to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Manager value is set to nil even if false is passed
func (o *User) SetManagerExplicitNull(b bool) {
	o.Manager = nil
	o.isExplicitNullManager = b
}
// GetDirectReports returns the DirectReports field if non-nil, zero value otherwise.
func (o *User) GetDirectReports() []MicrosoftGraphDirectoryObject {
	if o == nil || o.DirectReports == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.DirectReports
}

// GetDirectReportsOk returns a tuple with the DirectReports field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDirectReportsOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.DirectReports == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.DirectReports, true
}

// HasDirectReports returns a boolean if a field has been set.
func (o *User) HasDirectReports() bool {
	if o != nil && o.DirectReports != nil {
		return true
	}

	return false
}

// SetDirectReports gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the DirectReports field.
func (o *User) SetDirectReports(v []MicrosoftGraphDirectoryObject) {
	o.DirectReports = &v
}

// GetMemberOf returns the MemberOf field if non-nil, zero value otherwise.
func (o *User) GetMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.MemberOf
}

// GetMemberOfOk returns a tuple with the MemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.MemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.MemberOf, true
}

// HasMemberOf returns a boolean if a field has been set.
func (o *User) HasMemberOf() bool {
	if o != nil && o.MemberOf != nil {
		return true
	}

	return false
}

// SetMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the MemberOf field.
func (o *User) SetMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.MemberOf = &v
}

// GetCreatedObjects returns the CreatedObjects field if non-nil, zero value otherwise.
func (o *User) GetCreatedObjects() []MicrosoftGraphDirectoryObject {
	if o == nil || o.CreatedObjects == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.CreatedObjects
}

// GetCreatedObjectsOk returns a tuple with the CreatedObjects field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCreatedObjectsOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.CreatedObjects == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.CreatedObjects, true
}

// HasCreatedObjects returns a boolean if a field has been set.
func (o *User) HasCreatedObjects() bool {
	if o != nil && o.CreatedObjects != nil {
		return true
	}

	return false
}

// SetCreatedObjects gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the CreatedObjects field.
func (o *User) SetCreatedObjects(v []MicrosoftGraphDirectoryObject) {
	o.CreatedObjects = &v
}

// GetOwnedObjects returns the OwnedObjects field if non-nil, zero value otherwise.
func (o *User) GetOwnedObjects() []MicrosoftGraphDirectoryObject {
	if o == nil || o.OwnedObjects == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.OwnedObjects
}

// GetOwnedObjectsOk returns a tuple with the OwnedObjects field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOwnedObjectsOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.OwnedObjects == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.OwnedObjects, true
}

// HasOwnedObjects returns a boolean if a field has been set.
func (o *User) HasOwnedObjects() bool {
	if o != nil && o.OwnedObjects != nil {
		return true
	}

	return false
}

// SetOwnedObjects gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the OwnedObjects field.
func (o *User) SetOwnedObjects(v []MicrosoftGraphDirectoryObject) {
	o.OwnedObjects = &v
}

// GetLicenseDetails returns the LicenseDetails field if non-nil, zero value otherwise.
func (o *User) GetLicenseDetails() []MicrosoftGraphLicenseDetails {
	if o == nil || o.LicenseDetails == nil {
		var ret []MicrosoftGraphLicenseDetails
		return ret
	}
	return *o.LicenseDetails
}

// GetLicenseDetailsOk returns a tuple with the LicenseDetails field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLicenseDetailsOk() ([]MicrosoftGraphLicenseDetails, bool) {
	if o == nil || o.LicenseDetails == nil {
		var ret []MicrosoftGraphLicenseDetails
		return ret, false
	}
	return *o.LicenseDetails, true
}

// HasLicenseDetails returns a boolean if a field has been set.
func (o *User) HasLicenseDetails() bool {
	if o != nil && o.LicenseDetails != nil {
		return true
	}

	return false
}

// SetLicenseDetails gets a reference to the given []MicrosoftGraphLicenseDetails and assigns it to the LicenseDetails field.
func (o *User) SetLicenseDetails(v []MicrosoftGraphLicenseDetails) {
	o.LicenseDetails = &v
}

// GetTransitiveMemberOf returns the TransitiveMemberOf field if non-nil, zero value otherwise.
func (o *User) GetTransitiveMemberOf() []MicrosoftGraphDirectoryObject {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret
	}
	return *o.TransitiveMemberOf
}

// GetTransitiveMemberOfOk returns a tuple with the TransitiveMemberOf field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetTransitiveMemberOfOk() ([]MicrosoftGraphDirectoryObject, bool) {
	if o == nil || o.TransitiveMemberOf == nil {
		var ret []MicrosoftGraphDirectoryObject
		return ret, false
	}
	return *o.TransitiveMemberOf, true
}

// HasTransitiveMemberOf returns a boolean if a field has been set.
func (o *User) HasTransitiveMemberOf() bool {
	if o != nil && o.TransitiveMemberOf != nil {
		return true
	}

	return false
}

// SetTransitiveMemberOf gets a reference to the given []MicrosoftGraphDirectoryObject and assigns it to the TransitiveMemberOf field.
func (o *User) SetTransitiveMemberOf(v []MicrosoftGraphDirectoryObject) {
	o.TransitiveMemberOf = &v
}

// GetOutlook returns the Outlook field if non-nil, zero value otherwise.
func (o *User) GetOutlook() AnyOfmicrosoftGraphOutlookUser {
	if o == nil || o.Outlook == nil {
		var ret AnyOfmicrosoftGraphOutlookUser
		return ret
	}
	return *o.Outlook
}

// GetOutlookOk returns a tuple with the Outlook field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOutlookOk() (AnyOfmicrosoftGraphOutlookUser, bool) {
	if o == nil || o.Outlook == nil {
		var ret AnyOfmicrosoftGraphOutlookUser
		return ret, false
	}
	return *o.Outlook, true
}

// HasOutlook returns a boolean if a field has been set.
func (o *User) HasOutlook() bool {
	if o != nil && o.Outlook != nil {
		return true
	}

	return false
}

// SetOutlook gets a reference to the given AnyOfmicrosoftGraphOutlookUser and assigns it to the Outlook field.
func (o *User) SetOutlook(v AnyOfmicrosoftGraphOutlookUser) {
	o.Outlook = &v
}

// SetOutlookExplicitNull (un)sets Outlook to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Outlook value is set to nil even if false is passed
func (o *User) SetOutlookExplicitNull(b bool) {
	o.Outlook = nil
	o.isExplicitNullOutlook = b
}
// GetMessages returns the Messages field if non-nil, zero value otherwise.
func (o *User) GetMessages() []MicrosoftGraphMessage {
	if o == nil || o.Messages == nil {
		var ret []MicrosoftGraphMessage
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMessagesOk() ([]MicrosoftGraphMessage, bool) {
	if o == nil || o.Messages == nil {
		var ret []MicrosoftGraphMessage
		return ret, false
	}
	return *o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *User) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []MicrosoftGraphMessage and assigns it to the Messages field.
func (o *User) SetMessages(v []MicrosoftGraphMessage) {
	o.Messages = &v
}

// GetMailFolders returns the MailFolders field if non-nil, zero value otherwise.
func (o *User) GetMailFolders() []MicrosoftGraphMailFolder {
	if o == nil || o.MailFolders == nil {
		var ret []MicrosoftGraphMailFolder
		return ret
	}
	return *o.MailFolders
}

// GetMailFoldersOk returns a tuple with the MailFolders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMailFoldersOk() ([]MicrosoftGraphMailFolder, bool) {
	if o == nil || o.MailFolders == nil {
		var ret []MicrosoftGraphMailFolder
		return ret, false
	}
	return *o.MailFolders, true
}

// HasMailFolders returns a boolean if a field has been set.
func (o *User) HasMailFolders() bool {
	if o != nil && o.MailFolders != nil {
		return true
	}

	return false
}

// SetMailFolders gets a reference to the given []MicrosoftGraphMailFolder and assigns it to the MailFolders field.
func (o *User) SetMailFolders(v []MicrosoftGraphMailFolder) {
	o.MailFolders = &v
}

// GetCalendar returns the Calendar field if non-nil, zero value otherwise.
func (o *User) GetCalendar() AnyOfmicrosoftGraphCalendar {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCalendarOk() (AnyOfmicrosoftGraphCalendar, bool) {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret, false
	}
	return *o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *User) HasCalendar() bool {
	if o != nil && o.Calendar != nil {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given AnyOfmicrosoftGraphCalendar and assigns it to the Calendar field.
func (o *User) SetCalendar(v AnyOfmicrosoftGraphCalendar) {
	o.Calendar = &v
}

// SetCalendarExplicitNull (un)sets Calendar to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Calendar value is set to nil even if false is passed
func (o *User) SetCalendarExplicitNull(b bool) {
	o.Calendar = nil
	o.isExplicitNullCalendar = b
}
// GetCalendars returns the Calendars field if non-nil, zero value otherwise.
func (o *User) GetCalendars() []MicrosoftGraphCalendar {
	if o == nil || o.Calendars == nil {
		var ret []MicrosoftGraphCalendar
		return ret
	}
	return *o.Calendars
}

// GetCalendarsOk returns a tuple with the Calendars field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCalendarsOk() ([]MicrosoftGraphCalendar, bool) {
	if o == nil || o.Calendars == nil {
		var ret []MicrosoftGraphCalendar
		return ret, false
	}
	return *o.Calendars, true
}

// HasCalendars returns a boolean if a field has been set.
func (o *User) HasCalendars() bool {
	if o != nil && o.Calendars != nil {
		return true
	}

	return false
}

// SetCalendars gets a reference to the given []MicrosoftGraphCalendar and assigns it to the Calendars field.
func (o *User) SetCalendars(v []MicrosoftGraphCalendar) {
	o.Calendars = &v
}

// GetCalendarGroups returns the CalendarGroups field if non-nil, zero value otherwise.
func (o *User) GetCalendarGroups() []MicrosoftGraphCalendarGroup {
	if o == nil || o.CalendarGroups == nil {
		var ret []MicrosoftGraphCalendarGroup
		return ret
	}
	return *o.CalendarGroups
}

// GetCalendarGroupsOk returns a tuple with the CalendarGroups field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCalendarGroupsOk() ([]MicrosoftGraphCalendarGroup, bool) {
	if o == nil || o.CalendarGroups == nil {
		var ret []MicrosoftGraphCalendarGroup
		return ret, false
	}
	return *o.CalendarGroups, true
}

// HasCalendarGroups returns a boolean if a field has been set.
func (o *User) HasCalendarGroups() bool {
	if o != nil && o.CalendarGroups != nil {
		return true
	}

	return false
}

// SetCalendarGroups gets a reference to the given []MicrosoftGraphCalendarGroup and assigns it to the CalendarGroups field.
func (o *User) SetCalendarGroups(v []MicrosoftGraphCalendarGroup) {
	o.CalendarGroups = &v
}

// GetCalendarView returns the CalendarView field if non-nil, zero value otherwise.
func (o *User) GetCalendarView() []MicrosoftGraphEvent {
	if o == nil || o.CalendarView == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.CalendarView
}

// GetCalendarViewOk returns a tuple with the CalendarView field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCalendarViewOk() ([]MicrosoftGraphEvent, bool) {
	if o == nil || o.CalendarView == nil {
		var ret []MicrosoftGraphEvent
		return ret, false
	}
	return *o.CalendarView, true
}

// HasCalendarView returns a boolean if a field has been set.
func (o *User) HasCalendarView() bool {
	if o != nil && o.CalendarView != nil {
		return true
	}

	return false
}

// SetCalendarView gets a reference to the given []MicrosoftGraphEvent and assigns it to the CalendarView field.
func (o *User) SetCalendarView(v []MicrosoftGraphEvent) {
	o.CalendarView = &v
}

// GetEvents returns the Events field if non-nil, zero value otherwise.
func (o *User) GetEvents() []MicrosoftGraphEvent {
	if o == nil || o.Events == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEventsOk() ([]MicrosoftGraphEvent, bool) {
	if o == nil || o.Events == nil {
		var ret []MicrosoftGraphEvent
		return ret, false
	}
	return *o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *User) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []MicrosoftGraphEvent and assigns it to the Events field.
func (o *User) SetEvents(v []MicrosoftGraphEvent) {
	o.Events = &v
}

// GetPeople returns the People field if non-nil, zero value otherwise.
func (o *User) GetPeople() []MicrosoftGraphPerson {
	if o == nil || o.People == nil {
		var ret []MicrosoftGraphPerson
		return ret
	}
	return *o.People
}

// GetPeopleOk returns a tuple with the People field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPeopleOk() ([]MicrosoftGraphPerson, bool) {
	if o == nil || o.People == nil {
		var ret []MicrosoftGraphPerson
		return ret, false
	}
	return *o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *User) HasPeople() bool {
	if o != nil && o.People != nil {
		return true
	}

	return false
}

// SetPeople gets a reference to the given []MicrosoftGraphPerson and assigns it to the People field.
func (o *User) SetPeople(v []MicrosoftGraphPerson) {
	o.People = &v
}

// GetContacts returns the Contacts field if non-nil, zero value otherwise.
func (o *User) GetContacts() []MicrosoftGraphContact {
	if o == nil || o.Contacts == nil {
		var ret []MicrosoftGraphContact
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetContactsOk() ([]MicrosoftGraphContact, bool) {
	if o == nil || o.Contacts == nil {
		var ret []MicrosoftGraphContact
		return ret, false
	}
	return *o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *User) HasContacts() bool {
	if o != nil && o.Contacts != nil {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []MicrosoftGraphContact and assigns it to the Contacts field.
func (o *User) SetContacts(v []MicrosoftGraphContact) {
	o.Contacts = &v
}

// GetContactFolders returns the ContactFolders field if non-nil, zero value otherwise.
func (o *User) GetContactFolders() []MicrosoftGraphContactFolder {
	if o == nil || o.ContactFolders == nil {
		var ret []MicrosoftGraphContactFolder
		return ret
	}
	return *o.ContactFolders
}

// GetContactFoldersOk returns a tuple with the ContactFolders field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetContactFoldersOk() ([]MicrosoftGraphContactFolder, bool) {
	if o == nil || o.ContactFolders == nil {
		var ret []MicrosoftGraphContactFolder
		return ret, false
	}
	return *o.ContactFolders, true
}

// HasContactFolders returns a boolean if a field has been set.
func (o *User) HasContactFolders() bool {
	if o != nil && o.ContactFolders != nil {
		return true
	}

	return false
}

// SetContactFolders gets a reference to the given []MicrosoftGraphContactFolder and assigns it to the ContactFolders field.
func (o *User) SetContactFolders(v []MicrosoftGraphContactFolder) {
	o.ContactFolders = &v
}

// GetInferenceClassification returns the InferenceClassification field if non-nil, zero value otherwise.
func (o *User) GetInferenceClassification() AnyOfmicrosoftGraphInferenceClassification {
	if o == nil || o.InferenceClassification == nil {
		var ret AnyOfmicrosoftGraphInferenceClassification
		return ret
	}
	return *o.InferenceClassification
}

// GetInferenceClassificationOk returns a tuple with the InferenceClassification field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetInferenceClassificationOk() (AnyOfmicrosoftGraphInferenceClassification, bool) {
	if o == nil || o.InferenceClassification == nil {
		var ret AnyOfmicrosoftGraphInferenceClassification
		return ret, false
	}
	return *o.InferenceClassification, true
}

// HasInferenceClassification returns a boolean if a field has been set.
func (o *User) HasInferenceClassification() bool {
	if o != nil && o.InferenceClassification != nil {
		return true
	}

	return false
}

// SetInferenceClassification gets a reference to the given AnyOfmicrosoftGraphInferenceClassification and assigns it to the InferenceClassification field.
func (o *User) SetInferenceClassification(v AnyOfmicrosoftGraphInferenceClassification) {
	o.InferenceClassification = &v
}

// SetInferenceClassificationExplicitNull (un)sets InferenceClassification to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InferenceClassification value is set to nil even if false is passed
func (o *User) SetInferenceClassificationExplicitNull(b bool) {
	o.InferenceClassification = nil
	o.isExplicitNullInferenceClassification = b
}
// GetPhoto returns the Photo field if non-nil, zero value otherwise.
func (o *User) GetPhoto() AnyOfmicrosoftGraphProfilePhoto {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPhotoOk() (AnyOfmicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photo == nil {
		var ret AnyOfmicrosoftGraphProfilePhoto
		return ret, false
	}
	return *o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *User) HasPhoto() bool {
	if o != nil && o.Photo != nil {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given AnyOfmicrosoftGraphProfilePhoto and assigns it to the Photo field.
func (o *User) SetPhoto(v AnyOfmicrosoftGraphProfilePhoto) {
	o.Photo = &v
}

// SetPhotoExplicitNull (un)sets Photo to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Photo value is set to nil even if false is passed
func (o *User) SetPhotoExplicitNull(b bool) {
	o.Photo = nil
	o.isExplicitNullPhoto = b
}
// GetPhotos returns the Photos field if non-nil, zero value otherwise.
func (o *User) GetPhotos() []MicrosoftGraphProfilePhoto {
	if o == nil || o.Photos == nil {
		var ret []MicrosoftGraphProfilePhoto
		return ret
	}
	return *o.Photos
}

// GetPhotosOk returns a tuple with the Photos field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPhotosOk() ([]MicrosoftGraphProfilePhoto, bool) {
	if o == nil || o.Photos == nil {
		var ret []MicrosoftGraphProfilePhoto
		return ret, false
	}
	return *o.Photos, true
}

// HasPhotos returns a boolean if a field has been set.
func (o *User) HasPhotos() bool {
	if o != nil && o.Photos != nil {
		return true
	}

	return false
}

// SetPhotos gets a reference to the given []MicrosoftGraphProfilePhoto and assigns it to the Photos field.
func (o *User) SetPhotos(v []MicrosoftGraphProfilePhoto) {
	o.Photos = &v
}

// GetDrive returns the Drive field if non-nil, zero value otherwise.
func (o *User) GetDrive() AnyOfmicrosoftGraphDrive {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret
	}
	return *o.Drive
}

// GetDriveOk returns a tuple with the Drive field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDriveOk() (AnyOfmicrosoftGraphDrive, bool) {
	if o == nil || o.Drive == nil {
		var ret AnyOfmicrosoftGraphDrive
		return ret, false
	}
	return *o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *User) HasDrive() bool {
	if o != nil && o.Drive != nil {
		return true
	}

	return false
}

// SetDrive gets a reference to the given AnyOfmicrosoftGraphDrive and assigns it to the Drive field.
func (o *User) SetDrive(v AnyOfmicrosoftGraphDrive) {
	o.Drive = &v
}

// SetDriveExplicitNull (un)sets Drive to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Drive value is set to nil even if false is passed
func (o *User) SetDriveExplicitNull(b bool) {
	o.Drive = nil
	o.isExplicitNullDrive = b
}
// GetDrives returns the Drives field if non-nil, zero value otherwise.
func (o *User) GetDrives() []MicrosoftGraphDrive {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret
	}
	return *o.Drives
}

// GetDrivesOk returns a tuple with the Drives field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDrivesOk() ([]MicrosoftGraphDrive, bool) {
	if o == nil || o.Drives == nil {
		var ret []MicrosoftGraphDrive
		return ret, false
	}
	return *o.Drives, true
}

// HasDrives returns a boolean if a field has been set.
func (o *User) HasDrives() bool {
	if o != nil && o.Drives != nil {
		return true
	}

	return false
}

// SetDrives gets a reference to the given []MicrosoftGraphDrive and assigns it to the Drives field.
func (o *User) SetDrives(v []MicrosoftGraphDrive) {
	o.Drives = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *User) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *User) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *User) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}

// GetManagedDevices returns the ManagedDevices field if non-nil, zero value otherwise.
func (o *User) GetManagedDevices() []MicrosoftGraphManagedDevice {
	if o == nil || o.ManagedDevices == nil {
		var ret []MicrosoftGraphManagedDevice
		return ret
	}
	return *o.ManagedDevices
}

// GetManagedDevicesOk returns a tuple with the ManagedDevices field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetManagedDevicesOk() ([]MicrosoftGraphManagedDevice, bool) {
	if o == nil || o.ManagedDevices == nil {
		var ret []MicrosoftGraphManagedDevice
		return ret, false
	}
	return *o.ManagedDevices, true
}

// HasManagedDevices returns a boolean if a field has been set.
func (o *User) HasManagedDevices() bool {
	if o != nil && o.ManagedDevices != nil {
		return true
	}

	return false
}

// SetManagedDevices gets a reference to the given []MicrosoftGraphManagedDevice and assigns it to the ManagedDevices field.
func (o *User) SetManagedDevices(v []MicrosoftGraphManagedDevice) {
	o.ManagedDevices = &v
}

// GetManagedAppRegistrations returns the ManagedAppRegistrations field if non-nil, zero value otherwise.
func (o *User) GetManagedAppRegistrations() []MicrosoftGraphManagedAppRegistration {
	if o == nil || o.ManagedAppRegistrations == nil {
		var ret []MicrosoftGraphManagedAppRegistration
		return ret
	}
	return *o.ManagedAppRegistrations
}

// GetManagedAppRegistrationsOk returns a tuple with the ManagedAppRegistrations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetManagedAppRegistrationsOk() ([]MicrosoftGraphManagedAppRegistration, bool) {
	if o == nil || o.ManagedAppRegistrations == nil {
		var ret []MicrosoftGraphManagedAppRegistration
		return ret, false
	}
	return *o.ManagedAppRegistrations, true
}

// HasManagedAppRegistrations returns a boolean if a field has been set.
func (o *User) HasManagedAppRegistrations() bool {
	if o != nil && o.ManagedAppRegistrations != nil {
		return true
	}

	return false
}

// SetManagedAppRegistrations gets a reference to the given []MicrosoftGraphManagedAppRegistration and assigns it to the ManagedAppRegistrations field.
func (o *User) SetManagedAppRegistrations(v []MicrosoftGraphManagedAppRegistration) {
	o.ManagedAppRegistrations = &v
}

// GetDeviceManagementTroubleshootingEvents returns the DeviceManagementTroubleshootingEvents field if non-nil, zero value otherwise.
func (o *User) GetDeviceManagementTroubleshootingEvents() []MicrosoftGraphDeviceManagementTroubleshootingEvent {
	if o == nil || o.DeviceManagementTroubleshootingEvents == nil {
		var ret []MicrosoftGraphDeviceManagementTroubleshootingEvent
		return ret
	}
	return *o.DeviceManagementTroubleshootingEvents
}

// GetDeviceManagementTroubleshootingEventsOk returns a tuple with the DeviceManagementTroubleshootingEvents field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDeviceManagementTroubleshootingEventsOk() ([]MicrosoftGraphDeviceManagementTroubleshootingEvent, bool) {
	if o == nil || o.DeviceManagementTroubleshootingEvents == nil {
		var ret []MicrosoftGraphDeviceManagementTroubleshootingEvent
		return ret, false
	}
	return *o.DeviceManagementTroubleshootingEvents, true
}

// HasDeviceManagementTroubleshootingEvents returns a boolean if a field has been set.
func (o *User) HasDeviceManagementTroubleshootingEvents() bool {
	if o != nil && o.DeviceManagementTroubleshootingEvents != nil {
		return true
	}

	return false
}

// SetDeviceManagementTroubleshootingEvents gets a reference to the given []MicrosoftGraphDeviceManagementTroubleshootingEvent and assigns it to the DeviceManagementTroubleshootingEvents field.
func (o *User) SetDeviceManagementTroubleshootingEvents(v []MicrosoftGraphDeviceManagementTroubleshootingEvent) {
	o.DeviceManagementTroubleshootingEvents = &v
}

// GetPlanner returns the Planner field if non-nil, zero value otherwise.
func (o *User) GetPlanner() AnyOfmicrosoftGraphPlannerUser {
	if o == nil || o.Planner == nil {
		var ret AnyOfmicrosoftGraphPlannerUser
		return ret
	}
	return *o.Planner
}

// GetPlannerOk returns a tuple with the Planner field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPlannerOk() (AnyOfmicrosoftGraphPlannerUser, bool) {
	if o == nil || o.Planner == nil {
		var ret AnyOfmicrosoftGraphPlannerUser
		return ret, false
	}
	return *o.Planner, true
}

// HasPlanner returns a boolean if a field has been set.
func (o *User) HasPlanner() bool {
	if o != nil && o.Planner != nil {
		return true
	}

	return false
}

// SetPlanner gets a reference to the given AnyOfmicrosoftGraphPlannerUser and assigns it to the Planner field.
func (o *User) SetPlanner(v AnyOfmicrosoftGraphPlannerUser) {
	o.Planner = &v
}

// SetPlannerExplicitNull (un)sets Planner to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Planner value is set to nil even if false is passed
func (o *User) SetPlannerExplicitNull(b bool) {
	o.Planner = nil
	o.isExplicitNullPlanner = b
}
// GetInsights returns the Insights field if non-nil, zero value otherwise.
func (o *User) GetInsights() AnyOfmicrosoftGraphOfficeGraphInsights {
	if o == nil || o.Insights == nil {
		var ret AnyOfmicrosoftGraphOfficeGraphInsights
		return ret
	}
	return *o.Insights
}

// GetInsightsOk returns a tuple with the Insights field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetInsightsOk() (AnyOfmicrosoftGraphOfficeGraphInsights, bool) {
	if o == nil || o.Insights == nil {
		var ret AnyOfmicrosoftGraphOfficeGraphInsights
		return ret, false
	}
	return *o.Insights, true
}

// HasInsights returns a boolean if a field has been set.
func (o *User) HasInsights() bool {
	if o != nil && o.Insights != nil {
		return true
	}

	return false
}

// SetInsights gets a reference to the given AnyOfmicrosoftGraphOfficeGraphInsights and assigns it to the Insights field.
func (o *User) SetInsights(v AnyOfmicrosoftGraphOfficeGraphInsights) {
	o.Insights = &v
}

// SetInsightsExplicitNull (un)sets Insights to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Insights value is set to nil even if false is passed
func (o *User) SetInsightsExplicitNull(b bool) {
	o.Insights = nil
	o.isExplicitNullInsights = b
}
// GetSettings returns the Settings field if non-nil, zero value otherwise.
func (o *User) GetSettings() AnyOfmicrosoftGraphUserSettings {
	if o == nil || o.Settings == nil {
		var ret AnyOfmicrosoftGraphUserSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetSettingsOk() (AnyOfmicrosoftGraphUserSettings, bool) {
	if o == nil || o.Settings == nil {
		var ret AnyOfmicrosoftGraphUserSettings
		return ret, false
	}
	return *o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *User) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AnyOfmicrosoftGraphUserSettings and assigns it to the Settings field.
func (o *User) SetSettings(v AnyOfmicrosoftGraphUserSettings) {
	o.Settings = &v
}

// SetSettingsExplicitNull (un)sets Settings to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Settings value is set to nil even if false is passed
func (o *User) SetSettingsExplicitNull(b bool) {
	o.Settings = nil
	o.isExplicitNullSettings = b
}
// GetOnenote returns the Onenote field if non-nil, zero value otherwise.
func (o *User) GetOnenote() AnyOfmicrosoftGraphOnenote {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret
	}
	return *o.Onenote
}

// GetOnenoteOk returns a tuple with the Onenote field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetOnenoteOk() (AnyOfmicrosoftGraphOnenote, bool) {
	if o == nil || o.Onenote == nil {
		var ret AnyOfmicrosoftGraphOnenote
		return ret, false
	}
	return *o.Onenote, true
}

// HasOnenote returns a boolean if a field has been set.
func (o *User) HasOnenote() bool {
	if o != nil && o.Onenote != nil {
		return true
	}

	return false
}

// SetOnenote gets a reference to the given AnyOfmicrosoftGraphOnenote and assigns it to the Onenote field.
func (o *User) SetOnenote(v AnyOfmicrosoftGraphOnenote) {
	o.Onenote = &v
}

// SetOnenoteExplicitNull (un)sets Onenote to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Onenote value is set to nil even if false is passed
func (o *User) SetOnenoteExplicitNull(b bool) {
	o.Onenote = nil
	o.isExplicitNullOnenote = b
}
// GetActivities returns the Activities field if non-nil, zero value otherwise.
func (o *User) GetActivities() []MicrosoftGraphUserActivity {
	if o == nil || o.Activities == nil {
		var ret []MicrosoftGraphUserActivity
		return ret
	}
	return *o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetActivitiesOk() ([]MicrosoftGraphUserActivity, bool) {
	if o == nil || o.Activities == nil {
		var ret []MicrosoftGraphUserActivity
		return ret, false
	}
	return *o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *User) HasActivities() bool {
	if o != nil && o.Activities != nil {
		return true
	}

	return false
}

// SetActivities gets a reference to the given []MicrosoftGraphUserActivity and assigns it to the Activities field.
func (o *User) SetActivities(v []MicrosoftGraphUserActivity) {
	o.Activities = &v
}

// GetJoinedTeams returns the JoinedTeams field if non-nil, zero value otherwise.
func (o *User) GetJoinedTeams() []MicrosoftGraphGroup {
	if o == nil || o.JoinedTeams == nil {
		var ret []MicrosoftGraphGroup
		return ret
	}
	return *o.JoinedTeams
}

// GetJoinedTeamsOk returns a tuple with the JoinedTeams field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *User) GetJoinedTeamsOk() ([]MicrosoftGraphGroup, bool) {
	if o == nil || o.JoinedTeams == nil {
		var ret []MicrosoftGraphGroup
		return ret, false
	}
	return *o.JoinedTeams, true
}

// HasJoinedTeams returns a boolean if a field has been set.
func (o *User) HasJoinedTeams() bool {
	if o != nil && o.JoinedTeams != nil {
		return true
	}

	return false
}

// SetJoinedTeams gets a reference to the given []MicrosoftGraphGroup and assigns it to the JoinedTeams field.
func (o *User) SetJoinedTeams(v []MicrosoftGraphGroup) {
	o.JoinedTeams = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o User) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountEnabled == nil {
		if o.isExplicitNullAccountEnabled {
			toSerialize["accountEnabled"] = o.AccountEnabled
		}
	} else {
		toSerialize["accountEnabled"] = o.AccountEnabled
	}
	if o.AgeGroup == nil {
		if o.isExplicitNullAgeGroup {
			toSerialize["ageGroup"] = o.AgeGroup
		}
	} else {
		toSerialize["ageGroup"] = o.AgeGroup
	}
	if o.AssignedLicenses != nil {
		toSerialize["assignedLicenses"] = o.AssignedLicenses
	}
	if o.AssignedPlans != nil {
		toSerialize["assignedPlans"] = o.AssignedPlans
	}
	if o.BusinessPhones != nil {
		toSerialize["businessPhones"] = o.BusinessPhones
	}
	if o.City == nil {
		if o.isExplicitNullCity {
			toSerialize["city"] = o.City
		}
	} else {
		toSerialize["city"] = o.City
	}
	if o.CompanyName == nil {
		if o.isExplicitNullCompanyName {
			toSerialize["companyName"] = o.CompanyName
		}
	} else {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.ConsentProvidedForMinor == nil {
		if o.isExplicitNullConsentProvidedForMinor {
			toSerialize["consentProvidedForMinor"] = o.ConsentProvidedForMinor
		}
	} else {
		toSerialize["consentProvidedForMinor"] = o.ConsentProvidedForMinor
	}
	if o.Country == nil {
		if o.isExplicitNullCountry {
			toSerialize["country"] = o.Country
		}
	} else {
		toSerialize["country"] = o.Country
	}
	if o.Department == nil {
		if o.isExplicitNullDepartment {
			toSerialize["department"] = o.Department
		}
	} else {
		toSerialize["department"] = o.Department
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.EmployeeId == nil {
		if o.isExplicitNullEmployeeId {
			toSerialize["employeeId"] = o.EmployeeId
		}
	} else {
		toSerialize["employeeId"] = o.EmployeeId
	}
	if o.FaxNumber == nil {
		if o.isExplicitNullFaxNumber {
			toSerialize["faxNumber"] = o.FaxNumber
		}
	} else {
		toSerialize["faxNumber"] = o.FaxNumber
	}
	if o.GivenName == nil {
		if o.isExplicitNullGivenName {
			toSerialize["givenName"] = o.GivenName
		}
	} else {
		toSerialize["givenName"] = o.GivenName
	}
	if o.ImAddresses != nil {
		toSerialize["imAddresses"] = o.ImAddresses
	}
	if o.IsResourceAccount == nil {
		if o.isExplicitNullIsResourceAccount {
			toSerialize["isResourceAccount"] = o.IsResourceAccount
		}
	} else {
		toSerialize["isResourceAccount"] = o.IsResourceAccount
	}
	if o.JobTitle == nil {
		if o.isExplicitNullJobTitle {
			toSerialize["jobTitle"] = o.JobTitle
		}
	} else {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if o.LegalAgeGroupClassification == nil {
		if o.isExplicitNullLegalAgeGroupClassification {
			toSerialize["legalAgeGroupClassification"] = o.LegalAgeGroupClassification
		}
	} else {
		toSerialize["legalAgeGroupClassification"] = o.LegalAgeGroupClassification
	}
	if o.LicenseAssignmentStates != nil {
		toSerialize["licenseAssignmentStates"] = o.LicenseAssignmentStates
	}
	if o.Mail == nil {
		if o.isExplicitNullMail {
			toSerialize["mail"] = o.Mail
		}
	} else {
		toSerialize["mail"] = o.Mail
	}
	if o.MailNickname == nil {
		if o.isExplicitNullMailNickname {
			toSerialize["mailNickname"] = o.MailNickname
		}
	} else {
		toSerialize["mailNickname"] = o.MailNickname
	}
	if o.MobilePhone == nil {
		if o.isExplicitNullMobilePhone {
			toSerialize["mobilePhone"] = o.MobilePhone
		}
	} else {
		toSerialize["mobilePhone"] = o.MobilePhone
	}
	if o.OnPremisesDistinguishedName == nil {
		if o.isExplicitNullOnPremisesDistinguishedName {
			toSerialize["onPremisesDistinguishedName"] = o.OnPremisesDistinguishedName
		}
	} else {
		toSerialize["onPremisesDistinguishedName"] = o.OnPremisesDistinguishedName
	}
	if o.OnPremisesExtensionAttributes == nil {
		if o.isExplicitNullOnPremisesExtensionAttributes {
			toSerialize["onPremisesExtensionAttributes"] = o.OnPremisesExtensionAttributes
		}
	} else {
		toSerialize["onPremisesExtensionAttributes"] = o.OnPremisesExtensionAttributes
	}
	if o.OnPremisesImmutableId == nil {
		if o.isExplicitNullOnPremisesImmutableId {
			toSerialize["onPremisesImmutableId"] = o.OnPremisesImmutableId
		}
	} else {
		toSerialize["onPremisesImmutableId"] = o.OnPremisesImmutableId
	}
	if o.OnPremisesLastSyncDateTime == nil {
		if o.isExplicitNullOnPremisesLastSyncDateTime {
			toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
		}
	} else {
		toSerialize["onPremisesLastSyncDateTime"] = o.OnPremisesLastSyncDateTime
	}
	if o.OnPremisesProvisioningErrors != nil {
		toSerialize["onPremisesProvisioningErrors"] = o.OnPremisesProvisioningErrors
	}
	if o.OnPremisesSecurityIdentifier == nil {
		if o.isExplicitNullOnPremisesSecurityIdentifier {
			toSerialize["onPremisesSecurityIdentifier"] = o.OnPremisesSecurityIdentifier
		}
	} else {
		toSerialize["onPremisesSecurityIdentifier"] = o.OnPremisesSecurityIdentifier
	}
	if o.OnPremisesSyncEnabled == nil {
		if o.isExplicitNullOnPremisesSyncEnabled {
			toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
		}
	} else {
		toSerialize["onPremisesSyncEnabled"] = o.OnPremisesSyncEnabled
	}
	if o.OnPremisesDomainName == nil {
		if o.isExplicitNullOnPremisesDomainName {
			toSerialize["onPremisesDomainName"] = o.OnPremisesDomainName
		}
	} else {
		toSerialize["onPremisesDomainName"] = o.OnPremisesDomainName
	}
	if o.OnPremisesSamAccountName == nil {
		if o.isExplicitNullOnPremisesSamAccountName {
			toSerialize["onPremisesSamAccountName"] = o.OnPremisesSamAccountName
		}
	} else {
		toSerialize["onPremisesSamAccountName"] = o.OnPremisesSamAccountName
	}
	if o.OnPremisesUserPrincipalName == nil {
		if o.isExplicitNullOnPremisesUserPrincipalName {
			toSerialize["onPremisesUserPrincipalName"] = o.OnPremisesUserPrincipalName
		}
	} else {
		toSerialize["onPremisesUserPrincipalName"] = o.OnPremisesUserPrincipalName
	}
	if o.OtherMails != nil {
		toSerialize["otherMails"] = o.OtherMails
	}
	if o.PasswordPolicies == nil {
		if o.isExplicitNullPasswordPolicies {
			toSerialize["passwordPolicies"] = o.PasswordPolicies
		}
	} else {
		toSerialize["passwordPolicies"] = o.PasswordPolicies
	}
	if o.PasswordProfile == nil {
		if o.isExplicitNullPasswordProfile {
			toSerialize["passwordProfile"] = o.PasswordProfile
		}
	} else {
		toSerialize["passwordProfile"] = o.PasswordProfile
	}
	if o.OfficeLocation == nil {
		if o.isExplicitNullOfficeLocation {
			toSerialize["officeLocation"] = o.OfficeLocation
		}
	} else {
		toSerialize["officeLocation"] = o.OfficeLocation
	}
	if o.PostalCode == nil {
		if o.isExplicitNullPostalCode {
			toSerialize["postalCode"] = o.PostalCode
		}
	} else {
		toSerialize["postalCode"] = o.PostalCode
	}
	if o.PreferredLanguage == nil {
		if o.isExplicitNullPreferredLanguage {
			toSerialize["preferredLanguage"] = o.PreferredLanguage
		}
	} else {
		toSerialize["preferredLanguage"] = o.PreferredLanguage
	}
	if o.ProvisionedPlans != nil {
		toSerialize["provisionedPlans"] = o.ProvisionedPlans
	}
	if o.ProxyAddresses != nil {
		toSerialize["proxyAddresses"] = o.ProxyAddresses
	}
	if o.ShowInAddressList == nil {
		if o.isExplicitNullShowInAddressList {
			toSerialize["showInAddressList"] = o.ShowInAddressList
		}
	} else {
		toSerialize["showInAddressList"] = o.ShowInAddressList
	}
	if o.SignInSessionsValidFromDateTime == nil {
		if o.isExplicitNullSignInSessionsValidFromDateTime {
			toSerialize["signInSessionsValidFromDateTime"] = o.SignInSessionsValidFromDateTime
		}
	} else {
		toSerialize["signInSessionsValidFromDateTime"] = o.SignInSessionsValidFromDateTime
	}
	if o.State == nil {
		if o.isExplicitNullState {
			toSerialize["state"] = o.State
		}
	} else {
		toSerialize["state"] = o.State
	}
	if o.StreetAddress == nil {
		if o.isExplicitNullStreetAddress {
			toSerialize["streetAddress"] = o.StreetAddress
		}
	} else {
		toSerialize["streetAddress"] = o.StreetAddress
	}
	if o.Surname == nil {
		if o.isExplicitNullSurname {
			toSerialize["surname"] = o.Surname
		}
	} else {
		toSerialize["surname"] = o.Surname
	}
	if o.UsageLocation == nil {
		if o.isExplicitNullUsageLocation {
			toSerialize["usageLocation"] = o.UsageLocation
		}
	} else {
		toSerialize["usageLocation"] = o.UsageLocation
	}
	if o.UserPrincipalName == nil {
		if o.isExplicitNullUserPrincipalName {
			toSerialize["userPrincipalName"] = o.UserPrincipalName
		}
	} else {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}
	if o.UserType == nil {
		if o.isExplicitNullUserType {
			toSerialize["userType"] = o.UserType
		}
	} else {
		toSerialize["userType"] = o.UserType
	}
	if o.MailboxSettings == nil {
		if o.isExplicitNullMailboxSettings {
			toSerialize["mailboxSettings"] = o.MailboxSettings
		}
	} else {
		toSerialize["mailboxSettings"] = o.MailboxSettings
	}
	if o.DeviceEnrollmentLimit != nil {
		toSerialize["deviceEnrollmentLimit"] = o.DeviceEnrollmentLimit
	}
	if o.AboutMe == nil {
		if o.isExplicitNullAboutMe {
			toSerialize["aboutMe"] = o.AboutMe
		}
	} else {
		toSerialize["aboutMe"] = o.AboutMe
	}
	if o.Birthday != nil {
		toSerialize["birthday"] = o.Birthday
	}
	if o.HireDate != nil {
		toSerialize["hireDate"] = o.HireDate
	}
	if o.Interests != nil {
		toSerialize["interests"] = o.Interests
	}
	if o.MySite == nil {
		if o.isExplicitNullMySite {
			toSerialize["mySite"] = o.MySite
		}
	} else {
		toSerialize["mySite"] = o.MySite
	}
	if o.PastProjects != nil {
		toSerialize["pastProjects"] = o.PastProjects
	}
	if o.PreferredName == nil {
		if o.isExplicitNullPreferredName {
			toSerialize["preferredName"] = o.PreferredName
		}
	} else {
		toSerialize["preferredName"] = o.PreferredName
	}
	if o.Responsibilities != nil {
		toSerialize["responsibilities"] = o.Responsibilities
	}
	if o.Schools != nil {
		toSerialize["schools"] = o.Schools
	}
	if o.Skills != nil {
		toSerialize["skills"] = o.Skills
	}
	if o.OwnedDevices != nil {
		toSerialize["ownedDevices"] = o.OwnedDevices
	}
	if o.RegisteredDevices != nil {
		toSerialize["registeredDevices"] = o.RegisteredDevices
	}
	if o.Manager == nil {
		if o.isExplicitNullManager {
			toSerialize["manager"] = o.Manager
		}
	} else {
		toSerialize["manager"] = o.Manager
	}
	if o.DirectReports != nil {
		toSerialize["directReports"] = o.DirectReports
	}
	if o.MemberOf != nil {
		toSerialize["memberOf"] = o.MemberOf
	}
	if o.CreatedObjects != nil {
		toSerialize["createdObjects"] = o.CreatedObjects
	}
	if o.OwnedObjects != nil {
		toSerialize["ownedObjects"] = o.OwnedObjects
	}
	if o.LicenseDetails != nil {
		toSerialize["licenseDetails"] = o.LicenseDetails
	}
	if o.TransitiveMemberOf != nil {
		toSerialize["transitiveMemberOf"] = o.TransitiveMemberOf
	}
	if o.Outlook == nil {
		if o.isExplicitNullOutlook {
			toSerialize["outlook"] = o.Outlook
		}
	} else {
		toSerialize["outlook"] = o.Outlook
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.MailFolders != nil {
		toSerialize["mailFolders"] = o.MailFolders
	}
	if o.Calendar == nil {
		if o.isExplicitNullCalendar {
			toSerialize["calendar"] = o.Calendar
		}
	} else {
		toSerialize["calendar"] = o.Calendar
	}
	if o.Calendars != nil {
		toSerialize["calendars"] = o.Calendars
	}
	if o.CalendarGroups != nil {
		toSerialize["calendarGroups"] = o.CalendarGroups
	}
	if o.CalendarView != nil {
		toSerialize["calendarView"] = o.CalendarView
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.People != nil {
		toSerialize["people"] = o.People
	}
	if o.Contacts != nil {
		toSerialize["contacts"] = o.Contacts
	}
	if o.ContactFolders != nil {
		toSerialize["contactFolders"] = o.ContactFolders
	}
	if o.InferenceClassification == nil {
		if o.isExplicitNullInferenceClassification {
			toSerialize["inferenceClassification"] = o.InferenceClassification
		}
	} else {
		toSerialize["inferenceClassification"] = o.InferenceClassification
	}
	if o.Photo == nil {
		if o.isExplicitNullPhoto {
			toSerialize["photo"] = o.Photo
		}
	} else {
		toSerialize["photo"] = o.Photo
	}
	if o.Photos != nil {
		toSerialize["photos"] = o.Photos
	}
	if o.Drive == nil {
		if o.isExplicitNullDrive {
			toSerialize["drive"] = o.Drive
		}
	} else {
		toSerialize["drive"] = o.Drive
	}
	if o.Drives != nil {
		toSerialize["drives"] = o.Drives
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.ManagedDevices != nil {
		toSerialize["managedDevices"] = o.ManagedDevices
	}
	if o.ManagedAppRegistrations != nil {
		toSerialize["managedAppRegistrations"] = o.ManagedAppRegistrations
	}
	if o.DeviceManagementTroubleshootingEvents != nil {
		toSerialize["deviceManagementTroubleshootingEvents"] = o.DeviceManagementTroubleshootingEvents
	}
	if o.Planner == nil {
		if o.isExplicitNullPlanner {
			toSerialize["planner"] = o.Planner
		}
	} else {
		toSerialize["planner"] = o.Planner
	}
	if o.Insights == nil {
		if o.isExplicitNullInsights {
			toSerialize["insights"] = o.Insights
		}
	} else {
		toSerialize["insights"] = o.Insights
	}
	if o.Settings == nil {
		if o.isExplicitNullSettings {
			toSerialize["settings"] = o.Settings
		}
	} else {
		toSerialize["settings"] = o.Settings
	}
	if o.Onenote == nil {
		if o.isExplicitNullOnenote {
			toSerialize["onenote"] = o.Onenote
		}
	} else {
		toSerialize["onenote"] = o.Onenote
	}
	if o.Activities != nil {
		toSerialize["activities"] = o.Activities
	}
	if o.JoinedTeams != nil {
		toSerialize["joinedTeams"] = o.JoinedTeams
	}
	return json.Marshal(toSerialize)
}


