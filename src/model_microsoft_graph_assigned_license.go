/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphAssignedLicense struct for MicrosoftGraphAssignedLicense
type MicrosoftGraphAssignedLicense struct {
	DisabledPlans *[]string `json:"disabledPlans,omitempty"`

	SkuId *string `json:"skuId,omitempty"`
	isExplicitNullSkuId bool `json:"-"`
}

// GetDisabledPlans returns the DisabledPlans field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAssignedLicense) GetDisabledPlans() []string {
	if o == nil || o.DisabledPlans == nil {
		var ret []string
		return ret
	}
	return *o.DisabledPlans
}

// GetDisabledPlansOk returns a tuple with the DisabledPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAssignedLicense) GetDisabledPlansOk() ([]string, bool) {
	if o == nil || o.DisabledPlans == nil {
		var ret []string
		return ret, false
	}
	return *o.DisabledPlans, true
}

// HasDisabledPlans returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedLicense) HasDisabledPlans() bool {
	if o != nil && o.DisabledPlans != nil {
		return true
	}

	return false
}

// SetDisabledPlans gets a reference to the given []string and assigns it to the DisabledPlans field.
func (o *MicrosoftGraphAssignedLicense) SetDisabledPlans(v []string) {
	o.DisabledPlans = &v
}

// GetSkuId returns the SkuId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphAssignedLicense) GetSkuId() string {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphAssignedLicense) GetSkuIdOk() (string, bool) {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret, false
	}
	return *o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *MicrosoftGraphAssignedLicense) HasSkuId() bool {
	if o != nil && o.SkuId != nil {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *MicrosoftGraphAssignedLicense) SetSkuId(v string) {
	o.SkuId = &v
}

// SetSkuIdExplicitNull (un)sets SkuId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SkuId value is set to nil even if false is passed
func (o *MicrosoftGraphAssignedLicense) SetSkuIdExplicitNull(b bool) {
	o.SkuId = nil
	o.isExplicitNullSkuId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphAssignedLicense) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisabledPlans != nil {
		toSerialize["disabledPlans"] = o.DisabledPlans
	}
	if o.SkuId == nil {
		if o.isExplicitNullSkuId {
			toSerialize["skuId"] = o.SkuId
		}
	} else {
		toSerialize["skuId"] = o.SkuId
	}
	return json.Marshal(toSerialize)
}


