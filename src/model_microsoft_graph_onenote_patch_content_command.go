/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphOnenotePatchContentCommand struct for MicrosoftGraphOnenotePatchContentCommand
type MicrosoftGraphOnenotePatchContentCommand struct {
	Action *AnyOfmicrosoftGraphOnenotePatchActionType `json:"action,omitempty"`

	Target *string `json:"target,omitempty"`

	Content *string `json:"content,omitempty"`
	isExplicitNullContent bool `json:"-"`
	Position *AnyOfmicrosoftGraphOnenotePatchInsertPosition `json:"position,omitempty"`
	isExplicitNullPosition bool `json:"-"`
}

// GetAction returns the Action field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetAction() AnyOfmicrosoftGraphOnenotePatchActionType {
	if o == nil || o.Action == nil {
		var ret AnyOfmicrosoftGraphOnenotePatchActionType
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetActionOk() (AnyOfmicrosoftGraphOnenotePatchActionType, bool) {
	if o == nil || o.Action == nil {
		var ret AnyOfmicrosoftGraphOnenotePatchActionType
		return ret, false
	}
	return *o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given AnyOfmicrosoftGraphOnenotePatchActionType and assigns it to the Action field.
func (o *MicrosoftGraphOnenotePatchContentCommand) SetAction(v AnyOfmicrosoftGraphOnenotePatchActionType) {
	o.Action = &v
}

// GetTarget returns the Target field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetTargetOk() (string, bool) {
	if o == nil || o.Target == nil {
		var ret string
		return ret, false
	}
	return *o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *MicrosoftGraphOnenotePatchContentCommand) SetTarget(v string) {
	o.Target = &v
}

// GetContent returns the Content field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetContentOk() (string, bool) {
	if o == nil || o.Content == nil {
		var ret string
		return ret, false
	}
	return *o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *MicrosoftGraphOnenotePatchContentCommand) SetContent(v string) {
	o.Content = &v
}

// SetContentExplicitNull (un)sets Content to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Content value is set to nil even if false is passed
func (o *MicrosoftGraphOnenotePatchContentCommand) SetContentExplicitNull(b bool) {
	o.Content = nil
	o.isExplicitNullContent = b
}
// GetPosition returns the Position field if non-nil, zero value otherwise.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetPosition() AnyOfmicrosoftGraphOnenotePatchInsertPosition {
	if o == nil || o.Position == nil {
		var ret AnyOfmicrosoftGraphOnenotePatchInsertPosition
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) GetPositionOk() (AnyOfmicrosoftGraphOnenotePatchInsertPosition, bool) {
	if o == nil || o.Position == nil {
		var ret AnyOfmicrosoftGraphOnenotePatchInsertPosition
		return ret, false
	}
	return *o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *MicrosoftGraphOnenotePatchContentCommand) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given AnyOfmicrosoftGraphOnenotePatchInsertPosition and assigns it to the Position field.
func (o *MicrosoftGraphOnenotePatchContentCommand) SetPosition(v AnyOfmicrosoftGraphOnenotePatchInsertPosition) {
	o.Position = &v
}

// SetPositionExplicitNull (un)sets Position to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Position value is set to nil even if false is passed
func (o *MicrosoftGraphOnenotePatchContentCommand) SetPositionExplicitNull(b bool) {
	o.Position = nil
	o.isExplicitNullPosition = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphOnenotePatchContentCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Content == nil {
		if o.isExplicitNullContent {
			toSerialize["content"] = o.Content
		}
	} else {
		toSerialize["content"] = o.Content
	}
	if o.Position == nil {
		if o.isExplicitNullPosition {
			toSerialize["position"] = o.Position
		}
	} else {
		toSerialize["position"] = o.Position
	}
	return json.Marshal(toSerialize)
}


