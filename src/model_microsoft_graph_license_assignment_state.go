/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphLicenseAssignmentState struct for MicrosoftGraphLicenseAssignmentState
type MicrosoftGraphLicenseAssignmentState struct {
	SkuId *string `json:"skuId,omitempty"`
	isExplicitNullSkuId bool `json:"-"`
	DisabledPlans *[]string `json:"disabledPlans,omitempty"`

	AssignedByGroup *string `json:"assignedByGroup,omitempty"`
	isExplicitNullAssignedByGroup bool `json:"-"`
	State *string `json:"state,omitempty"`
	isExplicitNullState bool `json:"-"`
	Error *string `json:"error,omitempty"`
	isExplicitNullError bool `json:"-"`
}

// GetSkuId returns the SkuId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseAssignmentState) GetSkuId() string {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseAssignmentState) GetSkuIdOk() (string, bool) {
	if o == nil || o.SkuId == nil {
		var ret string
		return ret, false
	}
	return *o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseAssignmentState) HasSkuId() bool {
	if o != nil && o.SkuId != nil {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *MicrosoftGraphLicenseAssignmentState) SetSkuId(v string) {
	o.SkuId = &v
}

// SetSkuIdExplicitNull (un)sets SkuId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SkuId value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseAssignmentState) SetSkuIdExplicitNull(b bool) {
	o.SkuId = nil
	o.isExplicitNullSkuId = b
}
// GetDisabledPlans returns the DisabledPlans field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseAssignmentState) GetDisabledPlans() []string {
	if o == nil || o.DisabledPlans == nil {
		var ret []string
		return ret
	}
	return *o.DisabledPlans
}

// GetDisabledPlansOk returns a tuple with the DisabledPlans field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseAssignmentState) GetDisabledPlansOk() ([]string, bool) {
	if o == nil || o.DisabledPlans == nil {
		var ret []string
		return ret, false
	}
	return *o.DisabledPlans, true
}

// HasDisabledPlans returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseAssignmentState) HasDisabledPlans() bool {
	if o != nil && o.DisabledPlans != nil {
		return true
	}

	return false
}

// SetDisabledPlans gets a reference to the given []string and assigns it to the DisabledPlans field.
func (o *MicrosoftGraphLicenseAssignmentState) SetDisabledPlans(v []string) {
	o.DisabledPlans = &v
}

// GetAssignedByGroup returns the AssignedByGroup field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseAssignmentState) GetAssignedByGroup() string {
	if o == nil || o.AssignedByGroup == nil {
		var ret string
		return ret
	}
	return *o.AssignedByGroup
}

// GetAssignedByGroupOk returns a tuple with the AssignedByGroup field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseAssignmentState) GetAssignedByGroupOk() (string, bool) {
	if o == nil || o.AssignedByGroup == nil {
		var ret string
		return ret, false
	}
	return *o.AssignedByGroup, true
}

// HasAssignedByGroup returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseAssignmentState) HasAssignedByGroup() bool {
	if o != nil && o.AssignedByGroup != nil {
		return true
	}

	return false
}

// SetAssignedByGroup gets a reference to the given string and assigns it to the AssignedByGroup field.
func (o *MicrosoftGraphLicenseAssignmentState) SetAssignedByGroup(v string) {
	o.AssignedByGroup = &v
}

// SetAssignedByGroupExplicitNull (un)sets AssignedByGroup to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AssignedByGroup value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseAssignmentState) SetAssignedByGroupExplicitNull(b bool) {
	o.AssignedByGroup = nil
	o.isExplicitNullAssignedByGroup = b
}
// GetState returns the State field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseAssignmentState) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseAssignmentState) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseAssignmentState) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *MicrosoftGraphLicenseAssignmentState) SetState(v string) {
	o.State = &v
}

// SetStateExplicitNull (un)sets State to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The State value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseAssignmentState) SetStateExplicitNull(b bool) {
	o.State = nil
	o.isExplicitNullState = b
}
// GetError returns the Error field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLicenseAssignmentState) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLicenseAssignmentState) GetErrorOk() (string, bool) {
	if o == nil || o.Error == nil {
		var ret string
		return ret, false
	}
	return *o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MicrosoftGraphLicenseAssignmentState) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *MicrosoftGraphLicenseAssignmentState) SetError(v string) {
	o.Error = &v
}

// SetErrorExplicitNull (un)sets Error to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Error value is set to nil even if false is passed
func (o *MicrosoftGraphLicenseAssignmentState) SetErrorExplicitNull(b bool) {
	o.Error = nil
	o.isExplicitNullError = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphLicenseAssignmentState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuId == nil {
		if o.isExplicitNullSkuId {
			toSerialize["skuId"] = o.SkuId
		}
	} else {
		toSerialize["skuId"] = o.SkuId
	}
	if o.DisabledPlans != nil {
		toSerialize["disabledPlans"] = o.DisabledPlans
	}
	if o.AssignedByGroup == nil {
		if o.isExplicitNullAssignedByGroup {
			toSerialize["assignedByGroup"] = o.AssignedByGroup
		}
	} else {
		toSerialize["assignedByGroup"] = o.AssignedByGroup
	}
	if o.State == nil {
		if o.isExplicitNullState {
			toSerialize["state"] = o.State
		}
	} else {
		toSerialize["state"] = o.State
	}
	if o.Error == nil {
		if o.isExplicitNullError {
			toSerialize["error"] = o.Error
		}
	} else {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}


