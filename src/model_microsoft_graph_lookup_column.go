/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphLookupColumn struct for MicrosoftGraphLookupColumn
type MicrosoftGraphLookupColumn struct {
	AllowMultipleValues *bool `json:"allowMultipleValues,omitempty"`
	isExplicitNullAllowMultipleValues bool `json:"-"`
	AllowUnlimitedLength *bool `json:"allowUnlimitedLength,omitempty"`
	isExplicitNullAllowUnlimitedLength bool `json:"-"`
	ColumnName *string `json:"columnName,omitempty"`
	isExplicitNullColumnName bool `json:"-"`
	ListId *string `json:"listId,omitempty"`
	isExplicitNullListId bool `json:"-"`
	PrimaryLookupColumnId *string `json:"primaryLookupColumnId,omitempty"`
	isExplicitNullPrimaryLookupColumnId bool `json:"-"`
}

// GetAllowMultipleValues returns the AllowMultipleValues field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLookupColumn) GetAllowMultipleValues() bool {
	if o == nil || o.AllowMultipleValues == nil {
		var ret bool
		return ret
	}
	return *o.AllowMultipleValues
}

// GetAllowMultipleValuesOk returns a tuple with the AllowMultipleValues field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLookupColumn) GetAllowMultipleValuesOk() (bool, bool) {
	if o == nil || o.AllowMultipleValues == nil {
		var ret bool
		return ret, false
	}
	return *o.AllowMultipleValues, true
}

// HasAllowMultipleValues returns a boolean if a field has been set.
func (o *MicrosoftGraphLookupColumn) HasAllowMultipleValues() bool {
	if o != nil && o.AllowMultipleValues != nil {
		return true
	}

	return false
}

// SetAllowMultipleValues gets a reference to the given bool and assigns it to the AllowMultipleValues field.
func (o *MicrosoftGraphLookupColumn) SetAllowMultipleValues(v bool) {
	o.AllowMultipleValues = &v
}

// SetAllowMultipleValuesExplicitNull (un)sets AllowMultipleValues to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AllowMultipleValues value is set to nil even if false is passed
func (o *MicrosoftGraphLookupColumn) SetAllowMultipleValuesExplicitNull(b bool) {
	o.AllowMultipleValues = nil
	o.isExplicitNullAllowMultipleValues = b
}
// GetAllowUnlimitedLength returns the AllowUnlimitedLength field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLookupColumn) GetAllowUnlimitedLength() bool {
	if o == nil || o.AllowUnlimitedLength == nil {
		var ret bool
		return ret
	}
	return *o.AllowUnlimitedLength
}

// GetAllowUnlimitedLengthOk returns a tuple with the AllowUnlimitedLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLookupColumn) GetAllowUnlimitedLengthOk() (bool, bool) {
	if o == nil || o.AllowUnlimitedLength == nil {
		var ret bool
		return ret, false
	}
	return *o.AllowUnlimitedLength, true
}

// HasAllowUnlimitedLength returns a boolean if a field has been set.
func (o *MicrosoftGraphLookupColumn) HasAllowUnlimitedLength() bool {
	if o != nil && o.AllowUnlimitedLength != nil {
		return true
	}

	return false
}

// SetAllowUnlimitedLength gets a reference to the given bool and assigns it to the AllowUnlimitedLength field.
func (o *MicrosoftGraphLookupColumn) SetAllowUnlimitedLength(v bool) {
	o.AllowUnlimitedLength = &v
}

// SetAllowUnlimitedLengthExplicitNull (un)sets AllowUnlimitedLength to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The AllowUnlimitedLength value is set to nil even if false is passed
func (o *MicrosoftGraphLookupColumn) SetAllowUnlimitedLengthExplicitNull(b bool) {
	o.AllowUnlimitedLength = nil
	o.isExplicitNullAllowUnlimitedLength = b
}
// GetColumnName returns the ColumnName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLookupColumn) GetColumnName() string {
	if o == nil || o.ColumnName == nil {
		var ret string
		return ret
	}
	return *o.ColumnName
}

// GetColumnNameOk returns a tuple with the ColumnName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLookupColumn) GetColumnNameOk() (string, bool) {
	if o == nil || o.ColumnName == nil {
		var ret string
		return ret, false
	}
	return *o.ColumnName, true
}

// HasColumnName returns a boolean if a field has been set.
func (o *MicrosoftGraphLookupColumn) HasColumnName() bool {
	if o != nil && o.ColumnName != nil {
		return true
	}

	return false
}

// SetColumnName gets a reference to the given string and assigns it to the ColumnName field.
func (o *MicrosoftGraphLookupColumn) SetColumnName(v string) {
	o.ColumnName = &v
}

// SetColumnNameExplicitNull (un)sets ColumnName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ColumnName value is set to nil even if false is passed
func (o *MicrosoftGraphLookupColumn) SetColumnNameExplicitNull(b bool) {
	o.ColumnName = nil
	o.isExplicitNullColumnName = b
}
// GetListId returns the ListId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLookupColumn) GetListId() string {
	if o == nil || o.ListId == nil {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLookupColumn) GetListIdOk() (string, bool) {
	if o == nil || o.ListId == nil {
		var ret string
		return ret, false
	}
	return *o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *MicrosoftGraphLookupColumn) HasListId() bool {
	if o != nil && o.ListId != nil {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *MicrosoftGraphLookupColumn) SetListId(v string) {
	o.ListId = &v
}

// SetListIdExplicitNull (un)sets ListId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ListId value is set to nil even if false is passed
func (o *MicrosoftGraphLookupColumn) SetListIdExplicitNull(b bool) {
	o.ListId = nil
	o.isExplicitNullListId = b
}
// GetPrimaryLookupColumnId returns the PrimaryLookupColumnId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphLookupColumn) GetPrimaryLookupColumnId() string {
	if o == nil || o.PrimaryLookupColumnId == nil {
		var ret string
		return ret
	}
	return *o.PrimaryLookupColumnId
}

// GetPrimaryLookupColumnIdOk returns a tuple with the PrimaryLookupColumnId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphLookupColumn) GetPrimaryLookupColumnIdOk() (string, bool) {
	if o == nil || o.PrimaryLookupColumnId == nil {
		var ret string
		return ret, false
	}
	return *o.PrimaryLookupColumnId, true
}

// HasPrimaryLookupColumnId returns a boolean if a field has been set.
func (o *MicrosoftGraphLookupColumn) HasPrimaryLookupColumnId() bool {
	if o != nil && o.PrimaryLookupColumnId != nil {
		return true
	}

	return false
}

// SetPrimaryLookupColumnId gets a reference to the given string and assigns it to the PrimaryLookupColumnId field.
func (o *MicrosoftGraphLookupColumn) SetPrimaryLookupColumnId(v string) {
	o.PrimaryLookupColumnId = &v
}

// SetPrimaryLookupColumnIdExplicitNull (un)sets PrimaryLookupColumnId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The PrimaryLookupColumnId value is set to nil even if false is passed
func (o *MicrosoftGraphLookupColumn) SetPrimaryLookupColumnIdExplicitNull(b bool) {
	o.PrimaryLookupColumnId = nil
	o.isExplicitNullPrimaryLookupColumnId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphLookupColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowMultipleValues == nil {
		if o.isExplicitNullAllowMultipleValues {
			toSerialize["allowMultipleValues"] = o.AllowMultipleValues
		}
	} else {
		toSerialize["allowMultipleValues"] = o.AllowMultipleValues
	}
	if o.AllowUnlimitedLength == nil {
		if o.isExplicitNullAllowUnlimitedLength {
			toSerialize["allowUnlimitedLength"] = o.AllowUnlimitedLength
		}
	} else {
		toSerialize["allowUnlimitedLength"] = o.AllowUnlimitedLength
	}
	if o.ColumnName == nil {
		if o.isExplicitNullColumnName {
			toSerialize["columnName"] = o.ColumnName
		}
	} else {
		toSerialize["columnName"] = o.ColumnName
	}
	if o.ListId == nil {
		if o.isExplicitNullListId {
			toSerialize["listId"] = o.ListId
		}
	} else {
		toSerialize["listId"] = o.ListId
	}
	if o.PrimaryLookupColumnId == nil {
		if o.isExplicitNullPrimaryLookupColumnId {
			toSerialize["primaryLookupColumnId"] = o.PrimaryLookupColumnId
		}
	} else {
		toSerialize["primaryLookupColumnId"] = o.PrimaryLookupColumnId
	}
	return json.Marshal(toSerialize)
}


