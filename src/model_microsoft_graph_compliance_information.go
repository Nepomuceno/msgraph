/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphComplianceInformation struct for MicrosoftGraphComplianceInformation
type MicrosoftGraphComplianceInformation struct {
	CertificationControls *[]AnyOfmicrosoftGraphCertificationControl `json:"certificationControls,omitempty"`

	CertificationName *string `json:"certificationName,omitempty"`
	isExplicitNullCertificationName bool `json:"-"`
}

// GetCertificationControls returns the CertificationControls field if non-nil, zero value otherwise.
func (o *MicrosoftGraphComplianceInformation) GetCertificationControls() []AnyOfmicrosoftGraphCertificationControl {
	if o == nil || o.CertificationControls == nil {
		var ret []AnyOfmicrosoftGraphCertificationControl
		return ret
	}
	return *o.CertificationControls
}

// GetCertificationControlsOk returns a tuple with the CertificationControls field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphComplianceInformation) GetCertificationControlsOk() ([]AnyOfmicrosoftGraphCertificationControl, bool) {
	if o == nil || o.CertificationControls == nil {
		var ret []AnyOfmicrosoftGraphCertificationControl
		return ret, false
	}
	return *o.CertificationControls, true
}

// HasCertificationControls returns a boolean if a field has been set.
func (o *MicrosoftGraphComplianceInformation) HasCertificationControls() bool {
	if o != nil && o.CertificationControls != nil {
		return true
	}

	return false
}

// SetCertificationControls gets a reference to the given []AnyOfmicrosoftGraphCertificationControl and assigns it to the CertificationControls field.
func (o *MicrosoftGraphComplianceInformation) SetCertificationControls(v []AnyOfmicrosoftGraphCertificationControl) {
	o.CertificationControls = &v
}

// GetCertificationName returns the CertificationName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphComplianceInformation) GetCertificationName() string {
	if o == nil || o.CertificationName == nil {
		var ret string
		return ret
	}
	return *o.CertificationName
}

// GetCertificationNameOk returns a tuple with the CertificationName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphComplianceInformation) GetCertificationNameOk() (string, bool) {
	if o == nil || o.CertificationName == nil {
		var ret string
		return ret, false
	}
	return *o.CertificationName, true
}

// HasCertificationName returns a boolean if a field has been set.
func (o *MicrosoftGraphComplianceInformation) HasCertificationName() bool {
	if o != nil && o.CertificationName != nil {
		return true
	}

	return false
}

// SetCertificationName gets a reference to the given string and assigns it to the CertificationName field.
func (o *MicrosoftGraphComplianceInformation) SetCertificationName(v string) {
	o.CertificationName = &v
}

// SetCertificationNameExplicitNull (un)sets CertificationName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CertificationName value is set to nil even if false is passed
func (o *MicrosoftGraphComplianceInformation) SetCertificationNameExplicitNull(b bool) {
	o.CertificationName = nil
	o.isExplicitNullCertificationName = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphComplianceInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertificationControls != nil {
		toSerialize["certificationControls"] = o.CertificationControls
	}
	if o.CertificationName == nil {
		if o.isExplicitNullCertificationName {
			toSerialize["certificationName"] = o.CertificationName
		}
	} else {
		toSerialize["certificationName"] = o.CertificationName
	}
	return json.Marshal(toSerialize)
}


