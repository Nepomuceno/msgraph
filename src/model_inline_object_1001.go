/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// InlineObject1001 struct for InlineObject1001
type InlineObject1001 struct {
	Number *AnyOfobject `json:"number,omitempty"`
	isExplicitNullNumber bool `json:"-"`
	NumberChosen *AnyOfobject `json:"numberChosen,omitempty"`
	isExplicitNullNumberChosen bool `json:"-"`
}

// GetNumber returns the Number field if non-nil, zero value otherwise.
func (o *InlineObject1001) GetNumber() AnyOfobject {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1001) GetNumberOk() (AnyOfobject, bool) {
	if o == nil || o.Number == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InlineObject1001) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given AnyOfobject and assigns it to the Number field.
func (o *InlineObject1001) SetNumber(v AnyOfobject) {
	o.Number = &v
}

// SetNumberExplicitNull (un)sets Number to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Number value is set to nil even if false is passed
func (o *InlineObject1001) SetNumberExplicitNull(b bool) {
	o.Number = nil
	o.isExplicitNullNumber = b
}
// GetNumberChosen returns the NumberChosen field if non-nil, zero value otherwise.
func (o *InlineObject1001) GetNumberChosen() AnyOfobject {
	if o == nil || o.NumberChosen == nil {
		var ret AnyOfobject
		return ret
	}
	return *o.NumberChosen
}

// GetNumberChosenOk returns a tuple with the NumberChosen field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1001) GetNumberChosenOk() (AnyOfobject, bool) {
	if o == nil || o.NumberChosen == nil {
		var ret AnyOfobject
		return ret, false
	}
	return *o.NumberChosen, true
}

// HasNumberChosen returns a boolean if a field has been set.
func (o *InlineObject1001) HasNumberChosen() bool {
	if o != nil && o.NumberChosen != nil {
		return true
	}

	return false
}

// SetNumberChosen gets a reference to the given AnyOfobject and assigns it to the NumberChosen field.
func (o *InlineObject1001) SetNumberChosen(v AnyOfobject) {
	o.NumberChosen = &v
}

// SetNumberChosenExplicitNull (un)sets NumberChosen to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NumberChosen value is set to nil even if false is passed
func (o *InlineObject1001) SetNumberChosenExplicitNull(b bool) {
	o.NumberChosen = nil
	o.isExplicitNullNumberChosen = b
}

// MarshalJSON returns the JSON representation of the model.
func (o InlineObject1001) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number == nil {
		if o.isExplicitNullNumber {
			toSerialize["number"] = o.Number
		}
	} else {
		toSerialize["number"] = o.Number
	}
	if o.NumberChosen == nil {
		if o.isExplicitNullNumberChosen {
			toSerialize["numberChosen"] = o.NumberChosen
		}
	} else {
		toSerialize["numberChosen"] = o.NumberChosen
	}
	return json.Marshal(toSerialize)
}


