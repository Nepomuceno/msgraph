/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// Subscription struct for Subscription
type Subscription struct {
	Resource *string `json:"resource,omitempty"`

	ChangeType *string `json:"changeType,omitempty"`

	ClientState *string `json:"clientState,omitempty"`
	isExplicitNullClientState bool `json:"-"`
	NotificationUrl *string `json:"notificationUrl,omitempty"`

	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`

	ApplicationId *string `json:"applicationId,omitempty"`
	isExplicitNullApplicationId bool `json:"-"`
	CreatorId *string `json:"creatorId,omitempty"`
	isExplicitNullCreatorId bool `json:"-"`
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (o *Subscription) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetResourceOk() (string, bool) {
	if o == nil || o.Resource == nil {
		var ret string
		return ret, false
	}
	return *o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *Subscription) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *Subscription) SetResource(v string) {
	o.Resource = &v
}

// GetChangeType returns the ChangeType field if non-nil, zero value otherwise.
func (o *Subscription) GetChangeType() string {
	if o == nil || o.ChangeType == nil {
		var ret string
		return ret
	}
	return *o.ChangeType
}

// GetChangeTypeOk returns a tuple with the ChangeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetChangeTypeOk() (string, bool) {
	if o == nil || o.ChangeType == nil {
		var ret string
		return ret, false
	}
	return *o.ChangeType, true
}

// HasChangeType returns a boolean if a field has been set.
func (o *Subscription) HasChangeType() bool {
	if o != nil && o.ChangeType != nil {
		return true
	}

	return false
}

// SetChangeType gets a reference to the given string and assigns it to the ChangeType field.
func (o *Subscription) SetChangeType(v string) {
	o.ChangeType = &v
}

// GetClientState returns the ClientState field if non-nil, zero value otherwise.
func (o *Subscription) GetClientState() string {
	if o == nil || o.ClientState == nil {
		var ret string
		return ret
	}
	return *o.ClientState
}

// GetClientStateOk returns a tuple with the ClientState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetClientStateOk() (string, bool) {
	if o == nil || o.ClientState == nil {
		var ret string
		return ret, false
	}
	return *o.ClientState, true
}

// HasClientState returns a boolean if a field has been set.
func (o *Subscription) HasClientState() bool {
	if o != nil && o.ClientState != nil {
		return true
	}

	return false
}

// SetClientState gets a reference to the given string and assigns it to the ClientState field.
func (o *Subscription) SetClientState(v string) {
	o.ClientState = &v
}

// SetClientStateExplicitNull (un)sets ClientState to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ClientState value is set to nil even if false is passed
func (o *Subscription) SetClientStateExplicitNull(b bool) {
	o.ClientState = nil
	o.isExplicitNullClientState = b
}
// GetNotificationUrl returns the NotificationUrl field if non-nil, zero value otherwise.
func (o *Subscription) GetNotificationUrl() string {
	if o == nil || o.NotificationUrl == nil {
		var ret string
		return ret
	}
	return *o.NotificationUrl
}

// GetNotificationUrlOk returns a tuple with the NotificationUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetNotificationUrlOk() (string, bool) {
	if o == nil || o.NotificationUrl == nil {
		var ret string
		return ret, false
	}
	return *o.NotificationUrl, true
}

// HasNotificationUrl returns a boolean if a field has been set.
func (o *Subscription) HasNotificationUrl() bool {
	if o != nil && o.NotificationUrl != nil {
		return true
	}

	return false
}

// SetNotificationUrl gets a reference to the given string and assigns it to the NotificationUrl field.
func (o *Subscription) SetNotificationUrl(v string) {
	o.NotificationUrl = &v
}

// GetExpirationDateTime returns the ExpirationDateTime field if non-nil, zero value otherwise.
func (o *Subscription) GetExpirationDateTime() time.Time {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetExpirationDateTimeOk() (time.Time, bool) {
	if o == nil || o.ExpirationDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *Subscription) HasExpirationDateTime() bool {
	if o != nil && o.ExpirationDateTime != nil {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given time.Time and assigns it to the ExpirationDateTime field.
func (o *Subscription) SetExpirationDateTime(v time.Time) {
	o.ExpirationDateTime = &v
}

// GetApplicationId returns the ApplicationId field if non-nil, zero value otherwise.
func (o *Subscription) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetApplicationIdOk() (string, bool) {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret, false
	}
	return *o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *Subscription) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *Subscription) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// SetApplicationIdExplicitNull (un)sets ApplicationId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ApplicationId value is set to nil even if false is passed
func (o *Subscription) SetApplicationIdExplicitNull(b bool) {
	o.ApplicationId = nil
	o.isExplicitNullApplicationId = b
}
// GetCreatorId returns the CreatorId field if non-nil, zero value otherwise.
func (o *Subscription) GetCreatorId() string {
	if o == nil || o.CreatorId == nil {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreatorIdOk() (string, bool) {
	if o == nil || o.CreatorId == nil {
		var ret string
		return ret, false
	}
	return *o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *Subscription) HasCreatorId() bool {
	if o != nil && o.CreatorId != nil {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *Subscription) SetCreatorId(v string) {
	o.CreatorId = &v
}

// SetCreatorIdExplicitNull (un)sets CreatorId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatorId value is set to nil even if false is passed
func (o *Subscription) SetCreatorIdExplicitNull(b bool) {
	o.CreatorId = nil
	o.isExplicitNullCreatorId = b
}

// MarshalJSON returns the JSON representation of the model.
func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.ChangeType != nil {
		toSerialize["changeType"] = o.ChangeType
	}
	if o.ClientState == nil {
		if o.isExplicitNullClientState {
			toSerialize["clientState"] = o.ClientState
		}
	} else {
		toSerialize["clientState"] = o.ClientState
	}
	if o.NotificationUrl != nil {
		toSerialize["notificationUrl"] = o.NotificationUrl
	}
	if o.ExpirationDateTime != nil {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if o.ApplicationId == nil {
		if o.isExplicitNullApplicationId {
			toSerialize["applicationId"] = o.ApplicationId
		}
	} else {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.CreatorId == nil {
		if o.isExplicitNullCreatorId {
			toSerialize["creatorId"] = o.CreatorId
		}
	} else {
		toSerialize["creatorId"] = o.CreatorId
	}
	return json.Marshal(toSerialize)
}


