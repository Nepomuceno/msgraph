/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphFileEncryptionInfo struct for MicrosoftGraphFileEncryptionInfo
type MicrosoftGraphFileEncryptionInfo struct {
	// The key used to encrypt the file content.
	EncryptionKey *string `json:"encryptionKey,omitempty"`
	isExplicitNullEncryptionKey bool `json:"-"`
	// The initialization vector used for the encryption algorithm.
	InitializationVector *string `json:"initializationVector,omitempty"`
	isExplicitNullInitializationVector bool `json:"-"`
	// The hash of the encrypted file content + IV (content hash).
	Mac *string `json:"mac,omitempty"`
	isExplicitNullMac bool `json:"-"`
	// The key used to get mac.
	MacKey *string `json:"macKey,omitempty"`
	isExplicitNullMacKey bool `json:"-"`
	// The the profile identifier.
	ProfileIdentifier *string `json:"profileIdentifier,omitempty"`
	isExplicitNullProfileIdentifier bool `json:"-"`
	// The file digest prior to encryption.
	FileDigest *string `json:"fileDigest,omitempty"`
	isExplicitNullFileDigest bool `json:"-"`
	// The file digest algorithm.
	FileDigestAlgorithm *string `json:"fileDigestAlgorithm,omitempty"`
	isExplicitNullFileDigestAlgorithm bool `json:"-"`
}

// GetEncryptionKey returns the EncryptionKey field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetEncryptionKey() string {
	if o == nil || o.EncryptionKey == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetEncryptionKeyOk() (string, bool) {
	if o == nil || o.EncryptionKey == nil {
		var ret string
		return ret, false
	}
	return *o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasEncryptionKey() bool {
	if o != nil && o.EncryptionKey != nil {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *MicrosoftGraphFileEncryptionInfo) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

// SetEncryptionKeyExplicitNull (un)sets EncryptionKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The EncryptionKey value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetEncryptionKeyExplicitNull(b bool) {
	o.EncryptionKey = nil
	o.isExplicitNullEncryptionKey = b
}
// GetInitializationVector returns the InitializationVector field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetInitializationVector() string {
	if o == nil || o.InitializationVector == nil {
		var ret string
		return ret
	}
	return *o.InitializationVector
}

// GetInitializationVectorOk returns a tuple with the InitializationVector field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetInitializationVectorOk() (string, bool) {
	if o == nil || o.InitializationVector == nil {
		var ret string
		return ret, false
	}
	return *o.InitializationVector, true
}

// HasInitializationVector returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasInitializationVector() bool {
	if o != nil && o.InitializationVector != nil {
		return true
	}

	return false
}

// SetInitializationVector gets a reference to the given string and assigns it to the InitializationVector field.
func (o *MicrosoftGraphFileEncryptionInfo) SetInitializationVector(v string) {
	o.InitializationVector = &v
}

// SetInitializationVectorExplicitNull (un)sets InitializationVector to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The InitializationVector value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetInitializationVectorExplicitNull(b bool) {
	o.InitializationVector = nil
	o.isExplicitNullInitializationVector = b
}
// GetMac returns the Mac field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetMacOk() (string, bool) {
	if o == nil || o.Mac == nil {
		var ret string
		return ret, false
	}
	return *o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *MicrosoftGraphFileEncryptionInfo) SetMac(v string) {
	o.Mac = &v
}

// SetMacExplicitNull (un)sets Mac to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Mac value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetMacExplicitNull(b bool) {
	o.Mac = nil
	o.isExplicitNullMac = b
}
// GetMacKey returns the MacKey field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetMacKey() string {
	if o == nil || o.MacKey == nil {
		var ret string
		return ret
	}
	return *o.MacKey
}

// GetMacKeyOk returns a tuple with the MacKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetMacKeyOk() (string, bool) {
	if o == nil || o.MacKey == nil {
		var ret string
		return ret, false
	}
	return *o.MacKey, true
}

// HasMacKey returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasMacKey() bool {
	if o != nil && o.MacKey != nil {
		return true
	}

	return false
}

// SetMacKey gets a reference to the given string and assigns it to the MacKey field.
func (o *MicrosoftGraphFileEncryptionInfo) SetMacKey(v string) {
	o.MacKey = &v
}

// SetMacKeyExplicitNull (un)sets MacKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The MacKey value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetMacKeyExplicitNull(b bool) {
	o.MacKey = nil
	o.isExplicitNullMacKey = b
}
// GetProfileIdentifier returns the ProfileIdentifier field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetProfileIdentifier() string {
	if o == nil || o.ProfileIdentifier == nil {
		var ret string
		return ret
	}
	return *o.ProfileIdentifier
}

// GetProfileIdentifierOk returns a tuple with the ProfileIdentifier field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetProfileIdentifierOk() (string, bool) {
	if o == nil || o.ProfileIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.ProfileIdentifier, true
}

// HasProfileIdentifier returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasProfileIdentifier() bool {
	if o != nil && o.ProfileIdentifier != nil {
		return true
	}

	return false
}

// SetProfileIdentifier gets a reference to the given string and assigns it to the ProfileIdentifier field.
func (o *MicrosoftGraphFileEncryptionInfo) SetProfileIdentifier(v string) {
	o.ProfileIdentifier = &v
}

// SetProfileIdentifierExplicitNull (un)sets ProfileIdentifier to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ProfileIdentifier value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetProfileIdentifierExplicitNull(b bool) {
	o.ProfileIdentifier = nil
	o.isExplicitNullProfileIdentifier = b
}
// GetFileDigest returns the FileDigest field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetFileDigest() string {
	if o == nil || o.FileDigest == nil {
		var ret string
		return ret
	}
	return *o.FileDigest
}

// GetFileDigestOk returns a tuple with the FileDigest field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetFileDigestOk() (string, bool) {
	if o == nil || o.FileDigest == nil {
		var ret string
		return ret, false
	}
	return *o.FileDigest, true
}

// HasFileDigest returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasFileDigest() bool {
	if o != nil && o.FileDigest != nil {
		return true
	}

	return false
}

// SetFileDigest gets a reference to the given string and assigns it to the FileDigest field.
func (o *MicrosoftGraphFileEncryptionInfo) SetFileDigest(v string) {
	o.FileDigest = &v
}

// SetFileDigestExplicitNull (un)sets FileDigest to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FileDigest value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetFileDigestExplicitNull(b bool) {
	o.FileDigest = nil
	o.isExplicitNullFileDigest = b
}
// GetFileDigestAlgorithm returns the FileDigestAlgorithm field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileEncryptionInfo) GetFileDigestAlgorithm() string {
	if o == nil || o.FileDigestAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.FileDigestAlgorithm
}

// GetFileDigestAlgorithmOk returns a tuple with the FileDigestAlgorithm field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileEncryptionInfo) GetFileDigestAlgorithmOk() (string, bool) {
	if o == nil || o.FileDigestAlgorithm == nil {
		var ret string
		return ret, false
	}
	return *o.FileDigestAlgorithm, true
}

// HasFileDigestAlgorithm returns a boolean if a field has been set.
func (o *MicrosoftGraphFileEncryptionInfo) HasFileDigestAlgorithm() bool {
	if o != nil && o.FileDigestAlgorithm != nil {
		return true
	}

	return false
}

// SetFileDigestAlgorithm gets a reference to the given string and assigns it to the FileDigestAlgorithm field.
func (o *MicrosoftGraphFileEncryptionInfo) SetFileDigestAlgorithm(v string) {
	o.FileDigestAlgorithm = &v
}

// SetFileDigestAlgorithmExplicitNull (un)sets FileDigestAlgorithm to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FileDigestAlgorithm value is set to nil even if false is passed
func (o *MicrosoftGraphFileEncryptionInfo) SetFileDigestAlgorithmExplicitNull(b bool) {
	o.FileDigestAlgorithm = nil
	o.isExplicitNullFileDigestAlgorithm = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphFileEncryptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EncryptionKey == nil {
		if o.isExplicitNullEncryptionKey {
			toSerialize["encryptionKey"] = o.EncryptionKey
		}
	} else {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	if o.InitializationVector == nil {
		if o.isExplicitNullInitializationVector {
			toSerialize["initializationVector"] = o.InitializationVector
		}
	} else {
		toSerialize["initializationVector"] = o.InitializationVector
	}
	if o.Mac == nil {
		if o.isExplicitNullMac {
			toSerialize["mac"] = o.Mac
		}
	} else {
		toSerialize["mac"] = o.Mac
	}
	if o.MacKey == nil {
		if o.isExplicitNullMacKey {
			toSerialize["macKey"] = o.MacKey
		}
	} else {
		toSerialize["macKey"] = o.MacKey
	}
	if o.ProfileIdentifier == nil {
		if o.isExplicitNullProfileIdentifier {
			toSerialize["profileIdentifier"] = o.ProfileIdentifier
		}
	} else {
		toSerialize["profileIdentifier"] = o.ProfileIdentifier
	}
	if o.FileDigest == nil {
		if o.isExplicitNullFileDigest {
			toSerialize["fileDigest"] = o.FileDigest
		}
	} else {
		toSerialize["fileDigest"] = o.FileDigest
	}
	if o.FileDigestAlgorithm == nil {
		if o.isExplicitNullFileDigestAlgorithm {
			toSerialize["fileDigestAlgorithm"] = o.FileDigestAlgorithm
		}
	} else {
		toSerialize["fileDigestAlgorithm"] = o.FileDigestAlgorithm
	}
	return json.Marshal(toSerialize)
}


