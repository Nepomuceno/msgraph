/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphDeviceDetail struct for MicrosoftGraphDeviceDetail
type MicrosoftGraphDeviceDetail struct {
	DeviceId *string `json:"deviceId,omitempty"`
	isExplicitNullDeviceId bool `json:"-"`
	DisplayName *string `json:"displayName,omitempty"`
	isExplicitNullDisplayName bool `json:"-"`
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	isExplicitNullOperatingSystem bool `json:"-"`
	Browser *string `json:"browser,omitempty"`
	isExplicitNullBrowser bool `json:"-"`
	IsCompliant *bool `json:"isCompliant,omitempty"`
	isExplicitNullIsCompliant bool `json:"-"`
	IsManaged *bool `json:"isManaged,omitempty"`
	isExplicitNullIsManaged bool `json:"-"`
	TrustType *string `json:"trustType,omitempty"`
	isExplicitNullTrustType bool `json:"-"`
}

// GetDeviceId returns the DeviceId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetDeviceIdOk() (string, bool) {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret, false
	}
	return *o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *MicrosoftGraphDeviceDetail) SetDeviceId(v string) {
	o.DeviceId = &v
}

// SetDeviceIdExplicitNull (un)sets DeviceId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DeviceId value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetDeviceIdExplicitNull(b bool) {
	o.DeviceId = nil
	o.isExplicitNullDeviceId = b
}
// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetDisplayNameOk() (string, bool) {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret, false
	}
	return *o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MicrosoftGraphDeviceDetail) SetDisplayName(v string) {
	o.DisplayName = &v
}

// SetDisplayNameExplicitNull (un)sets DisplayName to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The DisplayName value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetDisplayNameExplicitNull(b bool) {
	o.DisplayName = nil
	o.isExplicitNullDisplayName = b
}
// GetOperatingSystem returns the OperatingSystem field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetOperatingSystemOk() (string, bool) {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret, false
	}
	return *o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *MicrosoftGraphDeviceDetail) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// SetOperatingSystemExplicitNull (un)sets OperatingSystem to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OperatingSystem value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetOperatingSystemExplicitNull(b bool) {
	o.OperatingSystem = nil
	o.isExplicitNullOperatingSystem = b
}
// GetBrowser returns the Browser field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetBrowser() string {
	if o == nil || o.Browser == nil {
		var ret string
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetBrowserOk() (string, bool) {
	if o == nil || o.Browser == nil {
		var ret string
		return ret, false
	}
	return *o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasBrowser() bool {
	if o != nil && o.Browser != nil {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given string and assigns it to the Browser field.
func (o *MicrosoftGraphDeviceDetail) SetBrowser(v string) {
	o.Browser = &v
}

// SetBrowserExplicitNull (un)sets Browser to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Browser value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetBrowserExplicitNull(b bool) {
	o.Browser = nil
	o.isExplicitNullBrowser = b
}
// GetIsCompliant returns the IsCompliant field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetIsCompliant() bool {
	if o == nil || o.IsCompliant == nil {
		var ret bool
		return ret
	}
	return *o.IsCompliant
}

// GetIsCompliantOk returns a tuple with the IsCompliant field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetIsCompliantOk() (bool, bool) {
	if o == nil || o.IsCompliant == nil {
		var ret bool
		return ret, false
	}
	return *o.IsCompliant, true
}

// HasIsCompliant returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasIsCompliant() bool {
	if o != nil && o.IsCompliant != nil {
		return true
	}

	return false
}

// SetIsCompliant gets a reference to the given bool and assigns it to the IsCompliant field.
func (o *MicrosoftGraphDeviceDetail) SetIsCompliant(v bool) {
	o.IsCompliant = &v
}

// SetIsCompliantExplicitNull (un)sets IsCompliant to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsCompliant value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetIsCompliantExplicitNull(b bool) {
	o.IsCompliant = nil
	o.isExplicitNullIsCompliant = b
}
// GetIsManaged returns the IsManaged field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetIsManaged() bool {
	if o == nil || o.IsManaged == nil {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetIsManagedOk() (bool, bool) {
	if o == nil || o.IsManaged == nil {
		var ret bool
		return ret, false
	}
	return *o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasIsManaged() bool {
	if o != nil && o.IsManaged != nil {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *MicrosoftGraphDeviceDetail) SetIsManaged(v bool) {
	o.IsManaged = &v
}

// SetIsManagedExplicitNull (un)sets IsManaged to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsManaged value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetIsManagedExplicitNull(b bool) {
	o.IsManaged = nil
	o.isExplicitNullIsManaged = b
}
// GetTrustType returns the TrustType field if non-nil, zero value otherwise.
func (o *MicrosoftGraphDeviceDetail) GetTrustType() string {
	if o == nil || o.TrustType == nil {
		var ret string
		return ret
	}
	return *o.TrustType
}

// GetTrustTypeOk returns a tuple with the TrustType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphDeviceDetail) GetTrustTypeOk() (string, bool) {
	if o == nil || o.TrustType == nil {
		var ret string
		return ret, false
	}
	return *o.TrustType, true
}

// HasTrustType returns a boolean if a field has been set.
func (o *MicrosoftGraphDeviceDetail) HasTrustType() bool {
	if o != nil && o.TrustType != nil {
		return true
	}

	return false
}

// SetTrustType gets a reference to the given string and assigns it to the TrustType field.
func (o *MicrosoftGraphDeviceDetail) SetTrustType(v string) {
	o.TrustType = &v
}

// SetTrustTypeExplicitNull (un)sets TrustType to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The TrustType value is set to nil even if false is passed
func (o *MicrosoftGraphDeviceDetail) SetTrustTypeExplicitNull(b bool) {
	o.TrustType = nil
	o.isExplicitNullTrustType = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphDeviceDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId == nil {
		if o.isExplicitNullDeviceId {
			toSerialize["deviceId"] = o.DeviceId
		}
	} else {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DisplayName == nil {
		if o.isExplicitNullDisplayName {
			toSerialize["displayName"] = o.DisplayName
		}
	} else {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.OperatingSystem == nil {
		if o.isExplicitNullOperatingSystem {
			toSerialize["operatingSystem"] = o.OperatingSystem
		}
	} else {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.Browser == nil {
		if o.isExplicitNullBrowser {
			toSerialize["browser"] = o.Browser
		}
	} else {
		toSerialize["browser"] = o.Browser
	}
	if o.IsCompliant == nil {
		if o.isExplicitNullIsCompliant {
			toSerialize["isCompliant"] = o.IsCompliant
		}
	} else {
		toSerialize["isCompliant"] = o.IsCompliant
	}
	if o.IsManaged == nil {
		if o.isExplicitNullIsManaged {
			toSerialize["isManaged"] = o.IsManaged
		}
	} else {
		toSerialize["isManaged"] = o.IsManaged
	}
	if o.TrustType == nil {
		if o.isExplicitNullTrustType {
			toSerialize["trustType"] = o.TrustType
		}
	} else {
		toSerialize["trustType"] = o.TrustType
	}
	return json.Marshal(toSerialize)
}


