/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"time"
	"encoding/json"
)
// MicrosoftGraphEvent struct for MicrosoftGraphEvent
type MicrosoftGraphEvent struct {
	Id *string `json:"id,omitempty"`

	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	isExplicitNullCreatedDateTime bool `json:"-"`
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	isExplicitNullLastModifiedDateTime bool `json:"-"`
	ChangeKey *string `json:"changeKey,omitempty"`
	isExplicitNullChangeKey bool `json:"-"`
	Categories *[]string `json:"categories,omitempty"`

	OriginalStartTimeZone *string `json:"originalStartTimeZone,omitempty"`
	isExplicitNullOriginalStartTimeZone bool `json:"-"`
	OriginalEndTimeZone *string `json:"originalEndTimeZone,omitempty"`
	isExplicitNullOriginalEndTimeZone bool `json:"-"`
	ResponseStatus *AnyOfmicrosoftGraphResponseStatus `json:"responseStatus,omitempty"`
	isExplicitNullResponseStatus bool `json:"-"`
	ICalUId *string `json:"iCalUId,omitempty"`
	isExplicitNullICalUId bool `json:"-"`
	ReminderMinutesBeforeStart *int32 `json:"reminderMinutesBeforeStart,omitempty"`
	isExplicitNullReminderMinutesBeforeStart bool `json:"-"`
	IsReminderOn *bool `json:"isReminderOn,omitempty"`
	isExplicitNullIsReminderOn bool `json:"-"`
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	isExplicitNullHasAttachments bool `json:"-"`
	Subject *string `json:"subject,omitempty"`
	isExplicitNullSubject bool `json:"-"`
	Body *AnyOfmicrosoftGraphItemBody `json:"body,omitempty"`
	isExplicitNullBody bool `json:"-"`
	BodyPreview *string `json:"bodyPreview,omitempty"`
	isExplicitNullBodyPreview bool `json:"-"`
	Importance *AnyOfmicrosoftGraphImportance `json:"importance,omitempty"`
	isExplicitNullImportance bool `json:"-"`
	Sensitivity *AnyOfmicrosoftGraphSensitivity `json:"sensitivity,omitempty"`
	isExplicitNullSensitivity bool `json:"-"`
	Start *AnyOfmicrosoftGraphDateTimeTimeZone `json:"start,omitempty"`
	isExplicitNullStart bool `json:"-"`
	OriginalStart *time.Time `json:"originalStart,omitempty"`
	isExplicitNullOriginalStart bool `json:"-"`
	End *AnyOfmicrosoftGraphDateTimeTimeZone `json:"end,omitempty"`
	isExplicitNullEnd bool `json:"-"`
	Location *AnyOfmicrosoftGraphLocation `json:"location,omitempty"`
	isExplicitNullLocation bool `json:"-"`
	Locations *[]AnyOfmicrosoftGraphLocation `json:"locations,omitempty"`

	IsAllDay *bool `json:"isAllDay,omitempty"`
	isExplicitNullIsAllDay bool `json:"-"`
	IsCancelled *bool `json:"isCancelled,omitempty"`
	isExplicitNullIsCancelled bool `json:"-"`
	IsOrganizer *bool `json:"isOrganizer,omitempty"`
	isExplicitNullIsOrganizer bool `json:"-"`
	Recurrence *AnyOfmicrosoftGraphPatternedRecurrence `json:"recurrence,omitempty"`
	isExplicitNullRecurrence bool `json:"-"`
	ResponseRequested *bool `json:"responseRequested,omitempty"`
	isExplicitNullResponseRequested bool `json:"-"`
	SeriesMasterId *string `json:"seriesMasterId,omitempty"`
	isExplicitNullSeriesMasterId bool `json:"-"`
	ShowAs *AnyOfmicrosoftGraphFreeBusyStatus `json:"showAs,omitempty"`
	isExplicitNullShowAs bool `json:"-"`
	Type *AnyOfmicrosoftGraphEventType `json:"type,omitempty"`
	isExplicitNullType bool `json:"-"`
	Attendees *[]AnyOfmicrosoftGraphAttendee `json:"attendees,omitempty"`

	Organizer *AnyOfmicrosoftGraphRecipient `json:"organizer,omitempty"`
	isExplicitNullOrganizer bool `json:"-"`
	WebLink *string `json:"webLink,omitempty"`
	isExplicitNullWebLink bool `json:"-"`
	OnlineMeetingUrl *string `json:"onlineMeetingUrl,omitempty"`
	isExplicitNullOnlineMeetingUrl bool `json:"-"`
	Attachments *[]MicrosoftGraphAttachment `json:"attachments,omitempty"`

	SingleValueExtendedProperties *[]MicrosoftGraphSingleValueLegacyExtendedProperty `json:"singleValueExtendedProperties,omitempty"`

	MultiValueExtendedProperties *[]MicrosoftGraphMultiValueLegacyExtendedProperty `json:"multiValueExtendedProperties,omitempty"`

	Calendar *AnyOfmicrosoftGraphCalendar `json:"calendar,omitempty"`
	isExplicitNullCalendar bool `json:"-"`
	Instances *[]MicrosoftGraphEvent `json:"instances,omitempty"`

	Extensions *[]MicrosoftGraphExtension `json:"extensions,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftGraphEvent) SetId(v string) {
	o.Id = &v
}

// GetCreatedDateTime returns the CreatedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetCreatedDateTime() time.Time {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetCreatedDateTimeOk() (time.Time, bool) {
	if o == nil || o.CreatedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCreatedDateTime() bool {
	if o != nil && o.CreatedDateTime != nil {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given time.Time and assigns it to the CreatedDateTime field.
func (o *MicrosoftGraphEvent) SetCreatedDateTime(v time.Time) {
	o.CreatedDateTime = &v
}

// SetCreatedDateTimeExplicitNull (un)sets CreatedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The CreatedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetCreatedDateTimeExplicitNull(b bool) {
	o.CreatedDateTime = nil
	o.isExplicitNullCreatedDateTime = b
}
// GetLastModifiedDateTime returns the LastModifiedDateTime field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetLastModifiedDateTime() time.Time {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetLastModifiedDateTimeOk() (time.Time, bool) {
	if o == nil || o.LastModifiedDateTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLastModifiedDateTime() bool {
	if o != nil && o.LastModifiedDateTime != nil {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given time.Time and assigns it to the LastModifiedDateTime field.
func (o *MicrosoftGraphEvent) SetLastModifiedDateTime(v time.Time) {
	o.LastModifiedDateTime = &v
}

// SetLastModifiedDateTimeExplicitNull (un)sets LastModifiedDateTime to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The LastModifiedDateTime value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetLastModifiedDateTimeExplicitNull(b bool) {
	o.LastModifiedDateTime = nil
	o.isExplicitNullLastModifiedDateTime = b
}
// GetChangeKey returns the ChangeKey field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetChangeKey() string {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret
	}
	return *o.ChangeKey
}

// GetChangeKeyOk returns a tuple with the ChangeKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetChangeKeyOk() (string, bool) {
	if o == nil || o.ChangeKey == nil {
		var ret string
		return ret, false
	}
	return *o.ChangeKey, true
}

// HasChangeKey returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasChangeKey() bool {
	if o != nil && o.ChangeKey != nil {
		return true
	}

	return false
}

// SetChangeKey gets a reference to the given string and assigns it to the ChangeKey field.
func (o *MicrosoftGraphEvent) SetChangeKey(v string) {
	o.ChangeKey = &v
}

// SetChangeKeyExplicitNull (un)sets ChangeKey to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ChangeKey value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetChangeKeyExplicitNull(b bool) {
	o.ChangeKey = nil
	o.isExplicitNullChangeKey = b
}
// GetCategories returns the Categories field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetCategories() []string {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetCategoriesOk() ([]string, bool) {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret, false
	}
	return *o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *MicrosoftGraphEvent) SetCategories(v []string) {
	o.Categories = &v
}

// GetOriginalStartTimeZone returns the OriginalStartTimeZone field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetOriginalStartTimeZone() string {
	if o == nil || o.OriginalStartTimeZone == nil {
		var ret string
		return ret
	}
	return *o.OriginalStartTimeZone
}

// GetOriginalStartTimeZoneOk returns a tuple with the OriginalStartTimeZone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetOriginalStartTimeZoneOk() (string, bool) {
	if o == nil || o.OriginalStartTimeZone == nil {
		var ret string
		return ret, false
	}
	return *o.OriginalStartTimeZone, true
}

// HasOriginalStartTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalStartTimeZone() bool {
	if o != nil && o.OriginalStartTimeZone != nil {
		return true
	}

	return false
}

// SetOriginalStartTimeZone gets a reference to the given string and assigns it to the OriginalStartTimeZone field.
func (o *MicrosoftGraphEvent) SetOriginalStartTimeZone(v string) {
	o.OriginalStartTimeZone = &v
}

// SetOriginalStartTimeZoneExplicitNull (un)sets OriginalStartTimeZone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OriginalStartTimeZone value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetOriginalStartTimeZoneExplicitNull(b bool) {
	o.OriginalStartTimeZone = nil
	o.isExplicitNullOriginalStartTimeZone = b
}
// GetOriginalEndTimeZone returns the OriginalEndTimeZone field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetOriginalEndTimeZone() string {
	if o == nil || o.OriginalEndTimeZone == nil {
		var ret string
		return ret
	}
	return *o.OriginalEndTimeZone
}

// GetOriginalEndTimeZoneOk returns a tuple with the OriginalEndTimeZone field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetOriginalEndTimeZoneOk() (string, bool) {
	if o == nil || o.OriginalEndTimeZone == nil {
		var ret string
		return ret, false
	}
	return *o.OriginalEndTimeZone, true
}

// HasOriginalEndTimeZone returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalEndTimeZone() bool {
	if o != nil && o.OriginalEndTimeZone != nil {
		return true
	}

	return false
}

// SetOriginalEndTimeZone gets a reference to the given string and assigns it to the OriginalEndTimeZone field.
func (o *MicrosoftGraphEvent) SetOriginalEndTimeZone(v string) {
	o.OriginalEndTimeZone = &v
}

// SetOriginalEndTimeZoneExplicitNull (un)sets OriginalEndTimeZone to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OriginalEndTimeZone value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetOriginalEndTimeZoneExplicitNull(b bool) {
	o.OriginalEndTimeZone = nil
	o.isExplicitNullOriginalEndTimeZone = b
}
// GetResponseStatus returns the ResponseStatus field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetResponseStatus() AnyOfmicrosoftGraphResponseStatus {
	if o == nil || o.ResponseStatus == nil {
		var ret AnyOfmicrosoftGraphResponseStatus
		return ret
	}
	return *o.ResponseStatus
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetResponseStatusOk() (AnyOfmicrosoftGraphResponseStatus, bool) {
	if o == nil || o.ResponseStatus == nil {
		var ret AnyOfmicrosoftGraphResponseStatus
		return ret, false
	}
	return *o.ResponseStatus, true
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasResponseStatus() bool {
	if o != nil && o.ResponseStatus != nil {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given AnyOfmicrosoftGraphResponseStatus and assigns it to the ResponseStatus field.
func (o *MicrosoftGraphEvent) SetResponseStatus(v AnyOfmicrosoftGraphResponseStatus) {
	o.ResponseStatus = &v
}

// SetResponseStatusExplicitNull (un)sets ResponseStatus to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResponseStatus value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetResponseStatusExplicitNull(b bool) {
	o.ResponseStatus = nil
	o.isExplicitNullResponseStatus = b
}
// GetICalUId returns the ICalUId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetICalUId() string {
	if o == nil || o.ICalUId == nil {
		var ret string
		return ret
	}
	return *o.ICalUId
}

// GetICalUIdOk returns a tuple with the ICalUId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetICalUIdOk() (string, bool) {
	if o == nil || o.ICalUId == nil {
		var ret string
		return ret, false
	}
	return *o.ICalUId, true
}

// HasICalUId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasICalUId() bool {
	if o != nil && o.ICalUId != nil {
		return true
	}

	return false
}

// SetICalUId gets a reference to the given string and assigns it to the ICalUId field.
func (o *MicrosoftGraphEvent) SetICalUId(v string) {
	o.ICalUId = &v
}

// SetICalUIdExplicitNull (un)sets ICalUId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ICalUId value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetICalUIdExplicitNull(b bool) {
	o.ICalUId = nil
	o.isExplicitNullICalUId = b
}
// GetReminderMinutesBeforeStart returns the ReminderMinutesBeforeStart field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetReminderMinutesBeforeStart() int32 {
	if o == nil || o.ReminderMinutesBeforeStart == nil {
		var ret int32
		return ret
	}
	return *o.ReminderMinutesBeforeStart
}

// GetReminderMinutesBeforeStartOk returns a tuple with the ReminderMinutesBeforeStart field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetReminderMinutesBeforeStartOk() (int32, bool) {
	if o == nil || o.ReminderMinutesBeforeStart == nil {
		var ret int32
		return ret, false
	}
	return *o.ReminderMinutesBeforeStart, true
}

// HasReminderMinutesBeforeStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasReminderMinutesBeforeStart() bool {
	if o != nil && o.ReminderMinutesBeforeStart != nil {
		return true
	}

	return false
}

// SetReminderMinutesBeforeStart gets a reference to the given int32 and assigns it to the ReminderMinutesBeforeStart field.
func (o *MicrosoftGraphEvent) SetReminderMinutesBeforeStart(v int32) {
	o.ReminderMinutesBeforeStart = &v
}

// SetReminderMinutesBeforeStartExplicitNull (un)sets ReminderMinutesBeforeStart to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ReminderMinutesBeforeStart value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetReminderMinutesBeforeStartExplicitNull(b bool) {
	o.ReminderMinutesBeforeStart = nil
	o.isExplicitNullReminderMinutesBeforeStart = b
}
// GetIsReminderOn returns the IsReminderOn field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetIsReminderOn() bool {
	if o == nil || o.IsReminderOn == nil {
		var ret bool
		return ret
	}
	return *o.IsReminderOn
}

// GetIsReminderOnOk returns a tuple with the IsReminderOn field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIsReminderOnOk() (bool, bool) {
	if o == nil || o.IsReminderOn == nil {
		var ret bool
		return ret, false
	}
	return *o.IsReminderOn, true
}

// HasIsReminderOn returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsReminderOn() bool {
	if o != nil && o.IsReminderOn != nil {
		return true
	}

	return false
}

// SetIsReminderOn gets a reference to the given bool and assigns it to the IsReminderOn field.
func (o *MicrosoftGraphEvent) SetIsReminderOn(v bool) {
	o.IsReminderOn = &v
}

// SetIsReminderOnExplicitNull (un)sets IsReminderOn to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsReminderOn value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetIsReminderOnExplicitNull(b bool) {
	o.IsReminderOn = nil
	o.isExplicitNullIsReminderOn = b
}
// GetHasAttachments returns the HasAttachments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetHasAttachments() bool {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetHasAttachmentsOk() (bool, bool) {
	if o == nil || o.HasAttachments == nil {
		var ret bool
		return ret, false
	}
	return *o.HasAttachments, true
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasHasAttachments() bool {
	if o != nil && o.HasAttachments != nil {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given bool and assigns it to the HasAttachments field.
func (o *MicrosoftGraphEvent) SetHasAttachments(v bool) {
	o.HasAttachments = &v
}

// SetHasAttachmentsExplicitNull (un)sets HasAttachments to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The HasAttachments value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetHasAttachmentsExplicitNull(b bool) {
	o.HasAttachments = nil
	o.isExplicitNullHasAttachments = b
}
// GetSubject returns the Subject field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetSubjectOk() (string, bool) {
	if o == nil || o.Subject == nil {
		var ret string
		return ret, false
	}
	return *o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MicrosoftGraphEvent) SetSubject(v string) {
	o.Subject = &v
}

// SetSubjectExplicitNull (un)sets Subject to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Subject value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetSubjectExplicitNull(b bool) {
	o.Subject = nil
	o.isExplicitNullSubject = b
}
// GetBody returns the Body field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetBody() AnyOfmicrosoftGraphItemBody {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetBodyOk() (AnyOfmicrosoftGraphItemBody, bool) {
	if o == nil || o.Body == nil {
		var ret AnyOfmicrosoftGraphItemBody
		return ret, false
	}
	return *o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given AnyOfmicrosoftGraphItemBody and assigns it to the Body field.
func (o *MicrosoftGraphEvent) SetBody(v AnyOfmicrosoftGraphItemBody) {
	o.Body = &v
}

// SetBodyExplicitNull (un)sets Body to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Body value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetBodyExplicitNull(b bool) {
	o.Body = nil
	o.isExplicitNullBody = b
}
// GetBodyPreview returns the BodyPreview field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetBodyPreview() string {
	if o == nil || o.BodyPreview == nil {
		var ret string
		return ret
	}
	return *o.BodyPreview
}

// GetBodyPreviewOk returns a tuple with the BodyPreview field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetBodyPreviewOk() (string, bool) {
	if o == nil || o.BodyPreview == nil {
		var ret string
		return ret, false
	}
	return *o.BodyPreview, true
}

// HasBodyPreview returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasBodyPreview() bool {
	if o != nil && o.BodyPreview != nil {
		return true
	}

	return false
}

// SetBodyPreview gets a reference to the given string and assigns it to the BodyPreview field.
func (o *MicrosoftGraphEvent) SetBodyPreview(v string) {
	o.BodyPreview = &v
}

// SetBodyPreviewExplicitNull (un)sets BodyPreview to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The BodyPreview value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetBodyPreviewExplicitNull(b bool) {
	o.BodyPreview = nil
	o.isExplicitNullBodyPreview = b
}
// GetImportance returns the Importance field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetImportance() AnyOfmicrosoftGraphImportance {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetImportanceOk() (AnyOfmicrosoftGraphImportance, bool) {
	if o == nil || o.Importance == nil {
		var ret AnyOfmicrosoftGraphImportance
		return ret, false
	}
	return *o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasImportance() bool {
	if o != nil && o.Importance != nil {
		return true
	}

	return false
}

// SetImportance gets a reference to the given AnyOfmicrosoftGraphImportance and assigns it to the Importance field.
func (o *MicrosoftGraphEvent) SetImportance(v AnyOfmicrosoftGraphImportance) {
	o.Importance = &v
}

// SetImportanceExplicitNull (un)sets Importance to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Importance value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetImportanceExplicitNull(b bool) {
	o.Importance = nil
	o.isExplicitNullImportance = b
}
// GetSensitivity returns the Sensitivity field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetSensitivity() AnyOfmicrosoftGraphSensitivity {
	if o == nil || o.Sensitivity == nil {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret
	}
	return *o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetSensitivityOk() (AnyOfmicrosoftGraphSensitivity, bool) {
	if o == nil || o.Sensitivity == nil {
		var ret AnyOfmicrosoftGraphSensitivity
		return ret, false
	}
	return *o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSensitivity() bool {
	if o != nil && o.Sensitivity != nil {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given AnyOfmicrosoftGraphSensitivity and assigns it to the Sensitivity field.
func (o *MicrosoftGraphEvent) SetSensitivity(v AnyOfmicrosoftGraphSensitivity) {
	o.Sensitivity = &v
}

// SetSensitivityExplicitNull (un)sets Sensitivity to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Sensitivity value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetSensitivityExplicitNull(b bool) {
	o.Sensitivity = nil
	o.isExplicitNullSensitivity = b
}
// GetStart returns the Start field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetStart() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.Start == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetStartOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.Start == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the Start field.
func (o *MicrosoftGraphEvent) SetStart(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.Start = &v
}

// SetStartExplicitNull (un)sets Start to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Start value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetStartExplicitNull(b bool) {
	o.Start = nil
	o.isExplicitNullStart = b
}
// GetOriginalStart returns the OriginalStart field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetOriginalStart() time.Time {
	if o == nil || o.OriginalStart == nil {
		var ret time.Time
		return ret
	}
	return *o.OriginalStart
}

// GetOriginalStartOk returns a tuple with the OriginalStart field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetOriginalStartOk() (time.Time, bool) {
	if o == nil || o.OriginalStart == nil {
		var ret time.Time
		return ret, false
	}
	return *o.OriginalStart, true
}

// HasOriginalStart returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOriginalStart() bool {
	if o != nil && o.OriginalStart != nil {
		return true
	}

	return false
}

// SetOriginalStart gets a reference to the given time.Time and assigns it to the OriginalStart field.
func (o *MicrosoftGraphEvent) SetOriginalStart(v time.Time) {
	o.OriginalStart = &v
}

// SetOriginalStartExplicitNull (un)sets OriginalStart to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OriginalStart value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetOriginalStartExplicitNull(b bool) {
	o.OriginalStart = nil
	o.isExplicitNullOriginalStart = b
}
// GetEnd returns the End field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetEnd() AnyOfmicrosoftGraphDateTimeTimeZone {
	if o == nil || o.End == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetEndOk() (AnyOfmicrosoftGraphDateTimeTimeZone, bool) {
	if o == nil || o.End == nil {
		var ret AnyOfmicrosoftGraphDateTimeTimeZone
		return ret, false
	}
	return *o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given AnyOfmicrosoftGraphDateTimeTimeZone and assigns it to the End field.
func (o *MicrosoftGraphEvent) SetEnd(v AnyOfmicrosoftGraphDateTimeTimeZone) {
	o.End = &v
}

// SetEndExplicitNull (un)sets End to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The End value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetEndExplicitNull(b bool) {
	o.End = nil
	o.isExplicitNullEnd = b
}
// GetLocation returns the Location field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetLocation() AnyOfmicrosoftGraphLocation {
	if o == nil || o.Location == nil {
		var ret AnyOfmicrosoftGraphLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetLocationOk() (AnyOfmicrosoftGraphLocation, bool) {
	if o == nil || o.Location == nil {
		var ret AnyOfmicrosoftGraphLocation
		return ret, false
	}
	return *o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given AnyOfmicrosoftGraphLocation and assigns it to the Location field.
func (o *MicrosoftGraphEvent) SetLocation(v AnyOfmicrosoftGraphLocation) {
	o.Location = &v
}

// SetLocationExplicitNull (un)sets Location to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Location value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetLocationExplicitNull(b bool) {
	o.Location = nil
	o.isExplicitNullLocation = b
}
// GetLocations returns the Locations field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetLocations() []AnyOfmicrosoftGraphLocation {
	if o == nil || o.Locations == nil {
		var ret []AnyOfmicrosoftGraphLocation
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetLocationsOk() ([]AnyOfmicrosoftGraphLocation, bool) {
	if o == nil || o.Locations == nil {
		var ret []AnyOfmicrosoftGraphLocation
		return ret, false
	}
	return *o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []AnyOfmicrosoftGraphLocation and assigns it to the Locations field.
func (o *MicrosoftGraphEvent) SetLocations(v []AnyOfmicrosoftGraphLocation) {
	o.Locations = &v
}

// GetIsAllDay returns the IsAllDay field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetIsAllDay() bool {
	if o == nil || o.IsAllDay == nil {
		var ret bool
		return ret
	}
	return *o.IsAllDay
}

// GetIsAllDayOk returns a tuple with the IsAllDay field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIsAllDayOk() (bool, bool) {
	if o == nil || o.IsAllDay == nil {
		var ret bool
		return ret, false
	}
	return *o.IsAllDay, true
}

// HasIsAllDay returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsAllDay() bool {
	if o != nil && o.IsAllDay != nil {
		return true
	}

	return false
}

// SetIsAllDay gets a reference to the given bool and assigns it to the IsAllDay field.
func (o *MicrosoftGraphEvent) SetIsAllDay(v bool) {
	o.IsAllDay = &v
}

// SetIsAllDayExplicitNull (un)sets IsAllDay to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsAllDay value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetIsAllDayExplicitNull(b bool) {
	o.IsAllDay = nil
	o.isExplicitNullIsAllDay = b
}
// GetIsCancelled returns the IsCancelled field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetIsCancelled() bool {
	if o == nil || o.IsCancelled == nil {
		var ret bool
		return ret
	}
	return *o.IsCancelled
}

// GetIsCancelledOk returns a tuple with the IsCancelled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIsCancelledOk() (bool, bool) {
	if o == nil || o.IsCancelled == nil {
		var ret bool
		return ret, false
	}
	return *o.IsCancelled, true
}

// HasIsCancelled returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsCancelled() bool {
	if o != nil && o.IsCancelled != nil {
		return true
	}

	return false
}

// SetIsCancelled gets a reference to the given bool and assigns it to the IsCancelled field.
func (o *MicrosoftGraphEvent) SetIsCancelled(v bool) {
	o.IsCancelled = &v
}

// SetIsCancelledExplicitNull (un)sets IsCancelled to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsCancelled value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetIsCancelledExplicitNull(b bool) {
	o.IsCancelled = nil
	o.isExplicitNullIsCancelled = b
}
// GetIsOrganizer returns the IsOrganizer field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetIsOrganizer() bool {
	if o == nil || o.IsOrganizer == nil {
		var ret bool
		return ret
	}
	return *o.IsOrganizer
}

// GetIsOrganizerOk returns a tuple with the IsOrganizer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetIsOrganizerOk() (bool, bool) {
	if o == nil || o.IsOrganizer == nil {
		var ret bool
		return ret, false
	}
	return *o.IsOrganizer, true
}

// HasIsOrganizer returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasIsOrganizer() bool {
	if o != nil && o.IsOrganizer != nil {
		return true
	}

	return false
}

// SetIsOrganizer gets a reference to the given bool and assigns it to the IsOrganizer field.
func (o *MicrosoftGraphEvent) SetIsOrganizer(v bool) {
	o.IsOrganizer = &v
}

// SetIsOrganizerExplicitNull (un)sets IsOrganizer to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The IsOrganizer value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetIsOrganizerExplicitNull(b bool) {
	o.IsOrganizer = nil
	o.isExplicitNullIsOrganizer = b
}
// GetRecurrence returns the Recurrence field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetRecurrence() AnyOfmicrosoftGraphPatternedRecurrence {
	if o == nil || o.Recurrence == nil {
		var ret AnyOfmicrosoftGraphPatternedRecurrence
		return ret
	}
	return *o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetRecurrenceOk() (AnyOfmicrosoftGraphPatternedRecurrence, bool) {
	if o == nil || o.Recurrence == nil {
		var ret AnyOfmicrosoftGraphPatternedRecurrence
		return ret, false
	}
	return *o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasRecurrence() bool {
	if o != nil && o.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given AnyOfmicrosoftGraphPatternedRecurrence and assigns it to the Recurrence field.
func (o *MicrosoftGraphEvent) SetRecurrence(v AnyOfmicrosoftGraphPatternedRecurrence) {
	o.Recurrence = &v
}

// SetRecurrenceExplicitNull (un)sets Recurrence to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Recurrence value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetRecurrenceExplicitNull(b bool) {
	o.Recurrence = nil
	o.isExplicitNullRecurrence = b
}
// GetResponseRequested returns the ResponseRequested field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetResponseRequested() bool {
	if o == nil || o.ResponseRequested == nil {
		var ret bool
		return ret
	}
	return *o.ResponseRequested
}

// GetResponseRequestedOk returns a tuple with the ResponseRequested field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetResponseRequestedOk() (bool, bool) {
	if o == nil || o.ResponseRequested == nil {
		var ret bool
		return ret, false
	}
	return *o.ResponseRequested, true
}

// HasResponseRequested returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasResponseRequested() bool {
	if o != nil && o.ResponseRequested != nil {
		return true
	}

	return false
}

// SetResponseRequested gets a reference to the given bool and assigns it to the ResponseRequested field.
func (o *MicrosoftGraphEvent) SetResponseRequested(v bool) {
	o.ResponseRequested = &v
}

// SetResponseRequestedExplicitNull (un)sets ResponseRequested to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ResponseRequested value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetResponseRequestedExplicitNull(b bool) {
	o.ResponseRequested = nil
	o.isExplicitNullResponseRequested = b
}
// GetSeriesMasterId returns the SeriesMasterId field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetSeriesMasterId() string {
	if o == nil || o.SeriesMasterId == nil {
		var ret string
		return ret
	}
	return *o.SeriesMasterId
}

// GetSeriesMasterIdOk returns a tuple with the SeriesMasterId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetSeriesMasterIdOk() (string, bool) {
	if o == nil || o.SeriesMasterId == nil {
		var ret string
		return ret, false
	}
	return *o.SeriesMasterId, true
}

// HasSeriesMasterId returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSeriesMasterId() bool {
	if o != nil && o.SeriesMasterId != nil {
		return true
	}

	return false
}

// SetSeriesMasterId gets a reference to the given string and assigns it to the SeriesMasterId field.
func (o *MicrosoftGraphEvent) SetSeriesMasterId(v string) {
	o.SeriesMasterId = &v
}

// SetSeriesMasterIdExplicitNull (un)sets SeriesMasterId to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The SeriesMasterId value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetSeriesMasterIdExplicitNull(b bool) {
	o.SeriesMasterId = nil
	o.isExplicitNullSeriesMasterId = b
}
// GetShowAs returns the ShowAs field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetShowAs() AnyOfmicrosoftGraphFreeBusyStatus {
	if o == nil || o.ShowAs == nil {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret
	}
	return *o.ShowAs
}

// GetShowAsOk returns a tuple with the ShowAs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetShowAsOk() (AnyOfmicrosoftGraphFreeBusyStatus, bool) {
	if o == nil || o.ShowAs == nil {
		var ret AnyOfmicrosoftGraphFreeBusyStatus
		return ret, false
	}
	return *o.ShowAs, true
}

// HasShowAs returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasShowAs() bool {
	if o != nil && o.ShowAs != nil {
		return true
	}

	return false
}

// SetShowAs gets a reference to the given AnyOfmicrosoftGraphFreeBusyStatus and assigns it to the ShowAs field.
func (o *MicrosoftGraphEvent) SetShowAs(v AnyOfmicrosoftGraphFreeBusyStatus) {
	o.ShowAs = &v
}

// SetShowAsExplicitNull (un)sets ShowAs to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The ShowAs value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetShowAsExplicitNull(b bool) {
	o.ShowAs = nil
	o.isExplicitNullShowAs = b
}
// GetType returns the Type field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetType() AnyOfmicrosoftGraphEventType {
	if o == nil || o.Type == nil {
		var ret AnyOfmicrosoftGraphEventType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetTypeOk() (AnyOfmicrosoftGraphEventType, bool) {
	if o == nil || o.Type == nil {
		var ret AnyOfmicrosoftGraphEventType
		return ret, false
	}
	return *o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AnyOfmicrosoftGraphEventType and assigns it to the Type field.
func (o *MicrosoftGraphEvent) SetType(v AnyOfmicrosoftGraphEventType) {
	o.Type = &v
}

// SetTypeExplicitNull (un)sets Type to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Type value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetTypeExplicitNull(b bool) {
	o.Type = nil
	o.isExplicitNullType = b
}
// GetAttendees returns the Attendees field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetAttendees() []AnyOfmicrosoftGraphAttendee {
	if o == nil || o.Attendees == nil {
		var ret []AnyOfmicrosoftGraphAttendee
		return ret
	}
	return *o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetAttendeesOk() ([]AnyOfmicrosoftGraphAttendee, bool) {
	if o == nil || o.Attendees == nil {
		var ret []AnyOfmicrosoftGraphAttendee
		return ret, false
	}
	return *o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasAttendees() bool {
	if o != nil && o.Attendees != nil {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given []AnyOfmicrosoftGraphAttendee and assigns it to the Attendees field.
func (o *MicrosoftGraphEvent) SetAttendees(v []AnyOfmicrosoftGraphAttendee) {
	o.Attendees = &v
}

// GetOrganizer returns the Organizer field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetOrganizer() AnyOfmicrosoftGraphRecipient {
	if o == nil || o.Organizer == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret
	}
	return *o.Organizer
}

// GetOrganizerOk returns a tuple with the Organizer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetOrganizerOk() (AnyOfmicrosoftGraphRecipient, bool) {
	if o == nil || o.Organizer == nil {
		var ret AnyOfmicrosoftGraphRecipient
		return ret, false
	}
	return *o.Organizer, true
}

// HasOrganizer returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOrganizer() bool {
	if o != nil && o.Organizer != nil {
		return true
	}

	return false
}

// SetOrganizer gets a reference to the given AnyOfmicrosoftGraphRecipient and assigns it to the Organizer field.
func (o *MicrosoftGraphEvent) SetOrganizer(v AnyOfmicrosoftGraphRecipient) {
	o.Organizer = &v
}

// SetOrganizerExplicitNull (un)sets Organizer to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Organizer value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetOrganizerExplicitNull(b bool) {
	o.Organizer = nil
	o.isExplicitNullOrganizer = b
}
// GetWebLink returns the WebLink field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetWebLink() string {
	if o == nil || o.WebLink == nil {
		var ret string
		return ret
	}
	return *o.WebLink
}

// GetWebLinkOk returns a tuple with the WebLink field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetWebLinkOk() (string, bool) {
	if o == nil || o.WebLink == nil {
		var ret string
		return ret, false
	}
	return *o.WebLink, true
}

// HasWebLink returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasWebLink() bool {
	if o != nil && o.WebLink != nil {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given string and assigns it to the WebLink field.
func (o *MicrosoftGraphEvent) SetWebLink(v string) {
	o.WebLink = &v
}

// SetWebLinkExplicitNull (un)sets WebLink to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The WebLink value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetWebLinkExplicitNull(b bool) {
	o.WebLink = nil
	o.isExplicitNullWebLink = b
}
// GetOnlineMeetingUrl returns the OnlineMeetingUrl field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetOnlineMeetingUrl() string {
	if o == nil || o.OnlineMeetingUrl == nil {
		var ret string
		return ret
	}
	return *o.OnlineMeetingUrl
}

// GetOnlineMeetingUrlOk returns a tuple with the OnlineMeetingUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetOnlineMeetingUrlOk() (string, bool) {
	if o == nil || o.OnlineMeetingUrl == nil {
		var ret string
		return ret, false
	}
	return *o.OnlineMeetingUrl, true
}

// HasOnlineMeetingUrl returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasOnlineMeetingUrl() bool {
	if o != nil && o.OnlineMeetingUrl != nil {
		return true
	}

	return false
}

// SetOnlineMeetingUrl gets a reference to the given string and assigns it to the OnlineMeetingUrl field.
func (o *MicrosoftGraphEvent) SetOnlineMeetingUrl(v string) {
	o.OnlineMeetingUrl = &v
}

// SetOnlineMeetingUrlExplicitNull (un)sets OnlineMeetingUrl to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The OnlineMeetingUrl value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetOnlineMeetingUrlExplicitNull(b bool) {
	o.OnlineMeetingUrl = nil
	o.isExplicitNullOnlineMeetingUrl = b
}
// GetAttachments returns the Attachments field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetAttachments() []MicrosoftGraphAttachment {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetAttachmentsOk() ([]MicrosoftGraphAttachment, bool) {
	if o == nil || o.Attachments == nil {
		var ret []MicrosoftGraphAttachment
		return ret, false
	}
	return *o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MicrosoftGraphAttachment and assigns it to the Attachments field.
func (o *MicrosoftGraphEvent) SetAttachments(v []MicrosoftGraphAttachment) {
	o.Attachments = &v
}

// GetSingleValueExtendedProperties returns the SingleValueExtendedProperties field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetSingleValueExtendedProperties() []MicrosoftGraphSingleValueLegacyExtendedProperty {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret
	}
	return *o.SingleValueExtendedProperties
}

// GetSingleValueExtendedPropertiesOk returns a tuple with the SingleValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetSingleValueExtendedPropertiesOk() ([]MicrosoftGraphSingleValueLegacyExtendedProperty, bool) {
	if o == nil || o.SingleValueExtendedProperties == nil {
		var ret []MicrosoftGraphSingleValueLegacyExtendedProperty
		return ret, false
	}
	return *o.SingleValueExtendedProperties, true
}

// HasSingleValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasSingleValueExtendedProperties() bool {
	if o != nil && o.SingleValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetSingleValueExtendedProperties gets a reference to the given []MicrosoftGraphSingleValueLegacyExtendedProperty and assigns it to the SingleValueExtendedProperties field.
func (o *MicrosoftGraphEvent) SetSingleValueExtendedProperties(v []MicrosoftGraphSingleValueLegacyExtendedProperty) {
	o.SingleValueExtendedProperties = &v
}

// GetMultiValueExtendedProperties returns the MultiValueExtendedProperties field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetMultiValueExtendedProperties() []MicrosoftGraphMultiValueLegacyExtendedProperty {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret
	}
	return *o.MultiValueExtendedProperties
}

// GetMultiValueExtendedPropertiesOk returns a tuple with the MultiValueExtendedProperties field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetMultiValueExtendedPropertiesOk() ([]MicrosoftGraphMultiValueLegacyExtendedProperty, bool) {
	if o == nil || o.MultiValueExtendedProperties == nil {
		var ret []MicrosoftGraphMultiValueLegacyExtendedProperty
		return ret, false
	}
	return *o.MultiValueExtendedProperties, true
}

// HasMultiValueExtendedProperties returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasMultiValueExtendedProperties() bool {
	if o != nil && o.MultiValueExtendedProperties != nil {
		return true
	}

	return false
}

// SetMultiValueExtendedProperties gets a reference to the given []MicrosoftGraphMultiValueLegacyExtendedProperty and assigns it to the MultiValueExtendedProperties field.
func (o *MicrosoftGraphEvent) SetMultiValueExtendedProperties(v []MicrosoftGraphMultiValueLegacyExtendedProperty) {
	o.MultiValueExtendedProperties = &v
}

// GetCalendar returns the Calendar field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetCalendar() AnyOfmicrosoftGraphCalendar {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetCalendarOk() (AnyOfmicrosoftGraphCalendar, bool) {
	if o == nil || o.Calendar == nil {
		var ret AnyOfmicrosoftGraphCalendar
		return ret, false
	}
	return *o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasCalendar() bool {
	if o != nil && o.Calendar != nil {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given AnyOfmicrosoftGraphCalendar and assigns it to the Calendar field.
func (o *MicrosoftGraphEvent) SetCalendar(v AnyOfmicrosoftGraphCalendar) {
	o.Calendar = &v
}

// SetCalendarExplicitNull (un)sets Calendar to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Calendar value is set to nil even if false is passed
func (o *MicrosoftGraphEvent) SetCalendarExplicitNull(b bool) {
	o.Calendar = nil
	o.isExplicitNullCalendar = b
}
// GetInstances returns the Instances field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetInstances() []MicrosoftGraphEvent {
	if o == nil || o.Instances == nil {
		var ret []MicrosoftGraphEvent
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetInstancesOk() ([]MicrosoftGraphEvent, bool) {
	if o == nil || o.Instances == nil {
		var ret []MicrosoftGraphEvent
		return ret, false
	}
	return *o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []MicrosoftGraphEvent and assigns it to the Instances field.
func (o *MicrosoftGraphEvent) SetInstances(v []MicrosoftGraphEvent) {
	o.Instances = &v
}

// GetExtensions returns the Extensions field if non-nil, zero value otherwise.
func (o *MicrosoftGraphEvent) GetExtensions() []MicrosoftGraphExtension {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphEvent) GetExtensionsOk() ([]MicrosoftGraphExtension, bool) {
	if o == nil || o.Extensions == nil {
		var ret []MicrosoftGraphExtension
		return ret, false
	}
	return *o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *MicrosoftGraphEvent) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []MicrosoftGraphExtension and assigns it to the Extensions field.
func (o *MicrosoftGraphEvent) SetExtensions(v []MicrosoftGraphExtension) {
	o.Extensions = &v
}


// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedDateTime == nil {
		if o.isExplicitNullCreatedDateTime {
			toSerialize["createdDateTime"] = o.CreatedDateTime
		}
	} else {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if o.LastModifiedDateTime == nil {
		if o.isExplicitNullLastModifiedDateTime {
			toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
		}
	} else {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if o.ChangeKey == nil {
		if o.isExplicitNullChangeKey {
			toSerialize["changeKey"] = o.ChangeKey
		}
	} else {
		toSerialize["changeKey"] = o.ChangeKey
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.OriginalStartTimeZone == nil {
		if o.isExplicitNullOriginalStartTimeZone {
			toSerialize["originalStartTimeZone"] = o.OriginalStartTimeZone
		}
	} else {
		toSerialize["originalStartTimeZone"] = o.OriginalStartTimeZone
	}
	if o.OriginalEndTimeZone == nil {
		if o.isExplicitNullOriginalEndTimeZone {
			toSerialize["originalEndTimeZone"] = o.OriginalEndTimeZone
		}
	} else {
		toSerialize["originalEndTimeZone"] = o.OriginalEndTimeZone
	}
	if o.ResponseStatus == nil {
		if o.isExplicitNullResponseStatus {
			toSerialize["responseStatus"] = o.ResponseStatus
		}
	} else {
		toSerialize["responseStatus"] = o.ResponseStatus
	}
	if o.ICalUId == nil {
		if o.isExplicitNullICalUId {
			toSerialize["iCalUId"] = o.ICalUId
		}
	} else {
		toSerialize["iCalUId"] = o.ICalUId
	}
	if o.ReminderMinutesBeforeStart == nil {
		if o.isExplicitNullReminderMinutesBeforeStart {
			toSerialize["reminderMinutesBeforeStart"] = o.ReminderMinutesBeforeStart
		}
	} else {
		toSerialize["reminderMinutesBeforeStart"] = o.ReminderMinutesBeforeStart
	}
	if o.IsReminderOn == nil {
		if o.isExplicitNullIsReminderOn {
			toSerialize["isReminderOn"] = o.IsReminderOn
		}
	} else {
		toSerialize["isReminderOn"] = o.IsReminderOn
	}
	if o.HasAttachments == nil {
		if o.isExplicitNullHasAttachments {
			toSerialize["hasAttachments"] = o.HasAttachments
		}
	} else {
		toSerialize["hasAttachments"] = o.HasAttachments
	}
	if o.Subject == nil {
		if o.isExplicitNullSubject {
			toSerialize["subject"] = o.Subject
		}
	} else {
		toSerialize["subject"] = o.Subject
	}
	if o.Body == nil {
		if o.isExplicitNullBody {
			toSerialize["body"] = o.Body
		}
	} else {
		toSerialize["body"] = o.Body
	}
	if o.BodyPreview == nil {
		if o.isExplicitNullBodyPreview {
			toSerialize["bodyPreview"] = o.BodyPreview
		}
	} else {
		toSerialize["bodyPreview"] = o.BodyPreview
	}
	if o.Importance == nil {
		if o.isExplicitNullImportance {
			toSerialize["importance"] = o.Importance
		}
	} else {
		toSerialize["importance"] = o.Importance
	}
	if o.Sensitivity == nil {
		if o.isExplicitNullSensitivity {
			toSerialize["sensitivity"] = o.Sensitivity
		}
	} else {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	if o.Start == nil {
		if o.isExplicitNullStart {
			toSerialize["start"] = o.Start
		}
	} else {
		toSerialize["start"] = o.Start
	}
	if o.OriginalStart == nil {
		if o.isExplicitNullOriginalStart {
			toSerialize["originalStart"] = o.OriginalStart
		}
	} else {
		toSerialize["originalStart"] = o.OriginalStart
	}
	if o.End == nil {
		if o.isExplicitNullEnd {
			toSerialize["end"] = o.End
		}
	} else {
		toSerialize["end"] = o.End
	}
	if o.Location == nil {
		if o.isExplicitNullLocation {
			toSerialize["location"] = o.Location
		}
	} else {
		toSerialize["location"] = o.Location
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.IsAllDay == nil {
		if o.isExplicitNullIsAllDay {
			toSerialize["isAllDay"] = o.IsAllDay
		}
	} else {
		toSerialize["isAllDay"] = o.IsAllDay
	}
	if o.IsCancelled == nil {
		if o.isExplicitNullIsCancelled {
			toSerialize["isCancelled"] = o.IsCancelled
		}
	} else {
		toSerialize["isCancelled"] = o.IsCancelled
	}
	if o.IsOrganizer == nil {
		if o.isExplicitNullIsOrganizer {
			toSerialize["isOrganizer"] = o.IsOrganizer
		}
	} else {
		toSerialize["isOrganizer"] = o.IsOrganizer
	}
	if o.Recurrence == nil {
		if o.isExplicitNullRecurrence {
			toSerialize["recurrence"] = o.Recurrence
		}
	} else {
		toSerialize["recurrence"] = o.Recurrence
	}
	if o.ResponseRequested == nil {
		if o.isExplicitNullResponseRequested {
			toSerialize["responseRequested"] = o.ResponseRequested
		}
	} else {
		toSerialize["responseRequested"] = o.ResponseRequested
	}
	if o.SeriesMasterId == nil {
		if o.isExplicitNullSeriesMasterId {
			toSerialize["seriesMasterId"] = o.SeriesMasterId
		}
	} else {
		toSerialize["seriesMasterId"] = o.SeriesMasterId
	}
	if o.ShowAs == nil {
		if o.isExplicitNullShowAs {
			toSerialize["showAs"] = o.ShowAs
		}
	} else {
		toSerialize["showAs"] = o.ShowAs
	}
	if o.Type == nil {
		if o.isExplicitNullType {
			toSerialize["type"] = o.Type
		}
	} else {
		toSerialize["type"] = o.Type
	}
	if o.Attendees != nil {
		toSerialize["attendees"] = o.Attendees
	}
	if o.Organizer == nil {
		if o.isExplicitNullOrganizer {
			toSerialize["organizer"] = o.Organizer
		}
	} else {
		toSerialize["organizer"] = o.Organizer
	}
	if o.WebLink == nil {
		if o.isExplicitNullWebLink {
			toSerialize["webLink"] = o.WebLink
		}
	} else {
		toSerialize["webLink"] = o.WebLink
	}
	if o.OnlineMeetingUrl == nil {
		if o.isExplicitNullOnlineMeetingUrl {
			toSerialize["onlineMeetingUrl"] = o.OnlineMeetingUrl
		}
	} else {
		toSerialize["onlineMeetingUrl"] = o.OnlineMeetingUrl
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.SingleValueExtendedProperties != nil {
		toSerialize["singleValueExtendedProperties"] = o.SingleValueExtendedProperties
	}
	if o.MultiValueExtendedProperties != nil {
		toSerialize["multiValueExtendedProperties"] = o.MultiValueExtendedProperties
	}
	if o.Calendar == nil {
		if o.isExplicitNullCalendar {
			toSerialize["calendar"] = o.Calendar
		}
	} else {
		toSerialize["calendar"] = o.Calendar
	}
	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	return json.Marshal(toSerialize)
}


