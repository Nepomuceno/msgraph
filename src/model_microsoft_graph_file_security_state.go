/*
 * OData Service for namespace microsoft.graph
 *
 * This OData service is located at https://graph.microsoft.com/v1.0/
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph
import (
	"encoding/json"
)
// MicrosoftGraphFileSecurityState struct for MicrosoftGraphFileSecurityState
type MicrosoftGraphFileSecurityState struct {
	FileHash *AnyOfmicrosoftGraphFileHash `json:"fileHash,omitempty"`
	isExplicitNullFileHash bool `json:"-"`
	Name *string `json:"name,omitempty"`
	isExplicitNullName bool `json:"-"`
	Path *string `json:"path,omitempty"`
	isExplicitNullPath bool `json:"-"`
	RiskScore *string `json:"riskScore,omitempty"`
	isExplicitNullRiskScore bool `json:"-"`
}

// GetFileHash returns the FileHash field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileSecurityState) GetFileHash() AnyOfmicrosoftGraphFileHash {
	if o == nil || o.FileHash == nil {
		var ret AnyOfmicrosoftGraphFileHash
		return ret
	}
	return *o.FileHash
}

// GetFileHashOk returns a tuple with the FileHash field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileSecurityState) GetFileHashOk() (AnyOfmicrosoftGraphFileHash, bool) {
	if o == nil || o.FileHash == nil {
		var ret AnyOfmicrosoftGraphFileHash
		return ret, false
	}
	return *o.FileHash, true
}

// HasFileHash returns a boolean if a field has been set.
func (o *MicrosoftGraphFileSecurityState) HasFileHash() bool {
	if o != nil && o.FileHash != nil {
		return true
	}

	return false
}

// SetFileHash gets a reference to the given AnyOfmicrosoftGraphFileHash and assigns it to the FileHash field.
func (o *MicrosoftGraphFileSecurityState) SetFileHash(v AnyOfmicrosoftGraphFileHash) {
	o.FileHash = &v
}

// SetFileHashExplicitNull (un)sets FileHash to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The FileHash value is set to nil even if false is passed
func (o *MicrosoftGraphFileSecurityState) SetFileHashExplicitNull(b bool) {
	o.FileHash = nil
	o.isExplicitNullFileHash = b
}
// GetName returns the Name field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileSecurityState) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileSecurityState) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftGraphFileSecurityState) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftGraphFileSecurityState) SetName(v string) {
	o.Name = &v
}

// SetNameExplicitNull (un)sets Name to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Name value is set to nil even if false is passed
func (o *MicrosoftGraphFileSecurityState) SetNameExplicitNull(b bool) {
	o.Name = nil
	o.isExplicitNullName = b
}
// GetPath returns the Path field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileSecurityState) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileSecurityState) GetPathOk() (string, bool) {
	if o == nil || o.Path == nil {
		var ret string
		return ret, false
	}
	return *o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *MicrosoftGraphFileSecurityState) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *MicrosoftGraphFileSecurityState) SetPath(v string) {
	o.Path = &v
}

// SetPathExplicitNull (un)sets Path to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The Path value is set to nil even if false is passed
func (o *MicrosoftGraphFileSecurityState) SetPathExplicitNull(b bool) {
	o.Path = nil
	o.isExplicitNullPath = b
}
// GetRiskScore returns the RiskScore field if non-nil, zero value otherwise.
func (o *MicrosoftGraphFileSecurityState) GetRiskScore() string {
	if o == nil || o.RiskScore == nil {
		var ret string
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftGraphFileSecurityState) GetRiskScoreOk() (string, bool) {
	if o == nil || o.RiskScore == nil {
		var ret string
		return ret, false
	}
	return *o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *MicrosoftGraphFileSecurityState) HasRiskScore() bool {
	if o != nil && o.RiskScore != nil {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given string and assigns it to the RiskScore field.
func (o *MicrosoftGraphFileSecurityState) SetRiskScore(v string) {
	o.RiskScore = &v
}

// SetRiskScoreExplicitNull (un)sets RiskScore to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The RiskScore value is set to nil even if false is passed
func (o *MicrosoftGraphFileSecurityState) SetRiskScoreExplicitNull(b bool) {
	o.RiskScore = nil
	o.isExplicitNullRiskScore = b
}

// MarshalJSON returns the JSON representation of the model.
func (o MicrosoftGraphFileSecurityState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileHash == nil {
		if o.isExplicitNullFileHash {
			toSerialize["fileHash"] = o.FileHash
		}
	} else {
		toSerialize["fileHash"] = o.FileHash
	}
	if o.Name == nil {
		if o.isExplicitNullName {
			toSerialize["name"] = o.Name
		}
	} else {
		toSerialize["name"] = o.Name
	}
	if o.Path == nil {
		if o.isExplicitNullPath {
			toSerialize["path"] = o.Path
		}
	} else {
		toSerialize["path"] = o.Path
	}
	if o.RiskScore == nil {
		if o.isExplicitNullRiskScore {
			toSerialize["riskScore"] = o.RiskScore
		}
	} else {
		toSerialize["riskScore"] = o.RiskScore
	}
	return json.Marshal(toSerialize)
}


